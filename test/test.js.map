{"version":3,"file":"test.js","sources":["../src/utils/console-string-width.ts","tests/test-console-string-width.ts"],"sourcesContent":["\nexport function consoleStringWidth(text: string) {\n    let length = text.length\n    let width = 0\n    for (let i = 0; i < length; i++) {\n        if (text[i] == '\\x1b' && text[i + 1] == '[') {\n            let oldI = i++;\n            let code = 0;\n            do {\n                code = text.charCodeAt(++i);\n            } while ((code >= 48 && code <= 57) || code == 59);\n\n            if (text[i] != 'm') i = oldI;\n        }\n\n        width++\n    }\n\n    return width\n}","import { consoleStringWidth } from \"src/utils/console-string-width\";\nimport chalk from \"chalk\";\nimport { describe, it } from \"mocha\";\nimport assert from \"assert\";\n\ndescribe(\"consoleStringWidth\", () => {\n    it(\"should output string length for simple strings\", () => {\n        assert.strictEqual(consoleStringWidth(\"123\"), 3);\n    });\n\n    it(\"should ignore chalk colors\", () => {\n        assert.strictEqual(consoleStringWidth(chalk.red(\"123\")), 3);\n        assert.strictEqual(consoleStringWidth(chalk.gray(\"$ \")), 2);\n    });\n\n    it(\"should handle strings with unicode symbols\", () => {\n        assert.strictEqual(consoleStringWidth(\"游땕\"), 2);\n        assert.strictEqual(consoleStringWidth(\"擔먼봏\"), 2);\n    });\n\n    it(\"should handle mixed strings with unicode and ASCII characters\", () => {\n        assert.strictEqual(consoleStringWidth(\"Hello 游땕\"), 8); // 5 (Hello) + 1 (space) + 2 (emoji)\n        assert.strictEqual(consoleStringWidth(\"擔먼봏\"), 2);\n        assert.strictEqual(consoleStringWidth(\"擔먼봏 123 游땕\"), 9); // 2 (擔먼봏) + 1 (space) + 3 (123) + 1 (space) + 2 (emoji)\n    });\n});\n\nexport default void 0;"],"names":[],"mappings":";;;;AACM,SAAU,kBAAkB,CAAC,IAAY,EAAA;AAC3C,IAAA,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM;IACxB,IAAI,KAAK,GAAG,CAAC;AACb,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7B,QAAA,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE;AACzC,YAAA,IAAI,IAAI,GAAG,CAAC,EAAE;YACd,IAAI,IAAI,GAAG,CAAC;AACZ,YAAA,GAAG;gBACC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,aAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE;AAEjD,YAAA,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG;gBAAE,CAAC,GAAG,IAAI;;AAGhC,QAAA,KAAK,EAAE;;AAGX,IAAA,OAAO,KAAK;AAChB;;ACdA,QAAQ,CAAC,oBAAoB,EAAE,MAAK;AAChC,IAAA,EAAE,CAAC,gDAAgD,EAAE,MAAK;QACtD,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACpD,KAAC,CAAC;AAEF,IAAA,EAAE,CAAC,4BAA4B,EAAE,MAAK;AAClC,QAAA,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3D,QAAA,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAC/D,KAAC,CAAC;AAEF,IAAA,EAAE,CAAC,4CAA4C,EAAE,MAAK;QAClD,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnD,KAAC,CAAC;AAEF,IAAA,EAAE,CAAC,+DAA+D,EAAE,MAAK;AACrE,QAAA,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QACtD,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,QAAA,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,KAAC,CAAC;AACN,CAAC,CAAC"}