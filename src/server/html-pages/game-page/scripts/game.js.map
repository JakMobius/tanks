{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/@babel/runtime/helpers/interopRequireDefault.js",
    "node_modules/@babel/runtime/helpers/interopRequireWildcard.js",
    "node_modules/@babel/runtime/helpers/typeof.js",
    "src/client/animation-frame-polyfill.ts",
    "src/client/camera.ts",
    "src/client/clientgameworld.ts",
    "src/client/controls/buttonaxle.ts",
    "src/client/controls/gamepadaxle.ts",
    "src/client/controls/gamepadbutton.ts",
    "src/client/controls/interact/documenteventhandler.ts",
    "src/client/controls/interact/gamepadmanager.ts",
    "src/client/controls/interact/keyboardcontroller.ts",
    "src/client/controls/interact/touchcontroller.ts",
    "src/client/controls/keyaxle.ts",
    "src/client/controls/playercontrols.ts",
    "src/client/effects/clienteffect.ts",
    "src/client/effects/tank/clienttankeffect.ts",
    "src/client/effects/tank/type-loader.ts",
    "src/client/effects/tank/types/clienttankfireeffect.ts",
    "src/client/effects/tank/types/clienttankpelletseffect.ts",
    "src/client/effects/world/clientworldeffect.ts",
    "src/client/effects/world/type-loader.ts",
    "src/client/effects/world/types/clientworldexplodeeffect.ts",
    "src/client/engine.ts",
    "src/client/entity/bullet/clientbullet.ts",
    "src/client/entity/bullet/model-loader.ts",
    "src/client/entity/bullet/models/16mm.ts",
    "src/client/entity/bullet/models/42mm.ts",
    "src/client/entity/bullet/models/cannonball.ts",
    "src/client/entity/bullet/models/mine.ts",
    "src/client/entity/cliententity.ts",
    "src/client/game/game-screen.ts",
    "src/client/game/scenes/gamescene.ts",
    "src/client/game/ui/controlpanel.ts",
    "src/client/game/ui/overlay/chat/chatcontainer.ts",
    "src/client/game/ui/overlay/primary/controls/controlscontainer.ts",
    "src/client/game/ui/overlay/primary/play-menu/playmenucontainer.ts",
    "src/client/game/ui/overlay/primary/primaryoverlay.ts",
    "src/client/game/ui/overlay/primary/room-select/roomselectcontainer.ts",
    "src/client/game/ui/overlay/primary/tank-preview/statscale.ts",
    "src/client/game/ui/overlay/primary/tank-preview/tankpreviewcontainer.ts",
    "src/client/game/ui/overlay/primary/tank-select/tankselectcontainer.ts",
    "src/client/game/ui/overlay/primary/tank-select/tankselectelement.ts",
    "src/client/graphics/drawers/basicentitydrawer.ts",
    "src/client/graphics/drawers/block/blockdrawer.ts",
    "src/client/graphics/drawers/block/edgedblockdrawer.ts",
    "src/client/graphics/drawers/block/type-loader.ts",
    "src/client/graphics/drawers/block/types/brick.ts",
    "src/client/graphics/drawers/block/types/concrete.ts",
    "src/client/graphics/drawers/block/types/stone.ts",
    "src/client/graphics/drawers/block/types/unbreakable.ts",
    "src/client/graphics/drawers/block/types/wood.ts",
    "src/client/graphics/drawers/entitydrawer.ts",
    "src/client/graphics/drawers/explodepooldrawer.ts",
    "src/client/graphics/drawers/mapdrawer.ts",
    "src/client/graphics/drawers/tankdrawer.ts",
    "src/client/graphics/glbuffer.ts",
    "src/client/graphics/matrix3.ts",
    "src/client/graphics/program.ts",
    "src/client/graphics/programs/lightmasktextureprogram.ts",
    "src/client/graphics/programs/particleprogram.ts",
    "src/client/graphics/programs/postprocessingprogram.ts",
    "src/client/graphics/programs/textureprogram.ts",
    "src/client/graphics/programs/truckprogram.ts",
    "src/client/graphics/shader.ts",
    "src/client/graphics/shaderloader.ts",
    "src/client/graphics/uniform.ts",
    "src/client/networking/browser-client.ts",
    "src/client/particles/explodeparticle.ts",
    "src/client/particles/fireparticle.ts",
    "src/client/particles/particle.ts",
    "src/client/particles/pellet.ts",
    "src/client/particles/smoke.ts",
    "src/client/scenes/loading/loadingscene.ts",
    "src/client/scenes/loading/phrases.ts",
    "src/client/scenes/scene.ts",
    "src/client/screen.ts",
    "src/client/sound/fx.ts",
    "src/client/sprite.ts",
    "src/client/tanks/clienttank.ts",
    "src/client/tanks/model-loader.ts",
    "src/client/tanks/models/bigboi.ts",
    "src/client/tanks/models/monster.ts",
    "src/client/tanks/models/nasty.ts",
    "src/client/tanks/models/sniper.ts",
    "src/client/ui/elements/dropdown/dropdown.ts",
    "src/client/ui/menu/menu.ts",
    "src/client/ui/overlay/events/eventcontainer.ts",
    "src/client/ui/overlay/events/eventview.ts",
    "src/client/ui/overlay/overlay.ts",
    "src/client/ui/view.ts",
    "src/client/utils/canvasfactory.ts",
    "src/client/utils/downloader.ts",
    "src/client/utils/progress.ts",
    "src/effects/abstract-effect.ts",
    "src/effects/effect-model.ts",
    "src/effects/tank/tank-fire-effect-model.ts",
    "src/effects/tank/tank-pellets-effect-model.ts",
    "src/effects/tank/tankeffectmodel.ts",
    "src/effects/world/explode/explode-effect-pool.ts",
    "src/effects/world/explode/world-explode-effect-model.ts",
    "src/effects/world/world-effect-model.ts",
    "src/entity/abstractentity.ts",
    "src/entity/bullet/bulletmodel.ts",
    "src/entity/bullet/models/16mm.ts",
    "src/entity/bullet/models/42mm.ts",
    "src/entity/bullet/models/bomb.ts",
    "src/entity/bullet/models/cannonball.ts",
    "src/entity/bullet/models/mine.ts",
    "src/entity/bullet/models/mortarball.ts",
    "src/entity/entitymodel.ts",
    "src/gameworld.ts",
    "src/library/box2d/collision/b2_broad_phase.ts",
    "src/library/box2d/collision/b2_chain_shape.ts",
    "src/library/box2d/collision/b2_circle_shape.ts",
    "src/library/box2d/collision/b2_collide_circle.ts",
    "src/library/box2d/collision/b2_collide_edge.ts",
    "src/library/box2d/collision/b2_collide_polygon.ts",
    "src/library/box2d/collision/b2_collision.ts",
    "src/library/box2d/collision/b2_distance.ts",
    "src/library/box2d/collision/b2_dynamic_tree.ts",
    "src/library/box2d/collision/b2_edge_shape.ts",
    "src/library/box2d/collision/b2_polygon_shape.ts",
    "src/library/box2d/collision/b2_shape.ts",
    "src/library/box2d/collision/b2_time_of_impact.ts",
    "src/library/box2d/common/b2_block_allocator.ts",
    "src/library/box2d/common/b2_common.ts",
    "src/library/box2d/common/b2_draw.ts",
    "src/library/box2d/common/b2_growable_stack.ts",
    "src/library/box2d/common/b2_math.ts",
    "src/library/box2d/common/b2_settings.ts",
    "src/library/box2d/common/b2_stack_allocator.ts",
    "src/library/box2d/common/b2_timer.ts",
    "src/library/box2d/controllers/b2_buoyancy_controller.ts",
    "src/library/box2d/controllers/b2_constant_accel_controller.ts",
    "src/library/box2d/controllers/b2_constant_force_controller.ts",
    "src/library/box2d/controllers/b2_controller.ts",
    "src/library/box2d/controllers/b2_gravity_controller.ts",
    "src/library/box2d/controllers/b2_tensor_damping_controller.ts",
    "src/library/box2d/dynamics/b2_area_joint.ts",
    "src/library/box2d/dynamics/b2_body.ts",
    "src/library/box2d/dynamics/b2_chain_circle_contact.ts",
    "src/library/box2d/dynamics/b2_chain_polygon_contact.ts",
    "src/library/box2d/dynamics/b2_circle_contact.ts",
    "src/library/box2d/dynamics/b2_contact.ts",
    "src/library/box2d/dynamics/b2_contact_factory.ts",
    "src/library/box2d/dynamics/b2_contact_manager.ts",
    "src/library/box2d/dynamics/b2_contact_solver.ts",
    "src/library/box2d/dynamics/b2_distance_joint.ts",
    "src/library/box2d/dynamics/b2_edge_circle_contact.ts",
    "src/library/box2d/dynamics/b2_edge_polygon_contact.ts",
    "src/library/box2d/dynamics/b2_fixture.ts",
    "src/library/box2d/dynamics/b2_friction_joint.ts",
    "src/library/box2d/dynamics/b2_gear_joint.ts",
    "src/library/box2d/dynamics/b2_island.ts",
    "src/library/box2d/dynamics/b2_joint.ts",
    "src/library/box2d/dynamics/b2_motor_joint.ts",
    "src/library/box2d/dynamics/b2_mouse_joint.ts",
    "src/library/box2d/dynamics/b2_polygon_circle_contact.ts",
    "src/library/box2d/dynamics/b2_polygon_contact.ts",
    "src/library/box2d/dynamics/b2_prismatic_joint.ts",
    "src/library/box2d/dynamics/b2_pulley_joint.ts",
    "src/library/box2d/dynamics/b2_revolute_joint.ts",
    "src/library/box2d/dynamics/b2_time_step.ts",
    "src/library/box2d/dynamics/b2_weld_joint.ts",
    "src/library/box2d/dynamics/b2_wheel_joint.ts",
    "src/library/box2d/dynamics/b2_world.ts",
    "src/library/box2d/dynamics/b2_world_callbacks.ts",
    "src/library/box2d/index.ts",
    "src/library/box2d/particle/b2_particle.ts",
    "src/library/box2d/particle/b2_particle_group.ts",
    "src/library/box2d/particle/b2_particle_system.ts",
    "src/library/box2d/particle/b2_stack_queue.ts",
    "src/library/box2d/particle/b2_voronoi_diagram.ts",
    "src/library/box2d/rope/b2_rope.ts",
    "src/networking/abstract-client.ts",
    "src/networking/abstract-connection.ts",
    "src/networking/binarypacket.ts",
    "src/networking/client-connection.ts",
    "src/networking/packets/game-packets/blockupdatepacket.ts",
    "src/networking/packets/game-packets/effectcreatepacket.ts",
    "src/networking/packets/game-packets/effectremovepacket.ts",
    "src/networking/packets/game-packets/entitycreatepacket.ts",
    "src/networking/packets/game-packets/entitylistpacket.ts",
    "src/networking/packets/game-packets/entityremovepacket.ts",
    "src/networking/packets/game-packets/gamestatepacket.ts",
    "src/networking/packets/game-packets/mappacket.ts",
    "src/networking/packets/game-packets/playerchatpacket.ts",
    "src/networking/packets/game-packets/playerconfigpacket.ts",
    "src/networking/packets/game-packets/playercontrolspacket.ts",
    "src/networking/packets/game-packets/playerjoinpacket.ts",
    "src/networking/packets/game-packets/playerleavepacket.ts",
    "src/networking/packets/game-packets/playerrespawnpacket.ts",
    "src/networking/packets/game-packets/playerroomchangepacket.ts",
    "src/networking/packets/game-packets/playerroomrequestpacket.ts",
    "src/networking/packets/game-packets/playerspawnpacket.ts",
    "src/networking/packets/game-packets/roomlistpacket.ts",
    "src/networking/packets/game-packets/roomlistrequestpacket.ts",
    "src/serialization/binary/binarydecoder.ts",
    "src/serialization/binary/binaryencoder.ts",
    "src/serialization/binary/binarypool.ts",
    "src/serialization/binary/buffer.ts",
    "src/serialization/binary/serializable.ts",
    "src/serialization/serializationgroup.ts",
    "src/server/effects/servereffect.ts",
    "src/server/effects/tank/servertankeffect.ts",
    "src/server/effects/world/serverworldeffect.ts",
    "src/server/entity/bullet/serverbullet.ts",
    "src/server/entity/serverentity.ts",
    "src/tanks/abstracttank.ts",
    "src/tanks/controls/axle.ts",
    "src/tanks/controls/tankcontrols.ts",
    "src/tanks/model-loader.ts",
    "src/tanks/models/bigboi.ts",
    "src/tanks/models/bomber.ts",
    "src/tanks/models/monster.ts",
    "src/tanks/models/mortar.ts",
    "src/tanks/models/nasty.ts",
    "src/tanks/models/shotgun.ts",
    "src/tanks/models/sniper.ts",
    "src/tanks/models/tesla.ts",
    "src/tanks/physics/airbagbehaviour.ts",
    "src/tanks/physics/tankbehaviour.ts",
    "src/tanks/physics/trucktankbehaviour.ts",
    "src/tanks/physics/wheeledtankbehaviour.ts",
    "src/tanks/tankmodel.ts",
    "src/utils/binaryoptions.ts",
    "src/utils/color.ts",
    "src/utils/eventemitter.ts",
    "src/utils/htmlescape.ts",
    "src/utils/loop/loop.ts",
    "src/utils/loop/renderloop.ts",
    "src/utils/loop/scheduledtask.ts",
    "src/utils/map/blockstate/blockstate.ts",
    "src/utils/map/blockstate/blockstatebinaryoptions.ts",
    "src/utils/map/blockstate/type-loader.ts",
    "src/utils/map/blockstate/types/airblockstate.ts",
    "src/utils/map/blockstate/types/brickblockstate.ts",
    "src/utils/map/blockstate/types/concreteblockstate.ts",
    "src/utils/map/blockstate/types/stoneblockstate.ts",
    "src/utils/map/blockstate/types/unbreakableblockstate.ts",
    "src/utils/map/blockstate/types/woodblockstate.ts",
    "src/utils/map/gamemap.ts",
    "src/utils/map/mapbinaryoptions.ts",
    "src/utils/map/spawnzone.ts",
    "src/utils/physicsutils.ts",
    "src/utils/player.ts",
    "src/utils/rectangle.ts",
    "src/utils/rotationalmatrix.ts",
    "src/utils/utils.ts",
    "src/weapon/models/42mm.ts",
    "src/weapon/models/bomber.ts",
    "src/weapon/models/cannon.ts",
    "src/weapon/models/flamethrower.ts",
    "src/weapon/models/machinegun.ts",
    "src/weapon/models/mortar.ts",
    "src/weapon/models/shotgun.ts",
    "src/weapon/models/stungun.ts",
    "src/weapon/weapon.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "../",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;",
    "var _typeof = require(3);\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;",
    "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;",
    "\ntype RequestAnimationFrameHolder = { [key: string]: ((callback: FrameRequestCallback) => number) }\n\nlet holder = window as any as RequestAnimationFrameHolder\n\nwindow.requestAnimationFrame =\n    holder[\"requestAnimationFrame\"] ||\n    holder[\"mozRequestAnimationFrame\"] ||\n    holder[\"webkitRequestAnimationFrame\"] ||\n    holder[\"msRequestAnimationFrame\"]\n\nexport default window.requestAnimationFrame",
    "\nimport * as Box2D from '../library/box2d';\nimport Matrix3 from './graphics/matrix3';\n\nexport interface CameraConfig {\n    baseScale?: number\n    target?: Box2D.Vec2\n    inertial?: boolean\n    viewportLimit?: Box2D.Vec2\n    defaultPosition: Box2D.Vec2\n    viewport: Box2D.Vec2\n    limit?: boolean\n}\n\nclass Camera {\n\tpublic baseScale: any;\n\tpublic viewport: any;\n\tpublic defaultPosition: any;\n\tpublic velocity: any;\n\tpublic realTarget: any;\n\tpublic targetVelocity: any;\n\tpublic limit: any;\n\tpublic viewportLimit: any;\n\tpublic scale: any;\n\n    matrix: Matrix3 = null\n\n    /**\n     * Enable inertial camera movement.\n     */\n    inertial = false\n\n    /**\n     * Camera position (exclude camera shaking)\n     */\n    position?: Box2D.Vec2 = null\n\n    /**\n     * Camera position delta\n     */\n    shaking: Box2D.Vec2 = null\n\n    /**\n     * Camera shaking velocity\n     */\n    shakeVelocity: Box2D.Vec2 = null\n\n    target: Box2D.Vec2 = null\n\n    constructor(options: CameraConfig) {\n        options = Object.assign({\n            baseScale: 1,\n            target: null,\n            limit: true,\n            inertial: false\n        }, options)\n\n        this.baseScale = options.baseScale\n        this.target = options.target\n        this.viewport = options.viewport\n        this.defaultPosition = options.defaultPosition\n\n        this.position = null\n\n        this.velocity = new Box2D.Vec2()\n        this.shaking = new Box2D.Vec2()\n        this.shakeVelocity = new Box2D.Vec2()\n        this.realTarget = new Box2D.Vec2()\n        this.targetVelocity = null\n\n        this.limit = options.limit\n        this.viewportLimit = null\n\n        if(this.limit) {\n            this.viewportLimit = options.viewportLimit || new Box2D.Vec2(1440, 900)\n        }\n\n        this.matrix = new Matrix3()\n        this.inertial = options.inertial\n    }\n\n    reset() {\n        if(this.position) {\n            this.position.x = this.defaultPosition.x\n            this.position.y = this.defaultPosition.y\n        } else {\n            this.position = this.defaultPosition.Clone()\n        }\n        this.shaking.x = 0\n        this.shaking.y = 0\n        this.shakeVelocity.x = 0\n        this.shakeVelocity.y = 0\n    }\n\n    getPosition() {\n        return new Box2D.Vec2(this.position.x + this.shaking.x, this.position.y + this.shaking.y)\n    }\n\n    targetPosition(position: Box2D.Vec2, velocity: Box2D.Vec2, target: Box2D.Vec2, lookahead: number, dt: number) {\n        let lookAheadX = position.x + velocity.x * lookahead\n        let lookAheadY = position.y + velocity.y * lookahead\n\n        if(target == null) {\n            velocity.x -= lookAheadX * dt\n            velocity.y -= lookAheadY * dt\n        } else {\n            velocity.x -= (lookAheadX - target.x) * dt\n            velocity.y -= (lookAheadY - target.y) * dt\n        }\n\n        position.x += velocity.x * dt\n        position.y += velocity.y * dt\n    }\n\n    /**\n     * Moves the camera to follow the target.\n     */\n    tick(dt: number) {\n\n        this.matrix.reset()\n\n        let target = this.target || this.defaultPosition\n        this.scale = this.baseScale\n\n        if(this.limit) {\n            if (this.viewport.x > this.viewportLimit.x) {\n                this.scale = this.viewport.x / this.viewportLimit.x * this.baseScale\n            }\n            if (this.viewport.y > this.viewportLimit.y) {\n                this.scale = Math.max(this.scale, this.viewport.y / this.viewportLimit.y * this.baseScale)\n            }\n        }\n\n        this.matrix.scale(1 / this.viewport.x * 2, -1 / this.viewport.y * 2)\n\n        if(this.position) {\n            if (this.inertial) {\n\n                if(this.targetVelocity) {\n                    this.realTarget.x = target.x + this.targetVelocity.x * 0.5\n                    this.realTarget.y = target.y + this.targetVelocity.y * 0.5\n\n                    target = this.realTarget\n                }\n\n                this.targetPosition(this.position, this.velocity, target, 1.5, dt * 5)\n                this.targetPosition(this.shakeVelocity, this.shaking, null, 0.5, dt * 20)\n\n            } else {\n                this.velocity.x = 0\n                this.velocity.y = 0\n                this.position.x = target.x\n                this.position.y = target.y\n            }\n        } else {\n            this.position = target.Clone()\n        }\n\n        this.matrix.scale(this.scale, this.scale)\n        this.matrix.translate(-this.position.x - this.shaking.x, -this.position.y - this.shaking.y)\n    }\n}\n\nexport default Camera;",
    "\nimport GameWorld, {GameWorldConfig} from '../gameworld';\nimport Particle from \"./particles/particle\";\nimport Player from \"../utils/player\";\nimport ClientEntity from \"./entity/cliententity\";\nimport ClientEffect from \"./effects/clienteffect\";\n\nclass ClientGameWorld extends GameWorld {\n\n    public player: Player = null\n    public particles: Particle[] = []\n\n    //public entities: Map<number, ClientEntity>\n    //public effects: Map<number, ClientEffect>\n\n    constructor(options: GameWorldConfig) {\n        super(options);\n    }\n\n    private processParticles(dt: number): void {\n        for(let i = 0, l = this.particles.length; i < l; i++) {\n            let p = this.particles[i]\n\n            p.tick(dt)\n\n            if(p.dead) {\n                this.particles.splice(i--, 1)\n                l--\n            }\n        }\n    }\n\n    public tick(dt: number): void {\n        super.tick(dt)\n        this.processParticles(dt)\n    }\n}\n\nexport default ClientGameWorld;",
    "\nimport Axle from '../../tanks/controls/axle';\n\nclass ButtonAxle extends Axle {\n\tpublic min: any;\n\tpublic max: any;\n\tpublic animationTime: any;\n\tpublic target: any;\n\tpublic keypressTimestamp: any;\n\tpublic pressed: any;\n\n    constructor(min: number, max: number) {\n        super()\n        this.min = min === undefined ? 0 : min\n        this.max = max === undefined ? 1 : max\n\n        this.ownValue = this.min\n\n        this.animationTime = 0\n        this.target = 0\n\n        // Internals\n        this.keypressTimestamp = 0\n        this.pressed = false\n    }\n\n    keyPressed(value?: number) {\n        if (value === undefined) {\n            this.target = this.max\n        } else {\n            this.target = this.max * value + this.min * (1 - value)\n        }\n\n        this.keypressTimestamp = Date.now()\n        this.setNeedsUpdate()\n    }\n\n    keyReleased() {\n        this.target = this.min\n        this.keypressTimestamp = Date.now()\n        this.setNeedsUpdate()\n    }\n\n    smooth(time: number = 0.25) {\n        this.animationTime = time\n        return this\n    }\n\n    reverse() {\n        this.max = -this.max\n        this.min = -this.min\n        return this\n    }\n\n    getValue() {\n        if(this.animationTime <= 0) {\n            this.ownValue = this.keyPressed ? this.max : this.min\n        }\n        this.update = false\n        let now = Date.now()\n        let dt = (now - this.keypressTimestamp) / 1000\n        this.keypressTimestamp = now\n\n        if(this.target > this.ownValue) {\n            this.ownValue += dt / this.animationTime\n\n            if(this.target < this.ownValue) this.ownValue = this.target\n        } else if(this.target < this.ownValue) {\n            this.ownValue -= dt / this.animationTime\n\n            if(this.target > this.ownValue) this.ownValue = this.target\n        }\n        if(this.ownValue !== this.target) this.setNeedsUpdate()\n        return this.ownValue\n    }\n}\n\nexport default ButtonAxle;",
    "\nimport Axle from '../../tanks/controls/axle';\nimport GamepadManager from \"./interact/gamepadmanager\";\n\nclass GamepadAxle extends Axle {\n\tpublic axle: number;\n\tpublic controller: GamepadManager;\n\tpublic power: number;\n\tpublic inverted: boolean;\n\n    constructor(controller: GamepadManager, axle: number) {\n        super();\n        this.axle = axle\n        this.controller = controller\n        this.value = 0\n        this.power = 1\n        this.inverted = false\n        this.controller.on(\"axle\", (index, value) => {\n            if(index === this.axle) {\n                this.value = Math.pow(value, this.power)\n                this.setNeedsUpdate()\n            }\n        })\n    }\n\n    invert() {\n        this.inverted = !this.inverted\n        return this\n    }\n\n    getValue() {\n        return this.inverted ? -this.value : this.value\n    }\n}\n\nexport default GamepadAxle;",
    "\nimport ButtonAxle from './buttonaxle';\nimport GamepadManager from \"./interact/gamepadmanager\";\n\nclass GamepadButton extends ButtonAxle {\n\tpublic button: any;\n\n    constructor(gamepad: GamepadManager, button: number, min?: number, max?: number) {\n        super(min, max);\n\n        this.button = button\n        gamepad.on(\"button\", (index, value) => {\n            if(index === this.button) {\n                this.keyPressed(value)\n            }\n        })\n    }\n}\n\nexport default GamepadButton;",
    "\nimport EventEmitter from '../../../utils/eventemitter';\n\nclass DocumentEventHandler extends EventEmitter {\n\tpublic listeners = new Map<string, () => void>();\n\tpublic target: GlobalEventHandlers | GlobalEventHandlers[];\n\tpublic keys: any;\n\n    constructor() {\n        super()\n\n        this.target = document.body\n    }\n\n    bind(event: string, handler: (event: Event) => void) {\n        if(this.listeners.has(event)) {\n            this.unbind(event)\n        }\n        const self = this\n        const listener = function(){ handler.apply(self, arguments) }\n\n\n        this.listeners.set(event, listener)\n\n        if(Array.isArray(this.target)) {\n            for (let target of this.target)\n                target.addEventListener(event, listener)\n        } else {\n            this.target.addEventListener(event, listener)\n        }\n    }\n\n    unbind(event: string) {\n        if(Array.isArray(this.target)) {\n            for (let target of this.target)\n                target.removeEventListener(event, this.listeners.get(event))\n        } else {\n            this.target.removeEventListener(event, this.listeners.get(event))\n        }\n\n        this.listeners.delete(event)\n    }\n\n    startListening() {}\n    stopListening() {\n        for(let event of this.listeners.keys()) {\n            this.unbind(event)\n        }\n        this.keys.clear()\n        this.listeners.clear()\n    }\n}\n\nexport default DocumentEventHandler;",
    "\nimport DocumentEventHandler from './documenteventhandler';\nimport GamepadAxle from '../gamepadaxle';\nimport GamepadButton from '../gamepadbutton';\n\nnavigator.getGamepads = navigator.getGamepads || (navigator as any)[\"webkitGetGamepads\"]\n\nclass GamepadManager extends DocumentEventHandler {\n\tpublic gamepad: any;\n\tpublic axises: any;\n\tpublic buttons: any;\n\n    constructor() {\n        super();\n\n        this.gamepad = null\n        this.axises = []\n        this.buttons = []\n        this.target = window\n    }\n\n    startListening() {\n        if(navigator.getGamepads) {\n            this.bind(\"gamepadconnected\", this.gamepadConnected)\n            this.bind(\"gamepaddisconnected\", this.gamepadDisconnected)\n        }\n    }\n\n    refresh() {\n        if(this.gamepad === null) return\n\n        for(let [i, button] of navigator.getGamepads()[this.gamepad].buttons.entries()) {\n            let value = typeof button === \"number\" ? button : button.value\n            if(this.buttons[i] !== value) {\n                this.emit(\"button\", i, value)\n                this.buttons[i] = value\n            }\n        }\n\n        for(let [i, axis] of navigator.getGamepads()[this.gamepad].axes.entries()) {\n            if(this.axises[i] !== axis) {\n                this.emit(\"axle\", i, axis)\n                this.axises[i] = axis\n            }\n        }\n    }\n\n    gamepadConnected(event: GamepadEvent) {\n        if(this.gamepad !== null) {\n            return\n        }\n        this.gamepad = event.gamepad.index\n        this.axises = new Array(navigator.getGamepads()[this.gamepad].axes.length)\n    }\n\n    gamepadDisconnected(event: GamepadEvent) {\n        if(event.gamepad.index === this.gamepad) {\n            this.gamepad = null\n        }\n    }\n\n    createAxle(index: number): GamepadAxle {\n        return new GamepadAxle(this, index)\n    }\n\n    createButton(index: number): GamepadButton {\n        return new GamepadButton(this, index)\n    }\n}\n\nexport default GamepadManager;",
    "\nimport DocumentEventHandler from './documenteventhandler';\nimport KeyAxle from '../keyaxle';\n\nclass KeyboardController extends DocumentEventHandler {\n\tpublic keybindings: any;\n\tpublic isMacOS: any;\n\n    constructor() {\n        super()\n        this.keys = new Set()\n        this.keybindings = []\n        this.isMacOS = navigator.userAgent.indexOf(\"Mac\") !== -1\n    }\n\n    keybinding(name: string, handler: (event: KeyboardEvent) => void) {\n        let parts = name.split(\"-\")\n        let cmd = parts.indexOf(\"Cmd\") !== -1\n        let shift = parts.indexOf(\"Shift\") !== -1\n        let alt = parts.indexOf(\"Alt\") !== -1\n        let key = parts.pop()\n\n        this.on(\"keydown\", (event: KeyboardEvent) => {\n            let eventCmd = this.isMacOS ? event.metaKey : event.ctrlKey\n            let eventShift = event.shiftKey\n            let eventAlt = event.altKey\n\n            let eventKey = event.code\n            if(eventKey.startsWith(\"Key\")) eventKey = eventKey.substr(3)\n\n            if(eventCmd !== cmd) return;\n            if(eventShift !== shift) return;\n            if(eventAlt !== alt) return;\n            if(eventKey !== key) return;\n\n            event.preventDefault()\n\n            handler(event)\n        })\n    }\n\n    startListening() {\n        this.bind(\"keyup\", this.keyup)\n        this.bind(\"keydown\", this.keydown)\n    }\n\n    keyPressed() {\n        for(let argument of arguments) {\n            if (this.keys.has(argument)) return true\n        }\n        return false\n    }\n\n    keyPressedOnce(key: string) {\n        if(this.keys.has(key)) {\n            this.keys.delete(key)\n            return true\n        }\n        return false\n    }\n\n    keyup(e: KeyboardEvent) {\n        this.emit(\"keyup\", e)\n        this.keys.delete(e.code)\n    }\n\n    keydown(e: KeyboardEvent) {\n        if(e.repeat) {\n            e.preventDefault()\n            return\n        }\n        this.emit(\"keydown\", e)\n        this.keys.add(e.code)\n    }\n\n    createKeyAxle(key: string, min?: number, max?: number) {\n        return new KeyAxle(this, key, min, max)\n    }\n}\n\nexport default KeyboardController;",
    "\nimport DocumentEventHandler from './documenteventhandler';\nimport Vidget from \"./vidget\";\nimport ControlPanel from \"../../game/ui/controlpanel\";\n\nexport interface Touch {\n    left: number,\n    top: number,\n    bottom: number,\n    right: number,\n    id: number,\n    vidget?: Vidget\n    captured?: ControlPanel\n}\n\nclass TouchController extends DocumentEventHandler {\n\tpublic touchData = new Map<number, Touch>();\n\tpublic handler: ControlPanel;\n\tpublic canvas: HTMLCanvasElement;\n\n    constructor(handler: ControlPanel, canvas: HTMLCanvasElement) {\n        super()\n        this.touchData = new Map();\n        this.handler = handler\n        this.canvas = canvas\n        this.target = this.canvas\n    }\n\n    startListening() {\n        this.bind(\"touchstart\", this.ontouchstart)\n        this.bind(\"touchmove\", this.ontouchmove)\n        this.bind(\"touchend\", this.ontouchend)\n    }\n\n    ontouchstart(event: TouchEvent) {\n        const rect = this.canvas.getBoundingClientRect();\n\n        for(let i = 0; i < event.changedTouches.length; i++) {\n            let touch = event.changedTouches[i]\n            const left = touch.pageX - document.body.scrollLeft - rect.x;\n            const top = touch.pageY - document.body.scrollTop - rect.y;\n            const bottom = rect.height - top;\n            const right = rect.width - left;\n\n            const struct: Touch = {\n                left: left,\n                top: top,\n                bottom: bottom,\n                right: right,\n                id: touch.identifier\n            };\n\n            if (this.handler.captureTouch(struct)) {\n                for (let [id, anotherTouch] of this.touchData.entries()) {\n                    if (struct.id !== id) {\n                        if (struct.vidget.id === anotherTouch.vidget.id) {\n                            this.touchData.delete(anotherTouch.id)\n                        }\n                    }\n                }\n\n                this.touchData.set(touch.identifier, struct)\n            }\n        }\n\n        event.preventDefault()\n    };\n\n    ontouchmove(event: TouchEvent) {\n        const rect = this.canvas.getBoundingClientRect();\n\n        for(let i = 0; i < event.changedTouches.length; i++) {\n            let changedTouch = event.changedTouches[i]\n            const touch = this.touchData.get(changedTouch.identifier);\n\n            if (!touch) return\n\n            const left = changedTouch.pageX - document.body.scrollLeft - rect.x;\n            const top = changedTouch.pageY - document.body.scrollTop - rect.y;\n            const bottom = rect.height - top;\n            const right = rect.width - left;\n\n            touch.left = left\n            touch.top = top\n            touch.right = right\n            touch.bottom = bottom\n\n            if(touch.captured) touch.captured.touchMoved(touch)\n        }\n\n        event.preventDefault()\n    };\n\n    ontouchend(event: TouchEvent) {\n\n        for(let i = 0; i < event.changedTouches.length; i++) {\n            let changedTouch = event.changedTouches[i]\n            const touch = this.touchData.get(changedTouch.identifier);\n\n            if (!touch) return\n\n            touch.captured.touchEnded(touch)\n            this.touchData.delete(changedTouch.identifier)\n        }\n\n        event.preventDefault()\n    };\n}\n\nexport default TouchController;",
    "\nimport ButtonAxle from './buttonaxle';\nimport KeyboardController from \"./interact/keyboardcontroller\";\n\nclass KeyAxle extends ButtonAxle {\n\tpublic key: any;\n\n    constructor(keyboard: KeyboardController, key: string, min: number, max: number) {\n        super(min, max)\n        this.key = key\n\n        keyboard.on(\"keydown\", (event) => {\n            if(event.code === this.key) this.keyPressed()\n        })\n        keyboard.on(\"keyup\", (event) => {\n            if(event.code === this.key) this.keyReleased()\n        })\n    }\n}\n\nexport default KeyAxle;",
    "\nimport Axle from '../../tanks/controls/axle';\nimport EventEmitter from '../../utils/eventemitter';\nimport TankControls from \"../../tanks/controls/tankcontrols\";\nimport GamepadManager from \"./interact/gamepadmanager\";\nimport KeyboardController from \"./interact/keyboardcontroller\";\n\nclass PlayerControls extends EventEmitter {\n\tpublic axles: any;\n\tpublic respawning: any;\n\n    constructor() {\n        super()\n\n        this.axles = new Map()\n        this.createAxle(\"tank-throttle\")\n        this.createAxle(\"tank-steer\")\n        this.createAxle(\"tank-primary-weapon\")\n        this.createAxle(\"tank-miner\")\n\n        this.createAxle(\"tank-respawn\")\n\n        this.respawning = true\n    }\n\n    createAxle(name: string) {\n        this.axles.set(name, new Axle())\n    }\n\n    connectTankControls(controls: TankControls) {\n        controls.axles.get(\"y\").addSource(this.axles.get(\"tank-throttle\"))\n        controls.axles.get(\"x\").addSource(this.axles.get(\"tank-steer\"))\n        controls.axles.get(\"primary-weapon\").addSource(this.axles.get(\"tank-primary-weapon\"))\n        controls.axles.get(\"miner\").addSource(this.axles.get(\"tank-miner\"))\n    }\n\n    disconnectTankControls() {\n        this.axles.get(\"tank-throttle\").disconnectAll()\n        this.axles.get(\"tank-steer\").disconnectAll()\n        this.axles.get(\"tank-primary-weapon\").disconnectAll()\n        this.axles.get(\"tank-miner\").disconnectAll()\n    }\n\n    setupGamepad(gamepad: GamepadManager) {\n        this.axles.get(\"tank-throttle\")      .addSource(gamepad.createAxle(1).invert())\n        this.axles.get(\"tank-steer\")         .addSource(gamepad.createAxle(2))\n        this.axles.get(\"tank-miner\")         .addSource(gamepad.createButton(4))\n        this.axles.get(\"tank-primary-weapon\").addSource(gamepad.createButton(5))\n        this.axles.get(\"tank-respawn\")       .addSource(gamepad.createButton(2))\n    }\n\n    setupKeyboard(keyboard: KeyboardController) {\n        this.axles.get(\"tank-throttle\")\n            .addSource(keyboard.createKeyAxle(\"KeyW\")     .smooth())\n            .addSource(keyboard.createKeyAxle(\"ArrowUp\")  .smooth())\n            .addSource(keyboard.createKeyAxle(\"KeyS\")     .smooth().reverse())\n            .addSource(keyboard.createKeyAxle(\"ArrowDown\").smooth().reverse())\n\n        this.axles.get(\"tank-steer\")\n            .addSource(keyboard.createKeyAxle(\"KeyD\")      .smooth())\n            .addSource(keyboard.createKeyAxle(\"ArrowRight\").smooth())\n            .addSource(keyboard.createKeyAxle(\"KeyA\")      .smooth().reverse())\n            .addSource(keyboard.createKeyAxle(\"ArrowLeft\") .smooth().reverse())\n\n        this.axles.get(\"tank-miner\")         .addSource(keyboard.createKeyAxle(\"KeyQ\"))\n        this.axles.get(\"tank-primary-weapon\").addSource(keyboard.createKeyAxle(\"Space\"))\n        this.axles.get(\"tank-respawn\")       .addSource(keyboard.createKeyAxle(\"KeyR\"))\n    }\n\n    refresh() {\n        if(this.axles.get(\"tank-respawn\").getValue() > 0.5) {\n            if(!this.respawning) {\n                this.respawning = true\n                this.emit(\"respawn\")\n            }\n        } else {\n            this.respawning = false\n        }\n    }\n}\n\nexport default PlayerControls;",
    "\nimport AbstractEffect from 'src/effects/abstract-effect';\nimport EffectModel from \"../../effects/effect-model\";\n\nclass ClientEffect extends AbstractEffect {\n\n    public static Model: typeof EffectModel\n\n    constructor(model: EffectModel) {\n        super(model);\n    }\n}\n\nexport default ClientEffect;",
    "\nimport ClientEffect from '../clienteffect';\nimport EffectModel from 'src/effects/effect-model';\nimport ClientTank from \"../../tanks/clienttank\";\n\nclass ClientTankEffect extends ClientEffect {\n\tpublic model: EffectModel;\n\tpublic tank: ClientTank;\n\n\tstatic Model: typeof EffectModel\n\n    constructor(model: EffectModel, tank: ClientTank) {\n        super(model)\n        this.model = model\n        this.tank = tank\n    }\n\n    static fromModelAndTank(model: EffectModel, tank: ClientTank): ClientTankEffect | null {\n        let clazz = this.Types.get(model.constructor as typeof EffectModel) as unknown as typeof ClientTankEffect\n        if(!clazz) return null\n        return new clazz(model, tank)\n    }\n}\n\nexport default ClientTankEffect;",
    "\n//@ts-ignore\nimport Types from './types/*'\nimport ClientTankEffect from \"./clienttankeffect\";\n\nfor(let Type of Types) {\n    ClientTankEffect.associate(Type.Model, Type)\n}",
    "\n// const FX = require(\"../../sound/fx\")\nimport FireParticle from '../../../particles/fireparticle';\n\nimport ClientTankEffect from 'src/client/effects/tank/clienttankeffect';\nimport TankFireEffectModel from 'src/effects/tank/tank-fire-effect-model';\nimport EffectModel from 'src/effects/effect-model';\nimport ClientTank from \"../../../tanks/clienttank\";\n\nclass ClientTankFireEffect extends ClientTankEffect {\n\tpublic queue: any;\n\tpublic frequency: any;\n\tpublic sound: any;\n\tpublic dead: any;\n\n\tstatic Model: typeof EffectModel = TankFireEffectModel\n\n    constructor(model: EffectModel, tank: ClientTank) {\n        super(model, tank);\n\n        this.queue = 0\n        this.frequency = 20\n    }\n\n    stop() {\n        this.sound.stop()\n        this.dead = true\n    }\n\n    tick(dt: number) {\n\n        const position = this.tank.model.body.GetPosition()\n        const velocity = this.tank.model.body.GetLinearVelocity()\n        const angle = this.tank.model.body.GetAngle()\n\n        const tank = this.tank;\n\n        this.queue += dt * this.frequency\n\n        while(this.queue > 0) {\n            for(let k = 0; k < 20; k++) {\n                const heading = -angle + (Math.random() - 0.5) * Math.PI / 4;\n                const sin = Math.sin(heading);\n                const cos = Math.cos(heading);\n                const vel = 240 + Math.random() * 20;\n                const dist = Math.random() * 6;\n\n                const smoke = new FireParticle({\n                    x: position.x - tank.model.matrix.sin * 10 + sin * dist,\n                    y: position.y + tank.model.matrix.cos * 10 + cos * dist,\n                    dx: velocity.x + sin * vel,\n                    dy: velocity.y + cos * vel,\n                    width: 4,\n                    height: 4,\n                    scaling: 1.5,\n                    lifetime: 0.4 + Math.random() * 0.1,\n                });\n                this.tank.world.particles.push(smoke)\n            }\n            this.queue -= 1\n        }\n    }\n}\n\nexport default ClientTankFireEffect;",
    "\nimport ClientTankEffect from '../clienttankeffect';\nimport Pellet from 'src/client/particles/pellet'\nimport Color from 'src/utils/color';\nimport EffectModel from 'src/effects/effect-model';\nimport TankPelletsEffectModel from 'src/effects/tank/tank-pellets-effect-model';\nimport Player from 'src/utils/player';\n\nclass ClientTankPelletsEffect extends ClientTankEffect {\n\tpublic player: any;\n\tpublic game: any;\n\n    static Model: typeof EffectModel = TankPelletsEffectModel\n\n    start(player: Player) {\n        this.player = player\n    }\n\n    draw(ctx: WebGLRenderingContext) {\n        const game = this.game;\n        const player = this.player;\n\n        const tank = player.tank;\n\n        for(let k = 0; k < 8; k++) {\n            const angle = tank.model.rotation + (Math.random() - 0.5) * Math.PI / 4;\n            const sin = Math.sin(angle);\n            const cos = Math.cos(angle);\n            const vel = 500 + Math.random() * 20;\n            const dist = Math.random() * 3;\n\n            const pellet = new Pellet({\n                x: tank.model.x + tank.model.matrix.sin * 2 + sin * dist,\n                y: tank.model.y + tank.model.matrix.cos * 2 + cos * dist,\n                dx: (tank.model.body.m_linearVelocity.x + sin * vel) / game.tps,\n                dy: (tank.model.body.m_linearVelocity.y + cos * vel) / game.tps,\n                lifetime: 150,\n                color: new Color(50, 50, 50)\n            });\n            game.particles.push(pellet)\n        }\n    }\n}\n\nexport default ClientTankPelletsEffect;",
    "\nimport ClientEffect from '../clienteffect';\nimport EffectModel from 'src/effects/effect-model';\nimport ClientGameWorld from \"../../clientgameworld\";\n\nclass ClientWorldEffect extends ClientEffect {\n    public model: EffectModel;\n    public world: ClientGameWorld;\n\n    constructor(model: EffectModel, world: ClientGameWorld) {\n        super(model)\n        this.model = model\n        this.world = world\n    }\n\n    static fromModelAndWorld(model: EffectModel, world: ClientGameWorld): ClientEffect | null {\n        let clazz = this.Types.get(model.constructor as typeof EffectModel) as unknown as typeof ClientWorldEffect\n        if(!clazz) return null\n        return new clazz(model, world)\n    }\n}\n\nexport default ClientWorldEffect;",
    "\n// @ts-ignore\nimport Types from './types/*'\nimport ClientWorldEffect from \"./clientworldeffect\";\n\nfor(let Type of Types) {\n    ClientWorldEffect.associate(Type.Model, Type)\n}",
    "\nimport ClientWorldEffect from '../clientworldeffect';\nimport WorldExplodeEffectModel from 'src/effects/world/explode/world-explode-effect-model';\nimport ClientGameWorld from \"../../../clientgameworld\";\n\nclass ClientWorldExplodeEffect extends ClientWorldEffect {\n\tpublic die: any;\n\tpublic model: WorldExplodeEffectModel\n\n\tstatic Model = WorldExplodeEffectModel\n\n    constructor(model: WorldExplodeEffectModel, world: ClientGameWorld) {\n        super(model, world);\n        this.model = model\n    }\n\n    tick(dt: number) {\n        this.world.explosionEffectPool.start(this.model.x, this.model.y, this.model.power)\n\n        this.die()\n    }\n}\n\nexport default ClientWorldExplodeEffect;",
    "import FX from \"./sound/fx\";\nimport ClientTank from \"./tanks/clienttank\";\nimport ClientGameWorld from \"./clientgameworld\";\nimport TankModel from \"../tanks/tankmodel\";\nimport Sound from \"./sound/sound\";\n\n\nexport interface EngineConfig {\n    sound: number,\n    gears?: EngineGearConfig[],\n    multiplier: number,\n    pitch: number\n    volume?: number\n}\n\nexport interface EngineGearConfig {\n    /// When should gearbox switch to the next gear\n    high?: number\n\n    /// When should gearbox switch to the previous gear\n    low?: number\n\n    /// Gear ratio\n    gearing: number\n}\n\nclass Engine {\n\tpublic config: EngineConfig;\n\tpublic game: any;\n\tpublic tank: TankModel;\n\tpublic sound: Sound;\n\tpublic rpm: number;\n\tpublic gear: number;\n\tpublic const: any;\n\tpublic destinationRPM: any;\n\n    constructor(config: EngineConfig) {\n        this.config = config\n    }\n\n    configure(game: ClientGameWorld, tank: TankModel) {\n        this.game = game\n        this.tank = tank\n        this.sound = this.game.playSound(this.config.sound, {\n            loop: true,\n            mapX: tank.x,\n            mapY: tank.y\n        })\n        this.rpm = 1\n        this.gear = 0\n\n        this.const = {\n            multiplier: this.config.multiplier || 11,\n            gears: this.config.gears || [{gearing: 1}],\n            pitch: this.config.pitch || 1,\n            volume: this.config.volume || 1\n        }\n    }\n\n    clone() {\n        return new Engine(this.config)\n    }\n\n    destroy() {\n        if(this.sound) this.sound.stop()\n    }\n\n    tick() {\n        return\n        if(this.game) {\n            if(this.sound) {\n                this.sound.config.mapX = this.tank.x\n                this.sound.config.mapY = this.tank.y\n            }\n            if(this.tank.health === 0) {\n                this.destinationRPM = 0\n                this.sound.gainNode.gain.value\n            } else {\n                const tankSpeed = this.tank.behaviour.details.transmissionSpeed * this.game.tps;\n\n                const rpm = tankSpeed / this.const.multiplier;\n\n                const currentGear = this.const.gears[this.gear];\n                const nextGear = this.const.gears[this.gear + 1];\n                const previousGear = this.const.gears[this.gear - 1];\n\n                const currentRPM = rpm * currentGear.gearing;\n\n                if(previousGear && currentRPM < currentGear.low) {\n                    this.gear--\n                }\n                if(nextGear && currentRPM > currentGear.high) {\n                    this.gear++\n                }\n\n                const minRPM = 1 - this.tank.behaviour.details.clutch / 6;\n\n                this.destinationRPM = (Math.max(minRPM, rpm) * this.const.gears[this.gear].gearing) * this.tank.behaviour.details.clutch + (1 - this.tank.behaviour.details.clutch)\n            }\n\n            if(this.destinationRPM < this.rpm) {\n                this.rpm -= 0.1\n                if(this.destinationRPM > this.rpm) {\n                    this.rpm = this.destinationRPM\n                }\n            } else if(this.destinationRPM > this.rpm) {\n                this.rpm += 0.05\n                if(this.destinationRPM < this.rpm) {\n                    this.rpm = this.destinationRPM\n                }\n            }\n\n            if(this.sound) {\n                this.sound.source.playbackRate.value = this.rpm * this.const.pitch\n                let volume = 0.3 + this.tank.behaviour.details.clutch / 4;\n                if(this.rpm < 0.7) {\n                    volume *= (this.rpm - 0.2) * 2\n                }\n                this.sound.config.volume = volume * this.const.volume\n                this.game.updateSoundPosition(this.sound)\n            }\n        }\n    }\n}\n\nexport default Engine;\n",
    "\nimport ClientEntity from '../cliententity';\nimport BulletModel from 'src/entity/bullet/bulletmodel';\n\nclass ClientBullet extends ClientEntity {\n    static Model: typeof BulletModel = null\n}\n\nexport default ClientBullet;\n",
    "\n// @ts-ignore\nimport Models from './models/*'\nimport ClientBullet from \"./clientbullet\";\n\nfor(let Model of Models) {\n    ClientBullet.associate(Model, Model.Model)\n}",
    "import ClientBullet from '../clientbullet';\nimport BulletModel16mm from '../../../../entity/bullet/models/16mm';\nimport BasicEntityDrawer from '../../../graphics/drawers/basicentitydrawer';\nimport BulletModel from 'src/entity/bullet/bulletmodel';\nimport TextureProgram from 'src/client/graphics/programs/textureprogram';\nimport EntityModel from \"../../../../entity/entitymodel\";\n\nclass Drawer extends BasicEntityDrawer {\n    static spriteNames = [\"bullets/16mm/16mm\"]\n\n    draw(program: TextureProgram) {\n        this.drawSprite(Drawer.getSprite(0), 4, 12, program)\n    }\n}\n\nclass ClientBullet16mm extends ClientBullet {\n    static Model: typeof BulletModel = BulletModel16mm\n\n    constructor(model: EntityModel) {\n        super(model);\n        this.drawer = new Drawer(this)\n    }\n}\n\nexport default ClientBullet16mm;",
    "import ClientBullet from '../clientbullet';\nimport BulletModel42mm from '../../../../entity/bullet/models/42mm';\nimport BasicEntityDrawer from '../../../graphics/drawers/basicentitydrawer';\nimport BulletModel from \"../../../../../src/entity/bullet/bulletmodel\";\nimport TextureProgram from \"../../../graphics/programs/textureprogram\";\n\nclass Drawer extends BasicEntityDrawer {\n    static spriteNames = [\"bullets/42mm/42mm\"]\n\n    draw(program: TextureProgram) {\n        this.drawSprite(Drawer.getSprite(0), 6, 23, program)\n    }\n}\n\nclass ClientBullet42mm extends ClientBullet {\n    static Model: typeof BulletModel = BulletModel42mm\n\n    constructor(model: BulletModel) {\n        super(model);\n        this.drawer = new Drawer(this)\n    }\n}\n\nexport default ClientBullet42mm;",
    "import ClientBullet from '../clientbullet';\nimport BulletModelCannonball from '../../../../entity/bullet/models/cannonball';\nimport BasicEntityDrawer from '../../../graphics/drawers/basicentitydrawer';\nimport BulletModel from \"../../../../../src/entity/bullet/bulletmodel\";\nimport BulletModel42mm from \"../../../../../src/entity/bullet/models/42mm\";\nimport TextureProgram from \"../../../graphics/programs/textureprogram\";\nimport EntityModel from \"../../../../entity/entitymodel\";\n\nclass Drawer extends BasicEntityDrawer {\n    static spriteNames = [\"bullets/cannonball/cannonball\"]\n\n    draw(program: TextureProgram) {\n        this.drawSprite(Drawer.getSprite(0), 18, 18, program)\n    }\n}\n\nclass ClientBulletCannonball extends ClientBullet {\n    static Model: typeof BulletModel = BulletModelCannonball\n\n    constructor(model: EntityModel) {\n        super(model);\n        this.drawer = new Drawer(this)\n    }\n}\n\nexport default ClientBulletCannonball;",
    "\nimport ClientBullet from '../clientbullet';\nimport BulletModelMine from '../../../../entity/bullet/models/mine';\nimport BasicEntityDrawer from '../../../graphics/drawers/basicentitydrawer';\nimport BulletModel from \"../../../../../src/entity/bullet/bulletmodel\";\nimport BulletModelCannonball from \"../../../../../src/entity/bullet/models/cannonball\";\nimport ClientEntity from \"../../cliententity\";\nimport TextureProgram from \"../../../graphics/programs/textureprogram\";\nimport EntityModel from \"../../../../entity/entitymodel\";\n\nclass Drawer extends BasicEntityDrawer {\n\tpublic shift: any;\n    static spriteNames = [\n        \"bullets/mine/on\",\n        \"bullets/mine/off\"\n    ]\n\n    constructor(entity: ClientEntity) {\n        super(entity);\n\n        this.shift = this.entity.model.id * 350\n    }\n\n    draw(program: TextureProgram) {\n        let index = Math.floor((Date.now() + this.shift) / 1000) % 3\n        if(index === 2) index = 1\n        this.drawSprite(Drawer.getSprite(index), 60, 60, program)\n    }\n}\n\nclass ClientBulletMine extends ClientBullet {\n    static Model: typeof BulletModel = BulletModelMine\n\n    constructor(model: EntityModel) {\n        super(model);\n        this.drawer = new Drawer(this)\n    }\n}\n\nexport default ClientBulletMine;",
    "\nimport AbstractEntity from '../../entity/abstractentity';\nimport EntityDrawer from '../graphics/drawers/entitydrawer';\nimport EntityModel from '../../entity/entitymodel';\n\nclass ClientEntity extends AbstractEntity {\n\tpublic drawer: EntityDrawer = null;\n\tstatic types = new Map<typeof EntityModel, typeof ClientEntity>()\n\n    constructor(model: EntityModel) {\n        super(model);\n    }\n\n    static fromModel(model: EntityModel) {\n        let type = this.types.get(model.constructor as typeof EntityModel)\n\n        if(type) {\n            return new type(model)\n        }\n        return null\n    }\n\n    /**\n     * Associates client wrapper class with the bullet model\n     * @param clientClass Client class to associate with bullet model\n     * @param modelClass Bullet model\n     */\n\n    static associate(clientClass: typeof ClientEntity, modelClass: typeof EntityModel) {\n        this.types.set(modelClass, clientClass)\n    }\n}\n\nexport default ClientEntity;",
    "\nimport Screen, {ScreenConfig} from '../screen';\nimport LoadingScene from '../scenes/loading/loadingscene';\nimport GameScene from './scenes/gamescene';\nimport Progress from '../utils/progress';\nimport Sprite from '../sprite';\n\nimport 'src/tanks/model-loader'\nimport 'src/client/entity/bullet/model-loader';\nimport 'src/client/tanks/model-loader';\nimport 'src/client/graphics/drawers/block/type-loader';\nimport 'src/client/effects/tank/type-loader';\nimport 'src/client/effects/world/type-loader';\nimport 'src/utils/map/blockstate/type-loader';\n\nexport interface GameConfig extends ScreenConfig {\n    ip: string\n}\n\nclass GameScreen extends Screen {\n\n    config: GameConfig\n\n    constructor(config: GameConfig) {\n        super(config)\n\n        this.config = config\n    }\n\n    initialize() {\n        super.initialize()\n        let spriteDownloadProgress = new Progress()\n        //let soundDownloadProgress = new Progress()\n        let totalProgress = new Progress()\n\n        totalProgress.addSubtask(spriteDownloadProgress)\n        //totalProgress.addSubtask(soundDownloadProgress)\n\n        this.setScene(new LoadingScene({\n            screen: this,\n            progress: totalProgress\n        }))\n\n        Sprite.download(spriteDownloadProgress, this.ctx, {\n            mipMapLevels: 1\n        }).then(() => {\n            Sprite.applyTexture(this.ctx)\n            this.setScene(new GameScene({\n                screen: this,\n                ip: this.config.ip\n            }))\n            //    return this.soundEngine.download(soundDownloadProgress)\n        })\n        //     .then(() => {\n        //     this.setScene(new GameScene({\n        //         screen: this\n        //     }))\n        // })\n    }\n}\n\n(window as any)[\"Game\"] = GameScreen\nexport default GameScreen;\n\n",
    "\nimport * as Box2D from 'src/library/box2d';\nimport Scene, {SceneConfig} from 'src/client/scenes/scene';\nimport GameMap from 'src/utils/map/gamemap';\nimport ClientEntity from 'src/client/entity/cliententity';\nimport ClientTank from 'src/client/tanks/clienttank';\nimport EventContainer from 'src/client/ui/overlay/events/eventcontainer';\nimport ClientGameWorld from 'src/client/clientgameworld';\nimport BrowserClient from 'src/client/networking/browser-client';\nimport MapPacket from 'src/networking/packets/game-packets/mappacket';\nimport PlayerJoinPacket from 'src/networking/packets/game-packets/playerjoinpacket';\nimport PlayerSpawnPacket from 'src/networking/packets/game-packets/playerspawnpacket';\nimport TankLocationsPacket from 'src/networking/packets/game-packets/gamestatepacket';\nimport PlayerControlsPacket from 'src/networking/packets/game-packets/playercontrolspacket';\nimport PlayerConfigPacket from 'src/networking/packets/game-packets/playerconfigpacket';\nimport PlayerChatPacket from 'src/networking/packets/game-packets/playerchatpacket';\nimport PlayerRespawnPacket from 'src/networking/packets/game-packets/playerrespawnpacket';\nimport EntityCreatePacket from 'src/networking/packets/game-packets/entitycreatepacket';\nimport EntityRemovePacket from 'src/networking/packets/game-packets/entityremovepacket';\nimport EntityListPacket from 'src/networking/packets/game-packets/entitylistpacket';\nimport BlockUpdatePacket from 'src/networking/packets/game-packets/blockupdatepacket';\nimport PlayerLeavePacket from 'src/networking/packets/game-packets/playerleavepacket';\nimport RoomListPacket from 'src/networking/packets/game-packets/roomlistpacket';\nimport PlayerRoomRequestPacket from 'src/networking/packets/game-packets/playerroomrequestpacket';\nimport PlayerRoomChangePacket from 'src/networking/packets/game-packets/playerroomchangepacket';\nimport EffectCreatePacket from 'src/networking/packets/game-packets/effectcreatepacket';\nimport EffectRemovePacket from 'src/networking/packets/game-packets/effectremovepacket';\nimport WorldEffectModel from 'src/effects/world/world-effect-model';\nimport TankEffectModel from 'src/effects/tank/tankeffectmodel';\nimport ClientTankEffect from 'src/client/effects/tank/clienttankeffect';\nimport ClientWorldEffect from 'src/client/effects/world/clientworldeffect';\nimport ControlPanel from '../ui/controlpanel';\nimport Camera from 'src/client/camera';\nimport Keyboard from 'src/client/controls/interact/keyboardcontroller';\nimport PrimaryOverlay from '../ui/overlay/primary/primaryoverlay';\nimport ChatContainer from '../ui/overlay/chat/chatcontainer';\nimport TouchController from 'src/client/controls/interact/touchcontroller';\nimport PlayerControls from 'src/client/controls/playercontrols';\nimport GamepadManager from 'src/client/controls/interact/gamepadmanager';\nimport MapDrawer from 'src/client/graphics/drawers/mapdrawer';\nimport ParticleProgram from 'src/client/graphics/programs/particleprogram';\nimport TextureProgram from 'src/client/graphics/programs/textureprogram';\nimport ExplodePoolDrawer from 'src/client/graphics/drawers/explodepooldrawer';\nimport TankModel from \"src/tanks/tankmodel\";\nimport AbstractTank from \"src/tanks/abstracttank\";\nimport AbstractClient from \"src/networking/abstract-client\";\nimport Player from \"src/utils/player\";\nimport KeyboardController from \"src/client/controls/interact/keyboardcontroller\";\nimport ClientEffect from \"../../effects/clienteffect\";\nimport GameScreen from \"../game-screen\";\nimport SoundEngine from \"../../sound/soundengine\";\n\nexport interface GameSceneConfig extends SceneConfig {\n    screen: GameScreen,\n    bgscale?: number,\n    ip: string\n}\n\nclass GameScene extends Scene {\n\tpublic config: GameSceneConfig;\n\tpublic controlsUpdateInterval: number;\n\tpublic camera: Camera;\n\tpublic keyboard: KeyboardController;\n\tpublic controls: ControlPanel;\n\tpublic gamepad: GamepadManager;\n\tpublic touchController: TouchController;\n\tpublic playerControls: PlayerControls;\n\tpublic client: AbstractClient;\n\tpublic alive: boolean;\n\tpublic mapDrawer: MapDrawer;\n\tpublic particleProgram: ParticleProgram;\n\tpublic entityProgram: TextureProgram;\n\tpublic explodePoolDrawer: ExplodePoolDrawer;\n\tpublic overlay: PrimaryOverlay;\n\tpublic eventContainer: EventContainer;\n\tpublic chatContainer: ChatContainer;\n\tpublic effects: Map<number, ClientEffect>;\n\tpublic timer: number;\n    public world: ClientGameWorld\n\n    constructor(config: GameSceneConfig) {\n        super(config)\n\n        this.config = config\n\n        this.config.bgscale = this.config.bgscale || 2\n        this.controlsUpdateInterval = 0.1 // seconds\n\n        this.camera = new Camera({\n            baseScale: 3,\n            viewport: new Box2D.Vec2(this.screen.width, this.screen.height),\n            defaultPosition: new Box2D.Vec2(0, 0),\n            inertial: true\n        })\n\n        this.keyboard = new Keyboard()\n        this.controls = new ControlPanel()\n        this.gamepad = new GamepadManager()\n\n        this.touchController = new TouchController(this.controls, this.screen.canvas)\n        this.playerControls = new PlayerControls()\n        this.playerControls.setupKeyboard(this.keyboard)\n        this.playerControls.setupGamepad(this.gamepad)\n\n        this.playerControls.on(\"respawn\", () => {\n            if (this.world && this.world.player.tank) {\n                new PlayerRespawnPacket().sendTo(this.client.connection)\n            }\n        })\n\n        this.keyboard.startListening()\n        this.touchController.startListening()\n        this.gamepad.startListening()\n\n        this.setupUpdateLoop()\n\n        this.alive = false\n        this.client = new BrowserClient({ ip: config[\"ip\"] })\n\n        this.mapDrawer = new MapDrawer(this.camera, this.screen.ctx)\n        this.particleProgram = new ParticleProgram(\"particle-drawer-program\", this.screen.ctx)\n        this.entityProgram = new TextureProgram(\"entity-drawer\", this.screen.ctx)\n        this.explodePoolDrawer = new ExplodePoolDrawer(this.camera, this.screen)\n\n        this.createChat()\n        this.initOverlay()\n        this.initEvents()\n        this.connect()\n        this.layout()\n\n        this.overlay.show()\n    }\n\n    private initOverlay() {\n        this.overlay = new PrimaryOverlay({\n            root: this.overlayContainer,\n            game: this\n        })\n\n        this.overlay.on(\"play\", (nick: string, tank: typeof AbstractTank) => {\n            if(this.world && this.world.player) {\n                if(tank.getModel().getId() === (this.world.player.tank.model.constructor as typeof TankModel).getId()) {\n                    return\n                }\n            }\n\n            new PlayerConfigPacket(nick, tank.getModel()).sendTo(this.client.connection)\n        })\n\n        this.overlay.roomSelectContainer.on(\"select\", (room: string) => {\n            new PlayerRoomRequestPacket(room).sendTo(this.client.connection)\n        })\n\n        this.keyboard.keybinding(\"Escape\", () => {\n            if(this.world && this.world.player) {\n                if (this.overlay.shown) {\n                    this.overlay.hide()\n                } else {\n                    this.overlay.show()\n                }\n            }\n        })\n    }\n\n    private initEvents() {\n        this.eventContainer = new EventContainer()\n        this.overlayContainer.append(this.eventContainer.element)\n    }\n\n    private setupUpdateLoop() {\n        const update = () => {\n            this.screen.loop.scheduleTask(update, this.controlsUpdateInterval)\n            if(this.world && this.world.player && this.world.player.tank.model.controls.shouldUpdate()) {\n                new PlayerControlsPacket(this.world.player.tank.model.controls).sendTo(this.client.connection)\n            }\n        }\n\n        update()\n    }\n\n    private newPlayer(player: Player, tank: TankModel) {\n        this.world.createPlayer(player)\n\n        let newTank = ClientTank.fromModel(tank)\n\n        player.setTank(newTank)\n        player.tank.world = this.world\n        player.tank.model.initPhysics(this.world.world)\n\n        newTank.setupDrawer(this.screen.ctx)\n\n        return player\n    }\n\n    private connect() {\n        this.client.connectToServer()\n\n        this.client.on(MapPacket, (packet) => {\n            if(this.world) return\n\n            this.camera.defaultPosition.x = packet.map.width / 2 * GameMap.BLOCK_SIZE\n            this.camera.defaultPosition.y = packet.map.height / 2 * GameMap.BLOCK_SIZE\n\n            if(this.world === null) {\n                this.camera.reset()\n            }\n            this.world = new ClientGameWorld({\n                map: packet.map\n            })\n        })\n\n        this.client.on(PlayerJoinPacket, (packet) => {\n            this.newPlayer(packet.player, packet.tank)\n        })\n\n        this.client.on(PlayerSpawnPacket, (packet) => {\n            const player = this.newPlayer(packet.player, packet.tank)\n\n            this.playerControls.connectTankControls(player.tank.model.controls)\n            this.camera.target = player.tank.model.body.GetPosition()\n            this.camera.targetVelocity = player.tank.model.body.GetLinearVelocity()\n            this.world.player = player\n            this.overlay.hide()\n        })\n\n        this.client.on(TankLocationsPacket, (packet) => {\n            packet.updateTankLocations(this.world.players)\n        })\n\n        this.client.on(PlayerChatPacket, (packet) => {\n            this.chatContainer.addMessage(packet.text)\n        })\n\n        this.client.on(EntityListPacket, (packet) => {\n            packet.updateEntities(this.world.entities)\n        })\n\n        this.client.on(EntityCreatePacket, (packet) => {\n            packet.createEntities((model) => {\n                let wrapper = ClientEntity.fromModel(model)\n                if(wrapper) this.world.entities.set(model.id, wrapper)\n            })\n        })\n\n        this.client.on(EntityRemovePacket, (packet) => {\n            packet.updateEntities(this.world.entities)\n        })\n\n        this.client.on(BlockUpdatePacket, (packet) => {\n            this.world.map.setBlock(packet.x, packet.y, packet.block)\n            this.mapDrawer.reset()\n        })\n\n        this.client.on(PlayerLeavePacket, (packet) => {\n            const player = this.world.players.get(packet.playerId)\n            this.world.removePlayer(player)\n        })\n\n        this.client.on(RoomListPacket, (packet) => {\n            this.overlay.roomSelectContainer.updateRooms(packet.rooms)\n        })\n\n        this.client.on(PlayerRoomChangePacket, (packet) => {\n            if(packet.error) {\n                let event = \"Не удалось подключиться к игре '\" + packet.room + \"': \" + packet.error\n                this.eventContainer.createEvent(event)\n            } else {\n                this.playerControls.disconnectTankControls()\n\n                this.world = null\n                this.chatContainer.clear()\n\n                this.overlay.roomSelectContainer.selectRoom(packet.room)\n            }\n        })\n\n        this.effects = new Map()\n\n        this.client.on(EffectCreatePacket, (packet) => {\n            let effect = packet.effect\n            if(this.effects.has(effect.id))\n                this.effects.get(effect.id).die()\n\n            if(effect instanceof TankEffectModel) {\n                let player = this.world.players.get(effect.tankId)\n                if (!player || !player.tank) return\n\n                let tank: ClientTank = player.tank as ClientTank\n\n                let wrapper = ClientTankEffect.fromModelAndTank(effect, tank)\n                tank.effects.set(effect.id, wrapper)\n\n                this.effects.set(effect.id, wrapper)\n            } else if(effect instanceof WorldEffectModel) {\n                let wrapper = ClientWorldEffect.fromModelAndWorld(effect, this.world)\n                this.world.effects.set(effect.id, wrapper)\n                this.effects.set(effect.id, wrapper)\n            }\n        })\n\n        this.client.on(EffectRemovePacket, (packet) => {\n            let effect = this.effects.get(packet.id)\n            effect.die()\n            this.effects.delete(packet.id)\n\n            if(effect.model instanceof TankEffectModel) {\n                let player = this.world.players.get(effect.model.tankId)\n                if (!player || !player.tank) return\n\n                let tank = /** @type ClientTank */ player.tank\n                tank.effects.delete(packet.id)\n            } else if(effect.model instanceof WorldEffectModel) {\n                this.world.effects.delete(packet.id)\n            }\n        })\n    }\n\n    layout() {\n        this.camera.viewport.x = this.screen.width\n        this.camera.viewport.y = this.screen.height\n    }\n\n    private createChat() {\n        this.chatContainer = new ChatContainer()\n        this.overlayContainer.append(this.chatContainer.element)\n\n        this.keyboard.keybinding(\"Enter\", () => {\n            if(this.world && this.world.player) {\n                this.chatContainer.showInput()\n            }\n        })\n\n        this.chatContainer.on(\"chat\", (text: string) => new PlayerChatPacket(text).sendTo(this.client.connection))\n        this.chatContainer.on(\"input-focus\", () => {\n            this.keyboard.stopListening()\n        })\n        this.chatContainer.on(\"input-blur\", () => {\n            this.keyboard.startListening()\n            this.screen.canvas.focus()\n        })\n    }\n\n    pause() {\n        cancelAnimationFrame(this.timer)\n    }\n\n    draw(ctx: WebGLRenderingContext, dt: number) {\n\n        this.gamepad.refresh()\n        this.playerControls.refresh()\n\n        if(!this.world) {\n            return\n        }\n\n        this.screen.swapFramebuffers()\n        this.screen.clear()\n\n        // Drawing the scene\n\n        this.camera.tick(dt)\n        this.drawEntities()\n        this.mapDrawer.draw(this.world.map)\n        this.drawPlayers(dt)\n        this.drawParticles()\n\n        // Post-processing\n\n        this.screen.setScreenFramebuffer()\n        this.screen.clear()\n\n        this.explodePoolDrawer.draw(this.world.explosionEffectPool, dt)\n\n        this.world.tick(dt)\n    }\n\n    private drawParticles() {\n        if(this.world.particles.length) {\n            this.particleProgram.use()\n            this.particleProgram.prepare()\n\n            for(let particle of this.world.particles) {\n                this.particleProgram.drawParticle(particle)\n            }\n\n            this.particleProgram.matrixUniform.setMatrix(this.camera.matrix.m)\n            this.particleProgram.draw()\n        }\n    }\n\n    private drawPlayers(dt: number) {\n        let players = this.world.players\n        for(let player of players.values()) {\n            (player.tank as ClientTank).drawer.draw(this.camera, dt)\n        }\n    }\n\n    private drawEntities() {\n        let entities = this.world.entities\n        if(entities.size > 0) {\n            this.entityProgram.use()\n            this.entityProgram.prepare()\n\n            for(let entity of entities.values()) {\n                entity.drawer.draw(this.entityProgram)\n            }\n\n            this.entityProgram.matrixUniform.setMatrix(this.camera.matrix.m)\n            this.entityProgram.draw()\n        }\n    }\n}\n\nexport default GameScene;",
    "import Vidget from \"../../controls/interact/vidget\";\nimport {Touch} from \"../../controls/interact/touchcontroller\";\n\nclass ControlPanel {\n\tpublic vidgets: Vidget[] = []\n\n    constructor() {\n\n    }\n\n    addVidget(vidget: Vidget) {\n        this.vidgets.push(vidget)\n    }\n\n    draw(ctx: WebGLRenderingContext, dt: number) {\n\n        this.vidgets.forEach(function(vidget: Vidget){\n            if(vidget.hidden) return\n\n            //ctx.translate(vidget.x, vidget.y)\n\n            vidget.draw(ctx, dt)\n\n            //ctx.translate(-vidget.x, -vidget.y)\n        })\n\n    }\n\n    captureTouch(touch: Touch) {\n        let x = touch.left\n        let y = touch.top\n\n        for(let i = 0, l = this.vidgets.length; i < l; i++) {\n            let vidget = this.vidgets[i]\n\n            if(vidget.touched) {\n                vidget.touchEnded()\n            }\n            if(x < vidget.x || x > vidget.x + vidget.width) continue\n            if(y < vidget.y || y > vidget.y + vidget.height) continue\n\n            vidget.touchStarted(x - vidget.x, y - vidget.y)\n            vidget.touched = true\n            touch.vidget = vidget\n            touch.captured = this\n            return true\n        }\n        return false\n    }\n\n    touchEnded(touch: Touch) {\n        if(touch.vidget) {\n            touch.vidget.touchEnded()\n            touch.vidget.touched = false\n        }\n    }\n\n    touchMoved(touch: Touch) {\n\n        let vidget = touch.vidget\n\n        if(vidget) {\n            let y = touch.top - vidget.y\n            let x = touch.left - vidget.x\n\n            vidget.touchMoved(x, y)\n        }\n    }\n}\n\nexport default ControlPanel;",
    "/* @load-resource: './chat.scss' */\n\nimport View from 'src/client/ui/view';\n\nimport HTMLEscape from 'src/utils/htmlescape';\nimport Color from 'src/utils/color';\n\nclass ChatContainer extends View {\n\tpublic chat: JQuery;\n\tpublic input: JQuery;\n\n    constructor() {\n        super();\n        this.element.addClass(\"chat-container\")\n        this.chat = $(\"<div>\").addClass(\"chat\")\n        this.input = $(\"<input>\").addClass(\"chat-input\").hide()\n        this.input.on(\"keydown\", (evt: JQuery.Event) => {\n            if (evt.key === \"Enter\") {\n                let value = String(this.input.val()).trim()\n                if(value.length) {\n                    this.emit(\"chat\", value)\n                }\n            } else if(evt.key !== \"Escape\") return\n\n            this.hideInput()\n            evt.stopPropagation()\n        })\n\n        this.element.append(this.chat)\n        this.element.append(this.input)\n    }\n\n    showInput() {\n        this.input.show()\n        this.input.focus()\n        this.emit(\"input-focus\")\n    }\n\n    hideInput() {\n        this.input.blur()\n        this.input.hide()\n        this.input.val(\"\")\n        this.emit(\"input-blur\")\n    }\n\n    addMessage(text: string) {\n        text = this.parseColor(HTMLEscape(text))\n\n        this.chat.append($(\"<div>\").html(text))\n        let element = this.element.get(0)\n        element.scrollTop = element.scrollHeight - element.clientHeight\n    }\n\n    parseColor(text: string) {\n\n        // Some examples:\n        // §F00; This text will be colored red\n        // §0F0; This text will be colored green,§; but this text will be styled as default\n        // §!00F; This text will become bold and blue,§!; and this is a bold text with default color\n\n        return Color.replace(text, function(color: string, bold: boolean, text: string) {\n            if(bold) {\n                if(color)\n                    return \"<span style='font-weight:bold;color:#\" + color + \";'>\" + text + \"</span>\"\n\n                return \"<span style='font-weight:bold;'>\" + text + \"</span>\"\n            } else {\n                if(color)\n                    return \"<span style='color:#\" + color + \";'>\" + text + \"</span>\"\n                else\n                    return text\n            }\n        })\n    }\n\n    clear() {\n        this.chat.html(\"\")\n    }\n}\n\nexport default ChatContainer;",
    "/* @load-resource: './controls.scss' */\n\nimport Menu from 'src/client/ui/menu/menu';\n\nclass ControlsContainer extends Menu {\n\tpublic checkbox: JQuery;\n\tpublic button: JQuery;\n\n    constructor() {\n        super();\n\n        this.element.addClass(\"tip\")\n\n        let header = $(\"<div>\").addClass(\"header\").text(\"Управление\")\n\n        this.checkbox = $(\"<input>\").prop(\"type\", \"checkbox\")\n        this.button = $(\"<button>\").text(\"ИГРАТЬ\")\n\n        this.element\n            .append(header)\n            .append(this.line().height(\"120px\")\n                .append(this.steeringTable(\"wasd\"))\n                .append(\" или \")\n                .append(this.steeringTable(\"↑←↓→\"))\n                .append(\" для управления\")\n            ).append(this.line()\n                .append(this.key(\"ПРОБЕЛ\").css(\"padding\", \"0 40px\"))\n                .append(\" — выстрел\")\n                .append(this.key(\"Q\").css(\"margin-left\", \"25px\"))\n                .append(\" — мина\")\n                .append(this.key(\"R\").css(\"margin-left\", \"25px\"))\n                .append(\" — респавн\")\n            ).append(this.line()\n                .append(this.key(\"ВВОД\").css(\"padding\", \"0 25px\"))\n                .append(\" — чат\")\n            )\n            .append($(\"<div>\").addClass(\"wish\").text(\"Желаем приятной игры!\"))\n            .append($(\"<div>\").addClass(\"checkbox\")\n                .append(this.checkbox)\n                .append(\"не показывать больше\")\n            )\n            .append(this.button)\n\n        this.button.on(\"click\", () => {\n            this.emit(\"confirm\", this.checkbox.checked)\n        })\n    }\n\n    line() { return $(\"<div>\").addClass(\"line\") }\n    key(button: string) { return $(\"<div>\").addClass(\"key\").text(button) }\n\n    steeringTable(buttons: string) {\n        let table = $(\"<table>\")\n        let tbody = $(\"<tbody>\")\n        let button = 0\n\n        for(let line = 0; line < 2; line++) {\n            let tr = $(\"<tr>\")\n            for(let key = 0; key < 3; key++) {\n                let td = $(\"<td>\")\n                tr.append(td)\n\n                if(line === 0) {\n                    if(key === 0 || key === 2) continue\n                }\n\n                td.append(this.key(buttons[button++]))\n            }\n            tbody.append(tr)\n        }\n\n        return table.append(tbody)\n    }\n}\n\nexport default ControlsContainer;",
    "/* @load-resource: './play-menu.scss' */\n\nimport Menu from 'src/client/ui/menu/menu';\n\nclass PlayMenuContainer extends Menu {\n\tpublic titleLabel: JQuery\n\tpublic nickInput: JQuery\n\tpublic playButton: JQuery\n\n    constructor() {\n        super();\n\n        this.element.addClass(\"nick\")\n        this.titleLabel = $(\"<div>\").css(\"text-align\", \"center\").addClass(\"header\")\n        this.titleLabel.text(\"ВВЕДИТЕ НИК\")\n        this.nickInput = $(\"<input>\")\n        this.playButton = $(\"<button></button>\").text(\"ИГРАТЬ\")\n\n        this.element.append(this.titleLabel)\n        this.element.append(this.nickInput)\n        this.element.append(this.playButton)\n\n        let handler = () => {\n            if(String(this.nickInput.val()).length === 0) {\n                this.playButton.prop(\"disabled\", true)\n            } else if(String(this.nickInput.val()).length > 10) {\n                this.playButton.prop(\"disabled\", true)\n            } else this.playButton.prop(\"disabled\", false)\n        }\n\n        this.nickInput.on(\"input\", handler)\n        this.nickInput.on(\"change\", handler)\n        this.nickInput.on(\"paste\", handler)\n        this.nickInput.val(localStorage.getItem(\"tanks-nick\") || \"\")\n\n        this.playButton.on(\"click\", () => {\n            if(this.playButton.is(\"[disabled]\")) return\n\n            let nick = this.nickInput.val()\n            localStorage.setItem(\"tanks-nick\", String(nick))\n            this.emit(\"play\")\n        })\n\n        handler()\n    }\n}\n\nexport default PlayMenuContainer;",
    "\nimport Overlay, {OverlayConfig} from 'src/client/ui/overlay/overlay';\nimport ControlsContainer from './controls/controlscontainer';\nimport PlayMenuContainer from './play-menu/playmenucontainer';\nimport TankPreviewContainer from './tank-preview/tankpreviewcontainer';\nimport TankSelectContainer from './tank-select/tankselectcontainer';\nimport RoomListRequestPacket from 'src/networking/packets/game-packets/roomlistrequestpacket';\nimport RoomSelectContainer from './room-select/roomselectcontainer';\nimport GameScene from \"../../../scenes/gamescene\";\nimport TankModel from \"../../../../../tanks/tankmodel\";\nimport ClientTank from \"../../../../tanks/clienttank\";\n\nexport interface PrimaryOverlayConfig extends OverlayConfig {\n    game: GameScene\n}\n\nclass PrimaryOverlay extends Overlay {\n\tpublic shown: boolean;\n\tpublic game: GameScene;\n\tpublic menuContainer: JQuery;\n\tpublic steeringContainer: JQuery;\n\tpublic playMenu: PlayMenuContainer;\n\tpublic steeringShown: boolean;\n\tpublic tankSelectMenu: TankSelectContainer;\n\tpublic steeringMenu: ControlsContainer;\n\tpublic roomSelectContainer: RoomSelectContainer;\n\tpublic selectedTank: typeof ClientTank;\n\tpublic tankPreviewMenu: TankPreviewContainer;\n\n    constructor(options: PrimaryOverlayConfig) {\n        super(options)\n        this.shown = false\n        this.game = options.game\n\n        this.menuContainer = $(\"<div>\")\n        this.steeringContainer = $(\"<div>\").hide()\n\n        this.overlay.append(this.menuContainer)\n        this.overlay.append(this.steeringContainer)\n\n        this.createTankPreviewMenu()\n        this.createPlayMenu()\n        this.createServerDropdown()\n        this.createTankSelectContainer()\n        this.createSteeringContainer()\n    }\n\n    shouldShowSteering(): boolean {\n        return localStorage.getItem(\"showHints\") !== \"0\"\n    }\n\n    setShouldShowSteering(value: boolean): void {\n        localStorage.setItem(\"showHints\", value ? \"1\" : \"0\")\n    }\n\n    createPlayMenu(): void {\n\n        this.playMenu = new PlayMenuContainer()\n\n        this.playMenu.on(\"play\", () => {\n            if(this.shouldShowSteering() && !this.steeringShown) {\n                this.steeringShown = true\n\n                this.menuContainer.fadeOut(() => {\n                    this.steeringContainer.fadeIn(300)\n                })\n            } else {\n                this.emitPlay()\n                this.hide()\n            }\n        })\n\n        this.menuContainer.append(this.playMenu.element)\n    }\n\n    emitPlay(): void {\n        this.emit(\"play\", this.playMenu.nickInput.val(), this.tankSelectMenu.selectedTank)\n    }\n\n    createSteeringContainer(): void {\n        this.steeringMenu = new ControlsContainer()\n        this.steeringMenu.on(\"confirm\", (disable: boolean) => {\n            this.setShouldShowSteering(!disable)\n            this.hide(() => {\n                this.steeringContainer.hide()\n                this.menuContainer.show()\n            })\n            this.emitPlay()\n        })\n\n        this.steeringContainer.append(this.steeringMenu.element)\n    }\n\n    createServerDropdown(): void {\n        this.roomSelectContainer = new RoomSelectContainer()\n        this.menuContainer.append(this.roomSelectContainer.element)\n    }\n\n    createTankSelectContainer(): void {\n        this.tankSelectMenu = new TankSelectContainer()\n        this.tankSelectMenu.on(\"select\", (tank: typeof ClientTank) => this.selectTank(tank))\n        this.selectTank(this.tankSelectMenu.selectedTank)\n        this.menuContainer.append(this.tankSelectMenu.element)\n    }\n\n    selectTank(tank: typeof ClientTank): void {\n        this.selectedTank = tank\n        this.tankPreviewMenu.previewTank(tank)\n    }\n\n    createTankPreviewMenu(): void {\n        this.tankPreviewMenu = new TankPreviewContainer()\n        this.menuContainer.append(this.tankPreviewMenu.element)\n    }\n\n    show(): void {\n        if(this.shown) return\n        super.show()\n        new RoomListRequestPacket(true).sendTo(this.game.client.connection)\n        this.tankSelectMenu.loop.start()\n    }\n\n    hide(callback?: () => void): void {\n        if(!this.shown) return\n        super.hide(callback)\n\n        new RoomListRequestPacket(false).sendTo(this.game.client.connection)\n        this.tankSelectMenu.loop.stop()\n    }\n}\n\nexport default PrimaryOverlay;",
    "/* @load-resource: './room-select.scss' */\n\nimport Menu from 'src/client/ui/menu/menu';\n\nimport Dropdown from '../../../../../ui/elements/dropdown/dropdown';\nimport Room from \"../../../../../../server/room/room\";\nimport {ClientRoomInformation} from \"../../../../../../networking/packets/game-packets/roomlistpacket\";\n\nclass RoomSelectContainer extends Menu {\n\tpublic selectedRoom: string;\n\tpublic dropdown: Dropdown;\n\n    constructor() {\n        super();\n\n        this.selectedRoom = null\n        this.dropdown = new Dropdown()\n        this.element.append(this.dropdown.element)\n        this.element.addClass(\"menu room-select\")\n\n        this.dropdown.on(\"expand\", () => {\n            this.element.addClass(\"expanded\")\n        })\n\n        this.dropdown.on(\"collapse\", () => {\n            this.element.removeClass(\"expanded\")\n        })\n\n        this.dropdown.on(\"select\", (option: JQuery) => {\n            let room = option.find(\".room-name\").text()\n\n            if(room === this.selectedRoom) return\n            this.selectedRoom = room\n\n            this.emit(\"select\", room)\n        })\n\n        this.dropdown.prototypeCell\n            .append($(\"<span>\").addClass(\"room-name\"))\n            .append(\" (\")\n            .append($(\"<span>\").addClass(\"room-playersOnline\"))\n            .append(\" / \")\n            .append($(\"<span>\").addClass(\"room-max-playersOnline\"))\n            .append(\")\")\n    }\n\n    selectRoom(room: string): void {\n        this.selectedRoom = room\n\n        this.dropdown.getOptions().each((index: number, element: HTMLElement) => {\n            let option = $(element)\n            if(option.data(\"value\") === room) {\n                this.dropdown.selectOption(option)\n                return false\n            }\n            return void 0\n        })\n    }\n\n    updateRooms(rooms: ClientRoomInformation[]): void {\n        this.dropdown.setOptionCount(rooms.length)\n\n        this.dropdown.getOptions().each((index: number, element: HTMLElement) => {\n            let option = $(element)\n            const room = rooms[index]\n            const disabled = room.currentOnline >= room.maxOnline;\n\n            option.data(\"value\", room.name)\n\n            if(disabled) option.addClass(\"disabled\")\n            else option.removeClass(\"disabled\")\n\n            option.find(\".room-name\").text(room.name)\n            option.find(\".room-playersOnline\").text(room.currentOnline)\n            option.find(\".room-max-playersOnline\").text(room.maxOnline)\n\n            if(this.selectedRoom === room.name) {\n                this.dropdown.selectOption(option)\n            }\n        })\n    }\n}\n\nexport default RoomSelectContainer;",
    "\nimport View from 'src/client/ui/view';\nimport {Stat} from \"./tankpreviewcontainer\";\n\nclass StatScale extends View {\n\tpublic statScale: JQuery;\n\tpublic value: JQuery;\n\tpublic title: JQuery;\n\tpublic stat: Stat;\n\n    constructor() {\n        super();\n\n        this.element.addClass(\"stat\")\n        this.statScale = $(\"<div>\").addClass(\"stat-scale\")\n        this.value = $(\"<div>\").addClass(\"stat-value\")\n        this.title = $(\"<div>\").addClass(\"stat-title\")\n\n        this.element.append(this.statScale)\n        this.element.append(this.value)\n        this.element.append(this.title)\n\n        this.stat = null\n    }\n\n    setStat(stat: Stat) {\n        this.stat = stat\n        this.statScale.css(\"background\", stat.color)\n        this.value.css(\"color\", stat.color)\n        this.title.text(stat.name)\n    }\n\n    setValue(value: number) {\n        if (value) {\n            this.element.css(\"opacity\", \"\")\n            let fraction = this.stat.func(value, this.stat.maximum);\n\n            const size = 165 + fraction * 150;\n\n            this.statScale.css(\"width\", size + \"px\")\n            this.value.css(\"left\", size + 10 + \"px\")\n            this.value.text(value)\n        } else {\n            this.element.css(\"opacity\", \"0.5\")\n            this.statScale.css(\"width\", \"165px\")\n            this.value.css(\"left\", \"165px\")\n            this.value.text(\"\")\n        }\n    }\n}\n\nexport default StatScale;",
    "/* @load-resource: './tank-preview.scss' */\n\nimport StatScale from './statscale';\n\nimport Menu from 'src/client/ui/menu/menu';\nimport TankModel from \"../../../../../../tanks/tankmodel\";\nimport ClientTank from \"../../../../../tanks/clienttank\";\n\nexport interface StatConfig {\n    name: string;\n    color: string;\n    maximum: number;\n    func: (value: number, maximum: number) => number;\n}\n\nexport class Stat implements StatConfig {\n\tpublic name: any;\n\tpublic color: any;\n\tpublic maximum: any;\n\tpublic func: any;\n\n    constructor(options: StatConfig) {\n        this.name = options.name\n        this.color = options.color\n        this.maximum = options.maximum\n        this.func = options.func || Stat.Linear\n    }\n\n    static Linear(value: number, maximum: number) {\n        return value / maximum\n    }\n\n    static Reversive(value: number, maximum: number) {\n        return maximum / value\n    }\n}\n\nclass TankPreviewContainer extends Menu {\n\tpublic tankPreview: JQuery;\n\tpublic previewCanvas: JQuery<HTMLCanvasElement>;\n\tpublic previewCtx: WebGLRenderingContext;\n\tpublic previewTitle: JQuery;\n\tpublic statContainer: JQuery;\n\tpublic descriptionBlock: JQuery;\n\tpublic statElements = new Map<string, StatScale>()\n    static stats = new Map([\n        [\"damage\", new Stat({\n            name: \"УРОН\",\n            color: \"#E82020\",\n            maximum: 7,\n            func: Stat.Linear\n        })],\n        [\"health\", new Stat({\n            name: \"БРОНЯ\",\n            color: \"#D657FF\",\n            maximum: 20,\n            func: Stat.Linear\n        })],\n        [\"speed\", new Stat({\n            name: \"СКОРОСТЬ\",\n            color: \"#FF8E26\",\n            maximum: 120,\n            func: Stat.Linear\n        })],\n        [\"shootrate\", new Stat({\n            name: \"СКОРОСТРЕЛЬНОСТЬ\",\n            color: \"#1CBCEF\",\n            maximum: 0.2,\n            func: Stat.Reversive,\n        })],\n        [\"reload\", new Stat({\n            name: \"ПЕРЕЗАРЯДКА\",\n            color: \"#55D346\",\n            maximum: 1,\n            func: Stat.Reversive,\n        })]\n    ])\n\n    constructor() {\n        super();\n\n        this.element.addClass(\"tankinfo\")\n\n        this.tankPreview = $(\"<div></div>\").addClass(\"tank-preview\")\n\n        this.previewCanvas = $(\"<canvas></canvas>\")\n        let canvas = this.previewCanvas[0]\n        canvas.width = 155 * devicePixelRatio\n        canvas.height = 155 * devicePixelRatio\n        //this.previewCtx = canvas.getContext(\"2d\")\n        //this.previewCtx.scale(devicePixelRatio, devicePixelRatio)\n\n        this.previewTitle = $(\"<h1>\")\n\n        this.tankPreview.append(this.previewCanvas)\n        this.tankPreview.append(this.previewTitle)\n\n        this.statContainer = $(\"<div></div>\").addClass(\"tank-stats\");\n        this.descriptionBlock = $(\"<div></div>\").addClass(\"description\")\n\n        this.element.append(this.tankPreview)\n        this.element.append(this.statContainer)\n        this.element.append(this.descriptionBlock)\n\n        this.setupStats()\n    }\n\n    setupStats() {\n        for(let [key, stat] of TankPreviewContainer.stats.entries()) {\n            let element = new StatScale()\n            this.statContainer.append(element.element)\n            element.setStat(stat)\n            this.statElements.set(key, element)\n        }\n    }\n\n    drawTank(tank: typeof ClientTank) {\n        //this.previewCtx.save()\n        //this.previewCtx.clearRect(0, 0, 155, 155)\n        //this.previewCtx.translate(155 / 2, 155 / 2);\n        //this.previewCtx.scale(5, 5);\n\n        // let drawer = new (tank.getDrawer())\n        // drawer.draw(this.previewCtx, null)\n\n        //this.previewCtx.restore()\n    }\n\n    applyStats(tank: typeof ClientTank) {\n        let stats = tank.getStats()\n        for(let [key, element] of this.statElements.entries()) {\n            const statValue = stats[key];\n\n            element.setValue(statValue)\n        }\n    }\n\n    previewTank(tank: typeof ClientTank) {\n        this.drawTank(tank)\n\n        this.previewTitle.text(tank.getName())\n        this.descriptionBlock.text(tank.getDescription())\n        this.applyStats(tank)\n    }\n}\n\nexport default TankPreviewContainer;",
    "/* @load-resource: './tank-select.scss' */\n\nimport Menu from 'src/client/ui/menu/menu';\n\nimport ClientTank from 'src/client/tanks/clienttank';\nimport SniperTank from 'src/client/tanks/models/sniper'; // Default selected tank\nimport TankSelectElement from './tankselectelement';\nimport Camera from 'src/client/camera';\nimport * as Box2D from 'src/library/box2d';\nimport RenderLoop from 'src/utils/loop/renderloop';\nimport TankModel from \"../../../../../../tanks/tankmodel\";\n\nclass TankSelectContainer extends Menu {\n\tpublic shadowLeft: JQuery;\n\tpublic shadowRight: JQuery;\n\tpublic container: JQuery;\n\tpublic leftShadowHidden: boolean;\n\tpublic rightShadowHidden: boolean;\n\tpublic selectedTank: typeof ClientTank;\n\tpublic previewCamera: Camera;\n\tpublic previewWorld: Box2D.World;\n\tpublic loop: RenderLoop;\n\tpublic containers: TankSelectElement[];\n\n    constructor() {\n        super();\n\n        this.element.addClass(\"tankselect\")\n\n        this.shadowLeft = $(\"<div>\").addClass(\"shadow left\");\n        this.shadowRight = $(\"<div>\").addClass(\"shadow right\");\n\n        this.container = $(\"<div>\").addClass(\"tank-select-container\")\n        this.element.append(this.container, this.shadowLeft, this.shadowRight)\n\n        this.leftShadowHidden = false\n        this.rightShadowHidden = false\n\n        this.selectedTank = null\n\n        this.previewCamera = new Camera({\n            baseScale: 2,\n            viewport: new Box2D.Vec2(70, 70),\n            defaultPosition: new Box2D.Vec2(0, 0),\n            inertial: true\n        })\n\n        this.previewCamera.tick(0)\n        this.previewWorld = new Box2D.World(new Box2D.Vec2())\n\n        this.loop = new RenderLoop()\n        this.loop.run = (dt: number) => this.renderCards(dt)\n\n        this.containers = []\n\n        this.setupList()\n        this.setupScroll()\n    }\n\n    setupList() {\n        let selectedTank = Number(localStorage.getItem(\"tanks-selectedtank\") || SniperTank.getModel().getId());\n        let tankExists = false\n\n        for(let tank of ClientTank.Types.values()) {\n            if(tank.getModel().getId() === selectedTank) {\n                tankExists = true\n                break\n            }\n        }\n\n        if(!tankExists) {\n            selectedTank = SniperTank.getModel().getId()\n        }\n\n        // Использую forEach здесь, чтобы создать область видимости.\n        // В for-in нельзя было бы юзать Tank в асинхронном коде.\n        // Пишу это, чтобы будущий я не злился на меня из прошлого,\n        // читая этот код. Знай, что переписать танчики стоило\n        // примерно месяц времени, там есть на что злиться. Можешь\n        // перечитать то что там понаписано, это звездец.\n        // Хотя с другой стороны, человек набирает опыт, и, возможно,\n        // в будущем я смогу применить более интересные практики для\n        // улучшения архитектуры и упрощения кода. Так что если ты\n        // взялся переписывать танчики снова, то флаг тебе в руки. Мне\n        // очень интересно что ты придумаешь через год-два. Мда. Из\n        // обычной пометки этот комментарий превратился в письмо в\n        // будущее. Классика.\n\n        let x = 20\n\n        ClientTank.Types.forEach((Tank) => {\n            let container = new TankSelectElement({\n                Tank: Tank,\n                previewWorld: this.previewWorld,\n                previewCamera: this.previewCamera\n            })\n            container.setPosition(x)\n            container.on(\"click\", () => this.selectTank(container))\n            this.container.append(container.element)\n            if(Tank.getModel().getId() === selectedTank) this.selectTank(container)\n            this.containers.push(container)\n\n            x += container.width\n        })\n\n        this.updateCards()\n    }\n\n    renderCards(dt: number) {\n        for(let container of this.containers) {\n            if(container.hidden) continue\n            container.draw(dt)\n        }\n    }\n\n    updateCards() {\n        let container = this.container.get(0)\n        let lowerBound = container.scrollLeft\n        let upperBound = lowerBound + container.clientWidth\n\n        for(let container of this.containers) {\n            let offset = container.position\n\n            if(upperBound < offset.x) {\n                if(!container.hidden) container.hide()\n                continue\n            }\n\n            let width = container.width\n\n            if(lowerBound > offset.x + width) {\n                if(!container.hidden) container.hide()\n                continue\n            }\n\n            if(container.hidden) container.show()\n        }\n    }\n\n    selectTank(container: TankSelectElement) {\n        const Tank = container.Tank\n\n        this.element.find(\".tank-preview-container.selected\").removeClass(\"selected\")\n        container.element.addClass(\"selected\")\n\n        localStorage.setItem(\"tanks-selectedtank\", String(Tank.getModel().getId()))\n        this.selectedTank = Tank\n        this.emit(\"select\", Tank)\n    }\n\n    setupScroll() {\n        this.container.on(\"scroll\", () => this.updateShadows())\n        this.updateShadows()\n        this.updateCards()\n    }\n\n    updateShadows() {\n        let container = this.container.get(0)\n        let leftEdge = container.scrollLeft === 0\n        let rightEdge = container.scrollLeft === container.scrollWidth - container.clientWidth\n\n        if(leftEdge && !this.leftShadowHidden) {\n            this.leftShadowHidden = true\n            this.shadowLeft.css(\"opacity\", \"0\")\n        }\n\n        if(rightEdge && !this.rightShadowHidden) {\n            this.rightShadowHidden = true\n            this.shadowRight.css(\"opacity\", \"0\")\n        }\n\n        if(!leftEdge && this.leftShadowHidden) {\n            this.leftShadowHidden = false\n            this.shadowLeft.css(\"opacity\", \"1\")\n        }\n\n        if(!rightEdge && this.rightShadowHidden) {\n            this.rightShadowHidden = false\n            this.shadowRight.css(\"opacity\", \"1\")\n        }\n    }\n}\n\nexport default TankSelectContainer;",
    "\nimport View from 'src/client/ui/view';\nimport CanvasFactory from 'src/client/utils/canvasfactory';\nimport Sprite from 'src/client/sprite';\nimport ClientTank from 'src/client/tanks/clienttank';\nimport * as Box2D from 'src/library/box2d'\nimport Camera from \"src/client/camera\";\n\nexport interface TankSelectElementViewConfig {\n    Tank: typeof ClientTank\n    previewWorld: Box2D.World\n    previewCamera: Camera\n}\n\nclass TankSelectElement extends View {\n\tpublic previewWorld: Box2D.World;\n\tpublic previewCamera: Camera;\n\tpublic width: number;\n\tpublic position: number;\n\tpublic canvas: HTMLCanvasElement;\n\tpublic ctx: WebGLRenderingContext;\n\tpublic title: JQuery;\n\tpublic hidden: boolean;\n    canvasSize = 70;\n\n    Tank: typeof ClientTank = null;\n    tank: ClientTank = null\n\n    constructor(options: TankSelectElementViewConfig) {\n        super();\n        this.Tank = options.Tank\n        this.previewWorld = options.previewWorld\n        this.previewCamera = options.previewCamera\n\n        this.element.addClass(\"tank-preview-container\")\n        this.width = 120\n        this.position = 0\n\n        let factory = CanvasFactory()\n        this.canvas = factory.canvas\n        this.canvas.className = \"preview-canvas\";\n\n        this.canvas.width = this.canvasSize * devicePixelRatio\n        this.canvas.height = this.canvasSize * devicePixelRatio\n\n        this.ctx = factory.ctx\n        this.ctx.viewport(0, 0, this.ctx.drawingBufferWidth, this.ctx.drawingBufferHeight)\n        Sprite.applyTexture(this.ctx)\n\n        this.title = $(\"<div>\").addClass(\"tank-preview-title\")\n        this.title.text(this.Tank.getName())\n\n        this.element.append(this.canvas)\n        this.element.append(this.title)\n\n        this.element.on(\"click\", () => this.emit(\"click\"))\n        this.hidden = true\n        this.element.hide()\n    }\n\n    setPosition(x: number) {\n        this.position = x\n        this.element.css(\"left\", x)\n    }\n\n    show() {\n        this.hidden = false\n        this.element.show()\n    }\n\n    hide() {\n        this.hidden = true\n        this.element.hide()\n    }\n\n    createTank() {\n        this.tank = new (this.Tank)()\n        this.tank.setupDrawer(this.ctx)\n        this.tank.model.initPhysics(this.previewWorld)\n        const fixtureList = this.tank.model.body.GetFixtureList()\n\n        fixtureList.m_filter.maskBits = 0x000\n        fixtureList.m_filter.categoryBits = 0x000\n    }\n\n    getTank() {\n        if(!this.tank) this.createTank()\n        return this.tank\n    }\n\n    draw(dt: number) {\n        this.ctx.clear(this.ctx.COLOR_BUFFER_BIT);\n        let tank = this.getTank()\n        tank.model.body.SetAngle(tank.model.body.GetAngle() + dt)\n        tank.drawer.draw(this.previewCamera, dt)\n    }\n}\n\nexport default TankSelectElement;",
    "\nimport EntityDrawer from './entitydrawer';\nimport Sprite from '../../sprite';\nimport Matrix3 from '../matrix3';\nimport ClientEntity from \"../../entity/cliententity\";\nimport RotationalMatrix from \"../../../utils/rotationalmatrix\";\nimport Program from \"../program\";\nimport TextureProgram from \"../programs/textureprogram\";\n\nclass BasicEntityDrawer extends EntityDrawer {\n\tpublic matrix: Matrix3;\n    static sprites: Sprite[];\n    static spriteNames: string[] = []\n\n    static getSprite(i: number): Sprite {\n        if(!this.sprites) {\n            Object.defineProperty(this,\"sprites\", {\n                enumerable: false,\n                value: []\n            })\n        }\n        if(!this.sprites[i]) {\n            this.sprites[i] = Sprite.named(this.spriteNames[i])\n        }\n        return this.sprites[i]\n    }\n\n    constructor(entity: ClientEntity) {\n        super(entity);\n\n        this.matrix = new Matrix3()\n    }\n\n    drawSprite(sprite: Sprite, width: number, height: number, program: TextureProgram) {\n        const x = this.entity.model.x\n        const y = this.entity.model.y\n        const w = width / 6\n        const h = height / 6\n\n        this.matrix.reset()\n        this.matrix.translate(x, y)\n        this.matrix.rotate(-this.entity.model.rotation)\n\n        program.setTransform(this.matrix)\n        program.drawSprite(sprite, -w/2, -h/2, w, h)\n        program.setTransform(null)\n    }\n}\n\nexport default BasicEntityDrawer;",
    "\nimport Sprite from '../../../sprite';\nimport GameMap from 'src/utils/map/gamemap';\nimport BlockState from \"../../../../utils/map/blockstate/blockstate\";\nimport TextureProgram from \"../../programs/textureprogram\";\n\nclass BlockDrawer {\n\tpublic id: number;\n\tpublic crackSprites: any;\n\n    loadSprites() {\n        this.crackSprites = [\n            Sprite.named(\"blocks/crack/1\"),\n            Sprite.named(\"blocks/crack/2\"),\n            Sprite.named(\"blocks/crack/3\"),\n            Sprite.named(\"blocks/crack/4\"),\n            Sprite.named(\"blocks/crack/5\")\n        ]\n    }\n\n\n    draw(program: TextureProgram, x: number, y: number, block: BlockState) {\n        if (!(block.constructor as typeof BlockState).typeId) return\n        let crack = Math.floor(block.damage * 6)\n        if(crack) {\n            program.drawSprite(this.crackSprites[crack - 1], x, y, GameMap.BLOCK_SIZE, GameMap.BLOCK_SIZE)\n        }\n    }\n}\n\nexport default BlockDrawer;",
    "\nimport BlockDrawer from './blockdrawer';\nimport Sprite, {SpriteRect} from '../../../sprite';\nimport GameMap from '../../../../utils/map/gamemap';\nimport TextureProgram from '../../programs/textureprogram';\nimport BlockState from 'src/utils/map/blockstate/blockstate';\n\nclass EdgedBlockDrawer extends BlockDrawer {\n    public variants: Sprite[][];\n    public spritePath: any;\n    public spriteSize: any;\n    public halfSpriteSize: any;\n\n    constructor() {\n        super();\n\n        this.variants = null\n\n        this.spritePath = \"blocks/concrete\"\n    }\n\n    loadSprites() {\n        super.loadSprites()\n        this.variants = []\n\n        if (Array.isArray(this.spritePath)) {\n            for (let path of this.spritePath) {\n                this.variants.push(this.loadVariant(path))\n            }\n        } else if (typeof this.spritePath == \"string\") {\n            this.variants.push(this.loadVariant(this.spritePath))\n        }\n\n        this.spriteSize = this.variants[0][0].rect.w\n        this.halfSpriteSize = this.spriteSize / 2\n    }\n\n    loadVariant(path: string): Sprite[] {\n        if (path.length && !path.endsWith(\"/\")) {\n            path += \"/\"\n        }\n\n        let allWalls = Sprite.named(path + \"all-walls\")\n        let allSides = Sprite.named(path + \"all-sides\")\n        let allCorners = Sprite.named(path + \"all-corners\")\n        let leftRightWalls = Sprite.named(path + \"left-right-walls\")\n        let topBottomWalls = Sprite.named(path + \"top-bottom-walls\")\n\n        return [\n            allWalls,\n            topBottomWalls,\n            leftRightWalls,\n            allCorners,\n            allSides\n        ]\n    }\n\n    drawSlice(program: TextureProgram, x: number, y: number, slice: SpriteRect, s: any, h: number, dx: any, dy: any) {\n        dx += slice.x\n        dy += slice.y\n        program.vertexBuffer.appendArray([\n            x, y, dx, dy,\n            x + h, y, dx + s, dy,\n            x, y + h, dx, dy + s,\n            x + h, y + h, dx + s, dy + s\n        ])\n\n        let base = program.textures * 4\n\n        program.indexBuffer.appendArray([\n            base, base + 1, base + 3, base, base + 2, base + 3\n        ])\n\n        program.textures++\n    }\n\n    draw(program: TextureProgram, x: number, y: number, block: BlockState) {\n        if(!this.variants) {\n            this.loadSprites()\n        }\n\n        let variant = this.variants[block.variant || 0]\n\n        x *= GameMap.BLOCK_SIZE\n        y *= GameMap.BLOCK_SIZE\n\n        const half = GameMap.BLOCK_SIZE / 2\n\n        if((block.facing & 0b111111111111) === 0b000000000000) {\n            this.drawSlice(program, x, y, variant[0].rect, this.spriteSize, GameMap.BLOCK_SIZE, 0, 0)\n        } else if((block.facing & 0b111111111111) === 0b100100100100) {\n            this.drawSlice(program, x, y, variant[4].rect, this.spriteSize, GameMap.BLOCK_SIZE, 0, 0)\n        } else {\n            const s = this.halfSpriteSize\n            const h = GameMap.BLOCK_SIZE / 2\n\n            this.drawSlice(program, x, y + half, variant[(block.facing >> 9) & 7].rect, s, h, 0, s)\n            this.drawSlice(program, x + half, y + half, variant[(block.facing >> 6) & 7].rect, s, h, s, s)\n            this.drawSlice(program, x + half, y, variant[(block.facing >> 3) & 7].rect, s, h, s, 0)\n            this.drawSlice(program, x, y, variant[block.facing & 7].rect, s, h, 0, 0)\n        }\n\n        super.draw(program, x, y, block)\n    }\n}\n\nexport default EdgedBlockDrawer;",
    "// @ts-ignore\nimport Models from './types/*'\nimport MapDrawer from 'src/client/graphics/drawers/mapdrawer';\n\nfor(let Model of Models) {\n    let drawer = new Model()\n    MapDrawer.registerBlockLoader(drawer.id, drawer)\n}",
    "\nimport EdgedBlockDrawer from '../edgedblockdrawer';\nimport MapDrawer from '../../mapdrawer';\n\nclass BrickBlockDrawer extends EdgedBlockDrawer {\n\n    id = 1\n\n    constructor() {\n        super();\n\n        this.spritePath = \"blocks/brick\"\n    }\n}\n\nexport default BrickBlockDrawer;",
    "\nimport EdgedBlockDrawer from '../edgedblockdrawer';\nimport MapDrawer from '../../mapdrawer';\n\nclass ConcreteBlockDrawer extends EdgedBlockDrawer {\n\n    id = 2\n\n    constructor() {\n        super();\n\n        this.spritePath = \"blocks/concrete\"\n    }\n}\n\nexport default ConcreteBlockDrawer;",
    "\nimport EdgedBlockDrawer from '../edgedblockdrawer';\nimport MapDrawer from '../../mapdrawer';\n\nclass StoneBlockDrawer extends EdgedBlockDrawer {\n\n    id = 5\n\n    constructor() {\n        super();\n\n        this.spritePath = \"blocks/stone\"\n    }\n}\n\nexport default StoneBlockDrawer;",
    "\nimport EdgedBlockDrawer from '../edgedblockdrawer';\nimport MapDrawer from '../../mapdrawer';\n\nclass TrophephngoldBlockDrawer extends EdgedBlockDrawer {\n\n    id = 4\n\n    constructor() {\n        super();\n\n        this.spritePath = \"blocks/trophephngold\"\n    }\n}\n\nexport default TrophephngoldBlockDrawer;",
    "\nimport EdgedBlockDrawer from '../edgedblockdrawer';\nimport MapDrawer from '../../mapdrawer';\n\nclass WoodBlockDrawer extends EdgedBlockDrawer {\n\n    id = 3\n\n    constructor() {\n        super();\n\n        this.spritePath = []\n\n        for (let i = 0; i <= 17; i++) {\n            this.spritePath.push(\"blocks/wood/variant-\" + i)\n        }\n    }\n}\n\nexport default WoodBlockDrawer;",
    "import TextureProgram from \"../programs/textureprogram\";\nimport ClientEntity from \"../../entity/cliententity\";\n\nclass EntityDrawer {\n\tpublic entity: any;\n\n    constructor(entity: ClientEntity) {\n        this.entity = entity\n    }\n\n    /**\n     * Draws the specified entity.\n     */\n    draw(program: TextureProgram) {}\n}\n\nexport default EntityDrawer;",
    "\nimport Color from 'src/utils/color';\nimport ExplodeParticle from '../../particles/explodeparticle';\nimport PostProcessingProgram from '../programs/postprocessingprogram';\nimport Particle from '../../particles/particle';\nimport Screen from \"../../screen\";\nimport Camera from \"../../camera\";\nimport ExplodeEffectPool from \"../../../effects/world/explode/explode-effect-pool\";\nimport ClientGameWorld from \"../../clientgameworld\";\n\nclass ExplodePoolDrawer {\n\tpublic screen: any;\n\tpublic camera: any;\n\tpublic program: any;\n\n    constructor(camera: Camera, screen: Screen) {\n        this.screen = screen\n        this.camera = camera\n\n        this.program = new PostProcessingProgram(\"explosion-drawer\", this.screen.ctx)\n    }\n\n    draw(pool: ExplodeEffectPool, dt: number) {\n        if(dt === 0) return\n\n        this.program.use()\n        this.program.prepare()\n\n        this.screen.ctx.activeTexture(this.screen.ctx.TEXTURE15)\n        this.screen.ctx.bindTexture(this.screen.ctx.TEXTURE_2D, this.screen.inactiveFramebufferTexture())\n\n        this.program.textureUniform.set1i(15)\n\n        for(let row of pool.walkers.values()) {\n            for(let walker of row.values()) {\n                let normalized = pool.normalize(walker.power)\n                //\n                // let decoration = new Particle({\n                //     width: 20,\n                //     height: 20,\n                //     x: walker.x,\n                //     y: walker.y,\n                //     dx: 0,\n                //     dy: 0,\n                //     color: new Color(255, 0, 0, pool.normalize(walker.power)),\n                //     scaling: 0,\n                //     lifetime: dt\n                // })\n                //\n                // pool.world.particles.push(decoration)\n                // continue\n\n                if(normalized < 0.3) continue\n\n                let dx = 0\n                let dy = 0\n\n                for (let i = 0; i < 3; i++) {\n\n                    let decoration = new ExplodeParticle({\n                        width: 2 + normalized * 8,\n                        height: 2 + normalized * 8,\n                        x: walker.x + (Math.random() - 0.5) * pool.gridSize * 2,\n                        y: walker.y + (Math.random() - 0.5) * pool.gridSize * 2,\n                        dx: dx,\n                        dy: dy,\n                        scaling: 1 + normalized / 2,\n                        lifetime: 0.6 - normalized / 2 + Math.random() * 0.3,\n                        startOpacity: normalized / 2,\n                        shifting: 1 - normalized * 2\n                    });\n\n                    (pool.world as ClientGameWorld).particles.push(decoration)\n                }\n            }\n        }\n\n        this.program.draw()\n    }\n}\n\nexport default ExplodePoolDrawer;",
    "\nimport Sprite from '../../sprite';\nimport TextureProgram from '../../graphics/programs/textureprogram';\nimport BlockDrawer from \"./block/blockdrawer\";\nimport {Constructor} from \"../../../serialization/binary/serializable\";\nimport Camera from \"../../camera\";\nimport BlockState from \"../../../utils/map/blockstate/blockstate\";\nimport GameMap from \"../../../utils/map/gamemap\";\n\nclass MapDrawer {\n\tpublic RegisteredDrawers: any;\n\tpublic camera: any;\n\tpublic ctx: any;\n\tpublic program: any;\n\tpublic oldBounds: any;\n\n    static registerBlockLoader(id: number, drawer: Constructor<BlockDrawer>) {\n        this.RegisteredDrawers.set(id, drawer)\n    }\n    static RegisteredDrawers = new Map()\n\n    constructor(camera: Camera, ctx: WebGLRenderingContext) {\n        this.camera = camera\n        this.ctx = ctx\n\n        this.program = new TextureProgram(\"map-drawer-program\", ctx, {\n            largeIndices: true\n        })\n        this.reset()\n    }\n\n    reset() {\n        this.oldBounds = {\n            x0: 0,\n            x1: 0,\n            y0: 0,\n            y1: 0\n        }\n    }\n\n    draw(map: GameMap) {\n        const scale = this.camera.scale;\n\n        let mipmaplevel =  Math.ceil(1 / scale) - 1\n        let oldmipmaplevel = Sprite.mipmaplevel\n        if(mipmaplevel >= Sprite.mipmapimages.length) {\n            mipmaplevel = Sprite.mipmapimages.length - 1\n        }\n        if(mipmaplevel !== oldmipmaplevel) {\n            Sprite.setMipMapLevel(mipmaplevel)\n        }\n\n        const visibleWidth = this.camera.viewport.x / scale;\n        const visibleHeight = this.camera.viewport.y / scale;\n\n        const cx = this.camera.position.x + this.camera.shaking.x\n        const cy = this.camera.position.y + this.camera.shaking.y\n\n        let x0 = cx - visibleWidth / 2, y0 = cy - visibleHeight / 2;\n        let x1 = x0 + visibleWidth, y1 = y0 + visibleHeight;\n\n        const maxWidth = map.width * 20;\n        const maxHeight = map.height * 20;\n\n        x0 = Math.floor(Math.max(0, x0) / 20)\n        y0 = Math.floor(Math.max(0, y0) / 20)\n        x1 = Math.ceil(Math.min(maxWidth, x1) / 20)\n        y1 = Math.ceil(Math.min(maxHeight, y1) / 20)\n\n        if(x0 !== this.oldBounds.x0 || x1 !== this.oldBounds.x1 ||\n            y0 !== this.oldBounds.y0 || y1 !== this.oldBounds.y1 || mipmaplevel !== oldmipmaplevel) {\n\n            this.oldBounds.x0 = x0\n            this.oldBounds.x1 = x1\n            this.oldBounds.y0 = y0\n            this.oldBounds.y1 = y1\n\n            this.program.prepare()\n            this.program.use(this.ctx)\n            Sprite.setGLMipMapLevel(this.ctx, this.program.textureUniform, mipmaplevel)\n            this.program.matrixUniform.setMatrix(this.camera.matrix.m)\n\n            for(let x = x0; x <= x1; x ++) {\n                for(let y = y0; y <= y1; y++) {\n                    const block = map.getBlock(x, y);\n\n                    if(block) this.drawBlock(block, x, y, map)\n                }\n            }\n\n            this.program.draw()\n        } else {\n            this.program.prepare(false)\n            this.program.use(this.ctx)\n            this.program.matrixUniform.setMatrix(this.camera.matrix.m)\n            Sprite.setGLMipMapLevel(this.ctx, this.program.textureUniform, mipmaplevel)\n            this.program.draw(false)\n        }\n\n        if(mipmaplevel !== oldmipmaplevel) {\n            Sprite.setMipMapLevel(oldmipmaplevel)\n        }\n    }\n\n    drawBlock(block: BlockState, x: number, y: number, map: GameMap) {\n        let id = (block.constructor as typeof BlockState).typeId\n\n        if(id === 0) return\n\n        let drawer = MapDrawer.RegisteredDrawers.get(id)\n\n        if(drawer) {\n            drawer.draw(this.program, x, y, block, map)\n        }\n    }\n}\n\nexport default MapDrawer;",
    "\nimport Color from '../../../utils/color';\nimport Smoke from '../../particles/smoke';\nimport ClientTank from \"../../tanks/clienttank\";\nimport Camera from \"../../camera\";\n\n class TankDrawer {\n\tpublic smokeTicks: any;\n\n    tank: ClientTank = null\n\n    ctx: WebGLRenderingContextBase = null\n\n    constructor(tank: ClientTank, ctx: WebGLRenderingContext) {\n\n        this.tank = tank\n        // TODO перенести эту шнягу куда-то ещё\n        this.smokeTicks = 0\n        this.ctx = ctx\n    }\n\n    drawSmoke(dt: number) {\n\n        if(!this.tank) return\n        if(!this.tank.model) return\n        if(this.tank.model.health >= 7) return\n\n        let intense = 1 - this.tank.model.health / 7\n\n        this.smokeTicks += intense * dt\n\n        if(this.smokeTicks > 0.2) {\n            this.smokeTicks -= 0.2\n            const gray = (1 - intense) * 255;\n\n            const color = new Color(gray, gray, gray);\n            const position = this.tank.model.body.GetPosition()\n\n            const smoke = new Smoke({\n                x: position.x,\n                y: position.y,\n                dx: (this.tank.model.matrix.sin * 5 + Math.random() - 0.5) * 15,\n                dy: (-this.tank.model.matrix.cos * 5 + Math.random() - 0.5) * 15,\n                width: 2,\n                height: 2,\n                scaling: 50,\n                color: color\n            });\n\n            this.tank.player.game.particles.push(smoke)\n        }\n    }\n\n    draw(camera: Camera, dt: number): void {}\n}\n\nexport default TankDrawer;",
    "\nimport Buffer, {BufferConfig, ByteArray} from '../../serialization/binary/buffer';\n\nexport interface GLBufferConfig<T> extends BufferConfig<T> {\n    gl?: WebGLRenderingContext\n    index?: number\n    drawMode?: GLenum\n    bufferType?: GLenum\n}\n\nclass GLBuffer<T extends ByteArray> extends Buffer<T> {\n\tpublic gl: any;\n\tpublic index: any;\n\tpublic drawMode: any;\n\tpublic bufferType: any;\n\tpublic glBuffer: any;\n\tpublic shouldUpdate: any;\n\n    constructor(config: GLBufferConfig<T>) {\n        super(config);\n\n        this.gl = config.gl\n        this.index = config.index\n        this.clazz = config.clazz\n        this.drawMode = config.drawMode || this.gl.STATIC_DRAW\n        this.bufferType = config.bufferType || this.gl.ARRAY_BUFFER\n        this.glBuffer = null\n        this.shouldUpdate = true\n    }\n\n    createBuffer() {\n        super.createBuffer()\n        this.glBuffer = this.gl.createBuffer()\n        return this\n    }\n\n    extend(minimumCapacity?: number) {\n        if(super.extend(minimumCapacity)) {\n            this.shouldUpdate = true\n            return true\n        }\n        return false\n    }\n\n    bind() {\n        this.gl.bindBuffer(this.bufferType, this.glBuffer);\n    }\n\n    updateData() {\n        this.bind()\n        if(this.shouldUpdate) {\n            this.shouldUpdate = false\n            this.gl.bufferData(this.bufferType, this.array, this.drawMode, this.array.length);\n        } else {\n            this.gl.bufferSubData(this.bufferType, 0, this.array)\n        }\n    }\n}\n\nexport default GLBuffer;",
    "\n\n/*\n * Copyright 2012, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various 2d math functions.\n *\n * @module webgl-2d-math\n */\nconst m3 = (function() {\n    \"use strict\";\n    function multiply(a: Float32Array, b: Float32Array) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[3 + 1];\n        const a12 = a[3 + 2];\n        const a20 = a[2 * 3];\n        const a21 = a[2 * 3 + 1];\n        const a22 = a[2 * 3 + 2];\n        const b00 = b[0];\n        const b01 = b[1];\n        const b02 = b[2];\n        const b10 = b[3];\n        const b11 = b[3 + 1];\n        const b12 = b[3 + 2];\n        const b20 = b[2 * 3];\n        const b21 = b[2 * 3 + 1];\n        const b22 = b[2 * 3 + 2];\n\n        return new Float32Array([\n            b00 * a00 + b01 * a10 + b02 * a20,\n            b00 * a01 + b01 * a11 + b02 * a21,\n            b00 * a02 + b01 * a12 + b02 * a22,\n            b10 * a00 + b11 * a10 + b12 * a20,\n            b10 * a01 + b11 * a11 + b12 * a21,\n            b10 * a02 + b11 * a12 + b12 * a22,\n            b20 * a00 + b21 * a10 + b22 * a20,\n            b20 * a01 + b21 * a11 + b22 * a21,\n            b20 * a02 + b21 * a12 + b22 * a22,\n        ]);\n    }\n\n\n    function identity() {\n        return new Float32Array([\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1,\n        ]);\n    }\n\n    function translation(tx: number, ty: number) {\n        return new Float32Array([\n            1, 0, 0,\n            0, 1, 0,\n            tx, ty, 1,\n        ]);\n    }\n\n    function translate(m: Float32Array, tx: number, ty: number) {\n        return multiply(m, translation(tx, ty));\n    }\n\n    function rotation(s: number, c: number) {\n        return new Float32Array([\n            c, -s, 0,\n            s, c, 0,\n            0, 0, 1,\n        ]);\n    }\n\n    function rotate(m: Float32Array, angle: number) {\n        return multiply(m, rotation(Math.sin(angle), Math.cos(angle)));\n    }\n\n    function turn(m: Float32Array, s: number, c: number) {\n        return multiply(m, rotation(s, c));\n    }\n\n    function scaling(sx: number, sy: number) {\n        return new Float32Array([\n            sx, 0, 0,\n            0, sy, 0,\n            0, 0, 1,\n        ]);\n    }\n\n    function scale(m: Float32Array, sx: number, sy: number) {\n        return multiply(m, scaling(sx, sy));\n    }\n\n    function inverse(m: Float32Array) {\n        const t00 = m[3 + 1] * m[2 * 3 + 2] - m[3 + 2] * m[2 * 3 + 1];\n        const t10 = m[1] * m[2 * 3 + 2] - m[2] * m[2 * 3 + 1];\n        const t20 = m[1] * m[3 + 2] - m[2] * m[3 + 1];\n        const d = 1.0 / (m[0] * t00 - m[3] * t10 + m[2 * 3] * t20);\n        return new Float32Array([\n            d * t00, -d * t10, d * t20,\n            -d * (m[3] * m[2 * 3 + 2] - m[3 + 2] * m[2 * 3]),\n            d * (m[0] * m[2 * 3 + 2] - m[2] * m[2 * 3]),\n            -d * (m[0] * m[3 + 2] - m[2] * m[3]),\n            d * (m[3] * m[2 * 3 + 1] - m[3 + 1] * m[2 * 3]),\n            -d * (m[0] * m[2 * 3 + 1] - m[1] * m[2 * 3]),\n            d * (m[0] * m[3 + 1] - m[1] * m[3]),\n        ]);\n    }\n\n    return {\n        identity: identity,\n        multiply: multiply,\n        rotation: rotation,\n        rotate: rotate,\n        scaling: scaling,\n        scale: scale,\n        translation: translation,\n        translate: translate,\n        inverse: inverse,\n        turn: turn\n    };\n\n})();\n\n\nclass Matrix3 {\n\tpublic m: Float32Array;\n\tpublic stack: Float32Array[];\n\n    constructor() {\n        this.m = new Float32Array([\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1,\n        ])\n        this.stack = []\n    }\n\n    save() {\n        this.stack.push(this.m.slice())\n    }\n\n    restore() {\n        this.m = this.stack.pop()\n    }\n\n    inverse() {\n        this.m = m3.inverse(this.m)\n    }\n\n    rotate(angle: number) {\n        this.m = m3.rotate(this.m, angle)\n    }\n\n    turn(sin: number, cos: number) {\n        this.m = m3.turn(this.m, sin, cos)\n    }\n\n    translate(x: number, y: number) {\n        this.m = m3.translate(this.m, x, y)\n    }\n\n    scale(x: number, y: number) {\n        this.m = m3.scale(this.m, x, y)\n    }\n\n    transformX(x: number, y: number) {\n        return (this.m[0] * x + this.m[3] * y + this.m[6])\n    }\n\n    transformY(x: number, y: number) {\n        return (this.m[1] * x + this.m[4] * y + this.m[7])\n    }\n\n    reset() {\n        this.m.set([\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1,\n        ])\n    }\n}\n\nexport default Matrix3;",
    "\nimport Uniform from './uniform';\nimport GLBuffer from './glbuffer';\nimport Shader from \"./shader\";\n\nclass Program {\n\tpublic name: string;\n\tpublic shaders: Shader[];\n\tpublic raw: WebGLProgram;\n\tpublic ctx: WebGLRenderingContext;\n\n    constructor(name: string, ...shaders: Shader[]) {\n        this.name = name\n        this.shaders = Array.prototype.slice.call(arguments, 1)\n        this.raw = null\n        this.ctx = null\n    }\n\n    link(gl: WebGLRenderingContext) {\n        this.raw = gl.createProgram()\n        for(let shader of this.shaders)\n            gl.attachShader(this.raw, shader.raw)\n        gl.linkProgram(this.raw)\n\n        if (!gl.getProgramParameter(this.raw, gl.LINK_STATUS)) {\n            throw new Error(\"Failed to link bodyProgram: \" + gl.getProgramInfoLog(this.raw));\n        }\n        this.ctx = gl\n        return this\n    }\n\n    createIndexBuffer() {\n        return new GLBuffer({\n            gl: this.ctx,\n            clazz: Uint16Array,\n            bufferType: this.ctx.ELEMENT_ARRAY_BUFFER,\n            drawMode: this.ctx.STATIC_DRAW\n        }).createBuffer()\n    }\n\n    getUniform(name: string) {\n        return new Uniform(this, name)\n    }\n\n    getAttribute(name: string) {\n        return this.ctx.getAttribLocation(this.raw, name);\n    }\n\n    use() {\n        this.ctx.useProgram(this.raw)\n    }\n\n    prepare() {\n\n    }\n}\n\nexport default Program;",
    "/* @load-resource: '../shaders/fragment/light-mask-texture-fragment.glsl' */\n/* @load-resource: '../shaders/vertex/light-mask-texture-vertex.glsl' */\n\nimport Program from '../program';\n\nimport Shader from '../shader';\nimport GLBuffer from '../glbuffer';\nimport Sprite from '../../sprite';\nimport Uniform from \"../uniform\";\n\nclass LightMaskTextureProgram extends Program {\n\tpublic vertexBuffer: GLBuffer<Float32Array>;\n\tpublic brightTexturePositionAttribute: number;\n\tpublic darkTexturePositionAttribute: number;\n\tpublic maskPositionAttrubute: number;\n\tpublic vertexPositionAttribute: number;\n\tpublic samplerUniform: Uniform;\n\tpublic textureSizeUniform: Uniform;\n\tpublic angleUniform: Uniform;\n\tpublic matrixUniform: Uniform;\n\tpublic vertexLength: number;\n\n    constructor(name: string, ctx: WebGLRenderingContext) {\n\n        let vertexShader = new Shader(\"light-mask-texture-vertex\", Shader.VERTEX).compile(ctx)\n        let fragmentShader = new Shader(\"light-mask-texture-fragment\", Shader.FRAGMENT).compile(ctx)\n        super(name, vertexShader, fragmentShader)\n\n        this.link(ctx)\n\n        this.ctx = ctx\n        this.vertexBuffer = new GLBuffer({\n            clazz: Float32Array,\n            gl: ctx,\n            drawMode: this.ctx.STATIC_DRAW\n        }).createBuffer()\n\n        this.brightTexturePositionAttribute = this.getAttribute(\"a_bright_texture_position\");\n        this.darkTexturePositionAttribute = this.getAttribute(\"a_dark_texture_position\");\n        this.maskPositionAttrubute = this.getAttribute(\"a_mask_position\");\n        this.vertexPositionAttribute = this.getAttribute(\"a_vertex_position\");\n\n        this.samplerUniform = this.getUniform(\"u_texture\")\n        this.textureSizeUniform = this.getUniform(\"u_texture_size\")\n        this.angleUniform = this.getUniform(\"u_angle\")\n        this.matrixUniform = this.getUniform(\"u_matrix\")\n        this.vertexLength = 8\n\n        this.use()\n        this.samplerUniform.set1i(0)\n        this.textureSizeUniform.set2f(Sprite.mipmapimages[0].width, Sprite.mipmapimages[0].height)\n    }\n\n    setLightAngle(angle: number) {\n        let normalizedAngle = (angle / Math.PI / 2) % 1\n        if(normalizedAngle < 0) normalizedAngle += 1\n\n        this.angleUniform.set1f(normalizedAngle)\n    }\n\n    drawMaskedSprite(bright: Sprite, dark: Sprite, mask: Sprite, x: number, y: number, width: number, height: number) {\n        const a = bright.rect;\n        const b = dark.rect;\n        const c = mask.rect;\n\n        this.vertexBuffer.appendArray([\n            x + width, y + height, a.x + a.w, a.y + a.h, b.x + b.w, b.y + c.h, c.x + c.w, c.y + c.h,\n            x + width, y, a.x + a.w, a.y, b.x + b.w, b.y, c.x + c.w, c.y,\n            x, y, a.x, a.y, b.x, b.y, c.x, c.y,\n            x + width, y + height, a.x + a.w, a.y + a.h, b.x + b.w, b.y + c.h, c.x + c.w, c.y + c.h,\n            x, y + height, a.x, a.y + a.h, b.x, b.y + b.h, c.x, c.y + c.h,\n            x, y, a.x, a.y, b.x, b.y, c.x, c.y\n        ])\n    }\n\n    prepare() {\n        Sprite.setSmoothing(this.ctx, false)\n        this.vertexBuffer.bind()\n        this.vertexBuffer.reset()\n\n        const bytes = this.vertexBuffer.clazz.BYTES_PER_ELEMENT\n        const stride = this.vertexLength * bytes\n\n        this.ctx.enableVertexAttribArray(this.brightTexturePositionAttribute)\n        this.ctx.enableVertexAttribArray(this.darkTexturePositionAttribute)\n        this.ctx.enableVertexAttribArray(this.maskPositionAttrubute)\n        this.ctx.enableVertexAttribArray(this.vertexPositionAttribute)\n\n        this.ctx.vertexAttribPointer(this.vertexPositionAttribute, 2, this.ctx.FLOAT, false, stride, 0);\n        this.ctx.vertexAttribPointer(this.brightTexturePositionAttribute, 2, this.ctx.FLOAT, false, stride, 8);\n        this.ctx.vertexAttribPointer(this.darkTexturePositionAttribute, 2, this.ctx.FLOAT, false, stride, 16);\n        this.ctx.vertexAttribPointer(this.maskPositionAttrubute, 2, this.ctx.FLOAT, false, stride, 24);\n    }\n\n    draw() {\n        this.vertexBuffer.updateData()\n        this.ctx.drawArrays(this.ctx.TRIANGLES, 0, this.vertexBuffer.pointer / this.vertexLength);\n\n        this.ctx.disableVertexAttribArray(this.brightTexturePositionAttribute)\n        this.ctx.disableVertexAttribArray(this.darkTexturePositionAttribute)\n        this.ctx.disableVertexAttribArray(this.maskPositionAttrubute)\n        this.ctx.disableVertexAttribArray(this.vertexPositionAttribute)\n\n        Sprite.setSmoothing(this.ctx, true)\n    }\n}\n\nexport default LightMaskTextureProgram;",
    "/* @load-resource: '../shaders/fragment/particle-fragment.glsl' */\n/* @load-resource: '../shaders/vertex/particle-vertex.glsl' */\n\nimport Program from '../program';\n\nimport Shader from '../shader';\nimport GLBuffer from '../glbuffer';\nimport Particle from \"../../particles/particle\";\n\nclass ParticleProgram extends Program {\n\tpublic vertexBuffer: GLBuffer<Float32Array>;\n\tpublic colorBuffer: GLBuffer<Uint32Array>;\n\tpublic indexBuffer: any;\n\tpublic vertexPositionAttribute: any;\n\tpublic colorAttribute: any;\n\tpublic matrixUniform: any;\n\tpublic vertexLength: any;\n\tpublic particles: any;\n\n    constructor(name: string, ctx: WebGLRenderingContext) {\n\n        let vertexShader = new Shader(\"particle-vertex\", Shader.VERTEX).compile(ctx)\n        let fragmentShader = new Shader(\"particle-fragment\", Shader.FRAGMENT).compile(ctx)\n        super(name, vertexShader, fragmentShader)\n\n        this.link(ctx)\n\n        this.ctx = ctx\n        this.vertexBuffer = new GLBuffer({\n            clazz: Float32Array,\n            gl: ctx,\n            drawMode: this.ctx.STATIC_DRAW\n        }).createBuffer()\n\n        this.colorBuffer = new GLBuffer<Uint32Array>({\n            gl: ctx,\n            clazz: Uint32Array,\n            drawMode: this.ctx.STATIC_DRAW\n        }).createBuffer()\n\n        this.indexBuffer = this.createIndexBuffer()\n\n        this.vertexPositionAttribute = this.getAttribute(\"a_vertex_position\");\n        this.colorAttribute = this.getAttribute(\"a_color\");\n        this.matrixUniform = this.getUniform(\"u_matrix\")\n        this.vertexLength = 2\n        this.particles = 0\n    }\n\n    prepare() {\n        this.indexBuffer.reset()\n\n        this.vertexBuffer.bind()\n        this.vertexBuffer.reset()\n\n        const bytes = this.vertexBuffer.clazz.BYTES_PER_ELEMENT\n        const stride = this.vertexLength * bytes\n\n        this.ctx.enableVertexAttribArray(this.vertexPositionAttribute);\n        this.ctx.vertexAttribPointer(this.vertexPositionAttribute, 2, this.ctx.FLOAT, false, stride, 0);\n\n        this.colorBuffer.bind()\n        this.colorBuffer.reset()\n\n        const colorBytes = this.colorBuffer.clazz.BYTES_PER_ELEMENT\n\n        this.ctx.enableVertexAttribArray(this.colorAttribute);\n        this.ctx.vertexAttribPointer(this.colorAttribute, 4, this.ctx.UNSIGNED_BYTE, true, colorBytes, 0);\n    }\n\n    drawParticle(particle: Particle) {\n\n        let alpha = particle.color.getAlpha()\n\n        if(alpha <= 0) {\n            return\n        }\n\n        const w = particle.width / 2\n        const h = particle.height / 2\n\n        const r = particle.color.getRed() & 0xff\n        const g = particle.color.getGreen() & 0xff\n        const b = particle.color.getRed() & 0xff\n        const a = (alpha * 255) & 0xff\n        const data = a << 24 | b << 16 | g << 8 | r\n\n        for(let i = 0; i < 4; i++) {\n            this.colorBuffer.push(data)\n        }\n\n        this.vertexBuffer.appendArray([\n            particle.x - w, particle.y - h,\n            particle.x - w, particle.y + h,\n            particle.x + w, particle.y - h,\n            particle.x + w, particle.y + h,\n        ])\n\n        const baseIndex = this.particles * 4\n\n        this.indexBuffer.appendArray([\n            baseIndex, baseIndex + 1, baseIndex + 3, baseIndex, baseIndex + 2, baseIndex + 3\n        ])\n\n        this.particles++\n    }\n\n    draw() {\n        //this.ctx.blendFunc(this.ctx.ONE, this.ctx.ONE_MINUS_SRC_COLOR)\n\n        this.indexBuffer.updateData()\n        this.vertexBuffer.updateData()\n        this.colorBuffer.updateData()\n\n        this.ctx.drawElements(this.ctx.TRIANGLES, this.indexBuffer.pointer, this.ctx.UNSIGNED_SHORT, 0);\n\n        this.ctx.disableVertexAttribArray(this.vertexPositionAttribute);\n        this.ctx.disableVertexAttribArray(this.colorAttribute);\n\n        this.particles = 0\n\n        //this.ctx.blendFuncSeparate(this.ctx.SRC_ALPHA, this.ctx.ONE_MINUS_SRC_ALPHA, this.ctx.ONE, this.ctx.ONE_MINUS_SRC_ALPHA);\n    }\n}\n\nexport default ParticleProgram;",
    "\n/* @load-resource: '../shaders/fragment/post-processing-fragment.glsl' */\n/* @load-resource: '../shaders/vertex/post-processing-vertex.glsl' */\n\nimport Program from '../program';\n\nimport Shader from '../shader';\nimport GLBuffer from '../glbuffer';\nimport Uniform from \"../uniform\";\n\nclass PostProcessingProgram extends Program {\n\tpublic vertexBuffer: GLBuffer<Float32Array>;\n\tpublic indexBuffer: GLBuffer<Uint8Array>;\n\tpublic vertexPositionAttribute: any;\n\tpublic textureUniform: Uniform;\n\tpublic widthUniform: Uniform;\n\tpublic heightUniform: Uniform;\n\tpublic vertexLength: number;\n\tpublic texturePositionAttribute: number;\n\tpublic textures: number;\n\n    constructor(name: string, ctx: WebGLRenderingContext) {\n        let vertexShader = new Shader(\"post-processing-vertex\", Shader.VERTEX).compile(ctx)\n        let fragmentShader = new Shader(\"post-processing-fragment\", Shader.FRAGMENT).compile(ctx)\n\n        super(name, vertexShader, fragmentShader)\n\n        this.link(ctx)\n\n        this.ctx = ctx\n\n        this.vertexBuffer = new GLBuffer({\n            clazz: Float32Array,\n            gl: this.ctx,\n            drawMode: this.ctx.STATIC_DRAW,\n            capacity: 8\n        }).createBuffer()\n\n        this.vertexBuffer.appendArray([\n            -1, -1,\n            -1, 1,\n            1, -1,\n            1, 1\n        ])\n\n        this.indexBuffer = new GLBuffer({\n            clazz: Uint8Array,\n            gl: this.ctx,\n            bufferType: this.ctx.ELEMENT_ARRAY_BUFFER,\n            drawMode: this.ctx.STATIC_DRAW,\n            capacity: 8\n        }).createBuffer()\n\n        this.indexBuffer.appendArray([\n            0, 1, 3, 0, 2, 3\n        ])\n\n        this.indexBuffer.updateData()\n        this.vertexBuffer.updateData()\n\n        this.vertexPositionAttribute = this.getAttribute(\"a_vertex_position\");\n        this.textureUniform = this.getUniform(\"u_texture\")\n        this.widthUniform = this.getUniform(\"u_screen_width\")\n        this.heightUniform = this.getUniform(\"u_screen_height\")\n        this.vertexLength = 2\n    }\n\n    draw() {\n        this.indexBuffer.bind()\n        this.vertexBuffer.bind()\n\n        const bytes = this.vertexBuffer.clazz.BYTES_PER_ELEMENT\n        const stride = this.vertexLength * bytes\n\n        this.widthUniform.set1f(this.ctx.canvas.width)\n        this.heightUniform.set1f(this.ctx.canvas.height)\n\n        this.ctx.enableVertexAttribArray(this.vertexPositionAttribute);\n        this.ctx.enableVertexAttribArray(this.texturePositionAttribute);\n\n        this.ctx.vertexAttribPointer(this.vertexPositionAttribute, 2, this.ctx.FLOAT, false, stride, 0);\n\n        this.ctx.drawElements(this.ctx.TRIANGLES, this.indexBuffer.pointer, this.ctx.UNSIGNED_BYTE, 0);\n\n        this.ctx.disableVertexAttribArray(this.vertexPositionAttribute);\n\n        this.textures = 0\n    }\n}\n\nexport default PostProcessingProgram;",
    "/* @load-resource: '../shaders/fragment/texture-fragment.glsl' */\n/* @load-resource: '../shaders/vertex/texture-vertex.glsl' */\n\nimport Program from '../program';\n\nimport Shader from '../shader';\nimport GLBuffer from '../glbuffer';\nimport Sprite from \"../../sprite\";\nimport Matrix3 from \"../matrix3\";\nimport {ByteArray} from \"../../../serialization/binary/buffer\";\nimport {Constructor} from \"../../../serialization/binary/serializable\";\nimport Uniform from \"../uniform\";\n\nexport interface TextureProgramConfig {\n    largeIndices: boolean\n}\n\nclass TextureProgram extends Program {\n\tpublic indexBufferType: number\n\tpublic vertexBuffer: GLBuffer<Float32Array>;\n\tpublic indexBuffer: GLBuffer<ByteArray>;\n\tpublic vertexPositionAttribute: number;\n\tpublic texturePositionAttribute: number;\n\tpublic textureUniform: Uniform;\n\tpublic matrixUniform: Uniform;\n\tpublic vertexLength: number;\n\tpublic textures: number;\n\tpublic transform: Matrix3;\n\n    constructor(name: string, ctx: WebGLRenderingContext, options?: TextureProgramConfig) {\n        options = Object.assign({\n            largeIndices: false\n        }, options)\n\n        let vertexShader = new Shader(\"texture-vertex\", Shader.VERTEX).compile(ctx)\n        let fragmentShader = new Shader(\"texture-fragment\", Shader.FRAGMENT).compile(ctx)\n        super(name, vertexShader, fragmentShader)\n\n        this.link(ctx)\n\n        if(options.largeIndices) {\n            let uintsForIndices = ctx.getExtension(\"OES_element_index_uint\");\n            if(!uintsForIndices) {\n                throw new Error(\"No WebGL Extension: OES_element_index_uint. Please, update the browser.\")\n            }\n        }\n\n        const arrayType = options.largeIndices ? Uint32Array : Uint16Array\n        this.indexBufferType = options.largeIndices ? ctx.UNSIGNED_INT : ctx.UNSIGNED_SHORT\n\n        this.ctx = ctx\n        this.vertexBuffer = new GLBuffer({\n            clazz: Float32Array,\n            gl: ctx,\n            drawMode: this.ctx.STATIC_DRAW,\n            capacity: options.largeIndices ? 16384 : 128 // Rare reallocation\n        }).createBuffer()\n\n        this.indexBuffer = new GLBuffer<ByteArray>({\n            gl: ctx,\n            clazz: arrayType,\n            bufferType: this.ctx.ELEMENT_ARRAY_BUFFER,\n            drawMode: this.ctx.STATIC_DRAW,\n            capacity: options.largeIndices ? 16384 : 128 // As well\n        }).createBuffer()\n\n        this.vertexPositionAttribute = this.getAttribute(\"a_vertex_position\");\n        this.texturePositionAttribute = this.getAttribute(\"a_texture_position\");\n        this.textureUniform = this.getUniform(\"u_texture\")\n\n        this.matrixUniform = this.getUniform(\"u_matrix\")\n        this.vertexLength = 4\n\n        this.textures = 0\n        this.transform = null\n    }\n\n    setTransform(transform: Matrix3) {\n        this.transform = transform\n    }\n\n    drawTexture(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number, sx: number, sy: number, sw: number, sh: number) {\n        if(this.transform) {\n            /*\n                Not using arrays/objects here because it will lead to\n                allocation/garbage collector overhead. These functions\n                will probably get inlined\n             */\n\n            let a, b\n\n            x1 = this.transform.transformX((a = x1), (b = y1))\n            y1 = this.transform.transformY(a, b)\n            x2 = this.transform.transformX((a = x2), (b = y2))\n            y2 = this.transform.transformY(a, b)\n            x3 = this.transform.transformX((a = x3), (b = y3))\n            y3 = this.transform.transformY(a, b)\n            x4 = this.transform.transformX((a = x4), (b = y4))\n            y4 = this.transform.transformY(a, b)\n        }\n\n        this.vertexBuffer.appendArray([\n            x1, y1, sx, sy,\n            x2, y2, sx + sw, sy,\n            x3, y3, sx, sy + sh,\n            x4, y4, sx + sw, sy + sh,\n        ])\n\n        const baseIndex = this.textures * 4\n\n        this.indexBuffer.appendArray([\n            baseIndex, baseIndex + 1, baseIndex + 3, baseIndex, baseIndex + 2, baseIndex + 3\n        ])\n\n        this.textures ++\n    }\n\n    tightenTexture(sprite: Sprite, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number) {\n        let r = sprite.rect\n        this.drawTexture(x1, y1, x2, y2, x3, y3, x4, y4, r.x, r.y, r.w, r.h)\n    }\n\n    drawSprite(sprite: Sprite, x: number, y: number, width: number, height: number, sx?: number, sy?: number, sw?: number, sh?: number) {\n        const r = sprite.rect;\n\n        if (sx === undefined) sx = r.x\n        else sx += r.x\n\n        if (sy === undefined) sy = r.y\n        else sy += r.y\n\n        if (sw === undefined) sw = r.w\n        if (sh === undefined) sh = r.h\n\n        this.drawTexture(\n            x, y,\n            x + width, y,\n            x, y + height,\n            x + width, y + height,\n            sx, sy, sw, sh\n        )\n    }\n\n    prepare(update: boolean = true) {\n        this.vertexBuffer.bind()\n\n        if(update === true) {\n            this.indexBuffer.reset()\n            this.vertexBuffer.reset()\n        }\n\n        const bytes = this.vertexBuffer.clazz.BYTES_PER_ELEMENT\n        const stride = this.vertexLength * bytes\n\n        this.ctx.enableVertexAttribArray(this.vertexPositionAttribute);\n        this.ctx.enableVertexAttribArray(this.texturePositionAttribute);\n\n        this.ctx.vertexAttribPointer(this.vertexPositionAttribute, 2, this.ctx.FLOAT, false, stride, 0);\n        this.ctx.vertexAttribPointer(this.texturePositionAttribute, 2, this.ctx.FLOAT, false, stride, 8);\n    }\n\n    draw(update: boolean = true) {\n        if(update === true) {\n            this.indexBuffer.updateData()\n            this.vertexBuffer.updateData()\n        } else {\n            this.indexBuffer.bind()\n        }\n\n        this.ctx.drawElements(this.ctx.TRIANGLES, this.indexBuffer.pointer, this.indexBufferType, 0);\n\n        this.ctx.disableVertexAttribArray(this.vertexPositionAttribute);\n        this.ctx.disableVertexAttribArray(this.texturePositionAttribute);\n\n        this.textures = 0\n    }\n}\n\nexport default TextureProgram;",
    "/* @load-resource: '../shaders/fragment/truck-fragment.glsl' */\n/* @load-resource: '../shaders/vertex/truck-vertex.glsl' */\n\nimport Program from '../program';\n\nimport Shader from '../shader';\nimport GLBuffer from '../glbuffer';\nimport Uniform from \"../uniform\";\nimport Sprite from \"../../sprite\";\n\nclass TruckProgram extends Program {\n\tpublic vertexBuffer: GLBuffer<Float32Array>;\n\tpublic indexBuffer: GLBuffer<Uint16Array>;\n\tpublic vertexPositionAttribute: number;\n\tpublic texturePositionAttribute: number;\n\tpublic truckDistanceAttribute: number;\n\tpublic truckTextureUniform: Uniform;\n\tpublic truckLengthUniform: Uniform;\n\tpublic matrixUniform: Uniform;\n\tpublic radiusUniform: Uniform;\n\tpublic textureUniform: Uniform;\n\tpublic vertexLength: number;\n\tpublic trucks: number;\n\n    constructor(name: string, ctx: WebGLRenderingContext) {\n\n        let vertexShader = new Shader(\"truck-vertex\", Shader.VERTEX).compile(ctx)\n        let fragmentShader = new Shader(\"truck-fragment\", Shader.FRAGMENT).compile(ctx)\n        super(name, vertexShader, fragmentShader)\n\n        this.link(ctx)\n\n        this.ctx = ctx\n        this.vertexBuffer = new GLBuffer({\n            clazz: Float32Array,\n            gl: ctx,\n            drawMode: this.ctx.DYNAMIC_DRAW\n        }).createBuffer()\n\n        this.indexBuffer = new GLBuffer<Uint16Array>({\n            gl: ctx,\n            clazz: Uint16Array,\n            bufferType: this.ctx.ELEMENT_ARRAY_BUFFER,\n            drawMode: this.ctx.DYNAMIC_DRAW\n        }).createBuffer()\n\n        this.vertexPositionAttribute = this.getAttribute(\"a_vertex_position\");\n        this.texturePositionAttribute = this.getAttribute(\"a_truck_position\");\n        this.truckDistanceAttribute = this.getAttribute(\"a_truck_distance\");\n\n        this.truckTextureUniform = this.getUniform(\"u_truck_texture\")\n        this.truckLengthUniform = this.getUniform(\"u_truck_length\")\n        this.matrixUniform = this.getUniform(\"u_matrix\")\n        this.radiusUniform = this.getUniform(\"u_radius\")\n        this.textureUniform = this.getUniform(\"u_texture\")\n\n        this.vertexLength = 5\n        this.trucks = 0\n    }\n\n    setTruckRadius(radius: number) {\n        this.radiusUniform.set1f(radius)\n    }\n\n    setTruckLength(length: number) {\n        this.truckLengthUniform.set1f(length)\n    }\n\n    setSprite(sprite: Sprite) {\n        this.truckTextureUniform.set4f(sprite.rect.x, sprite.rect.y, sprite.rect.w, sprite.rect.h)\n    }\n\n    drawTruck(x: number, y: number, width: number, height: number, scale: number, distance: number) {\n\n        distance = (distance % height) / height\n\n        this.vertexBuffer.appendArray([\n            x + width, y + height, 1, 1, distance,\n            x + width, y, 1, 0, distance,\n            x, y + height, 0, 1, distance,\n            x, y, 0, 0, distance\n        ])\n\n        const baseIndex = this.trucks * 4\n\n        this.indexBuffer.appendArray([\n            baseIndex, baseIndex + 1, baseIndex + 3, baseIndex, baseIndex + 2, baseIndex + 3\n        ])\n\n        this.trucks++\n    }\n\n    prepare() {\n        this.indexBuffer.reset()\n\n        this.vertexBuffer.bind()\n        this.vertexBuffer.reset()\n\n        const bytes = this.vertexBuffer.clazz.BYTES_PER_ELEMENT\n        const stride = this.vertexLength * bytes\n\n        this.ctx.enableVertexAttribArray(this.vertexPositionAttribute);\n        this.ctx.enableVertexAttribArray(this.texturePositionAttribute);\n        this.ctx.enableVertexAttribArray(this.truckDistanceAttribute);\n\n        this.ctx.vertexAttribPointer(this.vertexPositionAttribute, 2, this.ctx.FLOAT, false, stride, 0);\n        this.ctx.vertexAttribPointer(this.texturePositionAttribute, 2, this.ctx.FLOAT, false, stride, 8);\n        this.ctx.vertexAttribPointer(this.truckDistanceAttribute, 1, this.ctx.FLOAT, false, stride, 16);\n        this.ctx.disable(this.ctx.BLEND)\n    }\n\n    draw() {\n        this.ctx.enable(this.ctx.BLEND)\n        this.indexBuffer.updateData()\n        this.vertexBuffer.updateData()\n\n        this.ctx.drawElements(this.ctx.TRIANGLES, this.indexBuffer.pointer, this.ctx.UNSIGNED_SHORT, 0);\n\n        this.ctx.disableVertexAttribArray(this.vertexPositionAttribute);\n        this.ctx.disableVertexAttribArray(this.texturePositionAttribute);\n        this.ctx.disableVertexAttribArray(this.truckDistanceAttribute);\n\n        this.trucks = 0\n    }\n}\n\nexport default TruckProgram;",
    "\nconst shaders = require('./shaderloader') as { [key: string]: string }\n\nclass Shader {\n\tpublic name: string;\n\tpublic type: GLenum;\n\tpublic raw: WebGLShader;\n    static VERTEX = 0\n    static FRAGMENT = 1\n\n    constructor(name: string, type: number) {\n        this.name = name\n        this.type = type\n        this.raw = null\n    }\n\n    compile(gl: WebGLRenderingContext) {\n        this.raw = gl.createShader(this.type === Shader.VERTEX ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER)\n\n        if(!shaders[this.name]) {\n            throw new Error(\"No such shader: \" + this.name)\n        }\n\n        gl.shaderSource(this.raw, shaders[this.name]);\n        gl.compileShader(this.raw);\n\n        if (!gl.getShaderParameter(this.raw, gl.COMPILE_STATUS)) {\n            throw new Error(\"Failed to compile shader '\" + this.name + \"': \" + gl.getShaderInfoLog(this.raw));\n        }\n\n        return this\n    }\n}\n\nexport default Shader;",
    "\n/* #shader-loader-placeholder# */\n\nexport default {}",
    "import Program from \"./program\";\n\nclass Uniform {\n\tpublic program: Program;\n\tpublic name: string;\n\tpublic ctx: WebGLRenderingContext;\n\tpublic location: any;\n\n    constructor(program: Program, name: string) {\n        this.program = program\n        this.name = name\n        this.ctx = this.program.ctx\n        this.location = this.ctx.getUniformLocation(this.program.raw, name)\n\n        if(!this.location) {\n            console.warn(\"Could not find uniform named '\" + this.name + \"' in '\" + this.program.name + \"'\")\n        }\n    }\n\n    set1f(value: number) {\n        if(this.location)\n            this.ctx.uniform1f(this.location, value);\n    }\n\n    set2f(value1: number, value2: number) {\n        if (this.location)\n            this.ctx.uniform2f(this.location, value1, value2);\n    }\n\n    set3f(value1: number, value2: number, value3: number) {\n        if (this.location)\n            this.ctx.uniform3f(this.location, value1, value2, value3);\n    }\n\n    set4f(value1: number, value2: number, value3: number, value4: number) {\n        if (this.location)\n            this.ctx.uniform4f(this.location, value1, value2, value3, value4);\n    }\n\n    set1i(value: number) {\n        if (this.location)\n            this.ctx.uniform1i(this.location, value);\n    }\n\n    set2i(value1: number, value2: number) {\n        if (this.location)\n            this.ctx.uniform2i(this.location, value1, value2);\n    }\n\n    set3i(value1: number, value2: number, value3: number) {\n        if (this.location)\n            this.ctx.uniform3i(this.location, value1, value2, value3);\n    }\n\n    set4i(value1: number, value2: number, value3: number, value4: number) {\n        if (this.location)\n            this.ctx.uniform4i(this.location, value1, value2, value3, value4);\n    }\n\n    setMatrix(matrix: Float32Array) {\n        if (this.location) {\n            if (matrix.length === 4) {\n                this.ctx.uniformMatrix2fv(this.location, false, matrix)\n            } else if (matrix.length === 9) {\n                this.ctx.uniformMatrix3fv(this.location, false, matrix)\n            } else if (matrix.length === 16) {\n                this.ctx.uniformMatrix4fv(this.location, false, matrix)\n            }\n        }\n    }\n}\n\nexport default Uniform;",
    "\nimport AbstractClient from '../../networking/abstract-client';\n\nexport interface BrowserClientConfig {\n    ip: string\n}\n\nclass BrowserClient extends AbstractClient {\n\n    public ip: string\n    public socket: WebSocket\n\n    constructor(config: BrowserClientConfig) {\n        super()\n        this.ip = config.ip\n        this.socket = null\n    }\n\n    connectToServer() {\n        if(this.socket != null) throw new Error(\"Client object cannot be reused\")\n\n        this.socket = new WebSocket(this.ip);\n        this.socket.binaryType = \"arraybuffer\"\n\n        let self = this\n        this.socket.onopen = (event) => self.onOpen()\n        this.socket.onclose = (event) => self.onClose(event.code, event.reason)\n        this.socket.onerror = (event) => self.onError()\n        this.socket.onmessage = (event) => self.onMessage(event)\n    }\n\n    onMessage(event: MessageEvent) {\n        if(event.data instanceof ArrayBuffer) {\n            this.onData(event.data)\n        }\n    }\n\n    isConnecting() {\n        return this.socket.readyState === WebSocket.CONNECTING;\n    }\n\n    isOpen() {\n        return this.socket.readyState === WebSocket.OPEN;\n    }\n\n    writePacket(packet: ArrayBuffer) {\n        this.socket.send(packet)\n    }\n\n    onClose(code: number, reason: string) {\n        super.onClose(code, reason);\n        this.socket = null\n    }\n\n    onError(error?: Error) {\n        super.onError(error)\n        this.socket = null\n    }\n\n    disconnect() {\n        if(this.socket) {\n            this.socket.close()\n            this.socket = null\n        }\n    }\n}\n\nexport default BrowserClient;",
    "\nimport FireParticle from './fireparticle';\nimport {ParticleConfig} from \"./particle\";\n\nexport interface ExplodeParticleConfig extends ParticleConfig {\n    startOpacity: number\n    shifting: number\n}\n\nclass ExplodeParticle extends FireParticle {\n    createColors(config: ExplodeParticleConfig) {\n        let varying = 30\n        return [\n            [255 - Math.random() * varying, 255 - Math.random() * varying, Math.random() * varying, config.startOpacity],\n            [255 - Math.random() * varying, 255 - Math.random() * varying, Math.random() * varying, 0.2],\n            [255 - Math.random() * varying, 128 - Math.random() * varying, Math.random() * varying, 0.3],\n            [255 - Math.random() * varying, 128 - Math.random() * varying, Math.random() * varying, 0.2 * (1 + Math.min(0, config.shifting))],\n            [115 - Math.random() * varying, 115 - Math.random() * varying, 115 - Math.random() * varying, 0.2 * (1 + Math.min(0, config.shifting))],\n            [115 - Math.random() * varying, 115 - Math.random() * varying, 115 - Math.random() * varying, 0]\n        ]\n    }\n\n    static fireOnly =   [0.00, 0.10, 0.66, 1.00, 1.00, 1.00] // -1\n    static all =        [0.00, 0.10, 0.40, 0.60, 0.80, 1.00] // 0\n    static smokeOnly =  [0.00, 0.00, 0.00, 0.33, 0.66, 1.00] // 1\n\n    createTimings(config: ExplodeParticleConfig) {\n        let result = []\n\n        let t1, t2, f1, f2\n        if(config.shifting < 0) {\n            t1 = ExplodeParticle.fireOnly\n            t2 = ExplodeParticle.all\n            f2 = 1 + config.shifting\n        } else {\n            t1 = ExplodeParticle.all\n            t2 = ExplodeParticle.smokeOnly\n            f2 = config.shifting\n        }\n\n        f1 = 1 - f2\n\n        for(let i = 0; i < 6; i++) {\n            result[i] = t1[i] * f1 + t2[i] * f2\n        }\n\n        return result\n    }\n\n    constructor(config: ExplodeParticleConfig) {\n        super(config);\n    }\n}\n\nexport default ExplodeParticle;",
    "\nimport Particle, {ParticleConfig} from './particle';\n\nclass FireParticle extends Particle {\n\tpublic scaling: any;\n\tpublic colors: any;\n\tpublic times: any;\n\n    createColors(config: ParticleConfig) {\n        let varying = 30\n        return [\n            [255 - Math.random() * varying, 255 - Math.random() * varying, Math.random() * varying, 0],\n            [255 - Math.random() * varying, 255 - Math.random() * varying, Math.random() * varying, 0.4],\n            [255 - Math.random() * varying, 128 - Math.random() * varying, Math.random() * varying, 0.6],\n            [255 - Math.random() * varying, 128 - Math.random() * varying, Math.random() * varying, 0]\n        ]\n    }\n\n    createTimings(config: ParticleConfig) {\n        return [\n            0.0,\n            0.1,\n            0.6,\n            1.0\n        ]\n    }\n\n    constructor(config: ParticleConfig) {\n        super(config)\n        this.width = config.width || 4\n        this.height = config.height || 4\n        this.scaling = config.scaling || 0.01\n\n        this.colors = this.createColors(config)\n        this.times = this.createTimings(config)\n        this.tick(0)\n    }\n\n    tick(dt: number) {\n        super.tick(dt)\n        let fraction = this.lifespan / this.lifetime\n        let r, g, b, a, c1, c2\n        let colors = this.colors\n\n        for(let i = 0, l = colors.length; i < l; i++) {\n            if(fraction < this.times[i]) {\n                c2 = i\n                break\n            } else {\n                c1 = i\n            }\n        }\n\n        if(c2 === undefined) c2 = colors.length - 1\n        let f1 = (fraction - this.times[c1]) / (this.times[c2] - this.times[c1])\n        let f2 = 1 - f1\n\n        c1 = colors[c1]\n        c2 = colors[c2]\n\n        r = c1[0] * f2 + c2[0] * f1\n        g = c1[1] * f2 + c2[1] * f1\n        b = c1[2] * f2 + c2[2] * f1\n        a = c1[3] * f2 + c2[3] * f1\n\n        this.color.setRed(Math.round(r))\n        this.color.setGreen(Math.round(g))\n        this.color.setBlue(Math.round(b))\n        this.color.setAlpha(a)\n\n        this.width += this.scaling\n        this.height += this.scaling\n    }\n}\n\nexport default FireParticle;",
    "\nimport Color from '../../utils/color';\n\nexport interface ParticleConfig {\n    x: number\n    y: number\n    dx?: number\n    dy?: number\n    lifetime?: number\n    lifespan?: number\n    damping?: number\n    color?: Color\n    width?: number\n    height?: number\n    scaling?: number\n}\n\nclass Particle {\n\tpublic x: number;\n\tpublic y: number;\n\tpublic dx: number;\n\tpublic dy: number;\n\tpublic dead: boolean;\n\tpublic lifetime: number;\n\tpublic lifespan: number;\n\tpublic damping: number;\n\tpublic color: Color;\n\tpublic width: number;\n\tpublic height: number;\n\tpublic scaling: number;\n\n    constructor(config: ParticleConfig) {\n        this.x = config.x\n        this.y = config.y\n        this.dx = config.dx || 0\n        this.dy = config.dy || 0\n        this.dead = false\n        this.lifetime = config.lifetime || 0.4\n        this.lifespan = config.lifespan || 0\n        this.damping = config.damping || 0.99\n        this.color = config.color || new Color(0, 0, 0)\n        this.width = config.width || 0\n        this.height = config.height || 0\n        this.scaling = config.scaling || 0\n    }\n\n    tick(dt: number) {\n        this.dx *= this.damping\n        this.dy *= this.damping\n        this.x += this.dx * dt\n        this.y += this.dy * dt\n        this.lifespan += dt\n\n        this.width += this.scaling * dt\n        this.height += this.scaling * dt\n\n        if(this.lifespan > this.lifetime) {\n            this.dead = true\n        }\n    }\n}\n\nexport default Particle;",
    "\nimport Particle, {ParticleConfig} from './particle';\n\nclass Smoke extends Particle {\n    constructor(config: ParticleConfig) {\n        super(config)\n        this.color = config.color\n        this.width = config.width || 4\n        this.height = config.height || 4\n    }\n}\n\nexport default Smoke;",
    "\nimport Particle, {ParticleConfig} from './particle';\n\nclass Smoke extends Particle {\n\tpublic scaling: any;\n\n    constructor(config: ParticleConfig) {\n        super(config)\n        this.color = config.color\n        this.width = config.width || 4\n        this.height = config.height || 4\n        this.scaling = config.scaling === undefined ? 0.01 : config.scaling\n    }\n\n    tick(dt: number) {\n        super.tick(dt)\n\n        this.color.setAlpha(1 - this.lifespan / this.lifetime)\n\n    }\n}\n\nexport default Smoke;",
    "/* @load-resource: \"./loading-scene.scss\" */\n\nimport Scene, {SceneConfig} from '../scene';\n\nimport ParticleProgram from '../../graphics/programs/particleprogram';\nimport Camera from '../../camera';\nimport * as Box2D from '../../../library/box2d';\nimport Particle from '../../particles/particle';\nimport Color from '../../../utils/color';\nimport Progress from \"../../utils/progress\";\nimport phrases from \"./phrases\";\n\nexport interface LoadingSceneConfig extends SceneConfig {\n    progress: Progress\n}\n\nclass LoadingScene extends Scene {\n\tpublic time: number;\n\tpublic progress: Progress;\n\tpublic camera: Camera;\n\tpublic program: ParticleProgram;\n\tpublic decoration: Particle;\n\tpublic scaleBackground: Color;\n\tpublic scaleForeground: Color;\n\tpublic title: JQuery;\n\tpublic phrase: number;\n\tpublic interval: number\n\n    constructor(config: LoadingSceneConfig) {\n        super(config)\n        this.time = 0\n        this.progress = config.progress\n\n        this.camera = new Camera({\n            viewport: new Box2D.Vec2(this.screen.width, this.screen.height),\n            defaultPosition: new Box2D.Vec2(),\n            limit: false\n        })\n        this.camera.tick(0)\n        this.program = new ParticleProgram(\"loading-program\", this.screen.ctx)\n        this.decoration = new Particle({ x: 0, y: 0 })\n        this.scaleBackground = new Color(200, 200, 200);\n        this.scaleForeground = new Color(150, 240, 150);\n        this.title = $(\"<h1>\").addClass(\"loading-text\")\n\n        this.title.hide()\n        this.overlayContainer.append(this.title)\n        this.phrase = null\n        this.updatePhrase()\n    }\n\n    layout() {\n        super.layout();\n        this.camera.viewport.x = this.screen.width\n        this.camera.viewport.y = this.screen.height\n        this.camera.tick(0)\n    }\n\n    disappear() {\n        super.disappear()\n        clearInterval(this.interval)\n    }\n    appear() {\n        super.appear();\n        this.interval = setInterval(() => this.updatePhrase(), 2500) as any as number\n    }\n\n    updatePhrase() {\n        if (this.phrase == null) {\n            this.newPhrase()\n        } else {\n            this.title.fadeOut(600, () => this.newPhrase())\n        }\n    }\n\n    newPhrase() {\n        let newPhrase\n        do {\n            newPhrase = Math.floor(Math.random() * phrases.length)\n        } while(newPhrase === this.phrase)\n\n        this.title.text(phrases[newPhrase])\n        this.title.fadeIn(600)\n\n        this.phrase = newPhrase\n    }\n\n    draw(ctx: WebGLRenderingContext, dt: number) {\n        this.program.use()\n        this.program.prepare()\n\n        this.drawScaleBackground()\n        this.drawScaleForeground()\n\n        this.program.matrixUniform.setMatrix(this.camera.matrix.m)\n        this.program.draw()\n        this.time += dt\n    }\n\n    drawScaleBackground() {\n        this.decoration.x = 0\n        this.decoration.y = 0\n        this.decoration.width = 400\n        this.decoration.height = 20\n        this.decoration.color = this.scaleBackground\n        this.program.drawParticle(this.decoration)\n    }\n\n    drawScaleForeground() {\n        const fraction = this.progress.completeFraction()\n        this.decoration.x = -200 * (1 - fraction)\n        this.decoration.y = 0\n        this.decoration.width = 400 * fraction\n        this.decoration.height = 20\n        this.decoration.color = this.scaleForeground\n        this.program.drawParticle(this.decoration)\n    }\n}\n\nexport default LoadingScene;",
    "\nexport default [\n    \"Продуваем турбины...\",\n    \"Пылесосим поле боя...\",\n    \"Склеиваем бигбоя...\",\n    \"Накачиваем гусеницы...\",\n    \"Успокаиваем танкистов...\",\n    \"Зачитываем технику безопасности...\",\n    \"Полируем сиденья...\",\n    \"Вызываем пожарных...\",\n    \"Заправляем баки...\",\n    \"Отмываем следы...\",\n    \"Пьём чай...\",\n    \"Спорим о политике...\",\n    \"Преисполняемся в своем сознании...\",\n    \"Тянем время...\",\n    \"Фиксим баги...\"\n]",
    "import Screen from '../screen';\n\nexport interface SceneConfig {\n    screen: Screen\n}\n\nclass Scene {\n\n    screen: Screen = null\n    overlayContainer: JQuery = null\n\n    constructor(config: SceneConfig) {\n        this.overlayContainer = $(\"<div>\")\n        this.screen = config.screen\n    }\n\n    draw(ctx: WebGLRenderingContext, dt: number) {}\n\n    layout() {}\n    appear() {}\n    disappear() {}\n}\n\nexport default Scene;",
    "\nimport RenderLoop from '../utils/loop/renderloop';\nimport Loop from '../utils/loop/loop';\nimport CanvasFactory from './utils/canvasfactory';\nimport Scene from \"./scenes/scene\";\nimport \"./animation-frame-polyfill\"\nimport SoundEngine from \"./sound/soundengine\";\n\nexport interface ScreenConfig {\n    scale?: number\n    root: JQuery\n}\n\nclass Screen {\n\tpublic config: ScreenConfig;\n\tpublic root: JQuery;\n\tpublic width: number;\n\tpublic height: number;\n\tpublic framebufferTextures: WebGLTexture[];\n\tpublic framebuffers: WebGLFramebuffer[];\n\tpublic activeFramebufferIndex: number;\n\tpublic inactiveFramebufferIndex: number;\n\n    public canvas: HTMLCanvasElement = null\n    public ctx: WebGLRenderingContext = null\n    public loop: Loop = null\n    public scene: Scene\n    private resizeHandler: () => void;\n    soundEngine: SoundEngine;\n\n    constructor(config: ScreenConfig) {\n        config = Object.assign({\n            scale: window.devicePixelRatio\n        }, config)\n\n        this.config = config\n        this.root = config.root\n        this.initLoop()\n        this.scene = null\n        //this.soundEngine = new SoundEngine()\n\n        this.width = null\n        this.height = null\n\n        this.initCanvas()\n        this.initResizeHandling()\n        this.initialize()\n\n        this.loop.run = (dt: number) => this.tick(dt)\n    }\n\n    initLoop(): void {\n        this.loop = new RenderLoop()\n    }\n\n    initialize(): void {\n        for(let texture of this.framebufferTextures) {\n            let framebuffer = this.ctx.createFramebuffer()\n            this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, framebuffer)\n            this.ctx.framebufferTexture2D(this.ctx.FRAMEBUFFER, this.ctx.COLOR_ATTACHMENT0, this.ctx.TEXTURE_2D, texture, 0);\n            this.framebuffers.push(framebuffer)\n        }\n\n        this.setScreenFramebuffer()\n    }\n\n    setScene(scene: Scene): void {\n        if(this.scene) {\n            this.scene.disappear()\n            this.scene.overlayContainer.remove()\n        }\n\n        this.scene = scene\n        this.scene.appear()\n        this.root.append(this.scene.overlayContainer)\n    }\n\n    initCanvas(): void {\n        Object.assign(this, CanvasFactory())\n\n        this.root.append($(this.canvas))\n\n        this.framebufferTextures = []\n        this.framebuffers = []\n\n        for(let i = 0; i < 2; i++) {\n            let texture = this.ctx.createTexture()\n            this.framebufferTextures.push(texture)\n        }\n\n        this.activeFramebufferIndex = null\n        this.inactiveFramebufferIndex = null\n    }\n\n    activeFramebufferTexture(): WebGLTexture {\n        if(this.activeFramebufferIndex === null) return null\n        return this.framebufferTextures[this.activeFramebufferIndex]\n    }\n\n    inactiveFramebufferTexture(): WebGLTexture {\n        if(this.inactiveFramebufferIndex === null) return null\n        return this.framebufferTextures[this.inactiveFramebufferIndex]\n    }\n\n    swapFramebuffers(): void {\n        if(this.activeFramebufferIndex === null) {\n            this.activeFramebufferIndex = 0\n            this.inactiveFramebufferIndex = 1\n        }\n        let oldActive = this.activeFramebufferIndex\n        this.activeFramebufferIndex = this.inactiveFramebufferIndex\n        this.inactiveFramebufferIndex = oldActive\n        this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, this.framebuffers[this.activeFramebufferIndex])\n    }\n\n    clear(): void {\n        this.ctx.clear(this.ctx.COLOR_BUFFER_BIT);\n    }\n\n    setScreenFramebuffer(): void {\n        this.inactiveFramebufferIndex = this.activeFramebufferIndex\n        this.activeFramebufferIndex = null\n        this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, null)\n    }\n\n    initResizeHandling(): void {\n        const handler = () => {\n            this.width = this.root.width()\n            this.height = this.root.height()\n\n            this.canvas.width = this.width * this.config.scale\n            this.canvas.height = this.height * this.config.scale\n\n            this.canvas.style.width = this.width + \"px\"\n            this.canvas.style.height = this.height + \"px\"\n\n            this.ctx.viewport(0, 0, this.ctx.drawingBufferWidth, this.ctx.drawingBufferHeight);\n\n            for(let texture of this.framebufferTextures) {\n                this.ctx.bindTexture(this.ctx.TEXTURE_2D, texture)\n                this.ctx.texImage2D(this.ctx.TEXTURE_2D, 0, this.ctx.RGBA, this.ctx.drawingBufferWidth, this.ctx.drawingBufferHeight, 0, this.ctx.RGBA, this.ctx.UNSIGNED_BYTE, null);\n\n                this.ctx.texParameteri(this.ctx.TEXTURE_2D, this.ctx.TEXTURE_MIN_FILTER, this.ctx.LINEAR);\n                this.ctx.texParameteri(this.ctx.TEXTURE_2D, this.ctx.TEXTURE_WRAP_S, this.ctx.CLAMP_TO_EDGE);\n                this.ctx.texParameteri(this.ctx.TEXTURE_2D, this.ctx.TEXTURE_WRAP_T, this.ctx.CLAMP_TO_EDGE);\n            }\n\n            if(this.scene) this.scene.layout()\n        }\n        window.addEventListener(\"resize\", handler)\n        handler()\n        \n        this.resizeHandler = handler\n    }\n\n    tick(dt: number): void {\n        if(this.scene) {\n            this.scene.draw(this.ctx, dt)\n        }\n    }\n\n    destroy() {\n        window.removeEventListener(\"resize\", this.resizeHandler)\n    }\n}\n\nexport default Screen;",
    "\nclass FX {\n    static RELOAD_START = 0\n    static RELOAD_END = 1\n    static SHOOT_16MM = 2\n    static SHOOT_SHOTGUN = 3\n    static SHOOT_SNIPER = 4\n    static SHOOT_BOMBER = 5\n    static SHOOT_MORTAR = 6\n    static FLAMETHROWER_START = 7\n    static FLAMETHROWER_SOUND = 8\n    static TESLA_START = 9\n    static TESLA_SOUND = 10\n    static ENGINE_1 = 15\n    static ENGINE_2 = 16\n    static ENGINE_3 = 17\n    static ENGINE_4 = 18\n\n    static sounds = [\n        /*  0 */ \"assets/sound/reload_start.wav\",\n        /*  1 */ \"assets/sound/reload_end.wav\",\n        /*  2 */ \"assets/sound/16mm-shoot.wav\",\n        /*  3 */ \"assets/sound/shotgun-shoot.wav\",\n        /*  4 */ \"assets/sound/sniper-shoot.wav\",\n        /*  5 */ \"assets/sound/bomber-shoot.wav\",\n        /*  6 */ \"assets/sound/mortar-shoot.wav\",\n        /*  7 */ \"assets/sound/flamethrower-sound-start.wav\",\n        /*  8 */ \"assets/sound/flamethrower-sound.wav\",\n        /*  9 */ \"assets/sound/tesla-sound-start.wav\",\n        /* 10 */ \"assets/sound/tesla-sound.wav\",\n        /* 11 */ \"assets/sound/serverworldexplodeeffect-1.wav\",\n        /* 12 */ \"assets/sound/serverworldexplodeeffect-2.wav\",\n        /* 13 */ \"assets/sound/serverworldexplodeeffect-3.wav\",\n        /* 14 */ \"assets/sound/serverworldexplodeeffect-4.wav\",\n        /* 15 */ \"assets/sound/engine-1.wav\",\n        /* 16 */ \"assets/sound/engine-2.wav\",\n        /* 17 */ \"assets/sound/engine-3.wav\",\n        /* 18 */ \"assets/sound/engine-4.wav\"\n    ]\n\n    static randomExplosion() {\n        return Math.floor(Math.random() * 4) + 11\n    }\n}\n\nexport default FX;",
    "\nimport Progress from './utils/progress';\nimport Downloader from './utils/downloader';\nimport Uniform from \"./graphics/uniform\";\n\nexport interface SpriteDownloadOptions {\n    mipMapLevels: number\n}\n\nexport interface SpriteRect {\n    x: number\n    y: number\n    w: number\n    h: number\n\n    [key: string]: number | null\n}\n\nclass Sprite {\n\tpublic rects: SpriteRect[];\n\tpublic rect: SpriteRect;\n\tpublic mipmaplevel: number;\n\tpublic sprites: any;\n\tpublic mipmapimages: any;\n\tpublic complete: any;\n    static sprites = new Map()\n    static mipmapatlases: { [key: string]: SpriteRect }[] = []\n    static mipmapimages: HTMLImageElement[] = []\n    static mipmaplevel = 0\n\n    constructor(name: string) {\n\n        // Do not remove\n        // Destructuring the sprite\n        // description with square brackets to\n        // help prop name mangler.\n\n        this.rects = []\n        // this.topLeft = {}\n        // this.topRight = {}\n        // this.bottomLeft = {}\n        // this.bottomRight = {}\n\n        this.rect = null\n\n        for(let mipmap of Sprite.mipmapatlases) {\n            let source = mipmap[name]\n            this.rects.push({\n                x: source[\"x\"],\n                y: source[\"y\"],\n                w: source[\"w\"],\n                h: source[\"h\"]\n            })\n        }\n\n        this.updateRect(this.rects[0])\n    }\n\n    updateRect(rect: SpriteRect) {\n        this.rect = rect\n        // this.topLeft.x = rect.x\n        // this.topLeft.y = rect.y\n        // this.topRight.x = rect.x + rect.w\n        // this.topRight.y = rect.y\n        // this.bottomLeft.x = rect.x\n        // this.bottomLeft.y = rect.y + rect.h\n        // this.bottomRight.x = rect.x + rect.w\n        // this.bottomRight.y = rect.y + rect.h\n        // this.centerLeft.x =\n    }\n\n    static setMipMapLevel(level: number) {\n        this.mipmaplevel = level\n\n        for(let sprite of this.sprites.values()) {\n            sprite.updateRect(sprite.rects[level])\n        }\n    }\n\n    static setGLMipMapLevel(gl: WebGLRenderingContext, uniform: Uniform, level: number) {\n        uniform.set1i(level)\n    }\n\n    static applyTexture(gl: WebGLRenderingContext) {\n        let i = 0\n        for(let image of this.mipmapimages) {\n            gl.activeTexture((gl as any)[\"TEXTURE\" + i])\n            const texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            i++\n        }\n    }\n\n    static setSmoothing(gl: WebGLRenderingContext, enabled: boolean) {\n        if(enabled) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        } else {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        }\n    }\n\n    static download(progress: Progress, gl: WebGLRenderingContext, options?: SpriteDownloadOptions): Promise<void> {\n        options = Object.assign( {\n            mipMapLevels: 3\n        }, options)\n\n        return new Promise((resolve, reject) => {\n            let mipMapLevels = options.mipMapLevels\n            let succeededMipmapLevels = mipMapLevels\n            let awaiting = succeededMipmapLevels * 2\n\n            const assetReady = () => {\n                if(!--awaiting) {\n                    let root = Sprite.mipmapatlases[0]\n\n                    for(let key in root) {\n                        if(root.hasOwnProperty(key)) {\n                            Sprite.sprites.set(key, new Sprite(key))\n                        }\n                    }\n\n                    resolve()\n                }\n            }\n\n            for(let level = 0; level < mipMapLevels; level++) {\n                (function(level) {\n                    let textureProgress: Progress = null\n                    let atlasProgress: Progress = null\n\n                    if(progress) {\n                        textureProgress = new Progress()\n                        atlasProgress = new Progress()\n\n                        progress.addSubtask(textureProgress)\n                        progress.addSubtask(atlasProgress)\n                    }\n\n                    let levelPath = \"atlas-mipmap-level-\" + level;\n\n                    $(new Image()).attr({\n                        src: \"../assets/img/\" + levelPath + \".png\"\n                    }).on(\"load\", function(){\n                        if (this.complete) {\n                            if(succeededMipmapLevels > level) {\n                                Sprite.mipmapimages[level] = this\n                                textureProgress.complete()\n                            }\n\n                            assetReady()\n                        } else {\n                            if(level === 0) {\n                                reject(\"Failed to load first mipmap level\")\n                            } else {\n                                succeededMipmapLevels = Math.min(succeededMipmapLevels, level)\n                                assetReady()\n                            }\n                        }\n                    })\n\n                    $.ajax({\n                        url: \"../assets/img/\" + levelPath + \".json\",\n                        xhr: Downloader.getXHR(null, atlasProgress)\n                    }).done((data) => {\n                        if(succeededMipmapLevels > level) {\n                            Sprite.mipmapatlases[level] = data\n                        }\n                        assetReady()\n                    }).fail((response, status, error) => {\n                        if(level === 0) {\n                            reject(\"Failed to load first mipmap level atlas descriptor: \" + error)\n                        } else {\n                            succeededMipmapLevels = Math.min(succeededMipmapLevels, level)\n                            assetReady()\n                        }\n                    })\n                })(level)\n            }\n        })\n    }\n\n    /**\n     * @param name Name of the sprite, like \"tanks/sniper/body-bright\"\n     * @returns The sprite associated with this name\n     */\n\n    static named(name: string): Sprite {\n        return Sprite.sprites.get(name)\n    }\n}\n\nexport default Sprite;",
    "\nimport AbstractTank from '../../tanks/abstracttank';\nimport * as Box2D from '../../library/box2d';\nimport ClientGameWorld from \"../../../src/client/clientgameworld\";\nimport TankModel from 'src/tanks/tankmodel';\nimport ClientTankEffect from '../effects/tank/clienttankeffect';\nimport TankDrawer from '../graphics/drawers/tankdrawer';\nimport {TankStat} from \"./tank-stat\";\nimport Engine from \"../engine\";\nimport BinaryDecoder from \"../../serialization/binary/binarydecoder\";\nimport BinaryEncoder from \"../../serialization/binary/binaryencoder\";\n\nexport interface TankConfig {\n    model?: TankModel\n    world?: ClientGameWorld\n}\n\nclass ClientTank extends AbstractTank {\n\tpublic engine: Engine;\n\tpublic serverPosition: Box2D.Vec2;\n\tpublic health: any;\n\tpublic Types: any;\n\n    drawer: TankDrawer = null\n    effects = new Map<number, ClientTankEffect>()\n    world: ClientGameWorld\n\n    constructor(options?: TankConfig) {\n        super(options)\n        this.drawer = null\n        this.engine = null\n        this.serverPosition = null\n    }\n\n    setupModel(model: TankModel) {\n        if(model) {\n            let expected = (this.constructor as typeof ClientTank).getModel()\n            if (expected && model.constructor !== expected) {\n                throw new TypeError(\"Invalid model type\")\n            }\n            this.model = model\n        } else {\n            const tankClass = (this.constructor as typeof ClientTank).getModel()\n            this.model = new tankClass()\n        }\n    }\n\n    setupDrawer(ctx: WebGLRenderingContext): void {\n        let tankClass = (this.constructor as typeof ClientTank)\n        this.drawer = new (tankClass.getDrawer())(this, ctx)\n    }\n\n    destroy(): void {\n        this.model.destroy()\n    }\n\n    tick(dt: number) {\n        if(this.serverPosition) {\n            let pos = this.model.body.GetTransform().p\n            let target = this.serverPosition\n\n            let diffX = (target.x - pos.x)\n            let diffY = (target.y - pos.y)\n\n            if(diffX * diffX + diffY * diffY > 400) {\n                pos.x = target.x\n                pos.y = target.y\n            } else {\n                pos.x += (target.x - pos.x) / 20\n                pos.y += (target.y - pos.y) / 20\n            }\n            this.model.body.SetPosition(pos)\n        }\n        for(let effect of this.effects.values()) {\n            effect.tick(dt)\n        }\n        this.model.rotation = this.model.body.GetAngle()\n        this.model.behaviour.tick(dt)\n        this.model.behaviour.countDetails(dt)\n    }\n\n    decodeDynamicData(decoder: BinaryDecoder) {\n        let teleport = decoder.readUint8()\n        let x = decoder.readFloat32()\n        let y = decoder.readFloat32()\n        let rotation = decoder.readFloat32()\n        let vx = decoder.readFloat32()\n        let vy = decoder.readFloat32()\n        let angularVelocity = decoder.readFloat32()\n\n        let velocity = this.model.body.GetLinearVelocity()\n\n        velocity.Set(vx, vy)\n\n        this.model.body.SetLinearVelocity(velocity)\n        this.model.body.SetAngularVelocity(angularVelocity)\n\n        let position = this.model.body.GetPosition()\n\n        // When teleporting, player should instantly move\n        // from one point to another. Otherwise, this\n        // meant to be continious movement. Considering\n        // ping jitter and other imperfections of WWW,\n        // these positions should be interpolated to give\n        // a smooth move impression to player.\n\n        if (teleport) {\n            position.Set(x, y)\n        } else {\n            if (this.serverPosition)\n                this.serverPosition.Set(x, y)\n            else this.serverPosition = new Box2D.Vec2(x, y)\n        }\n        this.model.body.GetTransform().SetPositionAngle(position, rotation)\n\n        this.health = decoder.readFloat32()\n    }\n\n    encodeDynamicData(encoder: BinaryEncoder) {\n\n    }\n\n    static createDrawer() {}\n    static getDrawer(): typeof TankDrawer { return null }\n    static getName(): string { return null }\n    static getDescription(): string { return null }\n    static getStats(): TankStat { return null }\n\n    static fromModel(model: TankModel): ClientTank {\n        let clazz = ClientTank.Types.get((model.constructor as typeof TankModel).getId())\n\n        return new clazz({\n            model: model\n        })\n    }\n\n    static register(clazz: typeof ClientTank): void {\n        this.Types.set(clazz.getModel().getId(), clazz)\n    }\n}\n\nexport default ClientTank;",
    "\n// @ts-ignore\nimport Models from './models/*'\nimport ClientTank from \"../../../src/client/tanks/clienttank\";\n\nfor(let Model of Models) {\n    ClientTank.register(Model)\n}",
    "\nimport ClientTank, {TankConfig} from '../clienttank';\nimport TankDrawer from '../../graphics/drawers/tankdrawer';\nimport BigBoiTankModel from '../../../tanks/models/bigboi';\nimport Engine from '../../engine';\nimport FX from '../../sound/fx';\nimport Sprite from '../../sprite';\nimport LightMaskTextureProgram from '../../graphics/programs/lightmasktextureprogram';\nimport TruckProgram from '../../graphics/programs/truckprogram';\nimport {TankStat} from \"../tank-stat\";\nimport TankModel from \"../../../tanks/tankmodel\";\nimport Camera from \"../../camera\";\n\nclass Drawer extends TankDrawer {\n\tpublic size: number;\n\tpublic bodyBrightSprite: Sprite;\n\tpublic bodyDarkSprite: Sprite;\n\tpublic bodyLightMask: Sprite;\n\tpublic truckSprite: Sprite;\n\tpublic bodyProgram: LightMaskTextureProgram;\n\tpublic truckProgram: TruckProgram;\n\tpublic tank: BigboiTank\n\n    constructor(tank: BigboiTank, ctx: WebGLRenderingContext) {\n        super(tank, ctx);\n\n        // TODO: временно\n        this.tank = tank\n\n        this.size = 9\n        this.bodyBrightSprite = Sprite.named(\"tanks/golden-bigboi/body-bright\")\n        this.bodyDarkSprite = Sprite.named(\"tanks/golden-bigboi/body-dark\")\n        this.bodyLightMask = Sprite.named(\"tanks/golden-bigboi/mask\")\n\n        this.truckSprite = Sprite.named(\"tanks/bigboi/truck\")\n        this.bodyProgram = new LightMaskTextureProgram(\"tank-body-drawer\", ctx)\n        this.truckProgram = new TruckProgram(\"tank-truck-drawer\", ctx)\n\n        this.truckProgram.use()\n        this.truckProgram.setSprite(this.truckSprite)\n        this.truckProgram.setTruckLength(4.0)\n        this.truckProgram.setTruckRadius(0.25)\n    }\n\n    draw(camera: Camera, dt: number) {\n\n        let angle = this.tank.model.body.GetAngle()\n\n        camera.matrix.save()\n\n        this.drawSmoke(dt)\n\n        const scale = this.size;\n        const dscale = scale * 2;\n\n        let leftTrackDist = this.tank.model.behaviour.details.leftTrackDist\n        let rightTrackDist = this.tank.model.behaviour.details.rightTrackDist\n\n        let position = this.tank.model.body.GetPosition()\n\n        camera.matrix.translate(position.x, position.y)\n        camera.matrix.rotate(-angle)\n\n        this.truckProgram.use()\n        this.truckProgram.prepare()\n\n        this.truckProgram.drawTruck(scale/ 2, -scale, scale, dscale, 4, leftTrackDist)\n        this.truckProgram.drawTruck(-scale * 3 / 2, -scale, scale, dscale, 4, rightTrackDist)\n        this.truckProgram.matrixUniform.setMatrix(camera.matrix.m)\n\n        this.truckProgram.draw()\n\n        this.bodyProgram.prepare()\n        this.bodyProgram.use()\n\n        this.bodyProgram.drawMaskedSprite(this.bodyBrightSprite, this.bodyDarkSprite, this.bodyLightMask,\n            -scale, -scale * 0.92, scale * 2, scale * 1.98\n        )\n\n        this.bodyProgram.setLightAngle(-angle)\n        this.bodyProgram.matrixUniform.setMatrix(camera.matrix.m)\n        this.bodyProgram.draw()\n        camera.matrix.restore()\n    }\n}\n\nexport interface BigBoiTankConfig extends TankConfig {\n    model?: BigBoiTankModel\n}\n\nclass BigboiTank extends ClientTank {\n\n    public model: BigBoiTankModel\n\n    constructor(options?: BigBoiTankConfig) {\n        options = options || {}\n        super(options);\n\n        this.engine = new Engine({\n            sound: FX.ENGINE_1,\n            gears: [\n                {high: 1.9, gearing: 1},\n                {low: 1.4, gearing: 0.8},\n            ],\n            multiplier: 20,\n            pitch: 0.8\n        })\n\n        // TODO: Временное\n        this.setupModel(options.model)\n    }\n\n    static getDrawer(): typeof TankDrawer { return Drawer }\n    static getModel(): typeof TankModel { return BigBoiTankModel }\n    static getName(): string { return \"Big Boi\" }\n    static getDescription(): string {\n        return \"Это невероятное чудо техники создано, чтобы \" +\n            \"уничтожать всё на своём пути. Снаряд этого танка, \" +\n            \"имея огромную массу, способен резко изменить \" +\n            \"траекторию движения соперника или вовсе закрутить и обездвижить его.\"\n    }\n\n    static getStats(): TankStat {\n        return {\n            damage: 4,\n            health: 20,\n            speed: 46,\n            shootrate: 2,\n            reload: 7\n        }\n    }\n}\n\nexport default BigboiTank;",
    "\nimport ClientTank, {TankConfig} from '../clienttank';\nimport TankDrawer from 'src/client/graphics/drawers/tankdrawer';\nimport MonsterTankModel from 'src/tanks/models/monster';\nimport Engine from 'src/client/engine';\nimport FX from 'src/client/sound/fx';\nimport Sprite from 'src/client/sprite';\nimport LightMaskTextureProgram from 'src/client/graphics/programs/lightmasktextureprogram';\nimport TextureProgram from 'src/client/graphics/programs/textureprogram';\nimport Matrix3 from 'src/client/graphics/matrix3';\nimport {TankStat} from \"../tank-stat\";\nimport TankModel from 'src/tanks/tankmodel';\nimport Camera from \"../../camera\";\nimport BigBoiTankModel from \"../../../tanks/models/bigboi\";\n\nclass Drawer extends TankDrawer {\n\tpublic size: number;\n\tpublic bodyBrightSprite: Sprite;\n\tpublic bodyDarkSprite: Sprite;\n\tpublic bodyLightMask: Sprite;\n\tpublic wheelSpriteCount: number;\n\tpublic wheelSprites: Sprite[];\n\tpublic spriteMatrix: Matrix3;\n\tpublic bodyProgram: LightMaskTextureProgram;\n\tpublic wheelProgram: TextureProgram;\n\tpublic tank: MonsterTank;\n\n    constructor(tank: MonsterTank, ctx: WebGLRenderingContext) {\n        super(tank, ctx);\n\n        this.tank = tank\n\n        this.size = 9\n        this.bodyBrightSprite = Sprite.named(\"tanks/monster/body-bright\")\n        this.bodyDarkSprite = Sprite.named(\"tanks/monster/body-dark\")\n        this.bodyLightMask = Sprite.named(\"tanks/monster/mask\")\n\n        this.wheelSpriteCount = 10\n        this.wheelSprites = []\n        this.spriteMatrix = new Matrix3()\n\n        for(let i = 1; i <= this.wheelSpriteCount; i++) {\n            this.wheelSprites.push(Sprite.named(\"tanks/monster/wheel_\" + i))\n        }\n\n        this.bodyProgram = new LightMaskTextureProgram(\"tank-body-drawer\", ctx)\n        this.wheelProgram = new TextureProgram(\"tank-wheel-drawer\", ctx)\n\n        this.wheelProgram.setTransform(this.spriteMatrix)\n    }\n\n    draw(camera: Camera, dt: number) {\n\n        let angle = this.tank.model.body.GetAngle()\n\n        camera.matrix.save()\n\n        this.drawSmoke(dt)\n\n        const scale = this.size;\n\n        let leftWheelsDist = this.tank.model.behaviour.details.leftWheelsDist\n        let rightWheelsDist = this.tank.model.behaviour.details.rightWheelsDist\n        let leftWheelsAngle = this.tank.model.behaviour.details.leftWheelsAngle\n        let rightWheelsAngle = this.tank.model.behaviour.details.rightWheelsAngle\n\n        let position = this.tank.model.body.GetPosition()\n\n        camera.matrix.translate(position.x, position.y)\n        camera.matrix.rotate(-angle)\n\n        let l = Math.floor(leftWheelsDist % this.wheelSpriteCount);\n        let r = Math.floor(rightWheelsDist % this.wheelSpriteCount);\n\n        if(l < 0) l = this.wheelSpriteCount + l;\n        if(r < 0) r = this.wheelSpriteCount + r;\n\n        this.wheelProgram.use()\n        this.wheelProgram.prepare()\n\n        this.drawWheel(l, 0.82, -0.85, leftWheelsAngle)\n        this.drawWheel(l, 0.82, -0.18, 0)\n        this.drawWheel(l, 0.82, 0.48, -leftWheelsAngle)\n        this.drawWheel(r, -0.82, -0.85, rightWheelsAngle)\n        this.drawWheel(r, -0.82, -0.18, 0)\n        this.drawWheel(r, -0.82, 0.48, -rightWheelsAngle)\n\n        this.wheelProgram.matrixUniform.setMatrix(camera.matrix.m)\n        this.wheelProgram.draw()\n\n        this.bodyProgram.prepare()\n        this.bodyProgram.use()\n\n        this.bodyProgram.drawMaskedSprite(this.bodyBrightSprite, this.bodyDarkSprite, this.bodyLightMask,\n            -scale * 0.8, -scale * 1.15, scale * 1.6, scale * 2\n        )\n\n        this.bodyProgram.setLightAngle(-angle)\n        this.bodyProgram.matrixUniform.setMatrix(camera.matrix.m)\n        this.bodyProgram.draw()\n\n        camera.matrix.restore()\n    }\n\n    private drawWheel(sprite: number, x: number, y: number, angle: number): void {\n        let scale = this.size\n        this.spriteMatrix.save()\n        this.spriteMatrix.translate(scale * x, scale * y)\n        if(angle) this.spriteMatrix.rotate(angle)\n        this.wheelProgram.drawSprite(this.wheelSprites[sprite], -scale * 0.18, -scale * 0.3, scale * 0.36, scale * 0.6)\n        this.spriteMatrix.restore()\n    }\n}\n\nexport interface MonsterTankConfig extends TankConfig {\n    model?: BigBoiTankModel\n}\n\nclass MonsterTank extends ClientTank {\n\n    public model: MonsterTankModel\n\n    constructor(options?: MonsterTankConfig) {\n        options = options || {}\n        super(options);\n\n        this.engine = new Engine({\n            sound: FX.ENGINE_1,\n            gears: [\n                {high: 1.9, gearing: 1},\n                {low: 1.4, gearing: 0.8},\n            ],\n            multiplier: 20,\n            pitch: 0.8\n        })\n\n        this.setupModel(options.model)\n    }\n\n    static getDrawer(): typeof TankDrawer { return Drawer }\n    static getModel(): typeof TankModel { return MonsterTankModel }\n    static getName(): string { return \"Монстр\" }\n    static getDescription(): string {\n        return \"Рассекайте шоссе 66 на монстре! Скоростной пулемёт \" +\n            \"поможет сбить прицел соперника, а мощный двигатель и \" +\n            \"хорошая маневренность позволят оторваться почти от \" +\n            \"любых видов военной техники.\"\n    }\n\n    static getStats(): TankStat {\n        return {\n            damage: 4,\n            health: 20,\n            speed: 46,\n            shootrate: 2,\n            reload: 7\n        }\n    }\n}\n\nexport default MonsterTank;",
    "\n\nimport ClientTank, {TankConfig} from '../clienttank';\nimport TankDrawer from 'src/client/graphics/drawers/tankdrawer';\nimport NastyTankModel from 'src/tanks/models/nasty';\nimport Engine from 'src/client/engine';\nimport FX from 'src/client/sound/fx';\nimport Sprite from 'src/client/sprite';\nimport LightMaskTextureProgram from 'src/client/graphics/programs/lightmasktextureprogram';\nimport TextureProgram from 'src/client/graphics/programs/textureprogram';\nimport Matrix3 from 'src/client/graphics/matrix3';\nimport Camera from \"../../camera\";\nimport TankModel from \"../../../tanks/tankmodel\";\nimport {TankStat} from \"../tank-stat\";\nimport BigBoiTankModel from \"../../../tanks/models/bigboi\";\n\nclass Drawer extends TankDrawer {\n\tpublic size: number = 9;\n\tpublic bodyBrightSprite: Sprite;\n\tpublic bodyDarkSprite: Sprite;\n\tpublic bodyLightMask: Sprite;\n\tpublic ruderSprite: Sprite;\n\tpublic bodyProgram: LightMaskTextureProgram;\n\tpublic textureProgram: TextureProgram;\n\tpublic propellerSprites: Sprite[];\n\tpublic spriteMatrix: Matrix3;\n\tpublic ruderAngle: number;\n\tpublic tank: NastyTank;\n\n    constructor(tank: NastyTank, ctx: WebGLRenderingContext) {\n        super(tank, ctx);\n\n        this.tank = tank\n\n        this.size = 9\n        this.bodyBrightSprite = Sprite.named(\"tanks/nasty/body-bright\")\n        this.bodyDarkSprite = Sprite.named(\"tanks/nasty/body-dark\")\n        this.bodyLightMask = Sprite.named(\"tanks/nasty/mask\")\n\n        this.ruderSprite = Sprite.named(\"tanks/nasty/ruder\")\n        this.bodyProgram = new LightMaskTextureProgram(\"tank-body-drawer\", ctx)\n        this.textureProgram = new TextureProgram(\"tank-texture-drawer\", ctx)\n        this.propellerSprites = []\n        this.spriteMatrix = new Matrix3()\n\n        this.spriteMatrix.translate(0, -this.size * 1.22)\n        this.ruderAngle = Math.PI / 4\n\n        for(let i = 1; i <= 4; i++)\n            this.propellerSprites.push(Sprite.named(\"tanks/nasty/propeller_\" + i))\n    }\n\n    draw(camera: Camera, dt: number) {\n\n        let angle = this.tank.model.body.GetAngle()\n\n        camera.matrix.save()\n\n        this.drawSmoke(dt)\n\n        const scale = this.size;\n\n        let position = this.tank.model.body.GetPosition()\n\n        camera.matrix.translate(position.x, position.y)\n        camera.matrix.rotate(-angle)\n\n        let propellerDist = this.tank.model.behaviour.details.propellerDist\n        let ruderAngle = this.tank.model.controls.getSteer() * this.ruderAngle\n\n        const propeller = this.propellerSprites[Math.round(propellerDist) % 4]\n\n        this.bodyProgram.use()\n        this.bodyProgram.prepare()\n\n        this.bodyProgram.drawMaskedSprite(this.bodyBrightSprite, this.bodyDarkSprite, this.bodyLightMask, -scale * 0.96, -scale * 1.32, scale * 1.92, scale * 2.64)\n\n        this.bodyProgram.matrixUniform.setMatrix(camera.matrix.m)\n        this.bodyProgram.setLightAngle(-angle)\n        this.bodyProgram.draw()\n\n        this.textureProgram.use()\n        this.textureProgram.prepare()\n        this.textureProgram.drawSprite(propeller, -scale * 0.76, -scale * 1.06, scale * 0.6, scale * 0.08)\n        this.textureProgram.drawSprite(propeller, scale * 0.17, -scale * 1.06, scale * 0.6, scale * 0.08)\n        this.textureProgram.setTransform(this.spriteMatrix)\n\n        this.spriteMatrix.save()\n        this.spriteMatrix.translate(-scale * 0.46, 0)\n\n        let ruderSine = Math.sin(ruderAngle)\n        let ruderCos = Math.cos(ruderAngle)\n\n        this.spriteMatrix.turn(ruderSine, ruderCos)\n\n        this.textureProgram.drawSprite(this.ruderSprite, -scale * 0.06, -scale * 0.44, scale * 0.12, scale * 0.5)\n\n        this.spriteMatrix.restore()\n        this.spriteMatrix.save()\n        this.spriteMatrix.translate(scale * 0.46, 0)\n        this.spriteMatrix.turn(ruderSine, ruderCos)\n\n        this.textureProgram.drawSprite(this.ruderSprite, -scale * 0.06, -scale * 0.44, scale * 0.12, scale * 0.5)\n\n        this.spriteMatrix.restore()\n\n        this.textureProgram.setTransform(null)\n        this.textureProgram.matrixUniform.setMatrix(camera.matrix.m)\n        this.textureProgram.draw()\n\n        camera.matrix.restore()\n    }\n}\n\nexport interface NastyTankConfig extends TankConfig {\n    model?: NastyTankModel\n}\n\nclass NastyTank extends ClientTank {\n\n    public model: NastyTankModel\n\n    constructor(options: NastyTankConfig) {\n        options = options || {}\n        super(options);\n\n        this.engine = new Engine({\n            sound: FX.ENGINE_4,\n            multiplier: 20,\n            pitch: 0.9,\n            volume: 0.6\n        })\n\n        this.setupModel(options.model)\n    }\n\n    static getDrawer(): typeof TankDrawer { return Drawer }\n    static getModel(): typeof TankModel { return NastyTankModel }\n    static getName(): string { return \"Мерзила\" }\n    static getDescription(): string {\n        return \"Любите запах напалма на утрам? Тогда эта машина - \" +\n            \"идеальный выбор для вас! Сложный в управлении, но чудовищно \" +\n            \"разрушительный танк с огнемётом на воздушной подушке.\"\n    }\n\n    static getStats(): TankStat {\n        return {\n            damage: 4,\n            health: 15,\n            speed: 110,\n            shootrate: undefined,\n            reload: undefined\n        }\n    }\n}\n\nexport default NastyTank;",
    "\nimport ClientTank, {TankConfig} from '../clienttank';\nimport TankDrawer from '../../graphics/drawers/tankdrawer';\nimport SniperTankModel from '../../../tanks/models/sniper';\nimport Engine from '../../engine';\nimport FX from '../../sound/fx';\nimport Sprite from '../../sprite';\nimport LightMaskTextureProgram from '../../graphics/programs/lightmasktextureprogram';\nimport TruckProgram from '../../graphics/programs/truckprogram';\nimport Camera from \"../../camera\";\nimport BigBoiTankModel from \"../../../tanks/models/bigboi\";\n\nclass Drawer extends TankDrawer {\n\tpublic size: number;\n\tpublic bodyBrightSprite: Sprite;\n\tpublic bodyDarkSprite: Sprite;\n\tpublic bodyLightMask: Sprite;\n\tpublic truckSprite: Sprite;\n\tpublic bodyProgram: LightMaskTextureProgram;\n\tpublic truckProgram: TruckProgram;\n\tpublic tank: SniperTank\n\n    constructor(tank: SniperTank, ctx: WebGLRenderingContext) {\n        super(tank, ctx);\n\n        this.tank = tank\n\n        this.size = 9\n        this.bodyBrightSprite = Sprite.named(\"tanks/sniper/body-bright\")\n        this.bodyDarkSprite = Sprite.named(\"tanks/sniper/body-dark\")\n        this.bodyLightMask = Sprite.named(\"tanks/sniper/mask\")\n\n        this.truckSprite = Sprite.named(\"tanks/sniper/truck\")\n        this.bodyProgram = new LightMaskTextureProgram(\"tank-body-drawer\", ctx)\n        this.truckProgram = new TruckProgram(\"tank-truck-drawer\", ctx)\n\n        Sprite.setMipMapLevel(0)\n\n        this.truckProgram.use()\n        this.truckProgram.textureUniform.set1i(0)\n        this.truckProgram.setSprite(this.truckSprite)\n        this.truckProgram.setTruckLength(4.0)\n        this.truckProgram.setTruckRadius(0.25)\n    }\n\n    draw(camera: Camera, dt: number) {\n\n        let angle = this.tank.model.body.GetAngle()\n\n        camera.matrix.save()\n\n        Sprite.setMipMapLevel(0)\n\n        this.drawSmoke(dt)\n\n        const scale = this.size;\n        const dscale = scale * 2;\n        const segment = dscale / 4;\n\n        let leftTrackDist = this.tank.model.behaviour.details.leftTrackDist\n        let rightTrackDist = this.tank.model.behaviour.details.rightTrackDist\n        let position = this.tank.model.body.GetPosition()\n\n        camera.matrix.translate(position.x, position.y)\n        camera.matrix.rotate(-angle)\n\n        this.truckProgram.use()\n        this.truckProgram.prepare()\n\n        this.truckProgram.drawTruck(scale / 2, -scale * 0.8, segment, dscale, 4, leftTrackDist)\n        this.truckProgram.drawTruck(-scale, -scale * 0.8, segment, dscale, 4, rightTrackDist)\n        this.truckProgram.matrixUniform.setMatrix(camera.matrix.m)\n\n        this.truckProgram.draw()\n\n        this.bodyProgram.prepare()\n        this.bodyProgram.use()\n\n        this.bodyProgram.drawMaskedSprite(this.bodyBrightSprite, this.bodyDarkSprite, this.bodyLightMask,\n            -scale * 0.9,\n            -scale * 0.7,\n            scale * 1.8,\n            scale * 2\n        )\n\n        let normalizedAngle = (-angle / Math.PI / 2) % 1\n        if(normalizedAngle < 0) normalizedAngle += 1\n\n        this.bodyProgram.angleUniform.set1f(normalizedAngle)\n        this.bodyProgram.matrixUniform.setMatrix(camera.matrix.m)\n        this.bodyProgram.draw()\n        camera.matrix.restore()\n    }\n}\n\nexport interface SniperTankConfig extends TankConfig {\n    model?: SniperTankModel\n}\n\nclass SniperTank extends ClientTank {\n\n    public model: SniperTankModel\n\n    constructor(options?: SniperTankConfig) {\n        options = options || {}\n        super(options);\n\n        this.engine = new Engine({\n            sound: FX.ENGINE_2,\n            gears: [\n                {high: 1.9, gearing: 1},\n                {low: 1.4, high: 2, gearing: 0.8},\n                {low: 1.4, high: 2, gearing: 0.6},\n                {low: 1.4, high: 2, gearing: 0.4},\n            ],\n            multiplier: 20,\n            pitch: 1\n        })\n\n        this.setupModel(options.model)\n    }\n\n    static getDrawer() { return Drawer }\n    static getModel() { return SniperTankModel }\n    static getName() { return \"Снайпер\" }\n    static getDescription() {\n        return \"Классический танк. Довольно быстрый и маневренный. \" +\n                \"Его длинное дуло обеспечит точнейший выстрел. Отлично \" +\n                \"подходит для всех ситуаций на поле битвы\"\n    }\n\n    static getStats() {\n        return {\n            damage: 3,\n            health: 10,\n            speed: 90,\n            shootrate: 1,\n            reload: 5\n        }\n    }\n}\n\nexport default SniperTank;",
    "\n/* @load-resource: './dropdown.scss' */\n\nimport View from '../../view';\n\nclass Dropdown extends View {\n\tpublic collapsed: any;\n\tpublic prototypeCell: any;\n\n    constructor() {\n        super();\n\n        this.element.addClass(\"dropdown\")\n\n        this.element.on(\"click\", (e) => {\n            e.preventDefault()\n            e.stopPropagation()\n\n            this.toggle()\n            if(!this.collapsed) return\n\n            let wrapper = $(e.target).closest(\".select-wrapper\")\n            if(!wrapper.length) return\n\n            this.selectOption(wrapper)\n        })\n\n        $(document.body).click(() => this.collapse())\n\n        this.prototypeCell = $(\"<div>\").addClass(\"select-wrapper\")\n\n        this.collapsed = true\n    }\n\n    collapse() {\n        if(this.collapsed) return\n\n        this.collapsed = true\n        this.element.removeClass(\"expanded\")\n        this.emit(\"collapse\")\n    }\n\n    expand() {\n        if(!this.collapsed) return\n\n        this.collapsed = false\n        this.element.addClass(\"expanded\")\n        this.emit(\"expand\")\n    }\n\n    toggle() {\n        this.collapsed ? this.expand() : this.collapse()\n    }\n\n    setOptionCount(count: number) {\n        let children = this.getOptions()\n        if(children.length > count) {\n            while(children.length > count) {\n                children.last().remove()\n            }\n        } else if(children.length < count) {\n            while(children.length < count) {\n                this.element.append(this.prototypeCell.clone())\n                count--\n            }\n        }\n    }\n\n    getOptions(): JQuery {\n        return this.element.children()\n    }\n\n    selectOption(option: JQuery) {\n        this.element.find(\".select-wrapper.selected\").removeClass(\"selected\")\n        if(option) {\n            option.addClass(\"selected\")\n            this.element.addClass(\"selected\")\n        } else {\n            this.element.removeClass(\"selected\")\n        }\n        this.emit(\"select\", option)\n    }\n}\n\nexport default Dropdown;",
    "/* @load-resource: \"./menu.scss\" */\n\nimport View from '../view';\n\nclass Menu extends View {\n    constructor() {\n        super()\n        this.element.addClass(\"menu\")\n    }\n}\n\nexport default Menu;",
    "/* @load-resource: './event-container.scss' */\n\nimport View from '../../view';\n\nimport EventView from './eventview';\n\nclass EventContainer extends View {\n    constructor() {\n        super();\n\n        this.element.addClass(\"event-container\")\n    }\n\n    cascade() {\n        let top = 0;\n\n        let children = this.element.children(\".event-view\")\n\n        for(let i = children.length - 1; i >= 0; i--) {\n            let child = children[i]\n            top += child.clientHeight + 10;\n            child.style.top = \"-\" + top + \"px\";\n        }\n    }\n\n    createEvent(text: string) {\n        let view = new EventView(text)\n\n        this.element.append(view.element)\n        this.cascade()\n        view.appear()\n\n        setTimeout(() => {\n            view.disappear(() => {\n                view.element.remove()\n                this.cascade()\n            })\n        }, 2000)\n    }\n}\n\nexport default EventContainer;",
    "/* @load-resource: './event-view.scss' */\n\nimport View from '../../view';\n\nclass EventView extends View {\n    constructor(text: string) {\n        super();\n\n        this.element.addClass(\"menu event-view\")\n        this.element.css(\"opacity\", \"0\")\n        this.element.text(text)\n    }\n\n    appear() {\n        this.element.css(\"opacity\", \"1\")\n    }\n\n    disappear(callback: () => void) {\n        this.element.css(\"opacity\", \"0\")\n        setTimeout(callback, 500)\n    }\n}\n\nexport default EventView;",
    "/* @load-resource: './overlay.scss' */\n\nimport EventEmitter from '../../../utils/eventemitter';\n\nexport interface OverlayConfig {\n    root: JQuery\n}\n\nclass Overlay extends EventEmitter {\n\tpublic overlay: JQuery;\n\tpublic shown: boolean;\n\tpublic root: JQuery;\n\n    constructor(options: OverlayConfig) {\n        super()\n        this.overlay = $(\"<div>\").addClass(\"overlay\")\n        this.shown = false\n        this.root = options.root\n        this.root.append(this.overlay)\n        this.overlay.hide()\n    }\n\n    show() {\n        if(this.shown) { return }\n\n        this.shown = true\n        this.overlay.show()\n        this.overlay.fadeIn()\n        this.overlay[0].focus()\n    }\n\n    hide(callback?: () => void): void {\n        if(!this.shown) { return }\n\n        this.shown = false\n        this.overlay.fadeOut(700, callback)\n        this.overlay[0].blur()\n    }\n\n    static menu() {\n        return $(\"<div>\").addClass(\"menu\")\n    }\n}\n\nexport default Overlay;",
    "import EventEmitter from '../../utils/eventemitter';\n\nclass View extends EventEmitter {\n\n    /**\n     * View raw element\n     */\n    element: JQuery;\n\n    constructor() {\n        super()\n        this.element = $(\"<div>\")\n    }\n}\n\nexport default View;",
    "\nexport default function() {\n    const canvas = document.createElement(\"canvas\")\n\n    let ctx: WebGLRenderingContext\n    try {\n        ctx = canvas.getContext(\"webgl\")\n    } catch(ignored) {}\n    try {\n        ctx = canvas.getContext(\"experimental-webgl\") as WebGLRenderingContext\n    } catch(ignored) {}\n\n    if(!ctx) throw new Error(\"WebGL not supported\")\n\n    ctx.clearColor(1.0, 1.0, 1.0, 1.0);\n    ctx.blendFuncSeparate(ctx.SRC_ALPHA, ctx.ONE_MINUS_SRC_ALPHA, ctx.ONE, ctx.ONE_MINUS_SRC_ALPHA);\n    ctx.enable(ctx.BLEND);\n\n    return {\n        canvas: canvas,\n        ctx: ctx\n    }\n};",
    "\nimport Progress from './progress';\n\nclass Downloader {\n\tpublic index: any;\n\n    static getXHR(dataType: XMLHttpRequestResponseType, progress: Progress) {\n        let xhr = new XMLHttpRequest();\n        if(dataType)\n            xhr.responseType = dataType;\n        if(progress) {\n            xhr.addEventListener(\"progress\", function (evt) {\n                if (evt.lengthComputable) {\n                    progress.setCompleted(evt.loaded)\n                    progress.setTarget(evt.total)\n                }\n            }, false);\n        }\n        return () => xhr\n    }\n\n    static download(urls: string[], handler: ((response: ArrayBuffer, index: number) => void), dataType: any, progress: Progress) {\n        return new Promise((resolve, reject) => {\n            let requests: JQuery.jqXHR[] = []\n            let awaiting = urls.length\n            let cancelled = false\n            const assetReady = () => { if(!--awaiting) resolve() }\n\n            for(let [i, url] of urls.entries()) {\n                if(cancelled) break\n                let taskProgress = null\n                if(progress) {\n                    taskProgress = new Progress()\n                    progress.addSubtask(taskProgress)\n                }\n\n                let taskIndex: number = i\n\n                requests.push(\n                    $.ajax({\n                        url: url,\n                        xhr: this.getXHR(dataType, taskProgress)\n                    }).done(function(msg){\n                        if(cancelled) return\n                        handler(msg, taskIndex)\n                        assetReady()\n                    }).fail(function(response, _status, error){\n                        if(cancelled) return\n                        cancelled = true\n                        let reason = \"Failed to download \" + urls[taskIndex] + \": \" + error\n\n                        for(let request of requests) {\n                            if(request !== this) request.abort()\n                        }\n\n                        reject(reason)\n                    })\n                )\n            }\n        })\n    }\n}\n\nexport default Downloader;",
    "\nclass Progress {\n\tpublic completed: number = 0;\n\tpublic target: number = 0;\n\tpublic subtasks: Progress[] = [];\n\tpublic fraction: number = 0;\n\tpublic refresh: boolean = false;\n\tpublic parent?: Progress = null;\n\n    constructor() {\n\n    }\n\n    addSubtask(task: Progress) {\n        task.parent = this\n        this.subtasks.push(task)\n        this.setNeedsUpdate()\n    }\n\n    refreshFraction() {\n        this.refresh = false\n\n        let total = this.target + this.subtasks.length\n        if(total === 0) {\n            this.fraction = 0\n            return\n        }\n\n        if(this.target === 0) {\n            this.fraction = 0\n        } else {\n            this.fraction = this.completed\n        }\n\n        for(let task of this.subtasks) {\n            this.fraction += task.completeFraction()\n        }\n\n        this.fraction /= total\n    }\n\n    complete() {\n        if (this.target === 0) {\n            this.target = 1\n        }\n        this.completed = this.target\n        this.setNeedsUpdate()\n    }\n\n    setNeedsUpdate() {\n        if(this.parent) {\n            this.parent.setNeedsUpdate()\n        }\n\n        this.refresh = true\n    }\n\n    setTarget(target: number) {\n        this.target = target\n        this.setNeedsUpdate()\n    }\n\n    getTarget() {\n        return this.target\n    }\n\n    setCompleted(completed: number) {\n        this.completed = completed\n        this.setNeedsUpdate()\n    }\n\n    getCompleted() {\n        return this.completed\n    }\n\n    completeFraction() {\n        if(this.refresh) {\n            this.refreshFraction()\n        }\n        return this.fraction\n    }\n}\n\nexport default Progress;",
    "import EffectModel from \"./effect-model\";\nimport {Constructor} from \"../serialization/binary/serializable\";\n\nclass AbstractEffect {\n\tpublic dead: boolean;\n    public model: EffectModel\n    static Types = new Map<Constructor<EffectModel>, Constructor<AbstractEffect>>()\n\n    constructor(model: EffectModel) {\n        this.model = model\n        this.dead = false\n    }\n\n    tick(dt: number): void {}\n\n    static associate(modelClass: Constructor<EffectModel>, effectClass: Constructor<AbstractEffect>): void {\n        this.Types.set(modelClass, effectClass)\n    }\n\n    static fromModel(model: EffectModel): AbstractEffect | null {\n        let clazz = this.Types.get(model.constructor as typeof EffectModel)\n        if(!clazz) return null\n        return new clazz(model)\n    }\n\n    die(): void {\n        this.dead = true\n    }\n}\n\nexport default AbstractEffect;",
    "\nimport BinarySerializable, { Constructor } from '../serialization/binary/serializable';\nimport BinaryEncoder from \"../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../serialization/binary/binarydecoder\";\n\nexport interface EffectModelConfig {\n    id?: number\n}\n\n/**\n * This class represents an effect model, which contains all necessary\n * data to create an side-specific effect class instance\n */\nclass EffectModel implements BinarySerializable<typeof EffectModel> {\n\n    private static globalId = 0\n\n    // Unique effect identifier\n    id: number\n\n    constructor(options?: EffectModelConfig) {\n        if(options) {\n            if (options.id === undefined) {\n                this.id = EffectModel.globalId++\n            } else {\n                this.id = options.id\n            }\n        }\n    }\n\n    static groupName = 2\n    static typeName = 0\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeFloat64(this.id)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        return new this({\n            id : decoder.readFloat64()\n        }) as T\n    }\n}\n\nexport default EffectModel;",
    "\nimport TankEffectModel from './tankeffectmodel';\nimport {BinarySerializer} from \"../../serialization/binary/serializable\";\n\nclass TankFireEffectModel extends TankEffectModel {\n    static typeName = 1\n}\n\nexport default TankFireEffectModel;",
    "import TankEffectModel from \"./tankeffectmodel\";;\nimport {BinarySerializer} from 'src/serialization/binary/serializable';\n\nclass TankPelletsEffectModel extends TankEffectModel {\n    static typeName = 2\n}\n\nexport default TankPelletsEffectModel;",
    "\nimport EffectModel from '../effect-model';\nimport {Constructor} from \"../../serialization/binary/serializable\";\nimport BinaryDecoder from \"../../serialization/binary/binarydecoder\";\nimport BinaryEncoder from \"../../serialization/binary/binaryencoder\";\n\nclass TankEffectModel extends EffectModel {\n\n    // Identifier of the tank holding this effect\n    tankId: number\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let model = super.fromBinary(decoder) as TankEffectModel\n        model.tankId = decoder.readUint16()\n        return model as any as T\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        super.toBinary(encoder)\n        encoder.writeUint16(this.tankId)\n    }\n}\n\nexport default TankEffectModel;",
    "\nimport GameMap from 'src/utils/map/gamemap';\nimport * as Box2D from 'src/library/box2d';\nimport GameWorld from \"../../../gameworld\";\nimport BlockState from \"../../../utils/map/blockstate/blockstate\";\n\ninterface ExplodePoolWalker {\n    // Walker x position\n    x: number\n\n    // Walker y position\n    y: number\n\n    // Walker x velocity\n    vx: number\n\n    // Walker y velocity\n    vy: number\n\n    // Amount of velocity modifiers\n    vn: number\n\n    // Walker energy\n    power: number\n}\n\ntype ExplodePoolWalkerMap = Map<number, ExplodePoolWalkerList>\ntype ExplodePoolWalkerList = Map<number, ExplodePoolWalker>\n\nexport interface ExplodeEffectPoolConfig {\n    world: GameWorld\n}\n\nclass ExplodeEffectPool {\n\tpublic powerDamping: 0.01\n\tpublic stepsPerSecond: 30\n\tpublic stepsWaiting: 0\n\tpublic walkers: ExplodePoolWalkerMap = new Map<number, ExplodePoolWalkerList>();\n\tpublic gridSize = GameMap.BLOCK_SIZE;\n\tpublic offsetMap = [\n        1, 0,\n        1, -1,\n        0, -1,\n        -1, -1,\n        -1, 0,\n        -1, 1,\n        0, 1,\n        1, 1\n    ]\n\tpublic static roundOffsetMap = (() => {\n        let array = []\n        for(let i = 0; i < Math.PI * 2; i += Math.PI / 4) {\n            array.push(Math.sin(i))\n            array.push(Math.cos(i))\n        }\n        return array\n    })()\n\n    // Сколько единиц скорости соответствует\n    // одной единицы энергии ячейки\n\tpublic waveCoefficient = 1\n\n    // 10% энергии взрыва уходит на урон блокам\n    // Остальные 90% остаются у блока\n\tpublic damageEnergyFraction = 0.1;\n\n    // Какому усилию соответствует единица скорости волны\n    // Этот коэффициент настраивает силу отталкивания танков\n\tpublic forceCoefficient = 10000\n\n    // Практика показала, что если смотреть на два блока,\n    // а не на один, при рассчете разницы давления, то\n    // сила отталкивания будет рассчитана более правильно.\n\tpublic pressureDifferentialDistance = this.gridSize * 2\n\n    public world: GameWorld\n\n    constructor(config: ExplodeEffectPoolConfig) {\n        this.world = config.world\n    }\n\n    isBlock (x: number, y: number): boolean {\n        let block = this.world.map.getBlock(Math.floor(x / GameMap.BLOCK_SIZE), Math.floor(y / GameMap.BLOCK_SIZE))\n        if(!block) return true\n        return (block.constructor as typeof BlockState).isSolid\n    }\n\n    /**\n     * Adds a high pressure zone to this pool (aka an explosion source). If\n     * given coordinates does not match the pool grid, the pressure will\n     * be distributed among the nearest grid cells according to the\n     * linear interpolation algorhitm\n     */\n\n    start(x: number, y: number, power: number): void {\n\n        let shift = this.gridSize / 2\n\n        power /= 4\n\n        this.startParticular(x + shift, y + shift, power)\n        this.startParticular(x - shift, y + shift, power)\n        this.startParticular(x + shift, y - shift, power)\n        this.startParticular(x - shift, y - shift, power)\n    }\n\n    private interpolateWalkers(x: number, y: number, power: number): ExplodePoolWalker[] {\n        // Linear interpolation alghoritm\n\n        let gridX = x / this.gridSize\n        let gridY = y / this.gridSize\n\n        let dx = gridX - (gridX = Math.floor(gridX - 0.5) + 0.5)\n        let dy = gridY - (gridY = Math.floor(gridY - 0.5) + 0.5)\n\n        let walkers = [\n            this.walker(gridX * this.gridSize, gridY * this.gridSize, 0, 0, power * (1 - dx))\n        ]\n\n        if(dx > 0) walkers.push(this.walker((gridX + 1) * this.gridSize, gridY * this.gridSize, 0, 0, power * dx))\n\n        if(dy > 0) {\n            if(dx > 0) {\n                walkers.push(this.walker((gridX + 1) * this.gridSize, (gridY + 1) * this.gridSize, 0, 0, walkers[1].power * dy))\n                walkers[1].power *= (1 - dy)\n            }\n\n            walkers.push(this.walker(gridX * this.gridSize, (gridY + 1) * this.gridSize, 0, 0, walkers[0].power * dy))\n            walkers[0].power *= (1 - dy)\n        }\n\n        return walkers\n    }\n\n    private startParticular(x: number, y: number, power: number) {\n        let walkers = this.interpolateWalkers(x, y, power)\n\n        // Координаты ячейки, находящейся ближе всего к взрыву\n\n        const sourceX = (Math.floor(x / this.gridSize) + 0.5) * this.gridSize\n        const sourceY = (Math.floor(y / this.gridSize) + 0.5) * this.gridSize\n\n        // Надоело строить из себя англичанина. Короче, эта функция говорит,\n        // есть ли путь из точки, куда попал снаряд, в соседнюю точку. Сам по\n        // себе взрыв в начале распространяется по четырем ячейкам, так\n        // что здесь проверяются только углы (x, y), (x, y) А если\n        // что-то из этого равно исходным координатам, достаточно проверить только\n        // одну точку - ту, которая дается в параметр\n\n        const possible = (x: number, y: number) => {\n            if(this.isBlock(x, y)) return false\n            return x === sourceX || y === sourceY || !this.isBlock(sourceX, y) || !this.isBlock(x, sourceY)\n        }\n\n        let powerToSpread = 0\n        let succeededWalkers = []\n\n        // Здесь мы ищем, на какие точки давление может быть\n        // распределено, а на какие - нет.\n\n        for(let walker of walkers) {\n            if(possible(walker.x, walker.y)) {\n                succeededWalkers.push(walker)\n            } else {\n                powerToSpread += walker.power\n            }\n        }\n\n        powerToSpread /= succeededWalkers.length\n\n        for(let walker of succeededWalkers) {\n            let current = this.getWalker(this.walkers, walker.x, walker.y)\n            if(current) {\n                current.power += powerToSpread + walker.power\n            } else {\n                walker.power += powerToSpread\n                this.addWalker(this.walkers, walker)\n            }\n        }\n    }\n\n    // Не хочется оборачивать эту структуру в класс, потому что это замедлит код.\n\n    private walker(x: number, y: number, vx: number, vy: number, power: number): ExplodePoolWalker {\n        return {\n            x: x,\n            y: y,\n            vx: vx,\n            vy: vy,\n            vn: 1,\n            power: power\n        }\n    }\n\n    private getWalker(map: ExplodePoolWalkerMap, x: number, y: number): ExplodePoolWalker | null {\n        let row, column\n        if((row = map.get(x)) && (column = row.get(y))) {\n            return column\n        }\n        return null\n    }\n\n    public addWalker(map: ExplodePoolWalkerMap, walker: ExplodePoolWalker): void {\n        let row: ExplodePoolWalkerList\n        if((row = map.get(walker.x))) {\n            row.set(walker.y, walker)\n        } else {\n            map.set(walker.x, new Map([[walker.y, walker]]))\n        }\n    }\n\n    private step(dt: number): void {\n        this.tickEntities(dt)\n        this.stepsWaiting -= 1\n\n        let newWalkers = new Map()\n\n        const walk = (walker: ExplodePoolWalker, dx: number, dy: number, power: number) => {\n            let x = walker.x + dx * this.gridSize\n            let y = walker.y + dy * this.gridSize\n\n            if(this.isBlock(x, y)) return\n\n            let vx = walker.vx + dx * power * this.waveCoefficient\n            let vy = walker.vy + dy * power * this.waveCoefficient\n\n            let current = this.getWalker(newWalkers, x, y)\n            if(current) {\n                current.vx += vx\n                current.vy += vy\n                current.vn++\n                current.power += power\n            } else {\n                this.addWalker(newWalkers, this.walker(x, y, vx, vy, power))\n            }\n        }\n\n        let sibling = new Array(8)\n\n        for(let columns of this.walkers.values()) {\n            for(let walker of columns.values()) {\n\n                let x = walker.x\n                let y = walker.y\n                let total = 1\n\n                for (let j = 0, i = 0; j < 8; j++) {\n                    let dx = this.offsetMap[i++]\n                    let dy = this.offsetMap[i++]\n                    if (this.isBlock(x + dx * this.gridSize, y + dy * this.gridSize)) {\n                        sibling[j] = -this.damageEnergyFraction\n\n                        // Reflection algorithm\n                        // Sibling element is negative meaning block is being damaged\n\n                        if(dx && !dy && (dx > 0) === (walker.vx > 0)) walker.vx = -walker.vx\n                        if(!dx && dy && (dy > 0) === (walker.vy > 0)) walker.vy = -walker.vy\n                    } else sibling[j] = 1\n                }\n\n                for (let j = 0, i = 0; j < 8; j++) {\n                    let dx = this.offsetMap[i++]\n                    let dy = this.offsetMap[i++]\n                    if(j % 2 === 1) continue\n                    let power = ((dx * walker.vx) + (dy * walker.vy))\n                    if(sibling[j] < 0) power /= this.waveCoefficient\n                    power += 1\n\n                    if(power > 0) {\n                        sibling[j] *= power\n                    } else {\n                        sibling[j] = 0\n                    }\n                }\n\n                for (let j = 1; j <= 7; j += 2) {\n                    sibling[j] *= Math.max(0, sibling[j - 1]) + Math.max(0, sibling[(j + 1) % 8])\n                }\n\n                for (let j = 0; j < 8; j++) {\n                    total += Math.abs(sibling[j])\n                }\n\n                walker.power = (walker.power - this.powerDamping) / total\n                walker.vx /= total\n                walker.vy /= total\n\n                if (walker.power <= 0) continue\n\n                walk(walker, 0, 0, walker.power)\n\n                for (let j = 0, i = 0; j < 8; j++) {\n                    let dx = this.offsetMap[i++]\n                    let dy = this.offsetMap[i++]\n                    if(sibling[j] > 0) {\n                        walk(walker, dx, dy, walker.power * sibling[j])\n                    } else if(sibling[j] < 0) {\n                        this.damageBlock(walker.x + dx * this.gridSize, walker.y + dy * this.gridSize, -sibling[j] * walker.power)\n                    }\n                }\n            }\n        }\n\n        for(let columns of this.walkers.values()) {\n            for(let walker of columns.values()) {\n                walker.vx /= walker.vn\n                walker.vy /= walker.vn\n                walker.vn = 1\n            }\n        }\n\n        this.walkers = newWalkers\n    }\n\n    private damageBlock(x: number, y: number, damage: number): void {}\n\n    private mapPower(walkers: ExplodePoolWalkerMap, x: number, y: number): number {\n        const relX = (x / this.gridSize - 0.5)\n        const relY = (y / this.gridSize - 0.5)\n\n        const fromX = (Math.floor(relX) + 0.5) * this.gridSize\n        const fromY = (Math.floor(relY) + 0.5) * this.gridSize\n        const toX = (Math.ceil(relX) + 0.5) * this.gridSize\n        const toY = (Math.ceil(relY) + 0.5) * this.gridSize\n\n        let resultPower = 0\n\n        for(let gridX = fromX; gridX <= toX; gridX += this.gridSize) {\n            let row = this.walkers.get(gridX)\n            if(!row) continue\n            for(let gridY = fromY; gridY <= toY; gridY += this.gridSize) {\n                let walker = row.get(gridY)\n                if(!walker) continue\n\n                let dx = 1 - Math.abs(gridX - x) / this.gridSize\n                let dy = 1 - Math.abs(gridY - y) / this.gridSize\n\n                let fraction = dx * dy\n\n                resultPower += walker.power * fraction\n            }\n        }\n\n        return resultPower\n    }\n\n    private tickEntities(dt: number): void {\n\n        let gridDifference = this.gridSize / GameMap.BLOCK_SIZE\n\n        for(let player of this.world.players.values()) {\n            let tank = player.tank\n            if(!tank) continue\n            let position = tank.model.body.GetPosition()\n\n            const x = position.x\n            const y = position.y\n\n            const sourceWalkerPower = this.mapPower(this.walkers, x, y)\n\n            let resultVx = 0\n            let resultVy = 0\n            let maxPowerDifference = 0\n\n            // Checking nearby walkers\n\n            for(let i = 0; i < ExplodeEffectPool.roundOffsetMap.length;) {\n                let dx = ExplodeEffectPool.roundOffsetMap[i++]\n                let dy = ExplodeEffectPool.roundOffsetMap[i++]\n                let skip = false\n                let gridX\n                let gridY\n\n                for(let distance = this.gridSize; distance <= this.pressureDifferentialDistance; distance += GameMap.BLOCK_SIZE) {\n                    gridX = x + dx * distance\n                    gridY = y + dy * distance\n\n                    if (this.isBlock(gridX, gridY)) {\n                        skip = true\n                        continue\n                    }\n                }\n\n                if(skip) continue\n\n                let power = this.mapPower(this.walkers, gridX, gridY)\n                let powerDifference = sourceWalkerPower - power\n\n                if (powerDifference > maxPowerDifference)\n                    maxPowerDifference = powerDifference\n\n                resultVx += dx * powerDifference\n                resultVy += dy * powerDifference\n            }\n\n            let length = Math.sqrt(resultVx ** 2 + resultVy ** 2)\n            if(length == 0) return\n\n            resultVx /= length\n            resultVy /= length\n\n            maxPowerDifference *= this.forceCoefficient\n            resultVx *= maxPowerDifference\n            resultVy *= maxPowerDifference\n\n            tank.model.body.ApplyLinearImpulse(new Box2D.Vec2(\n                resultVx,\n                resultVy\n            ), position)\n        }\n    }\n\n    public normalize(x: number): number {\n        return (1 - 1 / (Math.abs(x) + 1)) * Math.sign(x)\n    }\n\n    tick(dt: number): void {\n        if(this.walkers.size === 0) return\n\n        this.stepsWaiting += this.stepsPerSecond * dt\n\n        while(this.stepsWaiting > 1) this.step(1 / this.stepsPerSecond)\n    }\n}\n\nexport default ExplodeEffectPool;",
    "\nimport WorldEffectModel, {WorldEffectModelConfig} from '../world-effect-model';\nimport {Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\n\nexport interface WorldExplodeEffectModelConfig extends WorldEffectModelConfig {\n    x: number\n    y: number\n    power: number\n}\n\nclass WorldExplodeEffectModel extends WorldEffectModel {\n    static typeName = 2\n\n    /**\n     * Explode power\n     */\n    power = 4\n\n    /**\n     * @param {Object} options\n     * @param {number} options.x\n     * @param {number} options.y\n     * @param {number} [options.power]\n     */\n    constructor(options: WorldExplodeEffectModelConfig) {\n        super(options)\n\n        if(options.power) this.power = options.power\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        super.toBinary(encoder)\n        encoder.writeFloat32(this.power)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let effect = super.fromBinary(decoder) as WorldExplodeEffectModel\n        effect.power = decoder.readFloat32()\n        return effect as any as T\n    }\n}\n\nexport default WorldExplodeEffectModel;",
    "\nimport EffectModel, { EffectModelConfig } from '../effect-model';\nimport BinaryDecoder from \"../../serialization/binary/binarydecoder\";\nimport { Constructor } from 'src/serialization/binary/serializable';\nimport BinaryEncoder from 'src/serialization/binary/binaryencoder';\n\nexport interface WorldEffectModelConfig extends EffectModelConfig {\n    x: number\n    y: number\n}\n\nclass WorldEffectModel extends EffectModel {\n\n    x: number\n    y: number\n\n    /**\n     * @param {Object} options\n     * @param {number} options.x\n     * @param {number} options.y\n     */\n    constructor(options: WorldEffectModelConfig) {\n        super(options)\n        this.x = options.x\n        this.y = options.y\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        super.toBinary(encoder)\n        encoder.writeFloat32(this.x)\n        encoder.writeFloat32(this.y)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let model: WorldEffectModel = super.fromBinary(decoder) as WorldEffectModel\n\n        model.x = decoder.readFloat32()\n        model.y = decoder.readFloat32()\n\n        return model as any as T\n    }\n}\n\nexport default WorldEffectModel;",
    "\nimport EntityModel from './entitymodel';\nimport GameWorld from 'src/gameworld';\n\nclass AbstractEntity {\n    public model: EntityModel = null\n    public game: GameWorld\n\n    constructor(model: EntityModel) {\n        this.model = model\n        model.entity = this\n    }\n\n    tick(dt: number) {\n        this.model.tick(dt)\n    }\n}\n\nexport default AbstractEntity;",
    "\nimport EntityModel from '../entitymodel';\nimport GameWorld from \"../../gameworld\";\n\nclass BulletModel extends EntityModel {\n\n    public affectWalls: any;\n    public lifetime: any;\n    public type: any;\n    public speed: any;\n    public shooter: any;\n\n    constructor(game: GameWorld) {\n        super(game)\n    }\n}\n\nexport default BulletModel;",
    "\nimport BulletModel from '../bulletmodel';\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\nclass BulletModel16mm extends BulletModel {\n    static typeName = 4\n}\n\nBinarySerializer.register(BulletModel16mm)\n\nexport default BulletModel16mm;",
    "import BulletModel from '../bulletmodel';\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\nclass BulletModel42mm extends BulletModel {\n\tstatic typeName = 0\n}\n\nBinarySerializer.register(BulletModel42mm)\n\nexport default BulletModel42mm;",
    "import Map from '../../../utils/map/gamemap';\nimport BulletModel from '../bulletmodel';\nimport GameWorld from \"../../../gameworld\";\nimport GameMap from \"../../../utils/map/gamemap\";\nimport BlockState from \"../../../utils/map/blockstate/blockstate\";\nimport EntityModel from \"../../entitymodel\";\n\nclass BulletModelBomb extends BulletModel {\n\tconstructor(game: GameWorld) {\n\t\tsuper(game)\n\t\tthis.affectWalls = false\n\t\tthis.lifetime = this.type.lifetime\n\t}\n\n\tprivate static isSolid(map: GameMap, x: number, y: number): boolean {\n\t\tlet block = map.getBlock(Math.floor(x), Math.floor(y))\n\t\tif(!block) return false\n\t\treturn (block.constructor as typeof BlockState).isSolid\n\n\t}\n\n\tprivate checkCollision(game: GameWorld) {\n\n\t\tconst x = this.x / GameMap.BLOCK_SIZE;\n\t\tconst y = this.y / GameMap.BLOCK_SIZE;\n\t\tconst d = this.type.size / GameMap.BLOCK_SIZE;\n\n\t\tif(BulletModelBomb.isSolid(game.map, Math.floor(x + d), Math.floor(y - d))) return true\n\t\tif(BulletModelBomb.isSolid(game.map, Math.floor(x + d), Math.floor(y + d))) return true\n\t\tif(BulletModelBomb.isSolid(game.map, Math.floor(x - d), Math.floor(y - d))) return true\n\t\tif(BulletModelBomb.isSolid(game.map, Math.floor(x - d), Math.floor(y + d))) return true\n\n\t\treturn false\n\t}\n\n\ttick(dt: number) {\n\n\t\tconst steps = 10;\n\t\tconst game = this.game\n\n\t\tlet dx = this.speed.x * dt / steps;\n\t\tlet dy = this.speed.y * dt / steps;\n\n\t\tfor(let i = 0; i < steps; i++) {\n\t\t\tthis.x += dx\n\n\t\t\tif(this.checkCollision(game)) {\n\t\t\t\tthis.x -= dx\n\t\t\t\tdx = -dx\n\t\t\t}\n\n\t\t\t  this.y += dy\n\n\t\t\t  if(this.checkCollision(game)) {\n\t\t\t\tthis.y -= dy\n\t\t\t\tdy = -dy\n\t\t\t}\n\t\t}\n\n\t\tthis.speed.x = dx * steps / dt\n\t\tthis.speed.y = dy * steps / dt\n\n\t\tsuper.tick(dt)\n\n\t\tconst speed = Math.sqrt(this.speed.x ** 2 + this.speed.y ** 2), k = (speed - this.type.friction * dt) / speed;\n\n\t\tthis.speed.x *= k\n\t\tthis.speed.y *= k\n\n\t\t  this.x -= this.speed.x * dt\n\t\t  this.y -= this.speed.y * dt\n\n\t\t  this.lifetime -= dt\n\n\t\t  if(this.lifetime < 0) {\n\t\t\t// датвидания\n\t\t\t// this.dead = true\n\t\t\tgame.removeEntity(this.entity)\n\n\t\t\tif (this.type.explodePower > 0) {\n\t\t\t\tgame.explosionEffectPool.start(this.x, this.y, this.type.explodePower)\n\t\t\t}\n\t\t  }\n\t}\n}\n\n// module.exports = new BombType({\n// \tname: \"bomb\",\n// \texplodePower: 14,\n// \tmass: 30,\n// \tplayerDamage: 0,\n// \tvelocity: 160,\n// \texplodes: false,\n// \tsize: 2,\n// \tlifetime: 3,\n// \tfriction: 20,\n// \tid: 1\n\n\n// })\n\nexport default BulletModelBomb;",
    "import BulletModel from '../bulletmodel';\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\nclass BulletModelCannonball extends BulletModel {\n    static typeName = 2\n}\n\nBinarySerializer.register(BulletModelCannonball)\n\n// module.exports = new BulletType({\n// \tname: \"cannonball\",\n// \texplodePower: 2,\n// \tmass: 30,\n// \twallDamage: 7600,\n// \tplayerDamage: 4,\n// \tvelocity: 600,\n// \texplodes: false,\n// \tid: 2\n// })\n\nexport default BulletModelCannonball;",
    "import BulletModel from '../bulletmodel';\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\nclass BulletModelMine extends BulletModel {\n    static typeName = 7\n}\n\n// module.exports = new MineType({\n//     name: \"mine\",\n//     explodePower: 15,\n//     mass: 0.5,\n//     velocity: 0,\n//     explodes: true,\n//     id: 7\n// })\n\nBinarySerializer.register(BulletModelMine)\n\nexport default BulletModelMine;",
    "import BulletModel from '../bulletmodel';\n\n// class MortarBallType extends BulletType {\n// \tconstructor(config) {\n// \t\tsuper(config);\n// \t}\n//\n// \tcreate() {\n// \t\treturn new MortarBall(this)\n// \t}\n// }\n//\n// class MortarBall extends Bullet {\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.speed.z = this.type.verticalVelocity\n// \t\tthis.z = 0\n// \t}\n//\n// \ttick(screen) {\n// \t\tthis.x += this.speed.x / screen.tps\n// \t\t  this.y += this.speed.y / screen.tps\n// \t\t  this.z += this.speed.z / screen.tps\n//\n// \t\t  this.speed.z -= this.type.gravity / screen.tps\n//\n// \t\t  if(this.speed.z < 0 && this.z <= 0) {\n// \t\t\tthis.dead = true\n//\n// \t\t\tscreen.removeEntity(this)\n//\n// \t\t\tif (this.type.explodePower > 0) {\n// \t\t\t\tscreen.createExplosion(this.x, this.y, this.type.explodePower, this.shooter)\n// \t\t\t}\n// \t\t  }\n//\n// \t\t  this.affectWalls = this.z < 1\n// \t}\n// }\n//\n// module.exports = new MortarBallType({\n// \tname: \"mortarball\",\n// \texplodePower: 16,\n// \tmass: 30,\n// \twallDamage: 7600,\n// \tplayerDamage: 4,\n// \tvelocity: 110,\n// \tverticalVelocity: 6,\n// \tgravity: 9.8,\n// \texplodes: false,\n// \tid: 5\n// })\n\nclass BulletModelMortarBall extends BulletModel {\n\n}\n\nexport default BulletModelMortarBall;",
    "\nimport BinarySerializable, {Constructor} from '../serialization/binary/serializable';\nimport BinaryEncoder from \"../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../serialization/binary/binarydecoder\";\nimport GameWorld from \"../gameworld\";\nimport AbstractEntity from \"./abstractentity\";\n\n/**\n * Entity model. Describes entity position,\n * velocity and setAngle. Each entity type should\n * inherit this class.\n * This class used both on client and server\n * side. Can be updated dynamically through\n * binary serialization.\n */\n\nclass EntityModel implements BinarySerializable<typeof EntityModel> {\n\n    static groupName = 5\n    static typeName = 0\n\n    /// Per-screen unique entity identifier\n    public id = 0;\n\n    /// Entity X coordinate\n    public x = 0;\n\n    /// Entity Y coordinate\n    public y = 0;\n\n    /// Entity X speed\n    public dx = 0;\n\n    /// Entity Y speed\n    public dy = 0;\n\n    /// Entity rotation\n    public rotation = 0;\n\n    /// Indicating if entity has died\n    public dead = false\n\n    public game: GameWorld\n    public entity?: AbstractEntity\n\n    constructor(game: GameWorld) {\n        this.game = game\n    }\n\n    tick(dt: number): void {\n        this.x += this.dx * dt\n        this.y += this.dy * dt\n    }\n\n    toBinary(encoder: BinaryEncoder): void {\n        encoder.writeUint32(this.id)\n        this.encodeDynamicData(encoder)\n    }\n\n    encodeDynamicData(encoder: BinaryEncoder): void {\n        encoder.writeFloat32(this.x)\n        encoder.writeFloat32(this.y)\n        encoder.writeFloat32(this.dx)\n        encoder.writeFloat32(this.dy)\n        encoder.writeFloat32(this.rotation)\n    }\n\n    decodeDynamicData(decoder: BinaryDecoder): void {\n        this.x = decoder.readFloat32()\n        this.y = decoder.readFloat32()\n        this.dx = decoder.readFloat32()\n        this.dy = decoder.readFloat32()\n        this.rotation = decoder.readFloat32()\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n\n        const entity = new this() as any as EntityModel\n\n        entity.id = decoder.readUint32()\n        entity.decodeDynamicData(decoder)\n\n        return entity as any as T\n    }\n}\n\nexport default EntityModel;",
    "\nimport * as Box2D from 'src/library/box2d';\nimport GameMap from 'src/utils/map/gamemap';\nimport EventEmitter from 'src/utils/eventemitter';\nimport WorldExplodeEffectModelPool from 'src/effects/world/explode/explode-effect-pool';\nimport AbstractEffect from 'src/effects/abstract-effect';\nimport AbstractEntity from 'src/entity/abstractentity';\nimport Player from 'src/utils/player';\nimport ClientEffect from \"./client/effects/clienteffect\";\nimport ClientTank from \"./client/tanks/clienttank\";\nimport ClientTankEffect from \"./client/effects/tank/clienttankeffect\";\nimport AbstractTank from './tanks/abstracttank';\nimport BlockState from \"./utils/map/blockstate/blockstate\";\nimport EntityModel from \"./entity/entitymodel\";\nimport ExplodeEffectPool from \"src/effects/world/explode/explode-effect-pool\";\n\nexport interface GameWorldConfig {\n    physicsTick?: number\n    maxTicks?: number\n    positionSteps?: number\n    velocitySteps?: number\n    map: GameMap\n}\n\nclass GameWorld extends EventEmitter {\n\tpublic physicsTick: number;\n\tpublic maxTicks: number;\n\tpublic positionSteps: number;\n\tpublic velocitySteps: number;\n\n    world: Box2D.World\n    map: GameMap\n    players = new Map<number, Player>()\n    entities = new Map<number, AbstractEntity>()\n    effects = new Map<number, AbstractEffect>()\n    explosionEffectPool: ExplodeEffectPool\n\n    constructor(options: GameWorldConfig) {\n        super()\n\n        options = Object.assign({\n            physicsTick: 0.002,\n            maxTicks: 10,\n            positionSteps: 1,\n            velocitySteps: 1\n        }, options)\n\n        this.world = new Box2D.World(new Box2D.Vec2())\n        this.map = options.map\n\n        this.physicsTick = options.physicsTick\n        this.maxTicks = options.maxTicks\n        this.positionSteps = options.positionSteps\n        this.velocitySteps = options.velocitySteps\n        this.createExplosionPool()\n    }\n\n    createExplosionPool(): void {\n        this.explosionEffectPool = new WorldExplodeEffectModelPool({\n            world: this\n        })\n    }\n\n    // TODO: Вынести в отдельный класс\n\n    rebuildBlockPhysics(): void {\n\n        for (let player of this.players.values()) {\n            if(!player.tank) continue\n            let position = player.tank.model.body.GetPosition()\n\n            const x = Math.floor(position.x / GameMap.BLOCK_SIZE)\n            const y = Math.floor(position.y / GameMap.BLOCK_SIZE)\n\n            const tx = x + 2\n            const ty = y + 2\n\n            let n = 0\n\n            for (let i = x - 2; i <= tx; i++) {\n                for (let j = y - 2; j <= ty; j++, n++) {\n                    if (i === x && j === y) continue\n                    let block = player.blockMap[n]\n                    let mapBlock = this.map.getBlock(i, j)\n\n                    if ((mapBlock && (mapBlock.constructor as typeof BlockState).isSolid) || (i < 0) || (j < 0) || (i >= this.map.width) || (j >= this.map.height)) {\n                        let pos = block.GetPosition()\n\n                        pos.x = (i + 0.5) * GameMap.BLOCK_SIZE\n                        pos.y = (j + 0.5) * GameMap.BLOCK_SIZE\n\n                        block.SetPosition(pos)\n\n                        block.m_fixtureList.m_filter.maskBits = 0xFFFF\n                    } else {\n                        if (block.m_fixtureList.m_filter.maskBits) {\n                            let pos = block.GetPosition()\n                            pos.Set(-1000, -1000)\n                            block.SetPosition(pos)\n                        }\n                        block.m_fixtureList.m_filter.maskBits = 0\n                    }\n                }\n            }\n        }\n    }\n\n    processPhysics(dt: number): void {\n\n        this.explosionEffectPool.tick(dt)\n\n        let steps = Math.floor(dt / this.physicsTick);\n        if (steps > this.maxTicks) steps = this.maxTicks;\n        for (let i = 0; i < steps; i++) this.world.Step(this.physicsTick, 1, 1);\n\n        this.rebuildBlockPhysics()\n        this.world.ClearForces()\n\n        for (let player of this.players.values()) {\n            if(player.tank) player.tank.tick(dt)\n        }\n    }\n\n    processEntities(dt: number): void {\n        for (let entity of this.entities.values()) {\n            entity.tick(dt)\n            if (entity.model.dead)\n                this.removeEntity(entity)\n        }\n    }\n\n    processEffects(dt: number): void {\n        for(let effect of this.effects.values()) {\n            effect.tick(dt)\n            if(effect.dead) {\n                this.removeEffect(effect)\n            }\n        }\n    }\n\n    tick(dt: number): void {\n        // Processing entities first because\n        // otherwise processPhysics method\n        // does an excessive initial tick\n        // to new bullets\n\n        this.processEntities(dt)\n        this.processPhysics(dt)\n        this.processEffects(dt)\n    }\n\n    createEntity(entity: AbstractEntity): void {\n        entity.game = this\n        this.entities.set(entity.model.id, entity)\n        this.emit(\"entity-create\", entity)\n    }\n\n    removeEntity(entity: AbstractEntity): void {\n        this.entities.delete(entity.model.id)\n        this.emit(\"entity-remove\", entity)\n    }\n\n    createPlayer(player: Player) {\n        if(this.players.has(player.id)) {\n            this.players.get(player.id).destroy()\n        }\n        player.world = this\n        this.players.set(player.id, player)\n        player.setupPhysics()\n        this.emit(\"player-create\", player)\n    }\n\n    removePlayer(player: Player) {\n        player.destroy()\n        //player.team.remove(player);\n        this.players.delete(player.id)\n        this.emit(\"player-remove\", player)\n    }\n\n    addTankEffect(effect: AbstractEffect, tank: AbstractTank) {\n        this.emit(\"effect-create\", effect, tank)\n    }\n\n    removeTankEffect(effect: AbstractEffect, tank: AbstractTank) {\n        this.emit(\"effect-remove\", effect, tank)\n    }\n\n    addEffect(effect: AbstractEffect) {\n        if(this.effects.has(effect.model.id)) return\n\n        this.effects.set(effect.model.id, effect)\n        this.emit(\"effect-create\", effect)\n    }\n\n    removeEffect(effect: AbstractEffect) {\n        if(this.effects.delete(effect.model.id)) {\n            this.emit(\"effect-remove\", effect)\n        }\n    }\n}\n\nexport default GameWorld;",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Vec2, XY } from \"../common/b2_math\";\nimport { b2AABB, b2RayCastInput } from \"./b2_collision\";\nimport { b2TreeNode, b2DynamicTree } from \"./b2_dynamic_tree\";\n\nexport class b2Pair<T> {\n  constructor(public proxyA: b2TreeNode<T>, public proxyB: b2TreeNode<T>) { }\n}\n\n/// The broad-phase is used for computing pairs and performing volume queries and ray casts.\n/// This broad-phase does not persist pairs. Instead, this reports potentially new pairs.\n/// It is up to the client to consume the new pairs and to track subsequent overlap.\nexport class b2BroadPhase<T> {\n  public readonly m_tree: b2DynamicTree<T> = new b2DynamicTree<T>();\n  public m_proxyCount: number = 0;\n  // public m_moveCapacity: number = 16;\n  public m_moveCount: number = 0;\n  public readonly m_moveBuffer: Array<b2TreeNode<T> | null> = [];\n  // public m_pairCapacity: number = 16;\n  public m_pairCount: number = 0;\n  public readonly m_pairBuffer: Array<b2Pair<T>> = [];\n  // public m_queryProxyId: number = 0;\n\n  /// Create a proxy with an initial AABB. Pairs are not reported until\n  /// UpdatePairs is called.\n  public CreateProxy(aabb: b2AABB, userData: T): b2TreeNode<T> {\n    const proxy: b2TreeNode<T> = this.m_tree.CreateProxy(aabb, userData);\n    ++this.m_proxyCount;\n    this.BufferMove(proxy);\n    return proxy;\n  }\n\n  /// Destroy a proxy. It is up to the client to remove any pairs.\n  public DestroyProxy(proxy: b2TreeNode<T>): void {\n    this.UnBufferMove(proxy);\n    --this.m_proxyCount;\n    this.m_tree.DestroyProxy(proxy);\n  }\n\n  /// Call MoveProxy as many times as you like, then when you are done\n  /// call UpdatePairs to finalized the proxy pairs (for your time step).\n  public MoveProxy(proxy: b2TreeNode<T>, aabb: b2AABB, displacement: b2Vec2): void {\n    const buffer: boolean = this.m_tree.MoveProxy(proxy, aabb, displacement);\n    if (buffer) {\n      this.BufferMove(proxy);\n    }\n  }\n\n  /// Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.\n  public TouchProxy(proxy: b2TreeNode<T>): void {\n    this.BufferMove(proxy);\n  }\n\n  /// Get the fat AABB for a proxy.\n  // public GetFatAABB(proxy: b2TreeNode<T>): b2AABB {\n  //   return this.m_tree.GetFatAABB(proxy);\n  // }\n\n  /// Get user data from a proxy. Returns NULL if the id is invalid.\n  // public GetUserData(proxy: b2TreeNode<T>): T {\n  //   return this.m_tree.GetUserData(proxy);\n  // }\n\n  /// Test overlap of fat AABBs.\n  // public TestOverlap(proxyA: b2TreeNode<T>, proxyB: b2TreeNode<T>): boolean {\n  //   const aabbA: b2AABB = this.m_tree.GetFatAABB(proxyA);\n  //   const aabbB: b2AABB = this.m_tree.GetFatAABB(proxyB);\n  //   return b2TestOverlapAABB(aabbA, aabbB);\n  // }\n\n  /// Get the number of proxies.\n  public GetProxyCount(): number {\n    return this.m_proxyCount;\n  }\n\n  /// Update the pairs. This results in pair callbacks. This can only add pairs.\n  public UpdatePairs(callback: (a: T, b: T) => void): void {\n    // Reset pair buffer\n    this.m_pairCount = 0;\n\n    // Perform tree queries for all moving proxies.\n    for (let i: number = 0; i < this.m_moveCount; ++i) {\n      const queryProxy: b2TreeNode<T> | null = this.m_moveBuffer[i];\n      if (queryProxy === null) {\n        continue;\n      }\n\n      // This is called from b2.DynamicTree::Query when we are gathering pairs.\n      // boolean b2BroadPhase::QueryCallback(int32 proxyId);\n\n      // We have to query the tree with the fat AABB so that\n      // we don't fail to create a pair that may touch later.\n      const fatAABB: b2AABB = queryProxy.aabb; // this.m_tree.GetFatAABB(queryProxy);\n\n      // Query tree, create pairs and add them pair buffer.\n      this.m_tree.Query(fatAABB, (proxy: b2TreeNode<T>): boolean => {\n        // A proxy cannot form a pair with itself.\n        if (proxy.m_id === queryProxy.m_id) {\n          return true;\n        }\n\n        const moved: boolean = proxy.moved; // this.m_tree.WasMoved(proxy);\n        if (moved && proxy.m_id > queryProxy.m_id) {\n          // Both proxies are moving. Avoid duplicate pairs.\n          return true;\n        }\n\n        // const proxyA = proxy < queryProxy ? proxy : queryProxy;\n        // const proxyB = proxy >= queryProxy ? proxy : queryProxy;\n        let proxyA: b2TreeNode<T>;\n        let proxyB: b2TreeNode<T>;\n        if (proxy.m_id < queryProxy.m_id) {\n          proxyA = proxy;\n          proxyB = queryProxy;\n        } else {\n          proxyA = queryProxy;\n          proxyB = proxy;\n        }\n\n        // Grow the pair buffer as needed.\n        if (this.m_pairCount === this.m_pairBuffer.length) {\n          this.m_pairBuffer[this.m_pairCount] = new b2Pair(proxyA, proxyB);\n        } else {\n          const pair: b2Pair<T> = this.m_pairBuffer[this.m_pairCount];\n          pair.proxyA = proxyA;\n          pair.proxyB = proxyB;\n        }\n\n        ++this.m_pairCount;\n\n        return true;\n      });\n    }\n\n    // Send pairs to caller\n    for (let i = 0; i < this.m_pairCount; ++i) {\n      const primaryPair: b2Pair<T> = this.m_pairBuffer[i];\n      const userDataA: T = primaryPair.proxyA.userData; // this.m_tree.GetUserData(primaryPair.proxyA);\n      const userDataB: T = primaryPair.proxyB.userData; // this.m_tree.GetUserData(primaryPair.proxyB);\n\n      callback(userDataA, userDataB);\n  }\n\n    // Clear move flags\n    for (let i = 0; i < this.m_moveCount; ++i) {\n      const proxy: b2TreeNode<T> | null = this.m_moveBuffer[i];\n      if (proxy === null) {\n        continue;\n      }\n\n      proxy.moved = false; // this.m_tree.ClearMoved(proxy);\n    }\n\n    // Reset move buffer\n    this.m_moveCount = 0;\n  }\n\n  /// Query an AABB for overlapping proxies. The callback class\n  /// is called for each proxy that overlaps the supplied AABB.\n  public Query(aabb: b2AABB, callback: (node: b2TreeNode<T>) => boolean): void {\n    this.m_tree.Query(aabb, callback);\n  }\n\n  public QueryPoint(point: XY, callback: (node: b2TreeNode<T>) => boolean): void {\n    this.m_tree.QueryPoint(point, callback);\n  }\n\n  /// Ray-cast against the proxies in the tree. This relies on the callback\n  /// to perform a exact ray-cast in the case were the proxy contains a shape.\n  /// The callback also performs the any collision filtering. This has performance\n  /// roughly equal to k * log(n), where k is the number of collisions and n is the\n  /// number of proxies in the tree.\n  /// @param input the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n  /// @param callback a callback class that is called for each proxy that is hit by the ray.\n  public RayCast(input: b2RayCastInput, callback: (input: b2RayCastInput, node: b2TreeNode<T>) => number): void {\n    this.m_tree.RayCast(input, callback);\n  }\n\n  /// Get the height of the embedded tree.\n  public GetTreeHeight(): number {\n    return this.m_tree.GetHeight();\n  }\n\n  /// Get the balance of the embedded tree.\n  public GetTreeBalance(): number {\n    return this.m_tree.GetMaxBalance();\n  }\n\n  /// Get the quality metric of the embedded tree.\n  public GetTreeQuality(): number {\n    return this.m_tree.GetAreaRatio();\n  }\n\n  /// Shift the world origin. Useful for large worlds.\n  /// The shift formula is: position -= newOrigin\n  /// @param newOrigin the new origin with respect to the old origin\n  public ShiftOrigin(newOrigin: XY): void {\n    this.m_tree.ShiftOrigin(newOrigin);\n  }\n\n  public BufferMove(proxy: b2TreeNode<T>): void {\n    this.m_moveBuffer[this.m_moveCount] = proxy;\n    ++this.m_moveCount;\n  }\n\n  public UnBufferMove(proxy: b2TreeNode<T>): void {\n    const i: number = this.m_moveBuffer.indexOf(proxy);\n    this.m_moveBuffer[i] = null;\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert, b2_linearSlop } from \"../common/b2_settings\";\nimport { b2_polygonRadius } from \"../common/b2_common\";\nimport { b2Vec2, b2Transform, XY } from \"../common/b2_math\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"./b2_collision\";\nimport { b2DistanceProxy } from \"./b2_distance\";\nimport { b2MassData } from \"./b2_shape\";\nimport { b2Shape, b2ShapeType } from \"./b2_shape\";\nimport { b2EdgeShape } from \"./b2_edge_shape\";\n\n/// A chain shape is a free form sequence of line segments.\n/// The chain has one-sided collision, with the surface normal pointing to the right of the edge.\n/// This provides a counter-clockwise winding like the polygon shape.\n/// Connectivity information is used to create smooth collisions.\n/// @warning the chain will not collide properly if there are self-intersections.\nexport class b2ChainShape extends b2Shape {\n  public m_vertices: b2Vec2[] = [];\n  public m_count: number = 0;\n  public readonly m_prevVertex: b2Vec2 = new b2Vec2();\n  public readonly m_nextVertex: b2Vec2 = new b2Vec2();\n\n  constructor() {\n    super(b2ShapeType.e_chainShape, b2_polygonRadius);\n  }\n\n  /// Create a loop. This automatically adjusts connectivity.\n  /// @param vertices an array of vertices, these are copied\n  /// @param count the vertex count\n  public CreateLoop(vertices: XY[]): b2ChainShape;\n  public CreateLoop(vertices: XY[], count: number): b2ChainShape;\n  public CreateLoop(vertices: number[]): b2ChainShape;\n  public CreateLoop(...args: any[]): b2ChainShape {\n    if (typeof args[0][0] === \"number\") {\n      const vertices: number[] = args[0];\n      if (vertices.length % 2 !== 0) { throw new Error(); }\n      return this._CreateLoop((index: number): XY => ({ x: vertices[index * 2], y: vertices[index * 2 + 1] }), vertices.length / 2);\n    } else {\n      const vertices: XY[] = args[0];\n      const count: number = args[1] || vertices.length;\n      return this._CreateLoop((index: number): XY => vertices[index], count);\n    }\n  }\n  private _CreateLoop(vertices: (index: number) => XY, count: number): b2ChainShape {\n    // DEBUG: b2Assert(count >= 3);\n    if (count < 3) {\n      return this;\n    }\n    // DEBUG: for (let i: number = 1; i < count; ++i) {\n    // DEBUG:   const v1 = vertices[start + i - 1];\n    // DEBUG:   const v2 = vertices[start + i];\n    // DEBUG:   // If the code crashes here, it means your vertices are too close together.\n    // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\n    // DEBUG: }\n\n    this.m_count = count + 1;\n    this.m_vertices = b2Vec2.MakeArray(this.m_count);\n    for (let i: number = 0; i < count; ++i) {\n      this.m_vertices[i].Copy(vertices(i));\n    }\n    this.m_vertices[count].Copy(this.m_vertices[0]);\n    this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);\n    this.m_nextVertex.Copy(this.m_vertices[1]);\n    return this;\n  }\n\n\t/// Create a chain with ghost vertices to connect multiple chains together.\n\t/// @param vertices an array of vertices, these are copied\n\t/// @param count the vertex count\n\t/// @param prevVertex previous vertex from chain that connects to the start\n\t/// @param nextVertex next vertex from chain that connects to the end\n  public CreateChain(vertices: XY[], prevVertex: Readonly<XY>, nextVertex: Readonly<XY>): b2ChainShape;\n  public CreateChain(vertices: XY[], count: number, prevVertex: Readonly<XY>, nextVertex: Readonly<XY>): b2ChainShape;\n  public CreateChain(vertices: number[], prevVertex: Readonly<XY>, nextVertex: Readonly<XY>): b2ChainShape;\n  public CreateChain(...args: any[]): b2ChainShape {\n    if (typeof args[0][0] === \"number\") {\n      const vertices: number[] = args[0];\n      const prevVertex: Readonly<XY> = args[1];\n      const nextVertex: Readonly<XY> = args[2];\n      if (vertices.length % 2 !== 0) { throw new Error(); }\n      return this._CreateChain((index: number): XY => ({ x: vertices[index * 2], y: vertices[index * 2 + 1] }), vertices.length / 2, prevVertex, nextVertex);\n    } else {\n      const vertices: XY[] = args[0];\n      const count: number = args[1] || vertices.length;\n      const prevVertex: Readonly<XY> = args[2];\n      const nextVertex: Readonly<XY> = args[3];\n      return this._CreateChain((index: number): XY => vertices[index], count, prevVertex, nextVertex);\n    }\n  }\n  private _CreateChain(vertices: (index: number) => XY, count: number, prevVertex: Readonly<XY>, nextVertex: Readonly<XY>): b2ChainShape {\n    // DEBUG: b2Assert(count >= 2);\n    // DEBUG: for (let i: number = 1; i < count; ++i) {\n    // DEBUG:   const v1 = vertices[start + i - 1];\n    // DEBUG:   const v2 = vertices[start + i];\n    // DEBUG:   // If the code crashes here, it means your vertices are too close together.\n    // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\n    // DEBUG: }\n\n    this.m_count = count;\n    this.m_vertices = b2Vec2.MakeArray(count);\n    for (let i: number = 0; i < count; ++i) {\n      this.m_vertices[i].Copy(vertices(i));\n    }\n\n    this.m_prevVertex.Copy(prevVertex);\n    this.m_nextVertex.Copy(nextVertex);\n\n    return this;\n  }\n\n  /// Implement b2Shape. Vertices are cloned using b2Alloc.\n  public Clone(): b2ChainShape {\n    return new b2ChainShape().Copy(this);\n  }\n\n  public Copy(other: b2ChainShape): b2ChainShape {\n    super.Copy(other);\n\n    // DEBUG: b2Assert(other instanceof b2ChainShape);\n\n    this._CreateChain((index: number): XY => other.m_vertices[index], other.m_count, other.m_prevVertex, other.m_nextVertex);\n    this.m_prevVertex.Copy(other.m_prevVertex);\n    this.m_nextVertex.Copy(other.m_nextVertex);\n\n    return this;\n  }\n\n  /// @see b2Shape::GetChildCount\n  public GetChildCount(): number {\n    // edge count = vertex count - 1\n    return this.m_count - 1;\n  }\n\n  /// Get a child edge.\n  public GetChildEdge(edge: b2EdgeShape, index: number): void {\n    // DEBUG: b2Assert(0 <= index && index < this.m_count - 1);\n    edge.m_radius = this.m_radius;\n\n    edge.m_vertex1.Copy(this.m_vertices[index]);\n    edge.m_vertex2.Copy(this.m_vertices[index + 1]);\n    edge.m_oneSided = true;\n\n    if (index > 0) {\n      edge.m_vertex0.Copy(this.m_vertices[index - 1]);\n    } else {\n      edge.m_vertex0.Copy(this.m_prevVertex);\n    }\n\n    if (index < this.m_count - 2) {\n      edge.m_vertex3.Copy(this.m_vertices[index + 2]);\n    } else {\n      edge.m_vertex3.Copy(this.m_nextVertex);\n    }\n  }\n\n  /// This always return false.\n  /// @see b2Shape::TestPoint\n  public TestPoint(xf: b2Transform, p: XY): boolean {\n    return false;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  /// @see b2Shape::ComputeDistance\n  private static ComputeDistance_s_edgeShape = new b2EdgeShape();\n  public ComputeDistance(xf: b2Transform, p: b2Vec2, normal: b2Vec2, childIndex: number): number {\n    const edge = b2ChainShape.ComputeDistance_s_edgeShape;\n    this.GetChildEdge(edge, childIndex);\n    return edge.ComputeDistance(xf, p, normal, 0);\n  }\n  // #endif\n\n  /// Implement b2Shape.\n  private static RayCast_s_edgeShape = new b2EdgeShape();\n  public RayCast(output: b2RayCastOutput, input: b2RayCastInput, xf: b2Transform, childIndex: number): boolean {\n    // DEBUG: b2Assert(childIndex < this.m_count);\n\n    const edgeShape: b2EdgeShape = b2ChainShape.RayCast_s_edgeShape;\n\n    edgeShape.m_vertex1.Copy(this.m_vertices[childIndex]);\n    edgeShape.m_vertex2.Copy(this.m_vertices[(childIndex + 1) % this.m_count]);\n\n    return edgeShape.RayCast(output, input, xf, 0);\n  }\n\n  /// @see b2Shape::ComputeAABB\n  private static ComputeAABB_s_v1 = new b2Vec2();\n  private static ComputeAABB_s_v2 = new b2Vec2();\n  private static ComputeAABB_s_lower = new b2Vec2();\n  private static ComputeAABB_s_upper = new b2Vec2();\n  public ComputeAABB(aabb: b2AABB, xf: b2Transform, childIndex: number): void {\n    // DEBUG: b2Assert(childIndex < this.m_count);\n\n    const vertexi1: b2Vec2 = this.m_vertices[childIndex];\n    const vertexi2: b2Vec2 = this.m_vertices[(childIndex + 1) % this.m_count];\n\n    const v1: b2Vec2 = b2Transform.MulXV(xf, vertexi1, b2ChainShape.ComputeAABB_s_v1);\n    const v2: b2Vec2 = b2Transform.MulXV(xf, vertexi2, b2ChainShape.ComputeAABB_s_v2);\n\n    const lower: b2Vec2 = b2Vec2.MinV(v1, v2, b2ChainShape.ComputeAABB_s_lower);\n    const upper: b2Vec2 = b2Vec2.MaxV(v1, v2, b2ChainShape.ComputeAABB_s_upper);\n\n    aabb.lowerBound.x = lower.x - this.m_radius;\n    aabb.lowerBound.y = lower.y - this.m_radius;\n    aabb.upperBound.x = upper.x + this.m_radius;\n    aabb.upperBound.y = upper.y + this.m_radius;\n  }\n\n  /// Chains have zero mass.\n  /// @see b2Shape::ComputeMass\n  public ComputeMass(massData: b2MassData, density: number): void {\n    massData.mass = 0;\n    massData.center.SetZero();\n    massData.I = 0;\n  }\n\n  public SetupDistanceProxy(proxy: b2DistanceProxy, index: number): void {\n    // DEBUG: b2Assert(0 <= index && index < this.m_count);\n\n    proxy.m_vertices = proxy.m_buffer;\n    proxy.m_vertices[0].Copy(this.m_vertices[index]);\n    if (index + 1 < this.m_count) {\n      proxy.m_vertices[1].Copy(this.m_vertices[index + 1]);\n    } else {\n      proxy.m_vertices[1].Copy(this.m_vertices[0]);\n    }\n    proxy.m_count = 2;\n    proxy.m_radius = this.m_radius;\n  }\n\n  public ComputeSubmergedArea(normal: b2Vec2, offset: number, xf: b2Transform, c: b2Vec2): number {\n    c.SetZero();\n    return 0;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    log(\"    const shape: b2ChainShape = new b2ChainShape();\\n\");\n    log(\"    const vs: b2Vec2[] = [];\\n\");\n    for (let i: number = 0; i < this.m_count; ++i) {\n      log(\"    vs[%d] = new bVec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\n    }\n    log(\"    shape.CreateChain(vs, %d);\\n\", this.m_count);\n    log(\"    shape.m_prevVertex.Set(%.15f, %.15f);\\n\", this.m_prevVertex.x, this.m_prevVertex.y);\n    log(\"    shape.m_nextVertex.Set(%.15f, %.15f);\\n\", this.m_nextVertex.x, this.m_nextVertex.y);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_pi, b2_epsilon } from \"../common/b2_common\";\nimport { b2Sq, b2Sqrt, b2Asin, b2Pow, b2Vec2, b2Transform, XY } from \"../common/b2_math\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"./b2_collision\";\nimport { b2DistanceProxy } from \"./b2_distance\";\nimport { b2MassData } from \"./b2_shape\";\nimport { b2Shape, b2ShapeType } from \"./b2_shape\";\n\n/// A solid circle shape\nexport class b2CircleShape extends b2Shape {\n  public readonly m_p: b2Vec2 = new b2Vec2();\n\n  constructor(radius: number = 0) {\n    super(b2ShapeType.e_circleShape, radius);\n  }\n\n  public Set(position: XY, radius: number = this.m_radius): this {\n    this.m_p.Copy(position);\n    this.m_radius = radius;\n    return this;\n  }\n\n  /// Implement b2Shape.\n  public Clone(): b2CircleShape {\n    return new b2CircleShape().Copy(this);\n  }\n\n  public Copy(other: b2CircleShape): b2CircleShape {\n    super.Copy(other);\n\n    // DEBUG: b2Assert(other instanceof b2CircleShape);\n\n    this.m_p.Copy(other.m_p);\n    return this;\n  }\n\n  /// @see b2Shape::GetChildCount\n  public GetChildCount(): number {\n    return 1;\n  }\n\n  /// Implement b2Shape.\n  private static TestPoint_s_center = new b2Vec2();\n  private static TestPoint_s_d = new b2Vec2();\n  public TestPoint(transform: b2Transform, p: XY): boolean {\n    const center: b2Vec2 = b2Transform.MulXV(transform, this.m_p, b2CircleShape.TestPoint_s_center);\n    const d: b2Vec2 = b2Vec2.SubVV(p, center, b2CircleShape.TestPoint_s_d);\n    return b2Vec2.DotVV(d, d) <= b2Sq(this.m_radius);\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  /// @see b2Shape::ComputeDistance\n  private static ComputeDistance_s_center = new b2Vec2();\n  public ComputeDistance(xf: b2Transform, p: b2Vec2, normal: b2Vec2, childIndex: number): number {\n    const center = b2Transform.MulXV(xf, this.m_p, b2CircleShape.ComputeDistance_s_center);\n    b2Vec2.SubVV(p, center, normal);\n    return normal.Normalize() - this.m_radius;\n  }\n  // #endif\n\n  /// Implement b2Shape.\n\t/// @note because the circle is solid, rays that start inside do not hit because the normal is\n\t/// not defined.\n  // Collision Detection in Interactive 3D Environments by Gino van den Bergen\n  // From Section 3.1.2\n  // x = s + a * r\n  // norm(x) = radius\n  private static RayCast_s_position = new b2Vec2();\n  private static RayCast_s_s = new b2Vec2();\n  private static RayCast_s_r = new b2Vec2();\n  public RayCast(output: b2RayCastOutput, input: b2RayCastInput, transform: b2Transform, childIndex: number): boolean {\n    const position: b2Vec2 = b2Transform.MulXV(transform, this.m_p, b2CircleShape.RayCast_s_position);\n    const s: b2Vec2 = b2Vec2.SubVV(input.p1, position, b2CircleShape.RayCast_s_s);\n    const b: number = b2Vec2.DotVV(s, s) - b2Sq(this.m_radius);\n\n    // Solve quadratic equation.\n    const r: b2Vec2 = b2Vec2.SubVV(input.p2, input.p1, b2CircleShape.RayCast_s_r);\n    const c: number = b2Vec2.DotVV(s, r);\n    const rr: number = b2Vec2.DotVV(r, r);\n    const sigma = c * c - rr * b;\n\n    // Check for negative discriminant and short segment.\n    if (sigma < 0 || rr < b2_epsilon) {\n      return false;\n    }\n\n    // Find the point of intersection of the line with the circle.\n    let a: number = (-(c + b2Sqrt(sigma)));\n\n    // Is the intersection point on the segment?\n    if (0 <= a && a <= input.maxFraction * rr) {\n      a /= rr;\n      output.fraction = a;\n      b2Vec2.AddVMulSV(s, a, r, output.normal).SelfNormalize();\n      return true;\n    }\n\n    return false;\n  }\n\n  /// @see b2Shape::ComputeAABB\n  private static ComputeAABB_s_p = new b2Vec2();\n  public ComputeAABB(aabb: b2AABB, transform: b2Transform, childIndex: number): void {\n    const p: b2Vec2 = b2Transform.MulXV(transform, this.m_p, b2CircleShape.ComputeAABB_s_p);\n    aabb.lowerBound.Set(p.x - this.m_radius, p.y - this.m_radius);\n    aabb.upperBound.Set(p.x + this.m_radius, p.y + this.m_radius);\n  }\n\n  /// @see b2Shape::ComputeMass\n  public ComputeMass(massData: b2MassData, density: number): void {\n    const radius_sq: number = b2Sq(this.m_radius);\n    massData.mass = density * b2_pi * radius_sq;\n    massData.center.Copy(this.m_p);\n\n    // inertia about the local origin\n    massData.I = massData.mass * (0.5 * radius_sq + b2Vec2.DotVV(this.m_p, this.m_p));\n  }\n\n  public SetupDistanceProxy(proxy: b2DistanceProxy, index: number): void {\n    proxy.m_vertices = proxy.m_buffer;\n    proxy.m_vertices[0].Copy(this.m_p);\n    proxy.m_count = 1;\n    proxy.m_radius = this.m_radius;\n  }\n\n  public ComputeSubmergedArea(normal: b2Vec2, offset: number, xf: b2Transform, c: b2Vec2): number {\n    const p: b2Vec2 = b2Transform.MulXV(xf, this.m_p, new b2Vec2());\n    const l: number = (-(b2Vec2.DotVV(normal, p) - offset));\n\n    if (l < (-this.m_radius) + b2_epsilon) {\n      // Completely dry\n      return 0;\n    }\n    if (l > this.m_radius) {\n      // Completely wet\n      c.Copy(p);\n      return b2_pi * this.m_radius * this.m_radius;\n    }\n\n    // Magic\n    const r2: number = this.m_radius * this.m_radius;\n    const l2: number = l * l;\n    const area: number = r2 * (b2Asin(l / this.m_radius) + b2_pi / 2) + l * b2Sqrt(r2 - l2);\n    const com: number = (-2 / 3 * b2Pow(r2 - l2, 1.5) / area);\n\n    c.x = p.x + normal.x * com;\n    c.y = p.y + normal.y * com;\n\n    return area;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    log(\"    const shape: b2CircleShape = new b2CircleShape();\\n\");\n    log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\n    log(\"    shape.m_p.Set(%.15f, %.15f);\\n\", this.m_p.x, this.m_p.y);\n  }\n}\n",
    "import { b2_maxFloat, b2_epsilon } from \"../common/b2_settings\";\nimport { b2Vec2, b2Transform } from \"../common/b2_math\";\nimport { b2Manifold, b2ManifoldType } from \"./b2_collision\";\nimport { b2CircleShape } from \"./b2_circle_shape\";\nimport { b2PolygonShape } from \"./b2_polygon_shape\";\n\nconst b2CollideCircles_s_pA: b2Vec2 = new b2Vec2();\nconst b2CollideCircles_s_pB: b2Vec2 = new b2Vec2();\nexport function b2CollideCircles(manifold: b2Manifold, circleA: b2CircleShape, xfA: b2Transform, circleB: b2CircleShape, xfB: b2Transform): void {\n  manifold.pointCount = 0;\n\n  const pA: b2Vec2 = b2Transform.MulXV(xfA, circleA.m_p, b2CollideCircles_s_pA);\n  const pB: b2Vec2 = b2Transform.MulXV(xfB, circleB.m_p, b2CollideCircles_s_pB);\n\n  const distSqr: number = b2Vec2.DistanceSquaredVV(pA, pB);\n  const radius: number = circleA.m_radius + circleB.m_radius;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = b2ManifoldType.e_circles;\n  manifold.localPoint.Copy(circleA.m_p);\n  manifold.localNormal.SetZero();\n  manifold.pointCount = 1;\n\n  manifold.points[0].localPoint.Copy(circleB.m_p);\n  manifold.points[0].id.key = 0;\n}\n\nconst b2CollidePolygonAndCircle_s_c: b2Vec2 = new b2Vec2();\nconst b2CollidePolygonAndCircle_s_cLocal: b2Vec2 = new b2Vec2();\nconst b2CollidePolygonAndCircle_s_faceCenter: b2Vec2 = new b2Vec2();\nexport function b2CollidePolygonAndCircle(manifold: b2Manifold, polygonA: b2PolygonShape, xfA: b2Transform, circleB: b2CircleShape, xfB: b2Transform): void {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  const c: b2Vec2 = b2Transform.MulXV(xfB, circleB.m_p, b2CollidePolygonAndCircle_s_c);\n  const cLocal: b2Vec2 = b2Transform.MulTXV(xfA, c, b2CollidePolygonAndCircle_s_cLocal);\n\n  // Find the min separating edge.\n  let normalIndex: number = 0;\n  let separation: number = (-b2_maxFloat);\n  const radius: number = polygonA.m_radius + circleB.m_radius;\n  const vertexCount: number = polygonA.m_count;\n  const vertices: b2Vec2[] = polygonA.m_vertices;\n  const normals: b2Vec2[] = polygonA.m_normals;\n\n  for (let i: number = 0; i < vertexCount; ++i) {\n    const s: number = b2Vec2.DotVV(normals[i], b2Vec2.SubVV(cLocal, vertices[i], b2Vec2.s_t0));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  const vertIndex1: number = normalIndex;\n  const vertIndex2: number = (vertIndex1 + 1) % vertexCount;\n  const v1: b2Vec2 = vertices[vertIndex1];\n  const v2: b2Vec2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < b2_epsilon) {\n    manifold.pointCount = 1;\n    manifold.type = b2ManifoldType.e_faceA;\n    manifold.localNormal.Copy(normals[normalIndex]);\n    b2Vec2.MidVV(v1, v2, manifold.localPoint);\n    manifold.points[0].localPoint.Copy(circleB.m_p);\n    manifold.points[0].id.key = 0;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  const u1: number = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v1, b2Vec2.s_t0), b2Vec2.SubVV(v2, v1, b2Vec2.s_t1));\n  const u2: number = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v2, b2Vec2.s_t0), b2Vec2.SubVV(v1, v2, b2Vec2.s_t1));\n  if (u1 <= 0) {\n    if (b2Vec2.DistanceSquaredVV(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = b2ManifoldType.e_faceA;\n    b2Vec2.SubVV(cLocal, v1, manifold.localNormal).SelfNormalize();\n    manifold.localPoint.Copy(v1);\n    manifold.points[0].localPoint.Copy(circleB.m_p);\n    manifold.points[0].id.key = 0;\n  } else if (u2 <= 0) {\n    if (b2Vec2.DistanceSquaredVV(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = b2ManifoldType.e_faceA;\n    b2Vec2.SubVV(cLocal, v2, manifold.localNormal).SelfNormalize();\n    manifold.localPoint.Copy(v2);\n    manifold.points[0].localPoint.Copy(circleB.m_p);\n    manifold.points[0].id.key = 0;\n  } else {\n    const faceCenter: b2Vec2 = b2Vec2.MidVV(v1, v2, b2CollidePolygonAndCircle_s_faceCenter);\n    const separation = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, faceCenter, b2Vec2.s_t1), normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = b2ManifoldType.e_faceA;\n    manifold.localNormal.Copy(normals[vertIndex1]).SelfNormalize();\n    manifold.localPoint.Copy(faceCenter);\n    manifold.points[0].localPoint.Copy(circleB.m_p);\n    manifold.points[0].id.key = 0;\n  }\n}\n",
    "// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_maxManifoldPoints } from \"../common/b2_common\";\nimport { b2Min, b2Vec2, b2Rot, b2Transform } from \"../common/b2_math\";\nimport { b2ContactFeatureType, b2ContactID } from \"./b2_collision\";\nimport { b2Manifold, b2ManifoldType, b2ManifoldPoint, b2ClipVertex, b2ClipSegmentToLine } from \"./b2_collision\";\nimport { b2CircleShape } from \"./b2_circle_shape\";\nimport { b2PolygonShape } from \"./b2_polygon_shape\";\nimport { b2EdgeShape } from \"./b2_edge_shape\";\n\nconst b2CollideEdgeAndCircle_s_Q: b2Vec2 = new b2Vec2();\nconst b2CollideEdgeAndCircle_s_e: b2Vec2 = new b2Vec2();\nconst b2CollideEdgeAndCircle_s_d: b2Vec2 = new b2Vec2();\nconst b2CollideEdgeAndCircle_s_e1: b2Vec2 = new b2Vec2();\nconst b2CollideEdgeAndCircle_s_e2: b2Vec2 = new b2Vec2();\nconst b2CollideEdgeAndCircle_s_P: b2Vec2 = new b2Vec2();\nconst b2CollideEdgeAndCircle_s_n: b2Vec2 = new b2Vec2();\nconst b2CollideEdgeAndCircle_s_id: b2ContactID = new b2ContactID();\nexport function b2CollideEdgeAndCircle(manifold: b2Manifold, edgeA: b2EdgeShape, xfA: b2Transform, circleB: b2CircleShape, xfB: b2Transform): void {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  const Q: b2Vec2 = b2Transform.MulTXV(xfA, b2Transform.MulXV(xfB, circleB.m_p, b2Vec2.s_t0), b2CollideEdgeAndCircle_s_Q);\n\n  const A: b2Vec2 = edgeA.m_vertex1;\n  const B: b2Vec2 = edgeA.m_vertex2;\n  const e: b2Vec2 = b2Vec2.SubVV(B, A, b2CollideEdgeAndCircle_s_e);\n\n  // Normal points to the right for a CCW winding\n  // b2Vec2 n(e.y, -e.x);\n  // const n: b2Vec2 = b2CollideEdgeAndCircle_s_n.Set(-e.y, e.x);\n  const n: b2Vec2 = b2CollideEdgeAndCircle_s_n.Set(e.y, -e.x);\n  // float offset = b2Dot(n, Q - A);\n  const offset: number = b2Vec2.DotVV(n, b2Vec2.SubVV(Q, A, b2Vec2.s_t0));\n\n  const oneSided: boolean = edgeA.m_oneSided;\n  if (oneSided && offset < 0.0) {\n    return;\n  }\n\n  // Barycentric coordinates\n  const u: number = b2Vec2.DotVV(e, b2Vec2.SubVV(B, Q, b2Vec2.s_t0));\n  const v: number = b2Vec2.DotVV(e, b2Vec2.SubVV(Q, A, b2Vec2.s_t0));\n\n  const radius: number = edgeA.m_radius + circleB.m_radius;\n\n  // const cf: b2ContactFeature = new b2ContactFeature();\n  const id: b2ContactID = b2CollideEdgeAndCircle_s_id;\n  id.cf.indexB = 0;\n  id.cf.typeB = b2ContactFeatureType.e_vertex;\n\n  // Region A\n  if (v <= 0) {\n    const P: b2Vec2 = A;\n    const d: b2Vec2 = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\n    const dd: number = b2Vec2.DotVV(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_oneSided) {\n      const A1: b2Vec2 = edgeA.m_vertex0;\n      const B1: b2Vec2 = A;\n      const e1: b2Vec2 = b2Vec2.SubVV(B1, A1, b2CollideEdgeAndCircle_s_e1);\n      const u1: number = b2Vec2.DotVV(e1, b2Vec2.SubVV(B1, Q, b2Vec2.s_t0));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0) {\n        return;\n      }\n    }\n\n    id.cf.indexA = 0;\n    id.cf.typeA = b2ContactFeatureType.e_vertex;\n    manifold.pointCount = 1;\n    manifold.type = b2ManifoldType.e_circles;\n    manifold.localNormal.SetZero();\n    manifold.localPoint.Copy(P);\n    manifold.points[0].id.Copy(id);\n    // manifold.points[0].id.key = 0;\n    // manifold.points[0].id.cf = cf;\n    manifold.points[0].localPoint.Copy(circleB.m_p);\n    return;\n  }\n\n  // Region B\n  if (u <= 0) {\n    const P: b2Vec2 = B;\n    const d: b2Vec2 = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\n    const dd: number = b2Vec2.DotVV(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_oneSided) {\n      const B2: b2Vec2 = edgeA.m_vertex3;\n      const A2: b2Vec2 = B;\n      const e2: b2Vec2 = b2Vec2.SubVV(B2, A2, b2CollideEdgeAndCircle_s_e2);\n      const v2: number = b2Vec2.DotVV(e2, b2Vec2.SubVV(Q, A2, b2Vec2.s_t0));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0) {\n        return;\n      }\n    }\n\n    id.cf.indexA = 1;\n    id.cf.typeA = b2ContactFeatureType.e_vertex;\n    manifold.pointCount = 1;\n    manifold.type = b2ManifoldType.e_circles;\n    manifold.localNormal.SetZero();\n    manifold.localPoint.Copy(P);\n    manifold.points[0].id.Copy(id);\n    // manifold.points[0].id.key = 0;\n    // manifold.points[0].id.cf = cf;\n    manifold.points[0].localPoint.Copy(circleB.m_p);\n    return;\n  }\n\n  // Region AB\n  const den: number = b2Vec2.DotVV(e, e);\n  // DEBUG: b2Assert(den > 0);\n  const P: b2Vec2 = b2CollideEdgeAndCircle_s_P;\n  P.x = (1 / den) * (u * A.x + v * B.x);\n  P.y = (1 / den) * (u * A.y + v * B.y);\n  const d: b2Vec2 = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\n  const dd: number = b2Vec2.DotVV(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  if (offset < 0) {\n    n.Set(-n.x, -n.y);\n  }\n  n.Normalize();\n\n  id.cf.indexA = 0;\n  id.cf.typeA = b2ContactFeatureType.e_face;\n  manifold.pointCount = 1;\n  manifold.type = b2ManifoldType.e_faceA;\n  manifold.localNormal.Copy(n);\n  manifold.localPoint.Copy(A);\n  manifold.points[0].id.Copy(id);\n  // manifold.points[0].id.key = 0;\n  // manifold.points[0].id.cf = cf;\n  manifold.points[0].localPoint.Copy(circleB.m_p);\n}\n\nenum b2EPAxisType {\n  e_unknown = 0,\n  e_edgeA = 1,\n  e_edgeB = 2,\n}\n\nclass b2EPAxis {\n  public normal: b2Vec2 = new b2Vec2();\n  public type: b2EPAxisType = b2EPAxisType.e_unknown;\n  public index: number = 0;\n  public separation: number = 0;\n}\n\nclass b2TempPolygon {\n  public vertices: b2Vec2[] = [];\n  public normals: b2Vec2[] = [];\n  public count: number = 0;\n}\n\nclass b2ReferenceFace {\n  public i1: number = 0;\n  public i2: number = 0;\n  public readonly v1: b2Vec2 = new b2Vec2();\n  public readonly v2: b2Vec2 = new b2Vec2();\n  public readonly normal: b2Vec2 = new b2Vec2();\n  public readonly sideNormal1: b2Vec2 = new b2Vec2();\n  public sideOffset1: number = 0;\n  public readonly sideNormal2: b2Vec2 = new b2Vec2();\n  public sideOffset2: number = 0;\n}\n\n// static b2EPAxis b2ComputeEdgeSeparation(const b2TempPolygon& polygonB, const b2Vec2& v1, const b2Vec2& normal1)\nconst b2ComputeEdgeSeparation_s_axis = new b2EPAxis();\nconst b2ComputeEdgeSeparation_s_axes: [ b2Vec2, b2Vec2 ] = [ new b2Vec2(), new b2Vec2() ];\nfunction b2ComputeEdgeSeparation(polygonB: Readonly<b2TempPolygon>, v1: Readonly<b2Vec2>, normal1: Readonly<b2Vec2>): b2EPAxis {\n  // b2EPAxis axis;\n  const axis: b2EPAxis = b2ComputeEdgeSeparation_s_axis;\n  axis.type = b2EPAxisType.e_edgeA;\n  axis.index = -1;\n  axis.separation = -Number.MAX_VALUE; // -FLT_MAX;\n  axis.normal.SetZero();\n\n  // b2Vec2 axes[2] = { normal1, -normal1 };\n  const axes: [b2Vec2, b2Vec2] = b2ComputeEdgeSeparation_s_axes;\n  axes[0].Copy(normal1);\n  axes[1].Copy(normal1).SelfNeg();\n\n  // Find axis with least overlap (min-max problem)\n  for (let j = 0; j < 2; ++j) {\n    let sj: number = Number.MAX_VALUE; // FLT_MAX;\n\n    // Find deepest polygon vertex along axis j\n    for (let i = 0; i < polygonB.count; ++i) {\n      // float si = b2Dot(axes[j], polygonB.vertices[i] - v1);\n      const si: number = b2Vec2.DotVV(axes[j], b2Vec2.SubVV(polygonB.vertices[i], v1, b2Vec2.s_t0));\n      if (si < sj) {\n        sj = si;\n      }\n    }\n\n    if (sj > axis.separation) {\n      axis.index = j;\n      axis.separation = sj;\n      axis.normal.Copy(axes[j]);\n    }\n  }\n\n  return axis;\n}\n\n// static b2EPAxis b2ComputePolygonSeparation(const b2TempPolygon& polygonB, const b2Vec2& v1, const b2Vec2& v2)\nconst b2ComputePolygonSeparation_s_axis = new b2EPAxis();\nconst b2ComputePolygonSeparation_s_n = new b2Vec2();\nfunction b2ComputePolygonSeparation(polygonB: Readonly<b2TempPolygon>, v1: Readonly<b2Vec2>, v2: Readonly<b2Vec2>): b2EPAxis {\n  const axis: b2EPAxis = b2ComputePolygonSeparation_s_axis;\n  axis.type = b2EPAxisType.e_unknown;\n  axis.index = -1;\n  axis.separation = -Number.MAX_VALUE; // -FLT_MAX;\n  axis.normal.SetZero();\n\n  for (let i = 0; i < polygonB.count; ++i) {\n    // b2Vec2 n = -polygonB.normals[i];\n    const n: b2Vec2 = b2Vec2.NegV(polygonB.normals[i], b2ComputePolygonSeparation_s_n);\n\n    // float s1 = b2Dot(n, polygonB.vertices[i] - v1);\n    const s1: number = b2Vec2.DotVV(n, b2Vec2.SubVV(polygonB.vertices[i], v1, b2Vec2.s_t0));\n    // float s2 = b2Dot(n, polygonB.vertices[i] - v2);\n    const s2: number = b2Vec2.DotVV(n, b2Vec2.SubVV(polygonB.vertices[i], v2, b2Vec2.s_t0));\n    // float s = b2Min(s1, s2);\n    const s: number = b2Min(s1, s2);\n\n    if (s > axis.separation) {\n      axis.type = b2EPAxisType.e_edgeB;\n      axis.index = i;\n      axis.separation = s;\n      axis.normal.Copy(n);\n    }\n  }\n\n  return axis;\n}\n\nconst b2CollideEdgeAndPolygon_s_xf = new b2Transform();\nconst b2CollideEdgeAndPolygon_s_centroidB = new b2Vec2();\nconst b2CollideEdgeAndPolygon_s_edge1 = new b2Vec2();\nconst b2CollideEdgeAndPolygon_s_normal1 = new b2Vec2();\nconst b2CollideEdgeAndPolygon_s_edge0 = new b2Vec2();\nconst b2CollideEdgeAndPolygon_s_normal0 = new b2Vec2();\nconst b2CollideEdgeAndPolygon_s_edge2 = new b2Vec2();\nconst b2CollideEdgeAndPolygon_s_normal2 = new b2Vec2();\nconst b2CollideEdgeAndPolygon_s_tempPolygonB = new b2TempPolygon();\nconst b2CollideEdgeAndPolygon_s_ref = new b2ReferenceFace();\nconst b2CollideEdgeAndPolygon_s_clipPoints: [b2ClipVertex, b2ClipVertex] = [ new b2ClipVertex(), new b2ClipVertex() ];\nconst b2CollideEdgeAndPolygon_s_clipPoints1: [b2ClipVertex, b2ClipVertex] = [ new b2ClipVertex(), new b2ClipVertex() ];\nconst b2CollideEdgeAndPolygon_s_clipPoints2: [b2ClipVertex, b2ClipVertex] = [ new b2ClipVertex(), new b2ClipVertex() ];\nexport function b2CollideEdgeAndPolygon(manifold: b2Manifold, edgeA: b2EdgeShape, xfA: b2Transform, polygonB: b2PolygonShape, xfB: b2Transform): void {\n  manifold.pointCount = 0;\n\n  // b2Transform xf = b2MulT(xfA, xfB);\n  const xf = b2Transform.MulTXX(xfA, xfB, b2CollideEdgeAndPolygon_s_xf);\n\n  // b2Vec2 centroidB = b2Mul(xf, polygonB.m_centroid);\n  const centroidB: b2Vec2 = b2Transform.MulXV(xf, polygonB.m_centroid, b2CollideEdgeAndPolygon_s_centroidB);\n\n  // b2Vec2 v1 = edgeA.m_vertex1;\n  const v1: b2Vec2 = edgeA.m_vertex1;\n  // b2Vec2 v2 = edgeA.m_vertex2;\n  const v2: b2Vec2 = edgeA.m_vertex2;\n\n  // b2Vec2 edge1 = v2 - v1;\n  const edge1: b2Vec2 = b2Vec2.SubVV(v2, v1, b2CollideEdgeAndPolygon_s_edge1);\n  edge1.Normalize();\n\n  // Normal points to the right for a CCW winding\n  // b2Vec2 normal1(edge1.y, -edge1.x);\n  const normal1 = b2CollideEdgeAndPolygon_s_normal1.Set(edge1.y, -edge1.x);\n  // float offset1 = b2Dot(normal1, centroidB - v1);\n  const offset1: number = b2Vec2.DotVV(normal1, b2Vec2.SubVV(centroidB, v1, b2Vec2.s_t0));\n\n  const oneSided: boolean = edgeA.m_oneSided;\n  if (oneSided && offset1 < 0.0) {\n    return;\n  }\n\n  // Get polygonB in frameA\n  // b2TempPolygon tempPolygonB;\n  const tempPolygonB: b2TempPolygon = b2CollideEdgeAndPolygon_s_tempPolygonB;\n  tempPolygonB.count = polygonB.m_count;\n  for (let i = 0; i < polygonB.m_count; ++i) {\n    if (tempPolygonB.vertices.length <= i) { tempPolygonB.vertices.push(new b2Vec2()); }\n    if (tempPolygonB.normals.length <= i) { tempPolygonB.normals.push(new b2Vec2()); }\n    // tempPolygonB.vertices[i] = b2Mul(xf, polygonB.m_vertices[i]);\n    b2Transform.MulXV(xf, polygonB.m_vertices[i], tempPolygonB.vertices[i]);\n    // tempPolygonB.normals[i] = b2Mul(xf.q, polygonB.m_normals[i]);\n    b2Rot.MulRV(xf.q, polygonB.m_normals[i], tempPolygonB.normals[i]);\n  }\n\n  const radius: number = polygonB.m_radius + edgeA.m_radius;\n\n  // b2EPAxis edgeAxis = b2ComputeEdgeSeparation(tempPolygonB, v1, normal1);\n  const edgeAxis: b2EPAxis = b2ComputeEdgeSeparation(tempPolygonB, v1, normal1);\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  // b2EPAxis polygonAxis = b2ComputePolygonSeparation(tedge0.y, -edge0.xempPolygonB, v1, v2);\n  const polygonAxis: b2EPAxis = b2ComputePolygonSeparation(tempPolygonB, v1, v2);\n  if (polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  const k_relativeTol: number = 0.98;\n  const k_absoluteTol: number = 0.001;\n\n  // b2EPAxis primaryAxis;\n  let primaryAxis: b2EPAxis;\n  if (polygonAxis.separation - radius > k_relativeTol * (edgeAxis.separation - radius) + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  if (oneSided) {\n    // Smooth collision\n    // See https://box2d.org/posts/2020/06/ghost-collisions/\n\n    // b2Vec2 edge0 = v1 - edgeA.m_vertex0;\n    const edge0: b2Vec2 = b2Vec2.SubVV(v1, edgeA.m_vertex0, b2CollideEdgeAndPolygon_s_edge0);\n    edge0.Normalize();\n    // b2Vec2 normal0(edge0.y, -edge0.x);\n    const normal0: b2Vec2 = b2CollideEdgeAndPolygon_s_normal0.Set(edge0.y, -edge0.x);\n    const convex1: boolean = b2Vec2.CrossVV(edge0, edge1) >= 0.0;\n\n    // b2Vec2 edge2 = edgeA.m_vertex3 - v2;\n    const edge2: b2Vec2 = b2Vec2.SubVV(edgeA.m_vertex3, v2, b2CollideEdgeAndPolygon_s_edge2);\n    edge2.Normalize();\n    // b2Vec2 normal2(edge2.y, -edge2.x);\n    const normal2: b2Vec2 = b2CollideEdgeAndPolygon_s_normal2.Set(edge2.y, -edge2.x);\n    const convex2: boolean = b2Vec2.CrossVV(edge1, edge2) >= 0.0;\n\n    const sinTol: number = 0.1;\n    const side1: boolean = b2Vec2.DotVV(primaryAxis.normal, edge1) <= 0.0;\n\n    // Check Gauss Map\n    if (side1) {\n      if (convex1) {\n        if (b2Vec2.CrossVV(primaryAxis.normal, normal0) > sinTol) {\n          // Skip region\n          return;\n        }\n\n        // Admit region\n      } else {\n        // Snap region\n        primaryAxis = edgeAxis;\n      }\n    } else {\n      if (convex2) {\n        if (b2Vec2.CrossVV(normal2, primaryAxis.normal) > sinTol) {\n          // Skip region\n          return;\n        }\n\n        // Admit region\n      } else {\n        // Snap region\n        primaryAxis = edgeAxis;\n      }\n    }\n  }\n\n  // b2ClipVertex clipPoints[2];\n  const clipPoints: [b2ClipVertex, b2ClipVertex] = b2CollideEdgeAndPolygon_s_clipPoints;\n  // b2ReferenceFace ref;\n  const ref: b2ReferenceFace = b2CollideEdgeAndPolygon_s_ref;\n  if (primaryAxis.type === b2EPAxisType.e_edgeA) {\n    manifold.type = b2ManifoldType.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge normal.\n    let bestIndex: number = 0;\n    let bestValue: number = b2Vec2.DotVV(primaryAxis.normal, tempPolygonB.normals[0]);\n    for (let i = 1; i < tempPolygonB.count; ++i) {\n      const value: number = b2Vec2.DotVV(primaryAxis.normal, tempPolygonB.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    const i1: number = bestIndex;\n    const i2: number = i1 + 1 < tempPolygonB.count ? i1 + 1 : 0;\n\n    clipPoints[0].v.Copy(tempPolygonB.vertices[i1]);\n    clipPoints[0].id.cf.indexA = 0;\n    clipPoints[0].id.cf.indexB = i1;\n    clipPoints[0].id.cf.typeA = b2ContactFeatureType.e_face;\n    clipPoints[0].id.cf.typeB = b2ContactFeatureType.e_vertex;\n\n    clipPoints[1].v.Copy(tempPolygonB.vertices[i2]);\n    clipPoints[1].id.cf.indexA = 0;\n    clipPoints[1].id.cf.indexB = i2;\n    clipPoints[1].id.cf.typeA = b2ContactFeatureType.e_face;\n    clipPoints[1].id.cf.typeB = b2ContactFeatureType.e_vertex;\n\n    ref.i1 = 0;\n    ref.i2 = 1;\n    ref.v1.Copy(v1);\n    ref.v2.Copy(v2);\n    ref.normal.Copy(primaryAxis.normal);\n    ref.sideNormal1.Copy(edge1).SelfNeg(); // ref.sideNormal1 = -edge1;\n    ref.sideNormal2.Copy(edge1);\n  } else {\n    manifold.type = b2ManifoldType.e_faceB;\n\n    clipPoints[0].v.Copy(v2);\n    clipPoints[0].id.cf.indexA = 1;\n    clipPoints[0].id.cf.indexB = primaryAxis.index;\n    clipPoints[0].id.cf.typeA = b2ContactFeatureType.e_vertex;\n    clipPoints[0].id.cf.typeB = b2ContactFeatureType.e_face;\n\n    clipPoints[1].v.Copy(v1);\n    clipPoints[1].id.cf.indexA = 0;\n    clipPoints[1].id.cf.indexB = primaryAxis.index;\n    clipPoints[1].id.cf.typeA = b2ContactFeatureType.e_vertex;\n    clipPoints[1].id.cf.typeB = b2ContactFeatureType.e_face;\n\n    ref.i1 = primaryAxis.index;\n    ref.i2 = ref.i1 + 1 < tempPolygonB.count ? ref.i1 + 1 : 0;\n    ref.v1.Copy(tempPolygonB.vertices[ref.i1]);\n    ref.v2.Copy(tempPolygonB.vertices[ref.i2]);\n    ref.normal.Copy(tempPolygonB.normals[ref.i1]);\n\n    // CCW winding\n    ref.sideNormal1.Set(ref.normal.y, -ref.normal.x);\n    ref.sideNormal2.Copy(ref.sideNormal1).SelfNeg(); // ref.sideNormal2 = -ref.sideNormal1;\n  }\n\n  ref.sideOffset1 = b2Vec2.DotVV(ref.sideNormal1, ref.v1);\n  ref.sideOffset2 = b2Vec2.DotVV(ref.sideNormal2, ref.v2);\n\n  // Clip incident edge against reference face side planes\n  // b2ClipVertex clipPoints1[2];\n  const clipPoints1: [b2ClipVertex, b2ClipVertex] = b2CollideEdgeAndPolygon_s_clipPoints1; // [new b2ClipVertex(), new b2ClipVertex()];\n  // b2ClipVertex clipPoints2[2];\n  const clipPoints2: [b2ClipVertex, b2ClipVertex] = b2CollideEdgeAndPolygon_s_clipPoints2; // [new b2ClipVertex(), new b2ClipVertex()];\n  // int32 np;\n  let np: number;\n\n  // Clip to side 1\n  np = b2ClipSegmentToLine(clipPoints1, clipPoints, ref.sideNormal1, ref.sideOffset1, ref.i1);\n\n  if (np < b2_maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to side 2\n  np = b2ClipSegmentToLine(clipPoints2, clipPoints1, ref.sideNormal2, ref.sideOffset2, ref.i2);\n\n  if (np < b2_maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type === b2EPAxisType.e_edgeA) {\n    manifold.localNormal.Copy(ref.normal);\n    manifold.localPoint.Copy(ref.v1);\n  } else {\n    manifold.localNormal.Copy(polygonB.m_normals[ref.i1]);\n    manifold.localPoint.Copy(polygonB.m_vertices[ref.i1]);\n  }\n\n  let pointCount = 0;\n  for (let i = 0; i < b2_maxManifoldPoints; ++i) {\n    const separation: number = b2Vec2.DotVV(ref.normal, b2Vec2.SubVV(clipPoints2[i].v, ref.v1, b2Vec2.s_t0));\n\n    if (separation <= radius) {\n      const cp: b2ManifoldPoint = manifold.points[pointCount];\n\n      if (primaryAxis.type === b2EPAxisType.e_edgeA) {\n        b2Transform.MulTXV(xf, clipPoints2[i].v, cp.localPoint); // cp.localPoint = b2MulT(xf, clipPoints2[i].v);\n        cp.id.Copy(clipPoints2[i].id);\n      } else {\n        cp.localPoint.Copy(clipPoints2[i].v);\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n",
    "// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { b2_linearSlop, b2_maxFloat, b2_maxManifoldPoints } from \"../common/b2_common\";\nimport { b2Vec2, b2Transform, b2Rot } from \"../common/b2_math\";\nimport { b2Manifold, b2ClipVertex, b2ContactFeature, b2ContactFeatureType, b2ManifoldType, b2ClipSegmentToLine, b2ManifoldPoint } from \"./b2_collision\";\nimport { b2PolygonShape } from \"./b2_polygon_shape\";\n\n// Find the max separation between poly1 and poly2 using edge normals from poly1.\nconst b2FindMaxSeparation_s_xf: b2Transform = new b2Transform();\nconst b2FindMaxSeparation_s_n: b2Vec2 = new b2Vec2();\nconst b2FindMaxSeparation_s_v1: b2Vec2 = new b2Vec2();\nfunction b2FindMaxSeparation(edgeIndex: [number], poly1: b2PolygonShape, xf1: b2Transform, poly2: b2PolygonShape, xf2: b2Transform): number {\n  const count1: number = poly1.m_count;\n  const count2: number = poly2.m_count;\n  const n1s: b2Vec2[] = poly1.m_normals;\n  const v1s: b2Vec2[] = poly1.m_vertices;\n  const v2s: b2Vec2[] = poly2.m_vertices;\n  const xf: b2Transform = b2Transform.MulTXX(xf2, xf1, b2FindMaxSeparation_s_xf);\n\n  let bestIndex: number = 0;\n  let maxSeparation: number = -b2_maxFloat;\n\n  for (let i: number = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    const n: b2Vec2 = b2Rot.MulRV(xf.q, n1s[i], b2FindMaxSeparation_s_n);\n    const v1: b2Vec2 = b2Transform.MulXV(xf, v1s[i], b2FindMaxSeparation_s_v1);\n\n    // Find deepest point for normal i.\n    let si: number = b2_maxFloat;\n    for (let j: number = 0; j < count2; ++j) {\n      const sij = b2Vec2.DotVV(n, b2Vec2.SubVV(v2s[j], v1, b2Vec2.s_t0));\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  edgeIndex[0] = bestIndex;\n  return maxSeparation;\n}\n\nconst b2FindIncidentEdge_s_normal1: b2Vec2 = new b2Vec2();\nfunction b2FindIncidentEdge(c: [b2ClipVertex, b2ClipVertex], poly1: b2PolygonShape, xf1: b2Transform, edge1: number, poly2: b2PolygonShape, xf2: b2Transform): void {\n  const normals1: b2Vec2[] = poly1.m_normals;\n\n  const count2: number = poly2.m_count;\n  const vertices2: b2Vec2[] = poly2.m_vertices;\n  const normals2: b2Vec2[] = poly2.m_normals;\n\n  // DEBUG: b2Assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  const normal1: b2Vec2 = b2Rot.MulTRV(xf2.q, b2Rot.MulRV(xf1.q, normals1[edge1], b2Vec2.s_t0), b2FindIncidentEdge_s_normal1);\n\n  // Find the incident edge on poly2.\n  let index: number = 0;\n  let minDot: number = b2_maxFloat;\n  for (let i: number = 0; i < count2; ++i) {\n    const dot: number = b2Vec2.DotVV(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  const i1: number = index;\n  const i2: number = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  const c0: b2ClipVertex = c[0];\n  b2Transform.MulXV(xf2, vertices2[i1], c0.v);\n  const cf0: b2ContactFeature = c0.id.cf;\n  cf0.indexA = edge1;\n  cf0.indexB = i1;\n  cf0.typeA = b2ContactFeatureType.e_face;\n  cf0.typeB = b2ContactFeatureType.e_vertex;\n\n  const c1: b2ClipVertex = c[1];\n  b2Transform.MulXV(xf2, vertices2[i2], c1.v);\n  const cf1: b2ContactFeature = c1.id.cf;\n  cf1.indexA = edge1;\n  cf1.indexB = i2;\n  cf1.typeA = b2ContactFeatureType.e_face;\n  cf1.typeB = b2ContactFeatureType.e_vertex;\n}\n\n// Find edge normal of max separation on A - return if separating axis is found\n// Find edge normal of max separation on B - return if separation axis is found\n// Choose reference edge as min(minA, minB)\n// Find incident edge\n// Clip\n\n// The normal points from 1 to 2\nconst b2CollidePolygons_s_incidentEdge: [b2ClipVertex, b2ClipVertex] = [ new b2ClipVertex(), new b2ClipVertex() ];\nconst b2CollidePolygons_s_clipPoints1: [b2ClipVertex, b2ClipVertex] = [ new b2ClipVertex(), new b2ClipVertex() ];\nconst b2CollidePolygons_s_clipPoints2: [b2ClipVertex, b2ClipVertex] = [ new b2ClipVertex(), new b2ClipVertex() ];\nconst b2CollidePolygons_s_edgeA: [number] = [ 0 ];\nconst b2CollidePolygons_s_edgeB: [number] = [ 0 ];\nconst b2CollidePolygons_s_localTangent: b2Vec2 = new b2Vec2();\nconst b2CollidePolygons_s_localNormal: b2Vec2 = new b2Vec2();\nconst b2CollidePolygons_s_planePoint: b2Vec2 = new b2Vec2();\nconst b2CollidePolygons_s_normal: b2Vec2 = new b2Vec2();\nconst b2CollidePolygons_s_tangent: b2Vec2 = new b2Vec2();\nconst b2CollidePolygons_s_ntangent: b2Vec2 = new b2Vec2();\nconst b2CollidePolygons_s_v11: b2Vec2 = new b2Vec2();\nconst b2CollidePolygons_s_v12: b2Vec2 = new b2Vec2();\nexport function b2CollidePolygons(manifold: b2Manifold, polyA: b2PolygonShape, xfA: b2Transform, polyB: b2PolygonShape, xfB: b2Transform): void {\n  manifold.pointCount = 0;\n  const totalRadius: number = polyA.m_radius + polyB.m_radius;\n\n  const edgeA: [number] = b2CollidePolygons_s_edgeA; edgeA[0] = 0;\n  const separationA: number = b2FindMaxSeparation(edgeA, polyA, xfA, polyB, xfB);\n  if (separationA > totalRadius) {\n    return;\n  }\n\n  const edgeB: [number] = b2CollidePolygons_s_edgeB; edgeB[0] = 0;\n  const separationB: number = b2FindMaxSeparation(edgeB, polyB, xfB, polyA, xfA);\n  if (separationB > totalRadius) {\n    return;\n  }\n\n  let poly1: b2PolygonShape; // reference polygon\n  let poly2: b2PolygonShape; // incident polygon\n  let xf1: b2Transform, xf2: b2Transform;\n  let edge1: number = 0; // reference edge\n  let flip: number = 0;\n  const k_tol: number = 0.1 * b2_linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB[0];\n    manifold.type = b2ManifoldType.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA[0];\n    manifold.type = b2ManifoldType.e_faceA;\n    flip = 0;\n  }\n\n  const incidentEdge: [b2ClipVertex, b2ClipVertex] = b2CollidePolygons_s_incidentEdge;\n  b2FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  const count1: number = poly1.m_count;\n  const vertices1: b2Vec2[] = poly1.m_vertices;\n\n  const iv1: number = edge1;\n  const iv2: number = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  const local_v11: b2Vec2 = vertices1[iv1];\n  const local_v12: b2Vec2 = vertices1[iv2];\n\n  const localTangent: b2Vec2 = b2Vec2.SubVV(local_v12, local_v11, b2CollidePolygons_s_localTangent);\n  localTangent.Normalize();\n\n  const localNormal: b2Vec2 = b2Vec2.CrossVOne(localTangent, b2CollidePolygons_s_localNormal);\n  const planePoint: b2Vec2 = b2Vec2.MidVV(local_v11, local_v12, b2CollidePolygons_s_planePoint);\n\n  const tangent: b2Vec2 = b2Rot.MulRV(xf1.q, localTangent, b2CollidePolygons_s_tangent);\n  const normal: b2Vec2 = b2Vec2.CrossVOne(tangent, b2CollidePolygons_s_normal);\n\n  const v11: b2Vec2 = b2Transform.MulXV(xf1, local_v11, b2CollidePolygons_s_v11);\n  const v12: b2Vec2 = b2Transform.MulXV(xf1, local_v12, b2CollidePolygons_s_v12);\n\n  // Face offset.\n  const frontOffset: number = b2Vec2.DotVV(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  const sideOffset1: number = -b2Vec2.DotVV(tangent, v11) + totalRadius;\n  const sideOffset2: number = b2Vec2.DotVV(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  const clipPoints1: [b2ClipVertex, b2ClipVertex] = b2CollidePolygons_s_clipPoints1;\n  const clipPoints2: [b2ClipVertex, b2ClipVertex] = b2CollidePolygons_s_clipPoints2;\n  let np: number;\n\n  // Clip to box side 1\n  const ntangent: b2Vec2 = b2Vec2.NegV(tangent, b2CollidePolygons_s_ntangent);\n  np = b2ClipSegmentToLine(clipPoints1, incidentEdge, ntangent, sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = b2ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal.Copy(localNormal);\n  manifold.localPoint.Copy(planePoint);\n\n  let pointCount: number = 0;\n  for (let i: number = 0; i < b2_maxManifoldPoints; ++i) {\n    const cv: b2ClipVertex = clipPoints2[i];\n    const separation: number = b2Vec2.DotVV(normal, cv.v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      const cp: b2ManifoldPoint = manifold.points[pointCount];\n      b2Transform.MulTXV(xf2, cv.v, cp.localPoint);\n      cp.id.Copy(cv.id);\n      if (flip) {\n        // Swap features\n        const cf: b2ContactFeature = cp.id.cf;\n        cp.id.cf.indexA = cf.indexB;\n        cp.id.cf.indexB = cf.indexA;\n        cp.id.cf.typeA = cf.typeB;\n        cp.id.cf.typeB = cf.typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_maxFloat, b2_epsilon, b2_epsilon_sq, b2_maxManifoldPoints, b2MakeArray, b2MakeNumberArray } from \"../common/b2_settings\";\nimport { b2Abs, b2Min, b2Max, b2Vec2, b2Rot, b2Transform, XY } from \"../common/b2_math\";\nimport { b2Shape } from \"./b2_shape\";\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2SimplexCache } from \"./b2_distance\";\n\n/// @file\n/// Structures and functions used for computing contact points, distance\n/// queries, and TOI queries.\n\nexport enum b2ContactFeatureType {\n  e_vertex = 0,\n  e_face = 1,\n}\n\n/// The features that intersect to form the contact point\n/// This must be 4 bytes or less.\nexport class b2ContactFeature {\n  private _key: number = 0;\n  private _key_invalid = false;\n  private _indexA: number = 0;\n  private _indexB: number = 0;\n  private _typeA: b2ContactFeatureType = 0;\n  private _typeB: b2ContactFeatureType = 0;\n\n  public get key(): number {\n    if (this._key_invalid) {\n      this._key_invalid = false;\n      this._key = this._indexA | (this._indexB << 8) | (this._typeA << 16) | (this._typeB << 24);\n    }\n    return this._key;\n  }\n\n  public set key(value: number) {\n    this._key = value;\n    this._key_invalid = false;\n    this._indexA = this._key & 0xff;\n    this._indexB = (this._key >> 8) & 0xff;\n    this._typeA = (this._key >> 16) & 0xff;\n    this._typeB = (this._key >> 24) & 0xff;\n  }\n\n  public get indexA(): number {\n    return this._indexA;\n  }\n\n  public set indexA(value: number) {\n    this._indexA = value;\n    this._key_invalid = true;\n  }\n\n  public get indexB(): number {\n    return this._indexB;\n  }\n\n  public set indexB(value: number) {\n    this._indexB = value;\n    this._key_invalid = true;\n  }\n\n  public get typeA(): number {\n    return this._typeA;\n  }\n\n  public set typeA(value: number) {\n    this._typeA = value;\n    this._key_invalid = true;\n  }\n\n  public get typeB(): number {\n    return this._typeB;\n  }\n\n  public set typeB(value: number) {\n    this._typeB = value;\n    this._key_invalid = true;\n  }\n}\n\n/// Contact ids to facilitate warm starting.\nexport class b2ContactID {\n  public readonly cf: b2ContactFeature = new b2ContactFeature();\n\n  public Copy(o: b2ContactID): b2ContactID {\n    this.key = o.key;\n    return this;\n  }\n\n  public Clone(): b2ContactID {\n    return new b2ContactID().Copy(this);\n  }\n\n  public get key(): number {\n    return this.cf.key;\n  }\n\n  public set key(value: number) {\n    this.cf.key = value;\n  }\n}\n\n/// A manifold point is a contact point belonging to a contact\n/// manifold. It holds details related to the geometry and dynamics\n/// of the contact points.\n/// The local point usage depends on the manifold type:\n/// -e_circles: the local center of circleB\n/// -e_faceA: the local center of cirlceB or the clip point of polygonB\n/// -e_faceB: the clip point of polygonA\n/// This structure is stored across time steps, so we keep it small.\n/// Note: the impulses are used for internal caching and may not\n/// provide reliable contact forces, especially for high speed collisions.\nexport class b2ManifoldPoint {\n  public readonly localPoint: b2Vec2 = new b2Vec2();  ///< usage depends on manifold type\n  public normalImpulse: number = 0;      ///< the non-penetration impulse\n  public tangentImpulse: number = 0;      ///< the friction impulse\n  public readonly id: b2ContactID = new b2ContactID(); ///< uniquely identifies a contact point between two shapes\n\n  public static MakeArray(length: number): b2ManifoldPoint[] {\n    return b2MakeArray(length, (i: number): b2ManifoldPoint => new b2ManifoldPoint());\n  }\n\n  public Reset(): void {\n    this.localPoint.SetZero();\n    this.normalImpulse = 0;\n    this.tangentImpulse = 0;\n    this.id.key = 0;\n  }\n\n  public Copy(o: b2ManifoldPoint): b2ManifoldPoint {\n    this.localPoint.Copy(o.localPoint);\n    this.normalImpulse = o.normalImpulse;\n    this.tangentImpulse = o.tangentImpulse;\n    this.id.Copy(o.id);\n    return this;\n  }\n}\n\nexport enum b2ManifoldType {\n  e_unknown = -1,\n  e_circles = 0,\n  e_faceA = 1,\n  e_faceB = 2,\n}\n\n/// A manifold for two touching convex shapes.\n/// Box2D supports multiple types of contact:\n/// - clip point versus plane with radius\n/// - point versus point with radius (circles)\n/// The local point usage depends on the manifold type:\n/// -e_circles: the local center of circleA\n/// -e_faceA: the center of faceA\n/// -e_faceB: the center of faceB\n/// Similarly the local normal usage:\n/// -e_circles: not used\n/// -e_faceA: the normal on polygonA\n/// -e_faceB: the normal on polygonB\n/// We store contacts in this way so that position correction can\n/// account for movement, which is critical for continuous physics.\n/// All contact scenarios must be expressed in one of these types.\n/// This structure is stored across time steps, so we keep it small.\nexport class b2Manifold {\n  public readonly points: b2ManifoldPoint[] = b2ManifoldPoint.MakeArray(b2_maxManifoldPoints);\n  public readonly localNormal: b2Vec2 = new b2Vec2();\n  public readonly localPoint: b2Vec2 = new b2Vec2();\n  public type: b2ManifoldType = b2ManifoldType.e_unknown;\n  public pointCount: number = 0;\n\n  public Reset(): void {\n    for (let i: number = 0; i < b2_maxManifoldPoints; ++i) {\n      // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\n      this.points[i].Reset();\n    }\n    this.localNormal.SetZero();\n    this.localPoint.SetZero();\n    this.type = b2ManifoldType.e_unknown;\n    this.pointCount = 0;\n  }\n\n  public Copy(o: b2Manifold): b2Manifold {\n    this.pointCount = o.pointCount;\n    for (let i: number = 0; i < b2_maxManifoldPoints; ++i) {\n      // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\n      this.points[i].Copy(o.points[i]);\n    }\n    this.localNormal.Copy(o.localNormal);\n    this.localPoint.Copy(o.localPoint);\n    this.type = o.type;\n    return this;\n  }\n\n  public Clone(): b2Manifold {\n    return new b2Manifold().Copy(this);\n  }\n}\n\nexport class b2WorldManifold {\n  public readonly normal: b2Vec2 = new b2Vec2();\n  public readonly points: b2Vec2[] = b2Vec2.MakeArray(b2_maxManifoldPoints);\n  public readonly separations: number[] = b2MakeNumberArray(b2_maxManifoldPoints);\n\n  private static Initialize_s_pointA = new b2Vec2();\n  private static Initialize_s_pointB = new b2Vec2();\n  private static Initialize_s_cA = new b2Vec2();\n  private static Initialize_s_cB = new b2Vec2();\n  private static Initialize_s_planePoint = new b2Vec2();\n  private static Initialize_s_clipPoint = new b2Vec2();\n  public Initialize(manifold: b2Manifold, xfA: b2Transform, radiusA: number, xfB: b2Transform, radiusB: number): void {\n    if (manifold.pointCount === 0) {\n      return;\n    }\n\n    switch (manifold.type) {\n    case b2ManifoldType.e_circles: {\n        this.normal.Set(1, 0);\n        const pointA: b2Vec2 = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_pointA);\n        const pointB: b2Vec2 = b2Transform.MulXV(xfB, manifold.points[0].localPoint, b2WorldManifold.Initialize_s_pointB);\n        if (b2Vec2.DistanceSquaredVV(pointA, pointB) > b2_epsilon_sq) {\n          b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\n        }\n\n        const cA: b2Vec2 = b2Vec2.AddVMulSV(pointA, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\n        const cB: b2Vec2 = b2Vec2.SubVMulSV(pointB, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\n        b2Vec2.MidVV(cA, cB, this.points[0]);\n        this.separations[0] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\n        break;\n      }\n\n    case b2ManifoldType.e_faceA: {\n        b2Rot.MulRV(xfA.q, manifold.localNormal, this.normal);\n        const planePoint: b2Vec2 = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\n\n        for (let i: number = 0; i < manifold.pointCount; ++i) {\n          const clipPoint: b2Vec2 = b2Transform.MulXV(xfB, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\n          const s: number = radiusA - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\n          const cA: b2Vec2 = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cA);\n          const cB: b2Vec2 = b2Vec2.SubVMulSV(clipPoint, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\n          b2Vec2.MidVV(cA, cB, this.points[i]);\n          this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\n        }\n        break;\n      }\n\n    case b2ManifoldType.e_faceB: {\n        b2Rot.MulRV(xfB.q, manifold.localNormal, this.normal);\n        const planePoint: b2Vec2 = b2Transform.MulXV(xfB, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\n\n        for (let i: number = 0; i < manifold.pointCount; ++i) {\n          const clipPoint: b2Vec2 = b2Transform.MulXV(xfA, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\n          const s: number = radiusB - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\n          const cB: b2Vec2 = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cB);\n          const cA: b2Vec2 = b2Vec2.SubVMulSV(clipPoint, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\n          b2Vec2.MidVV(cA, cB, this.points[i]);\n          this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cA, cB, b2Vec2.s_t0), this.normal); // b2Dot(cA - cB, normal);\n        }\n\n        // Ensure normal points from A to B.\n        this.normal.SelfNeg();\n        break;\n      }\n    }\n  }\n}\n\n/// This is used for determining the state of contact points.\nexport enum b2PointState {\n  b2_nullState = 0, ///< point does not exist\n  b2_addState = 1, ///< point was added in the update\n  b2_persistState = 2, ///< point persisted across the update\n  b2_removeState = 3,  ///< point was removed in the update\n}\n\n/// Compute the point states given two manifolds. The states pertain to the transition from manifold1\n/// to manifold2. So state1 is either persist or remove while state2 is either add or persist.\nexport function b2GetPointStates(state1: b2PointState[], state2: b2PointState[], manifold1: b2Manifold, manifold2: b2Manifold): void {\n  // Detect persists and removes.\n  let i: number;\n  for (i = 0; i < manifold1.pointCount; ++i) {\n    const id: b2ContactID = manifold1.points[i].id;\n    const key: number = id.key;\n\n    state1[i] = b2PointState.b2_removeState;\n\n    for (let j: number = 0, jct = manifold2.pointCount; j < jct; ++j) {\n      if (manifold2.points[j].id.key === key) {\n        state1[i] = b2PointState.b2_persistState;\n        break;\n      }\n    }\n  }\n  for (; i < b2_maxManifoldPoints; ++i) {\n    state1[i] = b2PointState.b2_nullState;\n  }\n\n  // Detect persists and adds.\n  for (i = 0; i < manifold2.pointCount; ++i) {\n    const id: b2ContactID = manifold2.points[i].id;\n    const key: number = id.key;\n\n    state2[i] = b2PointState.b2_addState;\n\n    for (let j: number = 0, jct = manifold1.pointCount; j < jct; ++j) {\n      if (manifold1.points[j].id.key === key) {\n        state2[i] = b2PointState.b2_persistState;\n        break;\n      }\n    }\n  }\n  for (; i < b2_maxManifoldPoints; ++i) {\n    state2[i] = b2PointState.b2_nullState;\n  }\n}\n\n/// Used for computing contact manifolds.\nexport class b2ClipVertex {\n  public readonly v: b2Vec2 = new b2Vec2();\n  public readonly id: b2ContactID = new b2ContactID();\n\n  public static MakeArray(length: number): b2ClipVertex[] {\n    return b2MakeArray(length, (i: number): b2ClipVertex => new b2ClipVertex());\n  }\n\n  public Copy(other: b2ClipVertex): b2ClipVertex {\n    this.v.Copy(other.v);\n    this.id.Copy(other.id);\n    return this;\n  }\n}\n\n/// Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\nexport class b2RayCastInput {\n  public readonly p1: b2Vec2 = new b2Vec2();\n  public readonly p2: b2Vec2 = new b2Vec2();\n  public maxFraction: number = 1;\n\n  public Copy(o: b2RayCastInput): b2RayCastInput {\n    this.p1.Copy(o.p1);\n    this.p2.Copy(o.p2);\n    this.maxFraction = o.maxFraction;\n    return this;\n  }\n}\n\n/// Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and p2\n/// come from b2RayCastInput.\nexport class b2RayCastOutput {\n  public readonly normal: b2Vec2 = new b2Vec2();\n  public fraction: number = 0;\n\n  public Copy(o: b2RayCastOutput): b2RayCastOutput {\n    this.normal.Copy(o.normal);\n    this.fraction = o.fraction;\n    return this;\n  }\n}\n\n/// An axis aligned bounding box.\nexport class b2AABB {\n  public readonly lowerBound: b2Vec2 = new b2Vec2(); ///< the lower vertex\n  public readonly upperBound: b2Vec2 = new b2Vec2(); ///< the upper vertex\n\n  private readonly m_cache_center: b2Vec2 = new b2Vec2(); // access using GetCenter()\n  private readonly m_cache_extent: b2Vec2 = new b2Vec2(); // access using GetExtents()\n\n  public Copy(o: b2AABB): b2AABB {\n    this.lowerBound.Copy(o.lowerBound);\n    this.upperBound.Copy(o.upperBound);\n    return this;\n  }\n\n  /// Verify that the bounds are sorted.\n  public IsValid(): boolean {\n    if (!this.lowerBound.IsValid()) { return false; }\n    if (!this.upperBound.IsValid()) { return false; }\n    if (this.upperBound.x < this.lowerBound.x) { return false; }\n    if (this.upperBound.y < this.lowerBound.y) { return false; }\n    return true;\n  }\n\n  /// Get the center of the AABB.\n  public GetCenter(): b2Vec2 {\n    return b2Vec2.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);\n  }\n\n  /// Get the extents of the AABB (half-widths).\n  public GetExtents(): b2Vec2 {\n    return b2Vec2.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);\n  }\n\n  /// Get the perimeter length\n  public GetPerimeter(): number {\n    const wx: number = this.upperBound.x - this.lowerBound.x;\n    const wy: number = this.upperBound.y - this.lowerBound.y;\n    return 2 * (wx + wy);\n  }\n\n  /// Combine an AABB into this one.\n  public Combine1(aabb: b2AABB): b2AABB {\n    this.lowerBound.x = b2Min(this.lowerBound.x, aabb.lowerBound.x);\n    this.lowerBound.y = b2Min(this.lowerBound.y, aabb.lowerBound.y);\n    this.upperBound.x = b2Max(this.upperBound.x, aabb.upperBound.x);\n    this.upperBound.y = b2Max(this.upperBound.y, aabb.upperBound.y);\n    return this;\n  }\n\n  /// Combine two AABBs into this one.\n  public Combine2(aabb1: b2AABB, aabb2: b2AABB): b2AABB {\n    this.lowerBound.x = b2Min(aabb1.lowerBound.x, aabb2.lowerBound.x);\n    this.lowerBound.y = b2Min(aabb1.lowerBound.y, aabb2.lowerBound.y);\n    this.upperBound.x = b2Max(aabb1.upperBound.x, aabb2.upperBound.x);\n    this.upperBound.y = b2Max(aabb1.upperBound.y, aabb2.upperBound.y);\n    return this;\n  }\n\n  public static Combine(aabb1: b2AABB, aabb2: b2AABB, out: b2AABB): b2AABB {\n    out.Combine2(aabb1, aabb2);\n    return out;\n  }\n\n  /// Does this aabb contain the provided AABB.\n  public Contains(aabb: b2AABB): boolean {\n    let result: boolean = true;\n    result = result && this.lowerBound.x <= aabb.lowerBound.x;\n    result = result && this.lowerBound.y <= aabb.lowerBound.y;\n    result = result && aabb.upperBound.x <= this.upperBound.x;\n    result = result && aabb.upperBound.y <= this.upperBound.y;\n    return result;\n  }\n\n  // From Real-time Collision Detection, p179.\n  public RayCast(output: b2RayCastOutput, input: b2RayCastInput): boolean {\n    let tmin: number = (-b2_maxFloat);\n    let tmax: number = b2_maxFloat;\n\n    const p_x: number = input.p1.x;\n    const p_y: number = input.p1.y;\n    const d_x: number = input.p2.x - input.p1.x;\n    const d_y: number = input.p2.y - input.p1.y;\n    const absD_x: number = b2Abs(d_x);\n    const absD_y: number = b2Abs(d_y);\n\n    const normal: b2Vec2 = output.normal;\n\n    if (absD_x < b2_epsilon) {\n      // Parallel.\n      if (p_x < this.lowerBound.x || this.upperBound.x < p_x) {\n        return false;\n      }\n    } else {\n      const inv_d: number = 1 / d_x;\n      let t1: number = (this.lowerBound.x - p_x) * inv_d;\n      let t2: number = (this.upperBound.x - p_x) * inv_d;\n\n      // Sign of the normal vector.\n      let s: number = (-1);\n\n      if (t1 > t2) {\n        const t3: number = t1;\n        t1 = t2;\n        t2 = t3;\n        s = 1;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.x = s;\n        normal.y = 0;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = b2Min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n\n    if (absD_y < b2_epsilon) {\n      // Parallel.\n      if (p_y < this.lowerBound.y || this.upperBound.y < p_y) {\n        return false;\n      }\n    } else {\n      const inv_d: number = 1 / d_y;\n      let t1: number = (this.lowerBound.y - p_y) * inv_d;\n      let t2: number = (this.upperBound.y - p_y) * inv_d;\n\n      // Sign of the normal vector.\n      let s: number = (-1);\n\n      if (t1 > t2) {\n        const t3: number = t1;\n        t1 = t2;\n        t2 = t3;\n        s = 1;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.x = 0;\n        normal.y = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = b2Min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n\n    // Does the ray start inside the box?\n    // Does the ray intersect beyond the max fraction?\n    if (tmin < 0 || input.maxFraction < tmin) {\n      return false;\n    }\n\n    // Intersection.\n    output.fraction = tmin;\n\n    return true;\n  }\n\n  public TestContain(point: XY): boolean {\n    if (point.x < this.lowerBound.x || this.upperBound.x < point.x) { return false; }\n    if (point.y < this.lowerBound.y || this.upperBound.y < point.y) { return false; }\n    return true;\n  }\n\n  public TestOverlap(other: b2AABB): boolean {\n    if (this.upperBound.x < other.lowerBound.x) { return false; }\n    if (this.upperBound.y < other.lowerBound.y) { return false; }\n    if (other.upperBound.x < this.lowerBound.x) { return false; }\n    if (other.upperBound.y < this.lowerBound.y) { return false; }\n    return true;\n  }\n}\n\nexport function b2TestOverlapAABB(a: b2AABB, b: b2AABB): boolean {\n  if (a.upperBound.x < b.lowerBound.x) { return false; }\n  if (a.upperBound.y < b.lowerBound.y) { return false; }\n  if (b.upperBound.x < a.lowerBound.x) { return false; }\n  if (b.upperBound.y < a.lowerBound.y) { return false; }\n  return true;\n}\n\n/// Clipping for contact manifolds.\nexport function b2ClipSegmentToLine(vOut: [b2ClipVertex, b2ClipVertex], vIn: [b2ClipVertex, b2ClipVertex], normal: b2Vec2, offset: number, vertexIndexA: number): number {\n  // Start with no output points\n  let count: number = 0;\n\n  const vIn0: b2ClipVertex = vIn[0];\n  const vIn1: b2ClipVertex = vIn[1];\n\n  // Calculate the distance of end points to the line\n  const distance0: number = b2Vec2.DotVV(normal, vIn0.v) - offset;\n  const distance1: number = b2Vec2.DotVV(normal, vIn1.v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0) { vOut[count++].Copy(vIn0); }\n  if (distance1 <= 0) { vOut[count++].Copy(vIn1); }\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0) {\n    // Find intersection point of edge and plane\n    const interp: number = distance0 / (distance0 - distance1);\n    const v: b2Vec2 = vOut[count].v;\n    v.x = vIn0.v.x + interp * (vIn1.v.x - vIn0.v.x);\n    v.y = vIn0.v.y + interp * (vIn1.v.y - vIn0.v.y);\n\n    // VertexA is hitting edgeB.\n    const id: b2ContactID = vOut[count].id;\n    id.cf.indexA = vertexIndexA;\n    id.cf.indexB = vIn0.id.cf.indexB;\n    id.cf.typeA = b2ContactFeatureType.e_vertex;\n    id.cf.typeB = b2ContactFeatureType.e_face;\n    ++count;\n\n    // b2Assert(count === 2);\n  }\n\n  return count;\n}\n\n/// Determine if two generic shapes overlap.\nconst b2TestOverlapShape_s_input: b2DistanceInput = new b2DistanceInput();\nconst b2TestOverlapShape_s_simplexCache: b2SimplexCache = new b2SimplexCache();\nconst b2TestOverlapShape_s_output: b2DistanceOutput = new b2DistanceOutput();\nexport function b2TestOverlapShape(shapeA: b2Shape, indexA: number, shapeB: b2Shape, indexB: number, xfA: b2Transform, xfB: b2Transform): boolean {\n  const input: b2DistanceInput = b2TestOverlapShape_s_input.Reset();\n  input.proxyA.SetShape(shapeA, indexA);\n  input.proxyB.SetShape(shapeB, indexB);\n  input.transformA.Copy(xfA);\n  input.transformB.Copy(xfB);\n  input.useRadii = true;\n\n  const simplexCache: b2SimplexCache = b2TestOverlapShape_s_simplexCache.Reset();\n  simplexCache.count = 0;\n\n  const output: b2DistanceOutput = b2TestOverlapShape_s_output.Reset();\n\n  b2Distance(output, simplexCache, input);\n\n  return output.distance < 10 * b2_epsilon;\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_epsilon, b2_epsilon_sq, b2_polygonRadius, b2_linearSlop } from \"../common/b2_settings\";\nimport { b2Max, b2Vec2, b2Rot, b2Transform } from \"../common/b2_math\";\nimport { b2Shape } from \"./b2_shape\";\n\n/// A distance proxy is used by the GJK algorithm.\n/// It encapsulates any shape.\nexport class b2DistanceProxy {\n  public readonly m_buffer: b2Vec2[] = b2Vec2.MakeArray(2);\n  public m_vertices: b2Vec2[] = this.m_buffer;\n  public m_count: number = 0;\n  public m_radius: number = 0;\n\n  public Copy(other: Readonly<b2DistanceProxy>): this {\n    if (other.m_vertices === other.m_buffer) {\n      this.m_vertices = this.m_buffer;\n      this.m_buffer[0].Copy(other.m_buffer[0]);\n      this.m_buffer[1].Copy(other.m_buffer[1]);\n    } else {\n      this.m_vertices = other.m_vertices;\n    }\n    this.m_count = other.m_count;\n    this.m_radius = other.m_radius;\n    return this;\n  }\n\n  public Reset(): b2DistanceProxy {\n    this.m_vertices = this.m_buffer;\n    this.m_count = 0;\n    this.m_radius = 0;\n    return this;\n  }\n\n  public SetShape(shape: b2Shape, index: number): void {\n    shape.SetupDistanceProxy(this, index);\n  }\n\n  public SetVerticesRadius(vertices: b2Vec2[], count: number, radius: number): void {\n    this.m_vertices = vertices;\n    this.m_count = count;\n    this.m_radius = radius;\n  }\n\n  public GetSupport(d: b2Vec2): number {\n    let bestIndex: number = 0;\n    let bestValue: number = b2Vec2.DotVV(this.m_vertices[0], d);\n    for (let i: number = 1; i < this.m_count; ++i) {\n      const value: number = b2Vec2.DotVV(this.m_vertices[i], d);\n      if (value > bestValue) {\n        bestIndex = i;\n        bestValue = value;\n      }\n    }\n\n    return bestIndex;\n  }\n\n  public GetSupportVertex(d: b2Vec2): b2Vec2 {\n    let bestIndex: number = 0;\n    let bestValue: number = b2Vec2.DotVV(this.m_vertices[0], d);\n    for (let i: number = 1; i < this.m_count; ++i) {\n      const value: number = b2Vec2.DotVV(this.m_vertices[i], d);\n      if (value > bestValue) {\n        bestIndex = i;\n        bestValue = value;\n      }\n    }\n\n    return this.m_vertices[bestIndex];\n  }\n\n  public GetVertexCount(): number {\n    return this.m_count;\n  }\n\n  public GetVertex(index: number): b2Vec2 {\n    // DEBUG: b2Assert(0 <= index && index < this.m_count);\n    return this.m_vertices[index];\n  }\n}\n\nexport class b2SimplexCache {\n  public metric: number = 0;\n  public count: number = 0;\n  public readonly indexA: [number, number, number] = [0, 0, 0];\n  public readonly indexB: [number, number, number] = [0, 0, 0];\n\n  public Reset(): b2SimplexCache {\n    this.metric = 0;\n    this.count = 0;\n    return this;\n  }\n}\n\nexport class b2DistanceInput {\n  public readonly proxyA: b2DistanceProxy = new b2DistanceProxy();\n  public readonly proxyB: b2DistanceProxy = new b2DistanceProxy();\n  public readonly transformA: b2Transform = new b2Transform();\n  public readonly transformB: b2Transform = new b2Transform();\n  public useRadii: boolean = false;\n\n  public Reset(): b2DistanceInput {\n    this.proxyA.Reset();\n    this.proxyB.Reset();\n    this.transformA.SetIdentity();\n    this.transformB.SetIdentity();\n    this.useRadii = false;\n    return this;\n  }\n}\n\nexport class b2DistanceOutput {\n  public readonly pointA: b2Vec2 = new b2Vec2();\n  public readonly pointB: b2Vec2 = new b2Vec2();\n  public distance: number = 0;\n  public iterations: number = 0; ///< number of GJK iterations used\n\n  public Reset(): b2DistanceOutput {\n    this.pointA.SetZero();\n    this.pointB.SetZero();\n    this.distance = 0;\n    this.iterations = 0;\n    return this;\n  }\n}\n\n/// Input parameters for b2ShapeCast\nexport class b2ShapeCastInput {\n  public readonly proxyA: b2DistanceProxy = new b2DistanceProxy();\n  public readonly proxyB: b2DistanceProxy = new b2DistanceProxy();\n  public readonly transformA: b2Transform = new b2Transform();\n  public readonly transformB: b2Transform = new b2Transform();\n  public readonly translationB: b2Vec2 = new b2Vec2();\n}\n\n/// Output results for b2ShapeCast\nexport class b2ShapeCastOutput {\n  public readonly point: b2Vec2 = new b2Vec2();\n  public readonly normal: b2Vec2 = new b2Vec2();\n  public lambda: number = 0.0;\n  public iterations: number = 0;\n}\n\nexport let b2_gjkCalls: number = 0;\nexport let b2_gjkIters: number = 0;\nexport let b2_gjkMaxIters: number = 0;\nexport function b2_gjk_reset(): void {\n  b2_gjkCalls = 0;\n  b2_gjkIters = 0;\n  b2_gjkMaxIters = 0;\n}\n\nexport class b2SimplexVertex {\n  public readonly wA: b2Vec2 = new b2Vec2(); // support point in proxyA\n  public readonly wB: b2Vec2 = new b2Vec2(); // support point in proxyB\n  public readonly w: b2Vec2 = new b2Vec2(); // wB - wA\n  public a: number = 0; // barycentric coordinate for closest point\n  public indexA: number = 0; // wA index\n  public indexB: number = 0; // wB index\n\n  public Copy(other: b2SimplexVertex): b2SimplexVertex {\n    this.wA.Copy(other.wA);     // support point in proxyA\n    this.wB.Copy(other.wB);     // support point in proxyB\n    this.w.Copy(other.w);       // wB - wA\n    this.a = other.a;           // barycentric coordinate for closest point\n    this.indexA = other.indexA; // wA index\n    this.indexB = other.indexB; // wB index\n    return this;\n  }\n}\n\nexport class b2Simplex {\n  public readonly m_v1: b2SimplexVertex = new b2SimplexVertex();\n  public readonly m_v2: b2SimplexVertex = new b2SimplexVertex();\n  public readonly m_v3: b2SimplexVertex = new b2SimplexVertex();\n  public readonly m_vertices: b2SimplexVertex[] = [/*3*/];\n  public m_count: number = 0;\n\n  constructor() {\n    this.m_vertices[0] = this.m_v1;\n    this.m_vertices[1] = this.m_v2;\n    this.m_vertices[2] = this.m_v3;\n  }\n\n  public ReadCache(cache: b2SimplexCache, proxyA: b2DistanceProxy, transformA: b2Transform, proxyB: b2DistanceProxy, transformB: b2Transform): void {\n    // DEBUG: b2Assert(0 <= cache.count && cache.count <= 3);\n\n    // Copy data from cache.\n    this.m_count = cache.count;\n    const vertices: b2SimplexVertex[] = this.m_vertices;\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const v: b2SimplexVertex = vertices[i];\n      v.indexA = cache.indexA[i];\n      v.indexB = cache.indexB[i];\n      const wALocal: b2Vec2 = proxyA.GetVertex(v.indexA);\n      const wBLocal: b2Vec2 = proxyB.GetVertex(v.indexB);\n      b2Transform.MulXV(transformA, wALocal, v.wA);\n      b2Transform.MulXV(transformB, wBLocal, v.wB);\n      b2Vec2.SubVV(v.wB, v.wA, v.w);\n      v.a = 0;\n    }\n\n    // Compute the new simplex metric, if it is substantially different than\n    // old metric then flush the simplex.\n    if (this.m_count > 1) {\n      const metric1: number = cache.metric;\n      const metric2: number = this.GetMetric();\n      if (metric2 < 0.5 * metric1 || 2 * metric1 < metric2 || metric2 < b2_epsilon) {\n        // Reset the simplex.\n        this.m_count = 0;\n      }\n    }\n\n    // If the cache is empty or invalid ...\n    if (this.m_count === 0) {\n      const v: b2SimplexVertex = vertices[0];\n      v.indexA = 0;\n      v.indexB = 0;\n      const wALocal: b2Vec2 = proxyA.GetVertex(0);\n      const wBLocal: b2Vec2 = proxyB.GetVertex(0);\n      b2Transform.MulXV(transformA, wALocal, v.wA);\n      b2Transform.MulXV(transformB, wBLocal, v.wB);\n      b2Vec2.SubVV(v.wB, v.wA, v.w);\n      v.a = 1;\n      this.m_count = 1;\n    }\n  }\n\n  public WriteCache(cache: b2SimplexCache): void {\n    cache.metric = this.GetMetric();\n    cache.count = this.m_count;\n    const vertices: b2SimplexVertex[] = this.m_vertices;\n    for (let i: number = 0; i < this.m_count; ++i) {\n      cache.indexA[i] = vertices[i].indexA;\n      cache.indexB[i] = vertices[i].indexB;\n    }\n  }\n\n  public GetSearchDirection(out: b2Vec2): b2Vec2 {\n    switch (this.m_count) {\n      case 1:\n        return b2Vec2.NegV(this.m_v1.w, out);\n\n      case 2: {\n        const e12: b2Vec2 = b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, out);\n        const sgn: number = b2Vec2.CrossVV(e12, b2Vec2.NegV(this.m_v1.w, b2Vec2.s_t0));\n        if (sgn > 0) {\n          // Origin is left of e12.\n          return b2Vec2.CrossOneV(e12, out);\n        } else {\n          // Origin is right of e12.\n          return b2Vec2.CrossVOne(e12, out);\n        }\n      }\n\n      default:\n        // DEBUG: b2Assert(false);\n        return out.SetZero();\n    }\n  }\n\n  public GetClosestPoint(out: b2Vec2): b2Vec2 {\n    switch (this.m_count) {\n      case 0:\n        // DEBUG: b2Assert(false);\n        return out.SetZero();\n\n      case 1:\n        return out.Copy(this.m_v1.w);\n\n      case 2:\n        return out.Set(\n          this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x,\n          this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\n\n      case 3:\n        return out.SetZero();\n\n      default:\n        // DEBUG: b2Assert(false);\n        return out.SetZero();\n    }\n  }\n\n  public GetWitnessPoints(pA: b2Vec2, pB: b2Vec2): void {\n    switch (this.m_count) {\n      case 0:\n        // DEBUG: b2Assert(false);\n        break;\n\n      case 1:\n        pA.Copy(this.m_v1.wA);\n        pB.Copy(this.m_v1.wB);\n        break;\n\n      case 2:\n        pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\n        pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\n        pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\n        pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\n        break;\n\n      case 3:\n        pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\n        pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\n        break;\n\n      default:\n        // DEBUG: b2Assert(false);\n        break;\n    }\n  }\n\n  public GetMetric(): number {\n    switch (this.m_count) {\n      case 0:\n        // DEBUG: b2Assert(false);\n        return 0;\n\n      case 1:\n        return 0;\n\n      case 2:\n        return b2Vec2.DistanceVV(this.m_v1.w, this.m_v2.w);\n\n      case 3:\n        return b2Vec2.CrossVV(b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, b2Vec2.s_t0), b2Vec2.SubVV(this.m_v3.w, this.m_v1.w, b2Vec2.s_t1));\n\n      default:\n        // DEBUG: b2Assert(false);\n        return 0;\n    }\n  }\n\n  public Solve2(): void {\n    const w1: b2Vec2 = this.m_v1.w;\n    const w2: b2Vec2 = this.m_v2.w;\n    const e12: b2Vec2 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\n\n    // w1 region\n    const d12_2: number = (-b2Vec2.DotVV(w1, e12));\n    if (d12_2 <= 0) {\n      // a2 <= 0, so we clamp it to 0\n      this.m_v1.a = 1;\n      this.m_count = 1;\n      return;\n    }\n\n    // w2 region\n    const d12_1: number = b2Vec2.DotVV(w2, e12);\n    if (d12_1 <= 0) {\n      // a1 <= 0, so we clamp it to 0\n      this.m_v2.a = 1;\n      this.m_count = 1;\n      this.m_v1.Copy(this.m_v2);\n      return;\n    }\n\n    // Must be in e12 region.\n    const inv_d12: number = 1 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n  }\n\n  public Solve3(): void {\n    const w1: b2Vec2 = this.m_v1.w;\n    const w2: b2Vec2 = this.m_v2.w;\n    const w3: b2Vec2 = this.m_v3.w;\n\n    // Edge12\n    // [1      1     ][a1] = [1]\n    // [w1.e12 w2.e12][a2] = [0]\n    // a3 = 0\n    const e12: b2Vec2 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\n    const w1e12: number = b2Vec2.DotVV(w1, e12);\n    const w2e12: number = b2Vec2.DotVV(w2, e12);\n    const d12_1: number = w2e12;\n    const d12_2: number = (-w1e12);\n\n    // Edge13\n    // [1      1     ][a1] = [1]\n    // [w1.e13 w3.e13][a3] = [0]\n    // a2 = 0\n    const e13: b2Vec2 = b2Vec2.SubVV(w3, w1, b2Simplex.s_e13);\n    const w1e13: number = b2Vec2.DotVV(w1, e13);\n    const w3e13: number = b2Vec2.DotVV(w3, e13);\n    const d13_1: number = w3e13;\n    const d13_2: number = (-w1e13);\n\n    // Edge23\n    // [1      1     ][a2] = [1]\n    // [w2.e23 w3.e23][a3] = [0]\n    // a1 = 0\n    const e23: b2Vec2 = b2Vec2.SubVV(w3, w2, b2Simplex.s_e23);\n    const w2e23: number = b2Vec2.DotVV(w2, e23);\n    const w3e23: number = b2Vec2.DotVV(w3, e23);\n    const d23_1: number = w3e23;\n    const d23_2: number = (-w2e23);\n\n    // Triangle123\n    const n123: number = b2Vec2.CrossVV(e12, e13);\n\n    const d123_1: number = n123 * b2Vec2.CrossVV(w2, w3);\n    const d123_2: number = n123 * b2Vec2.CrossVV(w3, w1);\n    const d123_3: number = n123 * b2Vec2.CrossVV(w1, w2);\n\n    // w1 region\n    if (d12_2 <= 0 && d13_2 <= 0) {\n      this.m_v1.a = 1;\n      this.m_count = 1;\n      return;\n    }\n\n    // e12\n    if (d12_1 > 0 && d12_2 > 0 && d123_3 <= 0) {\n      const inv_d12: number = 1 / (d12_1 + d12_2);\n      this.m_v1.a = d12_1 * inv_d12;\n      this.m_v2.a = d12_2 * inv_d12;\n      this.m_count = 2;\n      return;\n    }\n\n    // e13\n    if (d13_1 > 0 && d13_2 > 0 && d123_2 <= 0) {\n      const inv_d13: number = 1 / (d13_1 + d13_2);\n      this.m_v1.a = d13_1 * inv_d13;\n      this.m_v3.a = d13_2 * inv_d13;\n      this.m_count = 2;\n      this.m_v2.Copy(this.m_v3);\n      return;\n    }\n\n    // w2 region\n    if (d12_1 <= 0 && d23_2 <= 0) {\n      this.m_v2.a = 1;\n      this.m_count = 1;\n      this.m_v1.Copy(this.m_v2);\n      return;\n    }\n\n    // w3 region\n    if (d13_1 <= 0 && d23_1 <= 0) {\n      this.m_v3.a = 1;\n      this.m_count = 1;\n      this.m_v1.Copy(this.m_v3);\n      return;\n    }\n\n    // e23\n    if (d23_1 > 0 && d23_2 > 0 && d123_1 <= 0) {\n      const inv_d23: number = 1 / (d23_1 + d23_2);\n      this.m_v2.a = d23_1 * inv_d23;\n      this.m_v3.a = d23_2 * inv_d23;\n      this.m_count = 2;\n      this.m_v1.Copy(this.m_v3);\n      return;\n    }\n\n    // Must be in triangle123\n    const inv_d123: number = 1 / (d123_1 + d123_2 + d123_3);\n    this.m_v1.a = d123_1 * inv_d123;\n    this.m_v2.a = d123_2 * inv_d123;\n    this.m_v3.a = d123_3 * inv_d123;\n    this.m_count = 3;\n  }\n  private static s_e12: b2Vec2 = new b2Vec2();\n  private static s_e13: b2Vec2 = new b2Vec2();\n  private static s_e23: b2Vec2 = new b2Vec2();\n}\n\nconst b2Distance_s_simplex: b2Simplex = new b2Simplex();\nconst b2Distance_s_saveA: [number, number, number] = [0, 0, 0];\nconst b2Distance_s_saveB: [number, number, number] = [0, 0, 0];\nconst b2Distance_s_p: b2Vec2 = new b2Vec2();\nconst b2Distance_s_d: b2Vec2 = new b2Vec2();\nconst b2Distance_s_normal: b2Vec2 = new b2Vec2();\nconst b2Distance_s_supportA: b2Vec2 = new b2Vec2();\nconst b2Distance_s_supportB: b2Vec2 = new b2Vec2();\nexport function b2Distance(output: b2DistanceOutput, cache: b2SimplexCache, input: b2DistanceInput): void {\n  ++b2_gjkCalls;\n\n  const proxyA: b2DistanceProxy = input.proxyA;\n  const proxyB: b2DistanceProxy = input.proxyB;\n\n  const transformA: b2Transform = input.transformA;\n  const transformB: b2Transform = input.transformB;\n\n  // Initialize the simplex.\n  const simplex: b2Simplex = b2Distance_s_simplex;\n  simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\n\n  // Get simplex vertices as an array.\n  const vertices: b2SimplexVertex[] = simplex.m_vertices;\n  const k_maxIters: number = 20;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  const saveA: [number, number, number] = b2Distance_s_saveA;\n  const saveB: [number, number, number] = b2Distance_s_saveB;\n  let saveCount: number = 0;\n\n  // Main iteration loop.\n  let iter: number = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (let i: number = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    switch (simplex.m_count) {\n      case 1:\n        break;\n\n      case 2:\n        simplex.Solve2();\n        break;\n\n      case 3:\n        simplex.Solve3();\n        break;\n\n      default:\n        // DEBUG: b2Assert(false);\n        break;\n    }\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count === 3) {\n      break;\n    }\n\n    // Get search direction.\n    const d: b2Vec2 = simplex.GetSearchDirection(b2Distance_s_d);\n\n    // Ensure the search direction is numerically fit.\n    if (d.LengthSquared() < b2_epsilon_sq) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    const vertex: b2SimplexVertex = vertices[simplex.m_count];\n    vertex.indexA = proxyA.GetSupport(b2Rot.MulTRV(transformA.q, b2Vec2.NegV(d, b2Vec2.s_t0), b2Distance_s_supportA));\n    b2Transform.MulXV(transformA, proxyA.GetVertex(vertex.indexA), vertex.wA);\n    vertex.indexB = proxyB.GetSupport(b2Rot.MulTRV(transformB.q, d, b2Distance_s_supportB));\n    b2Transform.MulXV(transformB, proxyB.GetVertex(vertex.indexB), vertex.wB);\n    b2Vec2.SubVV(vertex.wB, vertex.wA, vertex.w);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++b2_gjkIters;\n\n    // Check for duplicate support points. This is the main termination criteria.\n    let duplicate: boolean = false;\n    for (let i: number = 0; i < saveCount; ++i) {\n      if (vertex.indexA === saveA[i] && vertex.indexB === saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  b2_gjkMaxIters = b2Max(b2_gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.GetWitnessPoints(output.pointA, output.pointB);\n  output.distance = b2Vec2.DistanceVV(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.WriteCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    const rA: number = proxyA.m_radius;\n    const rB: number = proxyB.m_radius;\n\n    if (output.distance > (rA + rB) && output.distance > b2_epsilon) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      const normal: b2Vec2 = b2Vec2.SubVV(output.pointB, output.pointA, b2Distance_s_normal);\n      normal.Normalize();\n      output.pointA.SelfMulAdd(rA, normal);\n      output.pointB.SelfMulSub(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      const p: b2Vec2 = b2Vec2.MidVV(output.pointA, output.pointB, b2Distance_s_p);\n      output.pointA.Copy(p);\n      output.pointB.Copy(p);\n      output.distance = 0;\n    }\n  }\n}\n\n/// Perform a linear shape cast of shape B moving and shape A fixed. Determines the hit point, normal, and translation fraction.\n\n// GJK-raycast\n// Algorithm by Gino van den Bergen.\n// \"Smooth Mesh Contacts with GJK\" in GameScreen Physics Pearls. 2010\n// bool b2ShapeCast(b2ShapeCastOutput* output, const b2ShapeCastInput* input);\nconst b2ShapeCast_s_n = new b2Vec2();\nconst b2ShapeCast_s_simplex = new b2Simplex();\nconst b2ShapeCast_s_wA = new b2Vec2();\nconst b2ShapeCast_s_wB = new b2Vec2();\nconst b2ShapeCast_s_v = new b2Vec2();\nconst b2ShapeCast_s_p = new b2Vec2();\nconst b2ShapeCast_s_pointA = new b2Vec2();\nconst b2ShapeCast_s_pointB = new b2Vec2();\nexport function b2ShapeCast(output: b2ShapeCastOutput, input: b2ShapeCastInput): boolean {\n  output.iterations = 0;\n  output.lambda = 1.0;\n  output.normal.SetZero();\n  output.point.SetZero();\n\n  // const b2DistanceProxy* proxyA = &input.proxyA;\n  const proxyA = input.proxyA;\n  // const b2DistanceProxy* proxyB = &input.proxyB;\n  const proxyB = input.proxyB;\n\n  // float32 radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\n  const radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\n  // float32 radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\n  const radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\n  // float32 radius = radiusA + radiusB;\n  const radius = radiusA + radiusB;\n\n  // b2Transform xfA = input.transformA;\n  const xfA = input.transformA;\n  // b2Transform xfB = input.transformB;\n  const xfB = input.transformB;\n\n  // b2Vec2 r = input.translationB;\n  const r = input.translationB;\n  // b2Vec2 n(0.0f, 0.0f);\n  const n = b2ShapeCast_s_n.Set(0.0, 0.0);\n  // float32 lambda = 0.0f;\n  let lambda = 0.0;\n\n  // Initial simplex\n  const simplex = b2ShapeCast_s_simplex;\n  simplex.m_count = 0;\n\n  // Get simplex vertices as an array.\n  // b2SimplexVertex* vertices = &simplex.m_v1;\n  const vertices = simplex.m_vertices;\n\n  // Get support point in -r direction\n  // int32 indexA = proxyA.GetSupport(b2MulT(xfA.q, -r));\n  let indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(r, b2Vec2.s_t1), b2Vec2.s_t0));\n  // b2Vec2 wA = b2Mul(xfA, proxyA.GetVertex(indexA));\n  let wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\n  // int32 indexB = proxyB.GetSupport(b2MulT(xfB.q, r));\n  let indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, r, b2Vec2.s_t0));\n  // b2Vec2 wB = b2Mul(xfB, proxyB.GetVertex(indexB));\n  let wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\n  // b2Vec2 v = wA - wB;\n  const v = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_v);\n\n  // Sigma is the target distance between polygons\n  // float32 sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\n  const sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\n  // const float32 tolerance = 0.5f * b2_linearSlop;\n  const tolerance = 0.5 * b2_linearSlop;\n\n  // Main iteration loop.\n  // const int32 k_maxIters = 20;\n  const k_maxIters = 20;\n  // int32 iter = 0;\n  let iter = 0;\n  // while (iter < k_maxIters && v.Length() - sigma > tolerance)\n  while (iter < k_maxIters && v.Length() - sigma > tolerance) {\n    // DEBUG: b2Assert(simplex.m_count < 3);\n\n    output.iterations += 1;\n\n    // Support in direction -v (A - B)\n    // indexA = proxyA.GetSupport(b2MulT(xfA.q, -v));\n    indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(v, b2Vec2.s_t1), b2Vec2.s_t0));\n    // wA = b2Mul(xfA, proxyA.GetVertex(indexA));\n    wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\n    // indexB = proxyB.GetSupport(b2MulT(xfB.q, v));\n    indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, v, b2Vec2.s_t0));\n    // wB = b2Mul(xfB, proxyB.GetVertex(indexB));\n    wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\n    // b2Vec2 p = wA - wB;\n    const p = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_p);\n\n    // -v is a normal at p\n    v.Normalize();\n\n    // Intersect ray with plane\n    const vp = b2Vec2.DotVV(v, p);\n    const vr = b2Vec2.DotVV(v, r);\n    if (vp - sigma > lambda * vr) {\n      if (vr <= 0.0) {\n        return false;\n      }\n\n      lambda = (vp - sigma) / vr;\n      if (lambda > 1.0) {\n        return false;\n      }\n\n      // n = -v;\n      n.Copy(v).SelfNeg();\n      simplex.m_count = 0;\n    }\n\n    // Reverse simplex since it works with B - A.\n    // Shift by lambda * r because we want the closest point to the current clip point.\n    // Note that the support point p is not shifted because we want the plane equation\n    // to be formed in unshifted space.\n    // b2SimplexVertex* vertex = vertices + simplex.m_count;\n    const vertex: b2SimplexVertex = vertices[simplex.m_count];\n    vertex.indexA = indexB;\n    // vertex.wA = wB + lambda * r;\n    vertex.wA.Copy(wB).SelfMulAdd(lambda, r);\n    vertex.indexB = indexA;\n    // vertex.wB = wA;\n    vertex.wB.Copy(wA);\n    // vertex.w = vertex.wB - vertex.wA;\n    vertex.w.Copy(vertex.wB).SelfSub(vertex.wA);\n    vertex.a = 1.0;\n    simplex.m_count += 1;\n\n    switch (simplex.m_count) {\n      case 1:\n        break;\n\n      case 2:\n        simplex.Solve2();\n        break;\n\n      case 3:\n        simplex.Solve3();\n        break;\n\n      default:\n      // DEBUG: b2Assert(false);\n    }\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count === 3) {\n      // Overlap\n      return false;\n    }\n\n    // Get search direction.\n    // v = simplex.GetClosestPoint();\n    simplex.GetClosestPoint(v);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n  }\n\n  if (iter === 0) {\n    // Initial overlap\n    return false;\n  }\n\n  // Prepare output.\n  const pointA = b2ShapeCast_s_pointA;\n  const pointB = b2ShapeCast_s_pointB;\n  simplex.GetWitnessPoints(pointA, pointB);\n\n  if (v.LengthSquared() > 0.0) {\n    // n = -v;\n    n.Copy(v).SelfNeg();\n    n.Normalize();\n  }\n\n  // output.point = pointA + radiusA * n;\n  output.normal.Copy(n);\n  output.lambda = lambda;\n  output.iterations = iter;\n  return true;\n}\n",
    "/*\n* Copyright (c) 2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_aabbExtension, b2_aabbMultiplier } from \"../common/b2_settings\";\nimport { b2Abs, b2Min, b2Max, b2Vec2, XY } from \"../common/b2_math\";\nimport { b2GrowableStack } from \"../common/b2_growable_stack\";\nimport { b2AABB, b2RayCastInput, b2TestOverlapAABB } from \"./b2_collision\";\n\nfunction verify<T>(value: T | null): T {\n  if (value === null) { throw new Error(); }\n  return value;\n}\n\n/// A node in the dynamic tree. The client does not interact with this directly.\nexport class b2TreeNode<T> {\n  public readonly m_id: number = 0;\n  public readonly aabb: b2AABB = new b2AABB();\n  private _userData: T | null = null;\n  public get userData(): T {\n    if (this._userData === null) { throw new Error(); }\n    return this._userData;\n  }\n  public set userData(value: T) {\n    if (this._userData !== null) { throw new Error(); }\n    this._userData = value;\n  }\n  public parent: b2TreeNode<T> | null = null; // or next\n  public child1: b2TreeNode<T> | null = null;\n  public child2: b2TreeNode<T> | null = null;\n  public height: number = 0; // leaf = 0, free node = -1\n\n  public moved: boolean = false;\n\n  constructor(id: number = 0) {\n    this.m_id = id;\n  }\n\n  public Reset(): void {\n    this._userData = null;\n  }\n\n  public IsLeaf(): boolean {\n    return this.child1 === null;\n  }\n}\n\nexport class b2DynamicTree<T> {\n  public m_root: b2TreeNode<T> | null = null;\n\n  // b2TreeNode* public m_nodes;\n  // int32 public m_nodeCount;\n  // int32 public m_nodeCapacity;\n\n  public m_freeList: b2TreeNode<T> | null = null;\n\n  public m_insertionCount: number = 0;\n\n  public readonly m_stack = new b2GrowableStack<b2TreeNode<T> | null>(256);\n  public static readonly s_r = new b2Vec2();\n  public static readonly s_v = new b2Vec2();\n  public static readonly s_abs_v = new b2Vec2();\n  public static readonly s_segmentAABB = new b2AABB();\n  public static readonly s_subInput = new b2RayCastInput();\n  public static readonly s_combinedAABB = new b2AABB();\n  public static readonly s_aabb = new b2AABB();\n\n  // public GetUserData(node: b2TreeNode<T>): T {\n  //   // DEBUG: b2Assert(node !== null);\n  //   return node.userData;\n  // }\n\n  // public WasMoved(node: b2TreeNode<T>): boolean {\n  //   return node.moved;\n  // }\n\n  // public ClearMoved(node: b2TreeNode<T>): void {\n  //   node.moved = false;\n  // }\n\n  // public GetFatAABB(node: b2TreeNode<T>): b2AABB {\n  //   // DEBUG: b2Assert(node !== null);\n  //   return node.aabb;\n  // }\n\n  public Query(aabb: b2AABB, callback: (node: b2TreeNode<T>) => boolean): void {\n    const stack: b2GrowableStack<b2TreeNode<T> | null> = this.m_stack.Reset();\n    stack.Push(this.m_root);\n\n    while (stack.GetCount() > 0) {\n      const node: b2TreeNode<T> | null = stack.Pop();\n      if (node === null) {\n        continue;\n      }\n\n      if (node.aabb.TestOverlap(aabb)) {\n        if (node.IsLeaf()) {\n          const proceed: boolean = callback(node);\n          if (!proceed) {\n            return;\n          }\n        } else {\n          stack.Push(node.child1);\n          stack.Push(node.child2);\n        }\n      }\n    }\n  }\n\n  public QueryPoint(point: XY, callback: (node: b2TreeNode<T>) => boolean): void {\n    const stack: b2GrowableStack<b2TreeNode<T> | null> = this.m_stack.Reset();\n    stack.Push(this.m_root);\n\n    while (stack.GetCount() > 0) {\n      const node: b2TreeNode<T> | null = stack.Pop();\n      if (node === null) {\n        continue;\n      }\n\n      if (node.aabb.TestContain(point)) {\n        if (node.IsLeaf()) {\n          const proceed: boolean = callback(node);\n          if (!proceed) {\n            return;\n          }\n        } else {\n          stack.Push(node.child1);\n          stack.Push(node.child2);\n        }\n      }\n    }\n  }\n\n  public RayCast(input: b2RayCastInput, callback: (input: b2RayCastInput, node: b2TreeNode<T>) => number): void {\n    const p1: b2Vec2 = input.p1;\n    const p2: b2Vec2 = input.p2;\n    const r: b2Vec2 = b2Vec2.SubVV(p2, p1, b2DynamicTree.s_r);\n    // DEBUG: b2Assert(r.LengthSquared() > 0);\n    r.Normalize();\n\n    // v is perpendicular to the segment.\n    const v: b2Vec2 = b2Vec2.CrossOneV(r, b2DynamicTree.s_v);\n    const abs_v: b2Vec2 = b2Vec2.AbsV(v, b2DynamicTree.s_abs_v);\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n\n    let maxFraction: number = input.maxFraction;\n\n    // Build a bounding box for the segment.\n    const segmentAABB: b2AABB = b2DynamicTree.s_segmentAABB;\n    let t_x: number = p1.x + maxFraction * (p2.x - p1.x);\n    let t_y: number = p1.y + maxFraction * (p2.y - p1.y);\n    segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\n    segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\n    segmentAABB.upperBound.x = b2Max(p1.x, t_x);\n    segmentAABB.upperBound.y = b2Max(p1.y, t_y);\n\n    const stack: b2GrowableStack<b2TreeNode<T> | null> = this.m_stack.Reset();\n    stack.Push(this.m_root);\n\n    while (stack.GetCount() > 0) {\n      const node: b2TreeNode<T> | null = stack.Pop();\n      if (node === null) {\n        continue;\n      }\n\n      if (!b2TestOverlapAABB(node.aabb, segmentAABB)) {\n        continue;\n      }\n\n      // Separating axis for segment (Gino, p80).\n      // |dot(v, p1 - c)| > dot(|v|, h)\n      const c: b2Vec2 = node.aabb.GetCenter();\n      const h: b2Vec2 = node.aabb.GetExtents();\n      const separation: number = b2Abs(b2Vec2.DotVV(v, b2Vec2.SubVV(p1, c, b2Vec2.s_t0))) - b2Vec2.DotVV(abs_v, h);\n      if (separation > 0) {\n        continue;\n      }\n\n      if (node.IsLeaf()) {\n        const subInput: b2RayCastInput = b2DynamicTree.s_subInput;\n        subInput.p1.Copy(input.p1);\n        subInput.p2.Copy(input.p2);\n        subInput.maxFraction = maxFraction;\n\n        const value: number = callback(subInput, node);\n\n        if (value === 0) {\n          // The client has terminated the ray cast.\n          return;\n        }\n\n        if (value > 0) {\n          // Update segment bounding box.\n          maxFraction = value;\n          t_x = p1.x + maxFraction * (p2.x - p1.x);\n          t_y = p1.y + maxFraction * (p2.y - p1.y);\n          segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\n          segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\n          segmentAABB.upperBound.x = b2Max(p1.x, t_x);\n          segmentAABB.upperBound.y = b2Max(p1.y, t_y);\n        }\n      } else {\n        stack.Push(node.child1);\n        stack.Push(node.child2);\n      }\n    }\n  }\n\n  public static s_node_id: number = 0;\n\n  public AllocateNode(): b2TreeNode<T> {\n    // Expand the node pool as needed.\n    if (this.m_freeList !== null) {\n      const node: b2TreeNode<T> = this.m_freeList;\n      this.m_freeList = node.parent; // this.m_freeList = node.next;\n      node.parent = null;\n      node.child1 = null;\n      node.child2 = null;\n      node.height = 0;\n      node.moved = false;\n      return node;\n    }\n\n    return new b2TreeNode<T>(b2DynamicTree.s_node_id++);\n  }\n\n  public FreeNode(node: b2TreeNode<T>): void {\n    node.parent = this.m_freeList; // node.next = this.m_freeList;\n    node.child1 = null;\n    node.child2 = null;\n    node.height = -1;\n    node.Reset();\n    this.m_freeList = node;\n  }\n\n  public CreateProxy(aabb: b2AABB, userData: T): b2TreeNode<T> {\n    const node: b2TreeNode<T> = this.AllocateNode();\n\n    // Fatten the aabb.\n    const r_x: number = b2_aabbExtension;\n    const r_y: number = b2_aabbExtension;\n    node.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\n    node.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\n    node.aabb.upperBound.x = aabb.upperBound.x + r_x;\n    node.aabb.upperBound.y = aabb.upperBound.y + r_y;\n    node.userData = userData;\n    node.height = 0;\n    node.moved = true;\n\n    this.InsertLeaf(node);\n\n    return node;\n  }\n\n  public DestroyProxy(node: b2TreeNode<T>): void {\n    // DEBUG: b2Assert(node.IsLeaf());\n\n    this.RemoveLeaf(node);\n    this.FreeNode(node);\n  }\n\n  private static MoveProxy_s_fatAABB = new b2AABB();\n  private static MoveProxy_s_hugeAABB = new b2AABB();\n  public MoveProxy(node: b2TreeNode<T>, aabb: b2AABB, displacement: b2Vec2): boolean {\n    // DEBUG: b2Assert(node.IsLeaf());\n\n    // Extend AABB\n    const fatAABB: b2AABB = b2DynamicTree.MoveProxy_s_fatAABB;\n    const r_x: number = b2_aabbExtension;\n    const r_y: number = b2_aabbExtension;\n    fatAABB.lowerBound.x = aabb.lowerBound.x - r_x;\n    fatAABB.lowerBound.y = aabb.lowerBound.y - r_y;\n    fatAABB.upperBound.x = aabb.upperBound.x + r_x;\n    fatAABB.upperBound.y = aabb.upperBound.y + r_y;\n\n    // Predict AABB movement\n    const d_x: number = b2_aabbMultiplier * displacement.x;\n    const d_y: number = b2_aabbMultiplier * displacement.y;\n\n    if (d_x < 0.0) {\n      fatAABB.lowerBound.x += d_x;\n    } else {\n      fatAABB.upperBound.x += d_x;\n    }\n\n    if (d_y < 0.0) {\n      fatAABB.lowerBound.y += d_y;\n    } else {\n      fatAABB.upperBound.y += d_y;\n    }\n\n    const treeAABB = node.aabb; // m_nodes[proxyId].aabb;\n    if (treeAABB.Contains(aabb)) {\n      // The tree AABB still contains the object, but it might be too large.\n      // Perhaps the object was moving fast but has since gone to sleep.\n      // The huge AABB is larger than the new fat AABB.\n      const hugeAABB: b2AABB = b2DynamicTree.MoveProxy_s_hugeAABB;\n      hugeAABB.lowerBound.x = fatAABB.lowerBound.x - 4.0 * r_x;\n      hugeAABB.lowerBound.y = fatAABB.lowerBound.y - 4.0 * r_y;\n      hugeAABB.upperBound.x = fatAABB.upperBound.x + 4.0 * r_x;\n      hugeAABB.upperBound.y = fatAABB.upperBound.y + 4.0 * r_y;\n\n      if (hugeAABB.Contains(treeAABB)) {\n        // The tree AABB contains the object AABB and the tree AABB is\n        // not too large. No tree update needed.\n        return false;\n      }\n\n      // Otherwise the tree AABB is huge and needs to be shrunk\n    }\n\n    this.RemoveLeaf(node);\n\n    node.aabb.Copy(fatAABB); // m_nodes[proxyId].aabb = fatAABB;\n\n    this.InsertLeaf(node);\n\n    node.moved = true;\n\n    return true;\n  }\n\n  public InsertLeaf(leaf: b2TreeNode<T>): void {\n    ++this.m_insertionCount;\n\n    if (this.m_root === null) {\n      this.m_root = leaf;\n      this.m_root.parent = null;\n      return;\n    }\n\n    // Find the best sibling for this node\n    const leafAABB: b2AABB = leaf.aabb;\n    let sibling: b2TreeNode<T> = this.m_root;\n    while (!sibling.IsLeaf()) {\n      const child1: b2TreeNode<T> = verify(sibling.child1);\n      const child2: b2TreeNode<T> = verify(sibling.child2);\n\n      const area: number = sibling.aabb.GetPerimeter();\n\n      const combinedAABB: b2AABB = b2DynamicTree.s_combinedAABB;\n      combinedAABB.Combine2(sibling.aabb, leafAABB);\n      const combinedArea: number = combinedAABB.GetPerimeter();\n\n      // Cost of creating a new parent for this node and the new leaf\n      const cost: number = 2 * combinedArea;\n\n      // Minimum cost of pushing the leaf further down the tree\n      const inheritanceCost: number = 2 * (combinedArea - area);\n\n      // Cost of descending into child1\n      let cost1: number;\n      const aabb: b2AABB = b2DynamicTree.s_aabb;\n      let oldArea: number;\n      let newArea: number;\n      if (child1.IsLeaf()) {\n        aabb.Combine2(leafAABB, child1.aabb);\n        cost1 = aabb.GetPerimeter() + inheritanceCost;\n      } else {\n        aabb.Combine2(leafAABB, child1.aabb);\n        oldArea = child1.aabb.GetPerimeter();\n        newArea = aabb.GetPerimeter();\n        cost1 = (newArea - oldArea) + inheritanceCost;\n      }\n\n      // Cost of descending into child2\n      let cost2: number;\n      if (child2.IsLeaf()) {\n        aabb.Combine2(leafAABB, child2.aabb);\n        cost2 = aabb.GetPerimeter() + inheritanceCost;\n      } else {\n        aabb.Combine2(leafAABB, child2.aabb);\n        oldArea = child2.aabb.GetPerimeter();\n        newArea = aabb.GetPerimeter();\n        cost2 = newArea - oldArea + inheritanceCost;\n      }\n\n      // Descend according to the minimum cost.\n      if (cost < cost1 && cost < cost2) {\n        break;\n      }\n\n      // Descend\n      if (cost1 < cost2) {\n        sibling = child1;\n      } else {\n        sibling = child2;\n      }\n    }\n\n    // Create a parent for the siblings.\n    const oldParent: b2TreeNode<T> | null = sibling.parent;\n    const newParent: b2TreeNode<T> = this.AllocateNode();\n    newParent.parent = oldParent;\n    newParent.aabb.Combine2(leafAABB, sibling.aabb);\n    newParent.height = sibling.height + 1;\n\n    if (oldParent !== null) {\n      // The sibling was not the root.\n      if (oldParent.child1 === sibling) {\n        oldParent.child1 = newParent;\n      } else {\n        oldParent.child2 = newParent;\n      }\n\n      newParent.child1 = sibling;\n      newParent.child2 = leaf;\n      sibling.parent = newParent;\n      leaf.parent = newParent;\n    } else {\n      // The sibling was the root.\n      newParent.child1 = sibling;\n      newParent.child2 = leaf;\n      sibling.parent = newParent;\n      leaf.parent = newParent;\n      this.m_root = newParent;\n    }\n\n    // Walk back up the tree fixing heights and AABBs\n    let node: b2TreeNode<T> | null = leaf.parent;\n    while (node !== null) {\n      node = this.Balance(node);\n\n      const child1: b2TreeNode<T> = verify(node.child1);\n      const child2: b2TreeNode<T> = verify(node.child2);\n\n      node.height = 1 + b2Max(child1.height, child2.height);\n      node.aabb.Combine2(child1.aabb, child2.aabb);\n\n      node = node.parent;\n    }\n\n    // this.Validate();\n  }\n\n  public RemoveLeaf(leaf: b2TreeNode<T>): void {\n    if (leaf === this.m_root) {\n      this.m_root = null;\n      return;\n    }\n\n    const parent: b2TreeNode<T> = verify(leaf.parent);\n    const grandParent: b2TreeNode<T> | null = parent && parent.parent;\n    const sibling: b2TreeNode<T> = verify(parent.child1 === leaf ? parent.child2 : parent.child1);\n\n    if (grandParent !== null) {\n      // Destroy parent and connect sibling to grandParent.\n      if (grandParent.child1 === parent) {\n        grandParent.child1 = sibling;\n      } else {\n        grandParent.child2 = sibling;\n      }\n      sibling.parent = grandParent;\n      this.FreeNode(parent);\n\n      // Adjust ancestor bounds.\n      let index: b2TreeNode<T> | null = grandParent;\n      while (index !== null) {\n        index = this.Balance(index);\n\n        const child1: b2TreeNode<T> = verify(index.child1);\n        const child2: b2TreeNode<T> = verify(index.child2);\n\n        index.aabb.Combine2(child1.aabb, child2.aabb);\n        index.height = 1 + b2Max(child1.height, child2.height);\n\n        index = index.parent;\n      }\n    } else {\n      this.m_root = sibling;\n      sibling.parent = null;\n      this.FreeNode(parent);\n    }\n\n    // this.Validate();\n  }\n\n  public Balance(A: b2TreeNode<T>): b2TreeNode<T> {\n    // DEBUG: b2Assert(A !== null);\n\n    if (A.IsLeaf() || A.height < 2) {\n      return A;\n    }\n\n    const B: b2TreeNode<T> = verify(A.child1);\n    const C: b2TreeNode<T> = verify(A.child2);\n\n    const balance: number = C.height - B.height;\n\n    // Rotate C up\n    if (balance > 1) {\n      const F: b2TreeNode<T> = verify(C.child1);\n      const G: b2TreeNode<T> = verify(C.child2);\n\n      // Swap A and C\n      C.child1 = A;\n      C.parent = A.parent;\n      A.parent = C;\n\n      // A's old parent should point to C\n      if (C.parent !== null) {\n        if (C.parent.child1 === A) {\n          C.parent.child1 = C;\n        } else {\n          // DEBUG: b2Assert(C.parent.child2 === A);\n          C.parent.child2 = C;\n        }\n      } else {\n        this.m_root = C;\n      }\n\n      // Rotate\n      if (F.height > G.height) {\n        C.child2 = F;\n        A.child2 = G;\n        G.parent = A;\n        A.aabb.Combine2(B.aabb, G.aabb);\n        C.aabb.Combine2(A.aabb, F.aabb);\n\n        A.height = 1 + b2Max(B.height, G.height);\n        C.height = 1 + b2Max(A.height, F.height);\n      } else {\n        C.child2 = G;\n        A.child2 = F;\n        F.parent = A;\n        A.aabb.Combine2(B.aabb, F.aabb);\n        C.aabb.Combine2(A.aabb, G.aabb);\n\n        A.height = 1 + b2Max(B.height, F.height);\n        C.height = 1 + b2Max(A.height, G.height);\n      }\n\n      return C;\n    }\n\n    // Rotate B up\n    if (balance < -1) {\n      const D: b2TreeNode<T> = verify(B.child1);\n      const E: b2TreeNode<T> = verify(B.child2);\n\n      // Swap A and B\n      B.child1 = A;\n      B.parent = A.parent;\n      A.parent = B;\n\n      // A's old parent should point to B\n      if (B.parent !== null) {\n        if (B.parent.child1 === A) {\n          B.parent.child1 = B;\n        } else {\n          // DEBUG: b2Assert(B.parent.child2 === A);\n          B.parent.child2 = B;\n        }\n      } else {\n        this.m_root = B;\n      }\n\n      // Rotate\n      if (D.height > E.height) {\n        B.child2 = D;\n        A.child1 = E;\n        E.parent = A;\n        A.aabb.Combine2(C.aabb, E.aabb);\n        B.aabb.Combine2(A.aabb, D.aabb);\n\n        A.height = 1 + b2Max(C.height, E.height);\n        B.height = 1 + b2Max(A.height, D.height);\n      } else {\n        B.child2 = E;\n        A.child1 = D;\n        D.parent = A;\n        A.aabb.Combine2(C.aabb, D.aabb);\n        B.aabb.Combine2(A.aabb, E.aabb);\n\n        A.height = 1 + b2Max(C.height, D.height);\n        B.height = 1 + b2Max(A.height, E.height);\n      }\n\n      return B;\n    }\n\n    return A;\n  }\n\n  public GetHeight(): number {\n    if (this.m_root === null) {\n      return 0;\n    }\n\n    return this.m_root.height;\n  }\n\n  private static GetAreaNode<T>(node: b2TreeNode<T> | null): number {\n    if (node === null) {\n      return 0;\n    }\n\n    if (node.IsLeaf()) {\n      return 0;\n    }\n\n    let area: number = node.aabb.GetPerimeter();\n    area += b2DynamicTree.GetAreaNode(node.child1);\n    area += b2DynamicTree.GetAreaNode(node.child2);\n    return area;\n  }\n\n  public GetAreaRatio(): number {\n    if (this.m_root === null) {\n      return 0;\n    }\n\n    const root: b2TreeNode<T> = this.m_root;\n    const rootArea: number = root.aabb.GetPerimeter();\n\n    const totalArea: number = b2DynamicTree.GetAreaNode(this.m_root);\n\n    /*\n    float32 totalArea = 0.0;\n    for (int32 i = 0; i < m_nodeCapacity; ++i) {\n      const b2TreeNode<T>* node = m_nodes + i;\n      if (node.height < 0) {\n        // Free node in pool\n        continue;\n      }\n\n      totalArea += node.aabb.GetPerimeter();\n    }\n    */\n\n    return totalArea / rootArea;\n  }\n\n  public static ComputeHeightNode<T>(node: b2TreeNode<T> | null): number {\n    if (node === null) {\n      return 0;\n    }\n\n    if (node.IsLeaf()) {\n      return 0;\n    }\n\n    const height1: number = b2DynamicTree.ComputeHeightNode(node.child1);\n    const height2: number = b2DynamicTree.ComputeHeightNode(node.child2);\n    return 1 + b2Max(height1, height2);\n  }\n\n  public ComputeHeight(): number {\n    const height: number = b2DynamicTree.ComputeHeightNode(this.m_root);\n    return height;\n  }\n\n  public ValidateStructure(node: b2TreeNode<T> | null): void {\n    if (node === null) {\n      return;\n    }\n\n    if (node === this.m_root) {\n      // DEBUG: b2Assert(node.parent === null);\n    }\n\n    if (node.IsLeaf()) {\n      // DEBUG: b2Assert(node.child1 === null);\n      // DEBUG: b2Assert(node.child2 === null);\n      // DEBUG: b2Assert(node.height === 0);\n      return;\n    }\n\n    const child1: b2TreeNode<T> = verify(node.child1);\n    const child2: b2TreeNode<T> = verify(node.child2);\n\n    // DEBUG: b2Assert(child1.parent === index);\n    // DEBUG: b2Assert(child2.parent === index);\n\n    this.ValidateStructure(child1);\n    this.ValidateStructure(child2);\n  }\n\n  public ValidateMetrics(node: b2TreeNode<T> | null): void {\n    if (node === null) {\n      return;\n    }\n\n    if (node.IsLeaf()) {\n      // DEBUG: b2Assert(node.child1 === null);\n      // DEBUG: b2Assert(node.child2 === null);\n      // DEBUG: b2Assert(node.height === 0);\n      return;\n    }\n\n    const child1: b2TreeNode<T> = verify(node.child1);\n    const child2: b2TreeNode<T> = verify(node.child2);\n\n    // DEBUG: const height1: number = child1.height;\n    // DEBUG: const height2: number = child2.height;\n    // DEBUG: const height: number = 1 + b2Max(height1, height2);\n    // DEBUG: b2Assert(node.height === height);\n\n    const aabb: b2AABB = b2DynamicTree.s_aabb;\n    aabb.Combine2(child1.aabb, child2.aabb);\n\n    // DEBUG: b2Assert(aabb.lowerBound === node.aabb.lowerBound);\n    // DEBUG: b2Assert(aabb.upperBound === node.aabb.upperBound);\n\n    this.ValidateMetrics(child1);\n    this.ValidateMetrics(child2);\n  }\n\n  public Validate(): void {\n    // DEBUG: this.ValidateStructure(this.m_root);\n    // DEBUG: this.ValidateMetrics(this.m_root);\n\n    // let freeCount: number = 0;\n    // let freeIndex: b2TreeNode<T> | null = this.m_freeList;\n    // while (freeIndex !== null) {\n    //   freeIndex = freeIndex.parent; // freeIndex = freeIndex.next;\n    //   ++freeCount;\n    // }\n\n    // DEBUG: b2Assert(this.GetHeight() === this.ComputeHeight());\n\n    // b2Assert(this.m_nodeCount + freeCount === this.m_nodeCapacity);\n  }\n\n  private static GetMaxBalanceNode<T>(node: b2TreeNode<T> | null, maxBalance: number): number {\n    if (node === null) {\n      return maxBalance;\n    }\n\n    if (node.height <= 1) {\n      return maxBalance;\n    }\n\n    // DEBUG: b2Assert(!node.IsLeaf());\n\n    const child1: b2TreeNode<T> = verify(node.child1);\n    const child2: b2TreeNode<T> = verify(node.child2);\n    const balance: number = b2Abs(child2.height - child1.height);\n    return b2Max(maxBalance, balance);\n  }\n\n  public GetMaxBalance(): number {\n    const maxBalance: number = b2DynamicTree.GetMaxBalanceNode(this.m_root, 0);\n\n    /*\n    int32 maxBalance = 0;\n    for (int32 i = 0; i < m_nodeCapacity; ++i) {\n      const b2TreeNode<T>* node = m_nodes + i;\n      if (node.height <= 1) {\n        continue;\n      }\n\n      b2Assert(!node.IsLeaf());\n\n      int32 child1 = node.child1;\n      int32 child2 = node.child2;\n      int32 balance = b2Abs(m_nodes[child2].height - m_nodes[child1].height);\n      maxBalance = b2Max(maxBalance, balance);\n    }\n    */\n\n    return maxBalance;\n  }\n\n  public RebuildBottomUp(): void {\n    /*\n    int32* nodes = (int32*)b2Alloc(m_nodeCount * sizeof(int32));\n    int32 count = 0;\n\n    // Build array of leaves. Free the rest.\n    for (int32 i = 0; i < m_nodeCapacity; ++i) {\n      if (m_nodes[i].height < 0) {\n        // free node in pool\n        continue;\n      }\n\n      if (m_nodes[i].IsLeaf()) {\n        m_nodes[i].parent = b2_nullNode;\n        nodes[count] = i;\n        ++count;\n      } else {\n        FreeNode(i);\n      }\n    }\n\n    while (count > 1) {\n      float32 minCost = b2_maxFloat;\n      int32 iMin = -1, jMin = -1;\n      for (int32 i = 0; i < count; ++i) {\n        b2AABB aabbi = m_nodes[nodes[i]].aabb;\n\n        for (int32 j = i + 1; j < count; ++j) {\n          b2AABB aabbj = m_nodes[nodes[j]].aabb;\n          b2AABB b;\n          b.Combine(aabbi, aabbj);\n          float32 cost = b.GetPerimeter();\n          if (cost < minCost) {\n            iMin = i;\n            jMin = j;\n            minCost = cost;\n          }\n        }\n      }\n\n      int32 index1 = nodes[iMin];\n      int32 index2 = nodes[jMin];\n      b2TreeNode<T>* child1 = m_nodes + index1;\n      b2TreeNode<T>* child2 = m_nodes + index2;\n\n      int32 parentIndex = AllocateNode();\n      b2TreeNode<T>* parent = m_nodes + parentIndex;\n      parent.child1 = index1;\n      parent.child2 = index2;\n      parent.height = 1 + b2Max(child1.height, child2.height);\n      parent.aabb.Combine(child1.aabb, child2.aabb);\n      parent.parent = b2_nullNode;\n\n      child1.parent = parentIndex;\n      child2.parent = parentIndex;\n\n      nodes[jMin] = nodes[count-1];\n      nodes[iMin] = parentIndex;\n      --count;\n    }\n\n    m_root = nodes[0];\n    b2Free(nodes);\n    */\n\n    this.Validate();\n  }\n\n  private static ShiftOriginNode<T>(node: b2TreeNode<T> | null, newOrigin: XY): void {\n    if (node === null) {\n      return;\n    }\n\n    if (node.height <= 1) {\n      return;\n    }\n\n    // DEBUG: b2Assert(!node.IsLeaf());\n\n    const child1: b2TreeNode<T> | null = node.child1;\n    const child2: b2TreeNode<T> | null = node.child2;\n    b2DynamicTree.ShiftOriginNode(child1, newOrigin);\n    b2DynamicTree.ShiftOriginNode(child2, newOrigin);\n\n    node.aabb.lowerBound.SelfSub(newOrigin);\n    node.aabb.upperBound.SelfSub(newOrigin);\n  }\n\n  public ShiftOrigin(newOrigin: XY): void {\n\n    b2DynamicTree.ShiftOriginNode(this.m_root, newOrigin);\n\n    /*\n    // Build array of leaves. Free the rest.\n    for (int32 i = 0; i < m_nodeCapacity; ++i) {\n      m_nodes[i].aabb.lowerBound -= newOrigin;\n      m_nodes[i].aabb.upperBound -= newOrigin;\n    }\n    */\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product dumentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_polygonRadius } from \"../common/b2_common\";\nimport { b2Vec2, b2Rot, b2Transform, XY } from \"../common/b2_math\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"./b2_collision\";\nimport { b2DistanceProxy } from \"./b2_distance\";\nimport { b2MassData } from \"./b2_shape\";\nimport { b2Shape, b2ShapeType } from \"./b2_shape\";\n\n/// A line segment (edge) shape. These can be connected in chains or loops\n/// to other edge shapes. Edges created independently are two-sided and do\n/// no provide smooth movement across junctions.\nexport class b2EdgeShape extends b2Shape {\n  public readonly m_vertex1: b2Vec2 = new b2Vec2();\n  public readonly m_vertex2: b2Vec2 = new b2Vec2();\n  public readonly m_vertex0: b2Vec2 = new b2Vec2();\n  public readonly m_vertex3: b2Vec2 = new b2Vec2();\n\n  /// Uses m_vertex0 and m_vertex3 to create smooth collision.\n  public m_oneSided: boolean = false;\n\n  constructor() {\n    super(b2ShapeType.e_edgeShape, b2_polygonRadius);\n  }\n\n  /// Set this as a part of a sequence. Vertex v0 precedes the edge and vertex v3\n\t/// follows. These extra vertices are used to provide smooth movement\n\t/// across junctions. This also makes the collision one-sided. The edge\n\t/// normal points to the right looking from v1 to v2.\n\t// void SetOneSided(const b2Vec2& v0, const b2Vec2& v1,const b2Vec2& v2, const b2Vec2& v3);\n  public SetOneSided(v0: XY, v1: XY, v2: XY, v3: XY): b2EdgeShape {\n    this.m_vertex0.Copy(v0);\n    this.m_vertex1.Copy(v1);\n    this.m_vertex2.Copy(v2);\n    this.m_vertex3.Copy(v3);\n    this.m_oneSided = true;\n    return this;\n  }\n\n\t/// Set this as an isolated edge. Collision is two-sided.\n  public SetTwoSided(v1: XY, v2: XY): b2EdgeShape {\n    this.m_vertex1.Copy(v1);\n    this.m_vertex2.Copy(v2);\n    this.m_oneSided = false;\n    return this;\n  }\n\n  /// Implement b2Shape.\n  public Clone(): b2EdgeShape {\n    return new b2EdgeShape().Copy(this);\n  }\n\n  public Copy(other: b2EdgeShape): b2EdgeShape {\n    super.Copy(other);\n\n    // DEBUG: b2Assert(other instanceof b2EdgeShape);\n\n    this.m_vertex1.Copy(other.m_vertex1);\n    this.m_vertex2.Copy(other.m_vertex2);\n    this.m_vertex0.Copy(other.m_vertex0);\n    this.m_vertex3.Copy(other.m_vertex3);\n    this.m_oneSided = other.m_oneSided;\n\n    return this;\n  }\n\n  /// @see b2Shape::GetChildCount\n  public GetChildCount(): number {\n    return 1;\n  }\n\n  /// @see b2Shape::TestPoint\n  public TestPoint(xf: b2Transform, p: XY): boolean {\n    return false;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  /// @see b2Shape::ComputeDistance\n  private static ComputeDistance_s_v1 = new b2Vec2();\n  private static ComputeDistance_s_v2 = new b2Vec2();\n  private static ComputeDistance_s_d = new b2Vec2();\n  private static ComputeDistance_s_s = new b2Vec2();\n  public ComputeDistance(xf: b2Transform, p: b2Vec2, normal: b2Vec2, childIndex: number): number {\n    const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeDistance_s_v1);\n    const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeDistance_s_v2);\n\n    const d = b2Vec2.SubVV(p, v1, b2EdgeShape.ComputeDistance_s_d);\n    const s = b2Vec2.SubVV(v2, v1, b2EdgeShape.ComputeDistance_s_s);\n    const ds = b2Vec2.DotVV(d, s);\n    if (ds > 0) {\n      const s2 = b2Vec2.DotVV(s, s);\n      if (ds > s2) {\n        b2Vec2.SubVV(p, v2, d);\n      } else {\n        d.SelfMulSub(ds / s2, s);\n      }\n    }\n    normal.Copy(d);\n    return normal.Normalize();\n  }\n  // #endif\n\n  /// Implement b2Shape.\n  // p = p1 + t * d\n  // v = v1 + s * e\n  // p1 + t * d = v1 + s * e\n  // s * e - t * d = p1 - v1\n  private static RayCast_s_p1 = new b2Vec2();\n  private static RayCast_s_p2 = new b2Vec2();\n  private static RayCast_s_d = new b2Vec2();\n  private static RayCast_s_e = new b2Vec2();\n  private static RayCast_s_q = new b2Vec2();\n  private static RayCast_s_r = new b2Vec2();\n  public RayCast(output: b2RayCastOutput, input: b2RayCastInput, xf: b2Transform, childIndex: number): boolean {\n    // Put the ray into the edge's frame of reference.\n    const p1: b2Vec2 = b2Transform.MulTXV(xf, input.p1, b2EdgeShape.RayCast_s_p1);\n    const p2: b2Vec2 = b2Transform.MulTXV(xf, input.p2, b2EdgeShape.RayCast_s_p2);\n    const d: b2Vec2 = b2Vec2.SubVV(p2, p1, b2EdgeShape.RayCast_s_d);\n\n    const v1: b2Vec2 = this.m_vertex1;\n    const v2: b2Vec2 = this.m_vertex2;\n    const e: b2Vec2 = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_e);\n\n  \t// Normal points to the right, looking from v1 at v2\n    const normal: b2Vec2 = output.normal.Set(e.y, -e.x).SelfNormalize();\n\n    // q = p1 + t * d\n    // dot(normal, q - v1) = 0\n    // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n    const numerator: number = b2Vec2.DotVV(normal, b2Vec2.SubVV(v1, p1, b2Vec2.s_t0));\n    if (this.m_oneSided && numerator > 0.0) {\n      return false;\n    }\n\n    const denominator: number = b2Vec2.DotVV(normal, d);\n\n    if (denominator === 0) {\n      return false;\n    }\n\n    const t: number = numerator / denominator;\n    if (t < 0 || input.maxFraction < t) {\n      return false;\n    }\n\n    const q: b2Vec2 = b2Vec2.AddVMulSV(p1, t, d, b2EdgeShape.RayCast_s_q);\n\n    // q = v1 + s * r\n    // s = dot(q - v1, r) / dot(r, r)\n    const r: b2Vec2 = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_r);\n    const rr: number = b2Vec2.DotVV(r, r);\n    if (rr === 0) {\n      return false;\n    }\n\n    const s: number = b2Vec2.DotVV(b2Vec2.SubVV(q, v1, b2Vec2.s_t0), r) / rr;\n    if (s < 0 || 1 < s) {\n      return false;\n    }\n\n    output.fraction = t;\n    b2Rot.MulRV(xf.q, output.normal, output.normal);\n    if (numerator > 0) {\n      output.normal.SelfNeg();\n    }\n    return true;\n  }\n\n  /// @see b2Shape::ComputeAABB\n  private static ComputeAABB_s_v1 = new b2Vec2();\n  private static ComputeAABB_s_v2 = new b2Vec2();\n  public ComputeAABB(aabb: b2AABB, xf: b2Transform, childIndex: number): void {\n    const v1: b2Vec2 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeAABB_s_v1);\n    const v2: b2Vec2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeAABB_s_v2);\n\n    b2Vec2.MinV(v1, v2, aabb.lowerBound);\n    b2Vec2.MaxV(v1, v2, aabb.upperBound);\n\n    const r: number = this.m_radius;\n    aabb.lowerBound.SelfSubXY(r, r);\n    aabb.upperBound.SelfAddXY(r, r);\n  }\n\n  /// @see b2Shape::ComputeMass\n  public ComputeMass(massData: b2MassData, density: number): void {\n    massData.mass = 0;\n    b2Vec2.MidVV(this.m_vertex1, this.m_vertex2, massData.center);\n    massData.I = 0;\n  }\n\n  public SetupDistanceProxy(proxy: b2DistanceProxy, index: number): void {\n    proxy.m_vertices = proxy.m_buffer;\n    proxy.m_vertices[0].Copy(this.m_vertex1);\n    proxy.m_vertices[1].Copy(this.m_vertex2);\n    proxy.m_count = 2;\n    proxy.m_radius = this.m_radius;\n  }\n\n  public ComputeSubmergedArea(normal: b2Vec2, offset: number, xf: b2Transform, c: b2Vec2): number {\n    c.SetZero();\n    return 0;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    log(\"    const shape: b2EdgeShape = new b2EdgeShape();\\n\");\n    log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\n    log(\"    shape.m_vertex0.Set(%.15f, %.15f);\\n\", this.m_vertex0.x, this.m_vertex0.y);\n    log(\"    shape.m_vertex1.Set(%.15f, %.15f);\\n\", this.m_vertex1.x, this.m_vertex1.y);\n    log(\"    shape.m_vertex2.Set(%.15f, %.15f);\\n\", this.m_vertex2.x, this.m_vertex2.y);\n    log(\"    shape.m_vertex3.Set(%.15f, %.15f);\\n\", this.m_vertex3.x, this.m_vertex3.y);\n    log(\"    shape.m_oneSided = %s;\\n\", this.m_oneSided);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert, b2_epsilon_sq } from \"../common/b2_settings\";\nimport { b2_epsilon, b2_maxFloat, b2_linearSlop, b2_polygonRadius } from \"../common/b2_common\";\nimport { b2Vec2, b2Rot, b2Transform, XY } from \"../common/b2_math\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"./b2_collision\";\nimport { b2DistanceProxy } from \"./b2_distance\";\nimport { b2MassData } from \"./b2_shape\";\nimport { b2Shape, b2ShapeType } from \"./b2_shape\";\n\n/// A solid convex polygon. It is assumed that the interior of the polygon is to\n/// the left of each edge.\n/// In most cases you should not need many vertices for a convex polygon.\nexport class b2PolygonShape extends b2Shape {\n  public readonly m_centroid: b2Vec2 = new b2Vec2(0, 0);\n  public m_vertices: b2Vec2[] = [];\n  public m_normals: b2Vec2[] = [];\n  public m_count: number = 0;\n\n  constructor() {\n    super(b2ShapeType.e_polygonShape, b2_polygonRadius);\n  }\n\n  /// Implement b2Shape.\n  public Clone(): b2PolygonShape {\n    return new b2PolygonShape().Copy(this);\n  }\n\n  public Copy(other: b2PolygonShape): b2PolygonShape {\n    super.Copy(other);\n\n    // DEBUG: b2Assert(other instanceof b2PolygonShape);\n\n    this.m_centroid.Copy(other.m_centroid);\n    this.m_count = other.m_count;\n    this.m_vertices = b2Vec2.MakeArray(this.m_count);\n    this.m_normals = b2Vec2.MakeArray(this.m_count);\n    for (let i: number = 0; i < this.m_count; ++i) {\n      this.m_vertices[i].Copy(other.m_vertices[i]);\n      this.m_normals[i].Copy(other.m_normals[i]);\n    }\n    return this;\n  }\n\n  /// @see b2Shape::GetChildCount\n  public GetChildCount(): number {\n    return 1;\n  }\n\n  /// Create a convex hull from the given array of points.\n  /// @warning the points may be re-ordered, even if they form a convex polygon\n  /// @warning collinear points are handled but not removed. Collinear points\n  /// may lead to poor stacking behavior.\n  private static Set_s_r = new b2Vec2();\n  private static Set_s_v = new b2Vec2();\n  public Set(vertices: XY[]): b2PolygonShape;\n  public Set(vertices: XY[], count: number): b2PolygonShape;\n  public Set(vertices: number[]): b2PolygonShape;\n  public Set(...args: any[]): b2PolygonShape {\n    if (typeof args[0][0] === \"number\") {\n      const vertices: number[] = args[0];\n      if (vertices.length % 2 !== 0) { throw new Error(); }\n      return this._Set((index: number): XY => ({ x: vertices[index * 2], y: vertices[index * 2 + 1] }), vertices.length / 2);\n    } else {\n      const vertices: XY[] = args[0];\n      const count: number = args[1] || vertices.length;\n      return this._Set((index: number): XY => vertices[index], count);\n    }\n  }\n  public _Set(vertices: (index: number) => XY, count: number): b2PolygonShape {\n\n    // DEBUG: b2Assert(3 <= count);\n    if (count < 3) {\n      return this.SetAsBox(1, 1);\n    }\n\n    let n: number = count;\n\n    // Perform welding and copy vertices into local buffer.\n    const ps: XY[] = [];\n    for (let i = 0; i < n; ++i) {\n      const /*b2Vec2*/ v = vertices(i);\n\n      let /*bool*/ unique = true;\n      for (let /*int32*/ j = 0; j < ps.length; ++j) {\n        if (b2Vec2.DistanceSquaredVV(v, ps[j]) < ((0.5 * b2_linearSlop) * (0.5 * b2_linearSlop))) {\n          unique = false;\n          break;\n        }\n      }\n\n      if (unique) {\n        ps.push(v);\n      }\n    }\n\n    n = ps.length;\n    if (n < 3) {\n      // Polygon is degenerate.\n      // DEBUG: b2Assert(false);\n      return this.SetAsBox(1.0, 1.0);\n    }\n\n    // Create the convex hull using the Gift wrapping algorithm\n    // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n    // Find the right most point on the hull\n    let i0: number = 0;\n    let x0: number = ps[0].x;\n    for (let i: number = 1; i < n; ++i) {\n      const x: number = ps[i].x;\n      if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\n        i0 = i;\n        x0 = x;\n      }\n    }\n\n    const hull: number[] = [];\n    let m: number = 0;\n    let ih: number = i0;\n\n    for (; ;) {\n      hull[m] = ih;\n\n      let ie: number = 0;\n      for (let j: number = 1; j < n; ++j) {\n        if (ie === ih) {\n          ie = j;\n          continue;\n        }\n\n        const r: b2Vec2 = b2Vec2.SubVV(ps[ie], ps[hull[m]], b2PolygonShape.Set_s_r);\n        const v: b2Vec2 = b2Vec2.SubVV(ps[j], ps[hull[m]], b2PolygonShape.Set_s_v);\n        const c: number = b2Vec2.CrossVV(r, v);\n        if (c < 0) {\n          ie = j;\n        }\n\n        // Collinearity check\n        if (c === 0 && v.LengthSquared() > r.LengthSquared()) {\n          ie = j;\n        }\n      }\n\n      ++m;\n      ih = ie;\n\n      if (ie === i0) {\n        break;\n      }\n    }\n\n    this.m_count = m;\n    this.m_vertices = b2Vec2.MakeArray(this.m_count);\n    this.m_normals = b2Vec2.MakeArray(this.m_count);\n\n    // Copy vertices.\n    for (let i: number = 0; i < m; ++i) {\n      this.m_vertices[i].Copy(ps[hull[i]]);\n    }\n\n    // Compute normals. Ensure the edges have non-zero length.\n    for (let i: number = 0; i < m; ++i) {\n      const vertexi1: b2Vec2 = this.m_vertices[i];\n      const vertexi2: b2Vec2 = this.m_vertices[(i + 1) % m];\n      const edge: b2Vec2 = b2Vec2.SubVV(vertexi2, vertexi1, b2Vec2.s_t0); // edge uses s_t0\n      // DEBUG: b2Assert(edge.LengthSquared() > b2_epsilon_sq);\n      b2Vec2.CrossVOne(edge, this.m_normals[i]).SelfNormalize();\n    }\n\n    // Compute the polygon centroid.\n    b2PolygonShape.ComputeCentroid(this.m_vertices, m, this.m_centroid);\n\n    return this;\n  }\n\n  /// Build vertices to represent an axis-aligned box or an oriented box.\n  /// @param hx the half-width.\n  /// @param hy the half-height.\n  /// @param center the center of the box in local coordinates.\n  /// @param setAngle the rotation of the box in local coordinates.\n  public SetAsBox(hx: number, hy: number, center?: XY, angle: number = 0): b2PolygonShape {\n    this.m_count = 4;\n    this.m_vertices = b2Vec2.MakeArray(this.m_count);\n    this.m_normals = b2Vec2.MakeArray(this.m_count);\n    this.m_vertices[0].Set((-hx), (-hy));\n    this.m_vertices[1].Set(hx, (-hy));\n    this.m_vertices[2].Set(hx, hy);\n    this.m_vertices[3].Set((-hx), hy);\n    this.m_normals[0].Set(0, (-1));\n    this.m_normals[1].Set(1, 0);\n    this.m_normals[2].Set(0, 1);\n    this.m_normals[3].Set((-1), 0);\n    this.m_centroid.SetZero();\n\n    if (center) {\n      this.m_centroid.Copy(center);\n\n      const xf: b2Transform = new b2Transform();\n      xf.SetPosition(center);\n      xf.SetRotationAngle(angle);\n\n      // Transform vertices and normals.\n      for (let i: number = 0; i < this.m_count; ++i) {\n        b2Transform.MulXV(xf, this.m_vertices[i], this.m_vertices[i]);\n        b2Rot.MulRV(xf.q, this.m_normals[i], this.m_normals[i]);\n      }\n    }\n\n    return this;\n  }\n\n  /// @see b2Shape::TestPoint\n  private static TestPoint_s_pLocal = new b2Vec2();\n  public TestPoint(xf: b2Transform, p: XY): boolean {\n    const pLocal: b2Vec2 = b2Transform.MulTXV(xf, p, b2PolygonShape.TestPoint_s_pLocal);\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const dot: number = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\n      if (dot > 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  /// @see b2Shape::ComputeDistance\n  private static ComputeDistance_s_pLocal = new b2Vec2();\n  private static ComputeDistance_s_normalForMaxDistance = new b2Vec2();\n  private static ComputeDistance_s_minDistance = new b2Vec2();\n  private static ComputeDistance_s_distance = new b2Vec2();\n  public ComputeDistance(xf: b2Transform, p: b2Vec2, normal: b2Vec2, childIndex: number): number {\n    const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.ComputeDistance_s_pLocal);\n    let maxDistance = -b2_maxFloat;\n    const normalForMaxDistance = b2PolygonShape.ComputeDistance_s_normalForMaxDistance.Copy(pLocal);\n\n    for (let i = 0; i < this.m_count; ++i) {\n      const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\n      if (dot > maxDistance) {\n        maxDistance = dot;\n        normalForMaxDistance.Copy(this.m_normals[i]);\n      }\n    }\n\n    if (maxDistance > 0) {\n      const minDistance = b2PolygonShape.ComputeDistance_s_minDistance.Copy(normalForMaxDistance);\n      let minDistance2 = maxDistance * maxDistance;\n      for (let i = 0; i < this.m_count; ++i) {\n        const distance = b2Vec2.SubVV(pLocal, this.m_vertices[i], b2PolygonShape.ComputeDistance_s_distance);\n        const distance2 = distance.LengthSquared();\n        if (minDistance2 > distance2) {\n          minDistance.Copy(distance);\n          minDistance2 = distance2;\n        }\n      }\n\n      b2Rot.MulRV(xf.q, minDistance, normal);\n      normal.Normalize();\n      return Math.sqrt(minDistance2);\n    } else {\n      b2Rot.MulRV(xf.q, normalForMaxDistance, normal);\n      return maxDistance;\n    }\n  }\n  // #endif\n\n  /// Implement b2Shape.\n  /// @note because the polygon is solid, rays that start inside do not hit because the normal is\n  /// not defined.\n  private static RayCast_s_p1 = new b2Vec2();\n  private static RayCast_s_p2 = new b2Vec2();\n  private static RayCast_s_d = new b2Vec2();\n  public RayCast(output: b2RayCastOutput, input: b2RayCastInput, xf: b2Transform, childIndex: number): boolean {\n    // Put the ray into the polygon's frame of reference.\n    const p1: b2Vec2 = b2Transform.MulTXV(xf, input.p1, b2PolygonShape.RayCast_s_p1);\n    const p2: b2Vec2 = b2Transform.MulTXV(xf, input.p2, b2PolygonShape.RayCast_s_p2);\n    const d: b2Vec2 = b2Vec2.SubVV(p2, p1, b2PolygonShape.RayCast_s_d);\n\n    let lower: number = 0, upper = input.maxFraction;\n\n    let index: number = -1;\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      // p = p1 + a * d\n      // dot(normal, p - v) = 0\n      // dot(normal, p1 - v) + a * dot(normal, d) = 0\n      const numerator: number = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(this.m_vertices[i], p1, b2Vec2.s_t0));\n      const denominator: number = b2Vec2.DotVV(this.m_normals[i], d);\n\n      if (denominator === 0) {\n        if (numerator < 0) {\n          return false;\n        }\n      } else {\n        // Note: we want this predicate without division:\n        // lower < numerator / denominator, where denominator < 0\n        // Since denominator < 0, we have to flip the inequality:\n        // lower < numerator / denominator <==> denominator * lower > numerator.\n        if (denominator < 0 && numerator < lower * denominator) {\n          // Increase lower.\n          // The segment enters this half-space.\n          lower = numerator / denominator;\n          index = i;\n        } else if (denominator > 0 && numerator < upper * denominator) {\n          // Decrease upper.\n          // The segment exits this half-space.\n          upper = numerator / denominator;\n        }\n      }\n\n      // The use of epsilon here causes the assert on lower to trip\n      // in some cases. Apparently the use of epsilon was to make edge\n      // shapes work, but now those are handled separately.\n      // if (upper < lower - b2_epsilon)\n      if (upper < lower) {\n        return false;\n      }\n    }\n\n    // DEBUG: b2Assert(0 <= lower && lower <= input.maxFraction);\n\n    if (index >= 0) {\n      output.fraction = lower;\n      b2Rot.MulRV(xf.q, this.m_normals[index], output.normal);\n      return true;\n    }\n\n    return false;\n  }\n\n  /// @see b2Shape::ComputeAABB\n  private static ComputeAABB_s_v = new b2Vec2();\n  public ComputeAABB(aabb: b2AABB, xf: b2Transform, childIndex: number): void {\n    const lower: b2Vec2 = b2Transform.MulXV(xf, this.m_vertices[0], aabb.lowerBound);\n    const upper: b2Vec2 = aabb.upperBound.Copy(lower);\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const v: b2Vec2 = b2Transform.MulXV(xf, this.m_vertices[i], b2PolygonShape.ComputeAABB_s_v);\n      b2Vec2.MinV(v, lower, lower);\n      b2Vec2.MaxV(v, upper, upper);\n    }\n\n    const r: number = this.m_radius;\n    lower.SelfSubXY(r, r);\n    upper.SelfAddXY(r, r);\n  }\n\n  /// @see b2Shape::ComputeMass\n  private static ComputeMass_s_center = new b2Vec2();\n  private static ComputeMass_s_s = new b2Vec2();\n  private static ComputeMass_s_e1 = new b2Vec2();\n  private static ComputeMass_s_e2 = new b2Vec2();\n  public ComputeMass(massData: b2MassData, density: number): void {\n    // Polygon mass, centroid, and inertia.\n    // Let rho be the polygon density in mass per unit area.\n    // Then:\n    // mass = rho * int(dA)\n    // centroid.x = (1/mass) * rho * int(x * dA)\n    // centroid.y = (1/mass) * rho * int(y * dA)\n    // I = rho * int((x*x + y*y) * dA)\n    //\n    // We can compute these integrals by summing all the integrals\n    // for each triangle of the polygon. To evaluate the integral\n    // for a single triangle, we make a change of variables to\n    // the (u,v) coordinates of the triangle:\n    // x = x0 + e1x * u + e2x * v\n    // y = y0 + e1y * u + e2y * v\n    // where 0 <= u && 0 <= v && u + v <= 1.\n    //\n    // We integrate u from [0,1-v] and then v from [0,1].\n    // We also need to use the Jacobian of the transformation:\n    // D = cross(e1, e2)\n    //\n    // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n    //\n    // The rest of the derivation is handled by computer algebra.\n\n    // DEBUG: b2Assert(this.m_count >= 3);\n\n    const center: b2Vec2 = b2PolygonShape.ComputeMass_s_center.SetZero();\n    let area: number = 0;\n    let I: number = 0;\n\n    // Get a reference point for forming triangles.\n    // Use the first vertex to reduce round-off errors.\n    const s: b2Vec2 = b2PolygonShape.ComputeMass_s_s.Copy(this.m_vertices[0]);\n\n    const k_inv3: number = 1 / 3;\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      // Triangle vertices.\n      const e1: b2Vec2 = b2Vec2.SubVV(this.m_vertices[i], s, b2PolygonShape.ComputeMass_s_e1);\n      const e2: b2Vec2 = b2Vec2.SubVV(this.m_vertices[(i + 1) % this.m_count], s, b2PolygonShape.ComputeMass_s_e2);\n\n      const D: number = b2Vec2.CrossVV(e1, e2);\n\n      const triangleArea: number = 0.5 * D;\n      area += triangleArea;\n\n      // Area weighted centroid\n      center.SelfAdd(b2Vec2.MulSV(triangleArea * k_inv3, b2Vec2.AddVV(e1, e2, b2Vec2.s_t0), b2Vec2.s_t1));\n\n      const ex1: number = e1.x;\n      const ey1: number = e1.y;\n      const ex2: number = e2.x;\n      const ey2: number = e2.y;\n\n      const intx2: number = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n      const inty2: number = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n      I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n    }\n\n    // Total mass\n    massData.mass = density * area;\n\n    // Center of mass\n    // DEBUG: b2Assert(area > b2_epsilon);\n    center.SelfMul(1 / area);\n    b2Vec2.AddVV(center, s, massData.center);\n\n    // Inertia tensor relative to the local origin (point s).\n    massData.I = density * I;\n\n    // Shift to center of mass then to original body origin.\n    massData.I += massData.mass * (b2Vec2.DotVV(massData.center, massData.center) - b2Vec2.DotVV(center, center));\n  }\n\n  private static Validate_s_e = new b2Vec2();\n  private static Validate_s_v = new b2Vec2();\n  public Validate(): boolean {\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const i1 = i;\n      const i2 = (i + 1) % this.m_count;\n      const p: b2Vec2 = this.m_vertices[i1];\n      const e: b2Vec2 = b2Vec2.SubVV(this.m_vertices[i2], p, b2PolygonShape.Validate_s_e);\n\n      for (let j: number = 0; j < this.m_count; ++j) {\n        if (j === i1 || j === i2) {\n          continue;\n        }\n\n        const v: b2Vec2 = b2Vec2.SubVV(this.m_vertices[j], p, b2PolygonShape.Validate_s_v);\n        const c: number = b2Vec2.CrossVV(e, v);\n        if (c < 0) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public SetupDistanceProxy(proxy: b2DistanceProxy, index: number): void {\n    proxy.m_vertices = this.m_vertices;\n    proxy.m_count = this.m_count;\n    proxy.m_radius = this.m_radius;\n  }\n\n  private static ComputeSubmergedArea_s_normalL = new b2Vec2();\n  private static ComputeSubmergedArea_s_md = new b2MassData();\n  private static ComputeSubmergedArea_s_intoVec = new b2Vec2();\n  private static ComputeSubmergedArea_s_outoVec = new b2Vec2();\n  private static ComputeSubmergedArea_s_center = new b2Vec2();\n  public ComputeSubmergedArea(normal: b2Vec2, offset: number, xf: b2Transform, c: b2Vec2): number {\n    // Transform plane into shape co-ordinates\n    const normalL: b2Vec2 = b2Rot.MulTRV(xf.q, normal, b2PolygonShape.ComputeSubmergedArea_s_normalL);\n    const offsetL: number = offset - b2Vec2.DotVV(normal, xf.p);\n\n    const depths: number[] = [];\n    let diveCount: number = 0;\n    let intoIndex: number = -1;\n    let outoIndex: number = -1;\n\n    let lastSubmerged: boolean = false;\n    for (let i: number = 0; i < this.m_count; ++i) {\n      depths[i] = b2Vec2.DotVV(normalL, this.m_vertices[i]) - offsetL;\n      const isSubmerged: boolean = depths[i] < (-b2_epsilon);\n      if (i > 0) {\n        if (isSubmerged) {\n          if (!lastSubmerged) {\n            intoIndex = i - 1;\n            diveCount++;\n          }\n        } else {\n          if (lastSubmerged) {\n            outoIndex = i - 1;\n            diveCount++;\n          }\n        }\n      }\n      lastSubmerged = isSubmerged;\n    }\n    switch (diveCount) {\n      case 0:\n        if (lastSubmerged) {\n          // Completely submerged\n          const md: b2MassData = b2PolygonShape.ComputeSubmergedArea_s_md;\n          this.ComputeMass(md, 1);\n          b2Transform.MulXV(xf, md.center, c);\n          return md.mass;\n        } else {\n          // Completely dry\n          return 0;\n        }\n      case 1:\n        if (intoIndex === (-1)) {\n          intoIndex = this.m_count - 1;\n        } else {\n          outoIndex = this.m_count - 1;\n        }\n        break;\n    }\n    const intoIndex2: number = ((intoIndex + 1) % this.m_count);\n    const outoIndex2: number = ((outoIndex + 1) % this.m_count);\n    const intoLamdda: number = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\n    const outoLamdda: number = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\n\n    const intoVec: b2Vec2 = b2PolygonShape.ComputeSubmergedArea_s_intoVec.Set(\n      this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda,\n      this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\n    const outoVec: b2Vec2 = b2PolygonShape.ComputeSubmergedArea_s_outoVec.Set(\n      this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda,\n      this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\n\n    // Initialize accumulator\n    let area: number = 0;\n    const center: b2Vec2 = b2PolygonShape.ComputeSubmergedArea_s_center.SetZero();\n    let p2: b2Vec2 = this.m_vertices[intoIndex2];\n    let p3: b2Vec2;\n\n    // An awkward loop from intoIndex2+1 to outIndex2\n    let i: number = intoIndex2;\n    while (i !== outoIndex2) {\n      i = (i + 1) % this.m_count;\n      if (i === outoIndex2) {\n        p3 = outoVec;\n      } else {\n        p3 = this.m_vertices[i];\n      }\n\n      const triangleArea: number = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\n      area += triangleArea;\n      // Area weighted centroid\n      center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\n      center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\n\n      p2 = p3;\n    }\n\n    // Normalize and transform centroid\n    center.SelfMul(1 / area);\n    b2Transform.MulXV(xf, center, c);\n\n    return area;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    log(\"    const shape: b2PolygonShape = new b2PolygonShape();\\n\");\n    log(\"    const vs: b2Vec2[] = [];\\n\");\n    for (let i: number = 0; i < this.m_count; ++i) {\n      log(\"    vs[%d] = new b2Vec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\n    }\n    log(\"    shape.Set(vs, %d);\\n\", this.m_count);\n  }\n\n  private static ComputeCentroid_s_s = new b2Vec2();\n  private static ComputeCentroid_s_p1 = new b2Vec2();\n  private static ComputeCentroid_s_p2 = new b2Vec2();\n  private static ComputeCentroid_s_p3 = new b2Vec2();\n  private static ComputeCentroid_s_e1 = new b2Vec2();\n  private static ComputeCentroid_s_e2 = new b2Vec2();\n  public static ComputeCentroid(vs: b2Vec2[], count: number, out: b2Vec2): b2Vec2 {\n    // DEBUG: b2Assert(count >= 3);\n\n    const c: b2Vec2 = out; c.SetZero();\n    let area: number = 0;\n\n    // Get a reference point for forming triangles.\n    // Use the first vertex to reduce round-off errors.\n    const s: b2Vec2 = b2PolygonShape.ComputeCentroid_s_s.Copy(vs[0]);\n\n    const inv3: number = 1 / 3;\n\n    for (let i: number = 0; i < count; ++i) {\n      // Triangle vertices.\n      const p1: b2Vec2 = b2Vec2.SubVV(vs[0], s, b2PolygonShape.ComputeCentroid_s_p1);\n      const p2: b2Vec2 = b2Vec2.SubVV(vs[i], s, b2PolygonShape.ComputeCentroid_s_p2);\n      const p3: b2Vec2 = b2Vec2.SubVV(vs[(i + 1) % count], s, b2PolygonShape.ComputeCentroid_s_p3);\n\n      const e1: b2Vec2 = b2Vec2.SubVV(p2, p1, b2PolygonShape.ComputeCentroid_s_e1);\n      const e2: b2Vec2 = b2Vec2.SubVV(p3, p1, b2PolygonShape.ComputeCentroid_s_e2);\n\n      const D: number = b2Vec2.CrossVV(e1, e2);\n\n      const triangleArea: number = 0.5 * D;\n      area += triangleArea;\n\n      // Area weighted centroid\n      c.x += triangleArea * inv3 * (p1.x + p2.x + p3.x);\n      c.y += triangleArea * inv3 * (p1.y + p2.y + p3.y);\n    }\n\n    // Centroid\n    // DEBUG: b2Assert(area > b2_epsilon);\n    // c = (1.0f / area) * c + s;\n    c.x = (1 / area) * c.x + s.x;\n    c.y = (1 / area) * c.y + s.y;\n    return c;\n  }\n\n  /*\n  public static ComputeOBB(obb, vs, count) {\n    const i: number = 0;\n    const p: Array = [count + 1];\n    for (i = 0; i < count; ++i) {\n      p[i] = vs[i];\n    }\n    p[count] = p[0];\n    const minArea = b2_maxFloat;\n    for (i = 1; i <= count; ++i) {\n      const root = p[i - 1];\n      const uxX = p[i].x - root.x;\n      const uxY = p[i].y - root.y;\n      const length = b2Sqrt(uxX * uxX + uxY * uxY);\n      uxX /= length;\n      uxY /= length;\n      const uyX = (-uxY);\n      const uyY = uxX;\n      const lowerX = b2_maxFloat;\n      const lowerY = b2_maxFloat;\n      const upperX = (-b2_maxFloat);\n      const upperY = (-b2_maxFloat);\n      for (let j: number = 0; j < count; ++j) {\n        const dX = p[j].x - root.x;\n        const dY = p[j].y - root.y;\n        const rX = (uxX * dX + uxY * dY);\n        const rY = (uyX * dX + uyY * dY);\n        if (rX < lowerX) lowerX = rX;\n        if (rY < lowerY) lowerY = rY;\n        if (rX > upperX) upperX = rX;\n        if (rY > upperY) upperY = rY;\n      }\n      const area = (upperX - lowerX) * (upperY - lowerY);\n      if (area < 0.95 * minArea) {\n        minArea = area;\n        obb.R.ex.x = uxX;\n        obb.R.ex.y = uxY;\n        obb.R.ey.x = uyX;\n        obb.R.ey.y = uyY;\n        const center_x: number = 0.5 * (lowerX + upperX);\n        const center_y: number = 0.5 * (lowerY + upperY);\n        const tMat = obb.R;\n        obb.center.x = root.x + (tMat.ex.x * center_x + tMat.ey.cursorX * center_y);\n        obb.center.y = root.y + (tMat.ex.y * center_x + tMat.ey.y * center_y);\n        obb.extents.cursorX = 0.5 * (upperX - lowerX);\n        obb.extents.y = 0.5 * (upperY - lowerY);\n      }\n    }\n  }\n  */\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2Vec2, b2Transform, XY } from \"../common/b2_math\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"./b2_collision\";\nimport { b2DistanceProxy } from \"./b2_distance\";\n\n/// This holds the mass data computed for a shape.\nexport class b2MassData {\n  /// The mass of the shape, usually in kilograms.\n  public mass: number = 0;\n\n  /// The position of the shape's centroid relative to the shape's origin.\n  public readonly center: b2Vec2 = new b2Vec2(0, 0);\n\n  /// The rotational inertia of the shape about the local origin.\n  public I: number = 0;\n}\n\nexport enum b2ShapeType {\n  e_unknown = -1,\n  e_circleShape = 0,\n  e_edgeShape = 1,\n  e_polygonShape = 2,\n  e_chainShape = 3,\n  e_shapeTypeCount = 4,\n}\n\n/// A shape is used for collision detection. You can create a shape however you like.\n/// Shapes used for simulation in b2World are created automatically when a b2Fixture\n/// is created. Shapes may encapsulate a one or more child shapes.\nexport abstract class b2Shape {\n  public readonly m_type: b2ShapeType = b2ShapeType.e_unknown;\n\n\t/// Radius of a shape. For polygonal shapes this must be b2_polygonRadius. There is no support for\n\t/// making rounded polygons.\n  public m_radius: number = 0;\n\n  constructor(type: b2ShapeType, radius: number) {\n    this.m_type = type;\n    this.m_radius = radius;\n  }\n\n  /// Clone the concrete shape.\n  public abstract Clone(): b2Shape;\n\n  public Copy(other: b2Shape): b2Shape {\n    // DEBUG: b2Assert(this.m_type === other.m_type);\n    this.m_radius = other.m_radius;\n    return this;\n  }\n\n  /// Get the type of this shape. You can use this to down cast to the concrete shape.\n  /// @return the shape type.\n  public GetType(): b2ShapeType {\n    return this.m_type;\n  }\n\n  /// Get the number of child primitives.\n  public abstract GetChildCount(): number;\n\n  /// Test a point for containment in this shape. This only works for convex shapes.\n  /// @param xf the shape world transform.\n  /// @param p a point in world coordinates.\n  public abstract TestPoint(xf: b2Transform, p: XY): boolean;\n\n  // #if B2_ENABLE_PARTICLE\n  /// Compute the distance from the current shape to the specified point. This only works for convex shapes.\n  /// @param xf the shape world transform.\n  /// @param p a point in world coordinates.\n  /// @param distance returns the distance from the current shape.\n  /// @param normal returns the direction in which the distance increases.\n  public abstract ComputeDistance(xf: b2Transform, p: b2Vec2, normal: b2Vec2, childIndex: number): number;\n  // #endif\n\n  /// Cast a ray against a child shape.\n  /// @param output the ray-cast results.\n  /// @param input the ray-cast input parameters.\n  /// @param transform the transform to be applied to the shape.\n  /// @param childIndex the child shape index\n  public abstract RayCast(output: b2RayCastOutput, input: b2RayCastInput, transform: b2Transform, childIndex: number): boolean;\n\n  /// Given a transform, compute the associated axis aligned bounding box for a child shape.\n  /// @param aabb returns the axis aligned box.\n  /// @param xf the world transform of the shape.\n  /// @param childIndex the child shape\n  public abstract ComputeAABB(aabb: b2AABB, xf: b2Transform, childIndex: number): void;\n\n  /// Compute the mass properties of this shape using its dimensions and density.\n  /// The inertia tensor is computed about the local origin.\n  /// @param massData returns the mass data for this shape.\n  /// @param density the density in kilograms per meter squared.\n  public abstract ComputeMass(massData: b2MassData, density: number): void;\n\n  public abstract SetupDistanceProxy(proxy: b2DistanceProxy, index: number): void;\n\n  public abstract ComputeSubmergedArea(normal: b2Vec2, offset: number, xf: b2Transform, c: b2Vec2): number;\n\n  public abstract Dump(log: (format: string, ...args: any[]) => void): void;\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_linearSlop, b2_maxPolygonVertices } from \"../common/b2_common\";\nimport { b2Abs, b2Max, b2Vec2, b2Rot, b2Transform, b2Sweep } from \"../common/b2_math\";\nimport { b2Timer } from \"../common/b2_timer\";\nimport { b2Distance, b2DistanceInput, b2DistanceOutput, b2DistanceProxy, b2SimplexCache } from \"./b2_distance\";\n\nexport let b2_toiTime: number = 0;\nexport let b2_toiMaxTime: number = 0;\nexport let b2_toiCalls: number = 0;\nexport let b2_toiIters: number = 0;\nexport let b2_toiMaxIters: number = 0;\nexport let b2_toiRootIters: number = 0;\nexport let b2_toiMaxRootIters: number = 0;\nexport function b2_toi_reset(): void {\n  b2_toiTime = 0;\n  b2_toiMaxTime = 0;\n  b2_toiCalls = 0;\n  b2_toiIters = 0;\n  b2_toiMaxIters = 0;\n  b2_toiRootIters = 0;\n  b2_toiMaxRootIters = 0;\n}\n\nconst b2TimeOfImpact_s_xfA: b2Transform = new b2Transform();\nconst b2TimeOfImpact_s_xfB: b2Transform = new b2Transform();\nconst b2TimeOfImpact_s_pointA: b2Vec2 = new b2Vec2();\nconst b2TimeOfImpact_s_pointB: b2Vec2 = new b2Vec2();\nconst b2TimeOfImpact_s_normal: b2Vec2 = new b2Vec2();\nconst b2TimeOfImpact_s_axisA: b2Vec2 = new b2Vec2();\nconst b2TimeOfImpact_s_axisB: b2Vec2 = new b2Vec2();\n\n/// Input parameters for b2TimeOfImpact\nexport class b2TOIInput {\n  public readonly proxyA: b2DistanceProxy = new b2DistanceProxy();\n  public readonly proxyB: b2DistanceProxy = new b2DistanceProxy();\n  public readonly sweepA: b2Sweep = new b2Sweep();\n  public readonly sweepB: b2Sweep = new b2Sweep();\n  public tMax: number = 0; // defines sweep interval [0, tMax]\n}\n\n/// Output parameters for b2TimeOfImpact.\nexport enum b2TOIOutputState {\n  e_unknown = 0,\n  e_failed = 1,\n  e_overlapped = 2,\n  e_touching = 3,\n  e_separated = 4,\n}\n\nexport class b2TOIOutput {\n  public state = b2TOIOutputState.e_unknown;\n  public t: number = 0;\n}\n\nexport enum b2SeparationFunctionType {\n  e_unknown = -1,\n  e_points = 0,\n  e_faceA = 1,\n  e_faceB = 2,\n}\n\nexport class b2SeparationFunction {\n  public m_proxyA!: b2DistanceProxy;\n  public m_proxyB!: b2DistanceProxy;\n  public readonly m_sweepA: b2Sweep = new b2Sweep();\n  public readonly m_sweepB: b2Sweep = new b2Sweep();\n  public m_type: b2SeparationFunctionType = b2SeparationFunctionType.e_unknown;\n  public readonly m_localPoint: b2Vec2 = new b2Vec2();\n  public readonly m_axis: b2Vec2 = new b2Vec2();\n\n  public Initialize(cache: b2SimplexCache, proxyA: b2DistanceProxy, sweepA: b2Sweep, proxyB: b2DistanceProxy, sweepB: b2Sweep, t1: number): number {\n    this.m_proxyA = proxyA;\n    this.m_proxyB = proxyB;\n    const count: number = cache.count;\n    // DEBUG: b2Assert(0 < count && count < 3);\n\n    this.m_sweepA.Copy(sweepA);\n    this.m_sweepB.Copy(sweepB);\n\n    const xfA: b2Transform = b2TimeOfImpact_s_xfA;\n    const xfB: b2Transform = b2TimeOfImpact_s_xfB;\n    this.m_sweepA.GetTransform(xfA, t1);\n    this.m_sweepB.GetTransform(xfB, t1);\n\n    if (count === 1) {\n      this.m_type = b2SeparationFunctionType.e_points;\n      const localPointA: b2Vec2 = this.m_proxyA.GetVertex(cache.indexA[0]);\n      const localPointB: b2Vec2 = this.m_proxyB.GetVertex(cache.indexB[0]);\n      const pointA: b2Vec2 = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\n      const pointB: b2Vec2 = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\n      b2Vec2.SubVV(pointB, pointA, this.m_axis);\n      const s: number = this.m_axis.Normalize();\n      // #if B2_ENABLE_PARTICLE\n      this.m_localPoint.SetZero();\n      // #endif\n      return s;\n    } else if (cache.indexA[0] === cache.indexA[1]) {\n      // Two points on B and one on A.\n      this.m_type = b2SeparationFunctionType.e_faceB;\n      const localPointB1: b2Vec2 = this.m_proxyB.GetVertex(cache.indexB[0]);\n      const localPointB2: b2Vec2 = this.m_proxyB.GetVertex(cache.indexB[1]);\n\n      b2Vec2.CrossVOne(b2Vec2.SubVV(localPointB2, localPointB1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\n      const normal: b2Vec2 = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\n\n      b2Vec2.MidVV(localPointB1, localPointB2, this.m_localPoint);\n      const pointB: b2Vec2 = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\n\n      const localPointA: b2Vec2 = this.m_proxyA.GetVertex(cache.indexA[0]);\n      const pointA: b2Vec2 = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\n\n      let s: number = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\n      if (s < 0) {\n        this.m_axis.SelfNeg();\n        s = -s;\n      }\n      return s;\n    } else {\n      // Two points on A and one or two points on B.\n      this.m_type = b2SeparationFunctionType.e_faceA;\n      const localPointA1: b2Vec2 = this.m_proxyA.GetVertex(cache.indexA[0]);\n      const localPointA2: b2Vec2 = this.m_proxyA.GetVertex(cache.indexA[1]);\n\n      b2Vec2.CrossVOne(b2Vec2.SubVV(localPointA2, localPointA1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\n      const normal: b2Vec2 = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\n\n      b2Vec2.MidVV(localPointA1, localPointA2, this.m_localPoint);\n      const pointA: b2Vec2 = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\n\n      const localPointB: b2Vec2 = this.m_proxyB.GetVertex(cache.indexB[0]);\n      const pointB: b2Vec2 = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\n\n      let s: number = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\n      if (s < 0) {\n        this.m_axis.SelfNeg();\n        s = -s;\n      }\n      return s;\n    }\n  }\n\n  public FindMinSeparation(indexA: [number], indexB: [number], t: number): number {\n    const xfA: b2Transform = b2TimeOfImpact_s_xfA;\n    const xfB: b2Transform = b2TimeOfImpact_s_xfB;\n    this.m_sweepA.GetTransform(xfA, t);\n    this.m_sweepB.GetTransform(xfB, t);\n\n    switch (this.m_type) {\n    case b2SeparationFunctionType.e_points: {\n        const axisA: b2Vec2 = b2Rot.MulTRV(xfA.q, this.m_axis, b2TimeOfImpact_s_axisA);\n        const axisB: b2Vec2 = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(this.m_axis, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\n\n        indexA[0] = this.m_proxyA.GetSupport(axisA);\n        indexB[0] = this.m_proxyB.GetSupport(axisB);\n\n        const localPointA: b2Vec2 = this.m_proxyA.GetVertex(indexA[0]);\n        const localPointB: b2Vec2 = this.m_proxyB.GetVertex(indexB[0]);\n\n        const pointA: b2Vec2 = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\n        const pointB: b2Vec2 = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\n\n        const separation: number = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\n        return separation;\n      }\n\n    case b2SeparationFunctionType.e_faceA: {\n        const normal: b2Vec2 = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\n        const pointA: b2Vec2 = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\n\n        const axisB: b2Vec2 = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\n\n        indexA[0] = -1;\n        indexB[0] = this.m_proxyB.GetSupport(axisB);\n\n        const localPointB: b2Vec2 = this.m_proxyB.GetVertex(indexB[0]);\n        const pointB: b2Vec2 = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\n\n        const separation: number = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\n        return separation;\n      }\n\n    case b2SeparationFunctionType.e_faceB: {\n        const normal: b2Vec2 = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\n        const pointB: b2Vec2 = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\n\n        const axisA: b2Vec2 = b2Rot.MulTRV(xfA.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisA);\n\n        indexB[0] = -1;\n        indexA[0] = this.m_proxyA.GetSupport(axisA);\n\n        const localPointA: b2Vec2 = this.m_proxyA.GetVertex(indexA[0]);\n        const pointA: b2Vec2 = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\n\n        const separation: number = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\n        return separation;\n      }\n\n    default:\n      // DEBUG: b2Assert(false);\n      indexA[0] = -1;\n      indexB[0] = -1;\n      return 0;\n    }\n  }\n\n  public Evaluate(indexA: number, indexB: number, t: number): number {\n    const xfA: b2Transform = b2TimeOfImpact_s_xfA;\n    const xfB: b2Transform = b2TimeOfImpact_s_xfB;\n    this.m_sweepA.GetTransform(xfA, t);\n    this.m_sweepB.GetTransform(xfB, t);\n\n    switch (this.m_type) {\n    case b2SeparationFunctionType.e_points: {\n        const localPointA: b2Vec2 = this.m_proxyA.GetVertex(indexA);\n        const localPointB: b2Vec2 = this.m_proxyB.GetVertex(indexB);\n\n        const pointA: b2Vec2 = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\n        const pointB: b2Vec2 = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\n        const separation: number = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\n\n        return separation;\n      }\n\n    case b2SeparationFunctionType.e_faceA: {\n        const normal: b2Vec2 = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\n        const pointA: b2Vec2 = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\n\n        const localPointB: b2Vec2 = this.m_proxyB.GetVertex(indexB);\n        const pointB: b2Vec2 = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\n\n        const separation: number = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\n        return separation;\n      }\n\n    case b2SeparationFunctionType.e_faceB: {\n        const normal: b2Vec2 = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\n        const pointB: b2Vec2 = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\n\n        const localPointA: b2Vec2 = this.m_proxyA.GetVertex(indexA);\n        const pointA: b2Vec2 = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\n\n        const separation: number = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\n        return separation;\n      }\n\n    default:\n      // DEBUG: b2Assert(false);\n      return 0;\n    }\n  }\n}\n\nconst b2TimeOfImpact_s_timer: b2Timer = new b2Timer();\nconst b2TimeOfImpact_s_cache: b2SimplexCache = new b2SimplexCache();\nconst b2TimeOfImpact_s_distanceInput: b2DistanceInput = new b2DistanceInput();\nconst b2TimeOfImpact_s_distanceOutput: b2DistanceOutput = new b2DistanceOutput();\nconst b2TimeOfImpact_s_fcn: b2SeparationFunction = new b2SeparationFunction();\nconst b2TimeOfImpact_s_indexA: [number] = [ 0 ];\nconst b2TimeOfImpact_s_indexB: [number] = [ 0 ];\nconst b2TimeOfImpact_s_sweepA: b2Sweep = new b2Sweep();\nconst b2TimeOfImpact_s_sweepB: b2Sweep = new b2Sweep();\nexport function b2TimeOfImpact(output: b2TOIOutput, input: b2TOIInput): void {\n  const timer: b2Timer = b2TimeOfImpact_s_timer.Reset();\n\n  ++b2_toiCalls;\n\n  output.state = b2TOIOutputState.e_unknown;\n  output.t = input.tMax;\n\n  const proxyA: b2DistanceProxy = input.proxyA;\n  const proxyB: b2DistanceProxy = input.proxyB;\n  const maxVertices: number = b2Max(b2_maxPolygonVertices, b2Max(proxyA.m_count, proxyB.m_count));\n\n  const sweepA: b2Sweep = b2TimeOfImpact_s_sweepA.Copy(input.sweepA);\n  const sweepB: b2Sweep = b2TimeOfImpact_s_sweepB.Copy(input.sweepB);\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.Normalize();\n  sweepB.Normalize();\n\n  const tMax: number = input.tMax;\n\n  const totalRadius: number = proxyA.m_radius + proxyB.m_radius;\n  const target: number = b2Max(b2_linearSlop, totalRadius - 3 * b2_linearSlop);\n  const tolerance: number = 0.25 * b2_linearSlop;\n  // DEBUG: b2Assert(target > tolerance);\n\n  let t1: number = 0;\n  const k_maxIterations: number = 20; // TODO_ERIN b2Settings\n  let iter: number = 0;\n\n  // Prepare input for distance query.\n  const cache: b2SimplexCache = b2TimeOfImpact_s_cache;\n  cache.count = 0;\n  const distanceInput: b2DistanceInput = b2TimeOfImpact_s_distanceInput;\n  distanceInput.proxyA.Copy(input.proxyA);\n  distanceInput.proxyB.Copy(input.proxyB);\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (; ; ) {\n    const xfA: b2Transform = b2TimeOfImpact_s_xfA;\n    const xfB: b2Transform = b2TimeOfImpact_s_xfB;\n    sweepA.GetTransform(xfA, t1);\n    sweepB.GetTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA.Copy(xfA);\n    distanceInput.transformB.Copy(xfB);\n    const distanceOutput: b2DistanceOutput = b2TimeOfImpact_s_distanceOutput;\n    b2Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0) {\n      // Failure!\n      output.state = b2TOIOutputState.e_overlapped;\n      output.t = 0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = b2TOIOutputState.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    const fcn: b2SeparationFunction = b2TimeOfImpact_s_fcn;\n    fcn.Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n/*\n#if 0\n    // Dump the curve seen by the root finder {\n      const int32 N = 100;\n      float32 dx = 1.0f / N;\n      float32 xs[N+1];\n      float32 fs[N+1];\n\n      float32 x = 0.0f;\n\n      for (int32 i = 0; i <= N; ++i) {\n        sweepA.GetTransform(&xfA, x);\n        sweepB.GetTransform(&xfB, x);\n        float32 f = fcn.Evaluate(xfA, xfB) - target;\n\n        printf(\"%g %g\\n\", x, f);\n\n        xs[i] = x;\n        fs[i] = f;\n\n        x += dx;\n      }\n    }\n#endif\n*/\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of vertices.\n    let done: boolean = false;\n    let t2: number = tMax;\n    let pushBackIter: number = 0;\n    for (; ; ) {\n      // Find the deepest point at t2. Store the witness point indices.\n      const indexA: [number] = b2TimeOfImpact_s_indexA;\n      const indexB: [number] = b2TimeOfImpact_s_indexB;\n      let s2: number = fcn.FindMinSeparation(indexA, indexB, t2);\n\n      // Is the final configuration separated?\n      if (s2 > (target + tolerance)) {\n        // Victory!\n        output.state = b2TOIOutputState.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > (target - tolerance)) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      let s1: number = fcn.Evaluate(indexA[0], indexB[0], t1);\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < (target - tolerance)) {\n        output.state = b2TOIOutputState.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= (target + tolerance)) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = b2TOIOutputState.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      let rootIterCount: number = 0;\n      let a1: number = t1;\n      let a2: number = t2;\n      for (; ; ) {\n        // Use a mix of the secant rule and bisection.\n        let t: number = 0;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++b2_toiRootIters;\n\n        const s: number = fcn.Evaluate(indexA[0], indexB[0], t);\n\n        if (b2Abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount === 50) {\n          break;\n        }\n      }\n\n      b2_toiMaxRootIters = b2Max(b2_toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter === maxVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++b2_toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter === k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = b2TOIOutputState.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  b2_toiMaxIters = b2Max(b2_toiMaxIters, iter);\n\n  const time: number = timer.GetMilliseconds();\n  b2_toiMaxTime = b2Max(b2_toiMaxTime, time);\n  b2_toiTime += time;\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nexport class b2BlockAllocator {}\n",
    "/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n// import { b2_lengthUnitsPerMeter } from \"./b2_settings.js\";\r\n\r\nexport function b2Assert(condition: boolean, ...args: any[]): asserts condition {\r\n  if (!condition) {\r\n    // debugger;\r\n    throw new Error(...args);\r\n  }\r\n}\r\n\r\nexport function b2Maybe<T>(value: T | undefined, def: T): T {\r\n  return value === undefined ? def : value;\r\n}\r\n\r\nexport const b2_maxFloat: number = 1E+37; // FLT_MAX instead of Number.MAX_VALUE;\r\nexport const b2_epsilon: number = 1E-5; // FLT_EPSILON instead of Number.EPSILON;\r\nexport const b2_epsilon_sq: number = (b2_epsilon * b2_epsilon);\r\nexport const b2_pi: number = 3.14159265359; // Math.PI;\r\n\r\n/// @file\r\n/// Global tuning constants based on meters-kilograms-seconds (MKS) units.\r\n///\r\n\r\n// Tunable Constants\r\n\r\n/// You can use this to change the length scale used by your game.\r\n/// For example for inches you could use 39.4.\r\nexport const b2_lengthUnitsPerMeter: number = 1.0;\r\n\r\n/// The maximum number of vertices on a convex polygon. You cannot increase\r\n/// this too much because b2BlockAllocator has a maximum object size.\r\nexport const b2_maxPolygonVertices: number = 8;\r\n\r\n// Collision\r\n\r\n/// The maximum number of contact points between two convex shapes. Do\r\n/// not change this value.\r\nexport const b2_maxManifoldPoints: number = 2;\r\n\r\n/// This is used to fatten AABBs in the dynamic tree. This allows proxies\r\n/// to move by a small amount without triggering a tree adjustment.\r\n/// This is in meters.\r\nexport const b2_aabbExtension: number = 0.1 * b2_lengthUnitsPerMeter;\r\n\r\n/// This is used to fatten AABBs in the dynamic tree. This is used to predict\r\n/// the future position based on the current displacement.\r\n/// This is a dimensionless multiplier.\r\nexport const b2_aabbMultiplier: number = 4;\r\n\r\n/// A small length used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_linearSlop: number = 0.005 * b2_lengthUnitsPerMeter;\r\n\r\n/// A small setAngle used as a collision and constraint tolerance. Usually it is\r\n/// chosen to be numerically significant, but visually insignificant.\r\nexport const b2_angularSlop: number = 2 / 180 * b2_pi;\r\n\r\n/// The radius of the polygon/edge shape skin. This should not be modified. Making\r\n/// this smaller means polygons will have an insufficient buffer for continuous collision.\r\n/// Making it larger may create artifacts for vertex collision.\r\nexport const b2_polygonRadius: number = 2 * b2_linearSlop;\r\n\r\n/// Maximum number of sub-steps per contact in continuous physics simulation.\r\nexport const b2_maxSubSteps: number = 8;\r\n\r\n// Dynamics\r\n\r\n/// Maximum number of contacts to be handled to solve a TOI impact.\r\nexport const b2_maxTOIContacts: number = 32;\r\n\r\n/// The maximum linear position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxLinearCorrection: number = 0.2 * b2_lengthUnitsPerMeter;\r\n\r\n/// The maximum angular position correction used when solving constraints. This helps to\r\n/// prevent overshoot.\r\nexport const b2_maxAngularCorrection: number = 8 / 180 * b2_pi;\r\n\r\n// Note: Adjusted from 2 to 10\r\n\r\n/// The maximum linear velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxTranslation: number = 10 * b2_lengthUnitsPerMeter;\r\nexport const b2_maxTranslationSquared: number = b2_maxTranslation * b2_maxTranslation;\r\n\r\n/// The maximum angular velocity of a body. This limit is very large and is used\r\n/// to prevent numerical problems. You shouldn't need to adjust this.\r\nexport const b2_maxRotation: number = 0.5 * b2_pi;\r\nexport const b2_maxRotationSquared: number = b2_maxRotation * b2_maxRotation;\r\n\r\n/// This scale factor controls how fast overlap is resolved. Ideally this would be 1 so\r\n/// that overlap is removed in one time step. However using values close to 1 often lead\r\n/// to overshoot.\r\nexport const b2_baumgarte: number = 0.2;\r\nexport const b2_toiBaumgarte: number = 0.75;\r\n\r\n// #if B2_ENABLE_PARTICLE\r\n\r\n// Particle\r\n\r\n/// A symbolic constant that stands for particle allocation error.\r\nexport const b2_invalidParticleIndex: number = -1;\r\n\r\nexport const b2_maxParticleIndex: number = 0x7FFFFFFF;\r\n\r\n/// The default distance between particles, multiplied by the particle diameter.\r\nexport const b2_particleStride: number = 0.75;\r\n\r\n/// The minimum particle weight that produces pressure.\r\nexport const b2_minParticleWeight: number = 1.0;\r\n\r\n/// The upper limit for particle pressure.\r\nexport const b2_maxParticlePressure: number = 0.25;\r\n\r\n/// The upper limit for force between particles.\r\nexport const b2_maxParticleForce: number = 0.5;\r\n\r\n/// The maximum distance between particles in a triad, multiplied by the particle diameter.\r\nexport const b2_maxTriadDistance: number = 2.0 * b2_lengthUnitsPerMeter;\r\nexport const b2_maxTriadDistanceSquared: number = (b2_maxTriadDistance * b2_maxTriadDistance);\r\n\r\n/// The initial size of particle data buffers.\r\nexport const b2_minParticleSystemBufferCapacity: number = 256;\r\n\r\n/// The time into the future that collisions against barrier particles will be detected.\r\nexport const b2_barrierCollisionTime: number = 2.5;\r\n\r\n// #endif\r\n\r\n// Sleep\r\n\r\n/// The time that a body must be still before it will go to sleep.\r\nexport const b2_timeToSleep: number = 0.5;\r\n\r\n/// A body cannot sleep if its linear velocity is above this tolerance.\r\nexport const b2_linearSleepTolerance: number = 0.01 * b2_lengthUnitsPerMeter;\r\n\r\n/// A body cannot sleep if its angular velocity is above this tolerance.\r\nexport const b2_angularSleepTolerance: number = 2 / 180 * b2_pi;\r\n\r\n// FILE* b2_dumpFile = nullptr;\r\n\r\n// void b2OpenDump(const char* fileName)\r\n// {\r\n// \tb2Assert(b2_dumpFile == nullptr);\r\n// \tb2_dumpFile = fopen(fileName, \"w\");\r\n// }\r\n\r\n// void b2Dump(const char* string, ...)\r\n// {\r\n// \tif (b2_dumpFile == nullptr)\r\n// \t{\r\n// \t\treturn;\r\n// \t}\r\n\r\n// \tva_list args;\r\n// \tva_start(args, string);\r\n// \tvfprintf(b2_dumpFile, string, args);\r\n// \tva_end(args);\r\n// }\r\n\r\n// void b2CloseDump()\r\n// {\r\n// \tfclose(b2_dumpFile);\r\n// \tb2_dumpFile = nullptr;\r\n// }\r\n\r\n/// Version numbering scheme.\r\n/// See http://en.wikipedia.org/wiki/Software_versioning\r\nexport class b2Version {\r\n  public major: number = 0; ///< significant changes\r\n  public minor: number = 0; ///< incremental changes\r\n  public revision: number = 0; ///< bug fixes\r\n\r\n  constructor(major: number = 0, minor: number = 0, revision: number = 0) {\r\n    this.major = major;\r\n    this.minor = minor;\r\n    this.revision = revision;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.major + \".\" + this.minor + \".\" + this.revision;\r\n  }\r\n}\r\n\r\n/// Current version.\r\nexport const b2_version: b2Version = new b2Version(2, 4, 1);\r\n\r\nexport const b2_branch: string = \"master\";\r\nexport const b2_commit: string = \"9ebbbcd960ad424e03e5de6e66a40764c16f51bc\";\r\n\r\nexport function b2ParseInt(v: string): number {\r\n  return parseInt(v, 10);\r\n}\r\n\r\nexport function b2ParseUInt(v: string): number {\r\n  return Math.abs(parseInt(v, 10));\r\n}\r\n\r\nexport function b2MakeArray<T>(length: number, init: (i: number) => T): T[] {\r\n  const a: T[] = new Array<T>(length);\r\n  for (let i: number = 0; i < length; ++i) {\r\n    a[i] = init(i);\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function b2MakeNullArray<T>(length: number): Array<T | null> {\r\n  const a: Array<T | null> = new Array<T | null>(length);\r\n  for (let i: number = 0; i < length; ++i) {\r\n    a[i] = null;\r\n  }\r\n  return a;\r\n}\r\n\r\nexport function b2MakeNumberArray(length: number, init: number = 0): number[] {\r\n  const a: number[] = new Array<number>(length);\r\n  for (let i: number = 0; i < length; ++i) {\r\n    a[i] = init;\r\n  }\r\n  return a;\r\n}\r\n",
    "/*\n* Copyright (c) 2011 Erin Catto http://box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform, XY } from \"./b2_math\";\n\nexport interface RGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\nexport interface RGBA extends RGB {\n  a: number;\n}\n\n/// Color for debug drawing. Each value has the range [0,1].\nexport class b2Color implements RGBA {\n  public static readonly ZERO: Readonly<b2Color> = new b2Color(0, 0, 0, 0);\n\n  public static readonly RED: Readonly<b2Color> = new b2Color(1, 0, 0);\n  public static readonly GREEN: Readonly<b2Color> = new b2Color(0, 1, 0);\n  public static readonly BLUE: Readonly<b2Color> = new b2Color(0, 0, 1);\n\n  constructor(public r: number = 0.5, public g: number = 0.5, public b: number = 0.5, public a: number = 1.0) {}\n\n  public Clone(): b2Color {\n    return new b2Color().Copy(this);\n  }\n\n  public Copy(other: RGBA): this {\n    this.r = other.r;\n    this.g = other.g;\n    this.b = other.b;\n    this.a = other.a;\n    return this;\n  }\n\n  public IsEqual(color: RGBA): boolean {\n    return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\n  }\n\n  public IsZero(): boolean {\n    return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\n  }\n\n  public Set(r: number, g: number, b: number, a: number = this.a): void {\n    this.SetRGBA(r, g, b, a);\n  }\n\n  public SetByteRGB(r: number, g: number, b: number): this {\n    this.r = r / 0xff;\n    this.g = g / 0xff;\n    this.b = b / 0xff;\n    return this;\n  }\n\n  public SetByteRGBA(r: number, g: number, b: number, a: number): this {\n    this.r = r / 0xff;\n    this.g = g / 0xff;\n    this.b = b / 0xff;\n    this.a = a / 0xff;\n    return this;\n  }\n\n  public SetRGB(rr: number, gg: number, bb: number): this {\n    this.r = rr;\n    this.g = gg;\n    this.b = bb;\n    return this;\n  }\n\n  public SetRGBA(rr: number, gg: number, bb: number, aa: number): this {\n    this.r = rr;\n    this.g = gg;\n    this.b = bb;\n    this.a = aa;\n    return this;\n  }\n\n  public SelfAdd(color: RGBA): this {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    this.a += color.a;\n    return this;\n  }\n\n  public Add<T extends RGBA>(color: RGBA, out: T): T {\n    out.r = this.r + color.r;\n    out.g = this.g + color.g;\n    out.b = this.b + color.b;\n    out.a = this.a + color.a;\n    return out;\n  }\n\n  public SelfSub(color: RGBA): this {\n    this.r -= color.r;\n    this.g -= color.g;\n    this.b -= color.b;\n    this.a -= color.a;\n    return this;\n  }\n\n  public Sub<T extends RGBA>(color: RGBA, out: T): T {\n    out.r = this.r - color.r;\n    out.g = this.g - color.g;\n    out.b = this.b - color.b;\n    out.a = this.a - color.a;\n    return out;\n  }\n\n  public SelfMul(s: number): this {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    this.a *= s;\n    return this;\n  }\n\n  public Mul<T extends RGBA>(s: number, out: T): T {\n    out.r = this.r * s;\n    out.g = this.g * s;\n    out.b = this.b * s;\n    out.a = this.a * s;\n    return out;\n  }\n\n  public Mix(mixColor: RGBA, strength: number): void {\n    b2Color.MixColors(this, mixColor, strength);\n  }\n\n  public static MixColors(colorA: RGBA, colorB: RGBA, strength: number): void {\n    const dr = (strength * (colorB.r - colorA.r));\n    const dg = (strength * (colorB.g - colorA.g));\n    const db = (strength * (colorB.b - colorA.b));\n    const da = (strength * (colorB.a - colorA.a));\n    colorA.r += dr;\n    colorA.g += dg;\n    colorA.b += db;\n    colorA.a += da;\n    colorB.r -= dr;\n    colorB.g -= dg;\n    colorB.b -= db;\n    colorB.a -= da;\n  }\n\n  public MakeStyleString(alpha: number = this.a): string {\n    return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\n  }\n\n  public static MakeStyleString(r: number, g: number, b: number, a: number = 1.0): string {\n    // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\n    r *= 255; // r = clamp(r, 0, 255);\n    g *= 255; // g = clamp(g, 0, 255);\n    b *= 255; // b = clamp(b, 0, 255);\n    // a = clamp(a, 0, 1);\n    if (a < 1) {\n      return `rgba(${r},${g},${b},${a})`;\n    } else {\n      return `rgb(${r},${g},${b})`;\n    }\n  }\n}\n\nexport class b2TypedColor implements b2Color {\n  public readonly data: Float32Array;\n  public get r(): number { return this.data[0]; } public set r(value: number) { this.data[0] = value; }\n  public get g(): number { return this.data[1]; } public set g(value: number) { this.data[1] = value; }\n  public get b(): number { return this.data[2]; } public set b(value: number) { this.data[2] = value; }\n  public get a(): number { return this.data[3]; } public set a(value: number) { this.data[3] = value; }\n\n  constructor();\n  constructor(data: Float32Array);\n  constructor(rr: number, gg: number, bb: number);\n  constructor(rr: number, gg: number, bb: number, aa: number);\n  constructor(...args: any[]) {\n    if (args[0] instanceof Float32Array) {\n      if (args[0].length !== 4) { throw new Error(); }\n      this.data = args[0];\n    } else {\n      const rr: number = typeof args[0] === \"number\" ? args[0] : 0.5;\n      const gg: number = typeof args[1] === \"number\" ? args[1] : 0.5;\n      const bb: number = typeof args[2] === \"number\" ? args[2] : 0.5;\n      const aa: number = typeof args[3] === \"number\" ? args[3] : 1.0;\n      this.data = new Float32Array([ rr, gg, bb, aa ]);\n    }\n  }\n\n  public Clone(): b2TypedColor {\n    return new b2TypedColor(new Float32Array(this.data));\n  }\n\n  public Copy(other: RGBA): this {\n    if (other instanceof b2TypedColor) {\n      this.data.set(other.data);\n    }\n    else {\n      this.r = other.r;\n      this.g = other.g;\n      this.b = other.b;\n      this.a = other.a;\n    }\n    return this;\n  }\n\n  public IsEqual(color: RGBA): boolean {\n    return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\n  }\n\n  public IsZero(): boolean {\n    return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\n  }\n\n  public Set(r: number, g: number, b: number, a: number = this.a): void {\n    this.SetRGBA(r, g, b, a);\n  }\n\n  public SetByteRGB(r: number, g: number, b: number): this {\n    this.r = r / 0xff;\n    this.g = g / 0xff;\n    this.b = b / 0xff;\n    return this;\n  }\n\n  public SetByteRGBA(r: number, g: number, b: number, a: number): this {\n    this.r = r / 0xff;\n    this.g = g / 0xff;\n    this.b = b / 0xff;\n    this.a = a / 0xff;\n    return this;\n  }\n\n  public SetRGB(rr: number, gg: number, bb: number): this {\n    this.r = rr;\n    this.g = gg;\n    this.b = bb;\n    return this;\n  }\n\n  public SetRGBA(rr: number, gg: number, bb: number, aa: number): this {\n    this.r = rr;\n    this.g = gg;\n    this.b = bb;\n    this.a = aa;\n    return this;\n  }\n\n  public SelfAdd(color: RGBA): this {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    this.a += color.a;\n    return this;\n  }\n\n  public Add<T extends RGBA>(color: RGBA, out: T): T {\n    out.r = this.r + color.r;\n    out.g = this.g + color.g;\n    out.b = this.b + color.b;\n    out.a = this.a + color.a;\n    return out;\n  }\n\n  public SelfSub(color: RGBA): this {\n    this.r -= color.r;\n    this.g -= color.g;\n    this.b -= color.b;\n    this.a -= color.a;\n    return this;\n  }\n\n  public Sub<T extends RGBA>(color: RGBA, out: T): T {\n    out.r = this.r - color.r;\n    out.g = this.g - color.g;\n    out.b = this.b - color.b;\n    out.a = this.a - color.a;\n    return out;\n  }\n\n  public SelfMul(s: number): this {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    this.a *= s;\n    return this;\n  }\n\n  public Mul<T extends RGBA>(s: number, out: T): T {\n    out.r = this.r * s;\n    out.g = this.g * s;\n    out.b = this.b * s;\n    out.a = this.a * s;\n    return out;\n  }\n\n  public Mix(mixColor: RGBA, strength: number): void {\n    b2Color.MixColors(this, mixColor, strength);\n  }\n\n  public MakeStyleString(alpha: number = this.a): string {\n    return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\n  }\n}\n\nexport enum b2DrawFlags {\n  e_none = 0,\n  e_shapeBit = 0x0001, ///< draw shapes\n  e_jointBit = 0x0002, ///< draw joint connections\n  e_aabbBit = 0x0004, ///< draw axis aligned bounding boxes\n  e_pairBit = 0x0008, ///< draw broad-phase pairs\n  e_centerOfMassBit = 0x0010, ///< draw center of mass frame\n  // #if B2_ENABLE_PARTICLE\n  e_particleBit = 0x0020, ///< draw particles\n  // #endif\n  // #if B2_ENABLE_CONTROLLER\n  e_controllerBit = 0x0040, /// @see b2Controller list\n  // #endif\n  e_all = 0x003f,\n}\n\n/// Implement and register this class with a b2World to provide debug drawing of physics\n/// entities in your game.\nexport abstract class b2Draw {\n  public m_drawFlags: b2DrawFlags = 0;\n\n  public SetFlags(flags: b2DrawFlags): void {\n    this.m_drawFlags = flags;\n  }\n\n  public GetFlags(): b2DrawFlags {\n    return this.m_drawFlags;\n  }\n\n  public AppendFlags(flags: b2DrawFlags): void {\n    this.m_drawFlags |= flags;\n  }\n\n  public ClearFlags(flags: b2DrawFlags): void {\n    this.m_drawFlags &= ~flags;\n  }\n\n  public abstract PushTransform(xf: b2Transform): void;\n\n  public abstract PopTransform(xf: b2Transform): void;\n\n  public abstract DrawPolygon(vertices: XY[], vertexCount: number, color: RGBA): void;\n\n  public abstract DrawSolidPolygon(vertices: XY[], vertexCount: number, color: RGBA): void;\n\n  public abstract DrawCircle(center: XY, radius: number, color: RGBA): void;\n\n  public abstract DrawSolidCircle(center: XY, radius: number, axis: XY, color: RGBA): void;\n\n  // #if B2_ENABLE_PARTICLE\n  public abstract DrawParticles(centers: XY[], radius: number, colors: RGBA[] | null, count: number): void;\n  // #endif\n\n  public abstract DrawSegment(p1: XY, p2: XY, color: RGBA): void;\n\n  public abstract DrawTransform(xf: b2Transform): void;\n\n  public abstract DrawPoint(p: XY, size: number, color: RGBA): void;\n}\n",
    "/*\n* Copyright (c) 2010 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"./b2_settings\";\nimport { b2MakeArray } from \"./b2_common\";\n\n/// This is a growable LIFO stack with an initial capacity of N.\n/// If the stack size exceeds the initial capacity, the heap is used\n/// to increase the size of the stack.\n\nexport class b2GrowableStack<T> {\n  public m_stack: Array<T | null> = [];\n  public m_count: number = 0;\n\n  constructor(N: number) {\n    this.m_stack = b2MakeArray(N, (index) => null);\n    this.m_count = 0;\n  }\n\n  public Reset(): this {\n    this.m_count = 0;\n    return this;\n  }\n\n  public Push(element: T): void {\n    this.m_stack[this.m_count] = element;\n    this.m_count++;\n  }\n\n  public Pop(): T | null {\n    // DEBUG: b2Assert(this.m_count > 0);\n    this.m_count--;\n    const element: T | null = this.m_stack[this.m_count];\n    this.m_stack[this.m_count] = null;\n    return element;\n  }\n\n  public GetCount(): number {\n    return this.m_count;\n  }\n}\n",
    "/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n// DEBUG: import { b2Assert } from \"./b2_settings\";\r\nimport { b2_pi, b2_epsilon, b2MakeArray } from \"./b2_common\";\r\n\r\nexport const b2_pi_over_180: number = b2_pi / 180;\r\nexport const b2_180_over_pi: number = 180 / b2_pi;\r\nexport const b2_two_pi: number = 2 * b2_pi;\r\n\r\nexport const b2Abs = Math.abs;\r\n\r\nexport function b2Min(a: number, b: number): number { return a < b ? a : b; }\r\nexport function b2Max(a: number, b: number): number { return a > b ? a : b; }\r\n\r\nexport function b2Clamp(a: number, lo: number, hi: number): number {\r\n  return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n}\r\n\r\nexport function b2Swap<T>(a: T[], b: T[]): void {\r\n  // DEBUG: b2Assert(false);\r\n  const tmp: T = a[0];\r\n  a[0] = b[0];\r\n  b[0] = tmp;\r\n}\r\n\r\n/// This function is used to ensure that a floating point number is\r\n/// not a NaN or infinity.\r\nexport const b2IsValid = isFinite;\r\n\r\nexport function b2Sq(n: number): number {\r\n  return n * n;\r\n}\r\n\r\n/// This is a approximate yet fast inverse square-root.\r\nexport function b2InvSqrt(n: number): number {\r\n  return 1 / Math.sqrt(n);\r\n}\r\n\r\nexport const b2Sqrt = Math.sqrt;\r\n\r\nexport const b2Pow = Math.pow;\r\n\r\nexport function b2DegToRad(degrees: number): number {\r\n  return degrees * b2_pi_over_180;\r\n}\r\n\r\nexport function b2RadToDeg(radians: number): number {\r\n  return radians * b2_180_over_pi;\r\n}\r\n\r\nexport const b2Cos = Math.cos;\r\nexport const b2Sin = Math.sin;\r\nexport const b2Acos = Math.acos;\r\nexport const b2Asin = Math.asin;\r\nexport const b2Atan2 = Math.atan2;\r\n\r\nexport function b2NextPowerOfTwo(x: number): number {\r\n  x |= (x >> 1) & 0x7FFFFFFF;\r\n  x |= (x >> 2) & 0x3FFFFFFF;\r\n  x |= (x >> 4) & 0x0FFFFFFF;\r\n  x |= (x >> 8) & 0x00FFFFFF;\r\n  x |= (x >> 16) & 0x0000FFFF;\r\n  return x + 1;\r\n}\r\n\r\nexport function b2IsPowerOfTwo(x: number): boolean {\r\n  return x > 0 && (x & (x - 1)) === 0;\r\n}\r\n\r\nexport function b2Random(): number {\r\n  return Math.random() * 2 - 1;\r\n}\r\n\r\nexport function b2RandomRange(lo: number, hi: number): number {\r\n  return (hi - lo) * Math.random() + lo;\r\n}\r\n\r\nexport interface XY {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\n/// A 2D column vector.\r\nexport class b2Vec2 implements XY {\r\n  public static readonly ZERO: Readonly<b2Vec2> = new b2Vec2(0, 0);\r\n  public static readonly UNITX: Readonly<b2Vec2> = new b2Vec2(1, 0);\r\n  public static readonly UNITY: Readonly<b2Vec2> = new b2Vec2(0, 1);\r\n\r\n  public static readonly s_t0: b2Vec2 = new b2Vec2();\r\n  public static readonly s_t1: b2Vec2 = new b2Vec2();\r\n  public static readonly s_t2: b2Vec2 = new b2Vec2();\r\n  public static readonly s_t3: b2Vec2 = new b2Vec2();\r\n\r\n  public constructor(public x: number = 0, public y: number = 0) {}\r\n\r\n  public Clone(): b2Vec2 {\r\n    return new b2Vec2(this.x, this.y);\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    return this;\r\n  }\r\n\r\n  public Set(x: number, y: number): this {\r\n    this.x = x;\r\n    this.y = y;\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: XY): this {\r\n    this.x = other.x;\r\n    this.y = other.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfAdd(v: XY): this {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfAddXY(x: number, y: number): this {\r\n    this.x += x;\r\n    this.y += y;\r\n    return this;\r\n  }\r\n\r\n  public SelfSub(v: XY): this {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfSubXY(x: number, y: number): this {\r\n    this.x -= x;\r\n    this.y -= y;\r\n    return this;\r\n  }\r\n\r\n  public SelfMul(s: number): this {\r\n    this.x *= s;\r\n    this.y *= s;\r\n    return this;\r\n  }\r\n\r\n  public SelfMulAdd(s: number, v: XY): this {\r\n    this.x += s * v.x;\r\n    this.y += s * v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfMulSub(s: number, v: XY): this {\r\n    this.x -= s * v.x;\r\n    this.y -= s * v.y;\r\n    return this;\r\n  }\r\n\r\n  public Dot(v: XY): number {\r\n    return this.x * v.x + this.y * v.y;\r\n  }\r\n\r\n  public Cross(v: XY): number {\r\n    return this.x * v.y - this.y * v.x;\r\n  }\r\n\r\n  public Length(): number {\r\n    const x: number = this.x, y: number = this.y;\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  public LengthSquared(): number {\r\n    const x: number = this.x, y: number = this.y;\r\n    return (x * x + y * y);\r\n  }\r\n\r\n  public Normalize(): number {\r\n    const length: number = this.Length();\r\n    if (length >= b2_epsilon) {\r\n      const inv_length: number = 1 / length;\r\n      this.x *= inv_length;\r\n      this.y *= inv_length;\r\n    }\r\n    return length;\r\n  }\r\n\r\n  public SelfNormalize(): this {\r\n    const length: number = this.Length();\r\n    if (length >= b2_epsilon) {\r\n      const inv_length: number = 1 / length;\r\n      this.x *= inv_length;\r\n      this.y *= inv_length;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public SelfRotate(radians: number): this {\r\n    const c: number = Math.cos(radians);\r\n    const s: number = Math.sin(radians);\r\n    const x: number = this.x;\r\n    this.x = c * x - s * this.y;\r\n    this.y = s * x + c * this.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfRotateCosSin(c: number, s: number): this {\r\n    const x: number = this.x;\r\n    this.x = c * x - s * this.y;\r\n    this.y = s * x + c * this.y;\r\n    return this;\r\n  }\r\n\r\n  public IsValid(): boolean {\r\n    return isFinite(this.x) && isFinite(this.y);\r\n  }\r\n\r\n  public SelfCrossVS(s: number): this {\r\n    const x: number = this.x;\r\n    this.x =  s * this.y;\r\n    this.y = -s * x;\r\n    return this;\r\n  }\r\n\r\n  public SelfCrossSV(s: number): this {\r\n    const x: number = this.x;\r\n    this.x = -s * this.y;\r\n    this.y =  s * x;\r\n    return this;\r\n  }\r\n\r\n  public SelfMinV(v: XY): this {\r\n    this.x = b2Min(this.x, v.x);\r\n    this.y = b2Min(this.y, v.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfMaxV(v: XY): this {\r\n    this.x = b2Max(this.x, v.x);\r\n    this.y = b2Max(this.y, v.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfAbs(): this {\r\n    this.x = b2Abs(this.x);\r\n    this.y = b2Abs(this.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfNeg(): this {\r\n    this.x = (-this.x);\r\n    this.y = (-this.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfSkew(): this {\r\n    const x: number = this.x;\r\n    this.x = -this.y;\r\n    this.y = x;\r\n    return this;\r\n  }\r\n\r\n  public static MakeArray(length: number): b2Vec2[] {\r\n    return b2MakeArray(length, (i: number): b2Vec2 => new b2Vec2());\r\n  }\r\n\r\n  public static AbsV<T extends XY>(v: XY, out: T): T {\r\n    out.x = b2Abs(v.x);\r\n    out.y = b2Abs(v.y);\r\n    return out;\r\n  }\r\n\r\n  public static MinV<T extends XY>(a: XY, b: XY, out: T): T {\r\n    out.x = b2Min(a.x, b.x);\r\n    out.y = b2Min(a.y, b.y);\r\n    return out;\r\n  }\r\n\r\n  public static MaxV<T extends XY>(a: XY, b: XY, out: T): T {\r\n    out.x = b2Max(a.x, b.x);\r\n    out.y = b2Max(a.y, b.y);\r\n    return out;\r\n  }\r\n\r\n  public static ClampV<T extends XY>(v: XY, lo: XY, hi: XY, out: T): T {\r\n    out.x = b2Clamp(v.x, lo.x, hi.x);\r\n    out.y = b2Clamp(v.y, lo.y, hi.y);\r\n    return out;\r\n  }\r\n\r\n  public static RotateV<T extends XY>(v: XY, radians: number, out: T): T {\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    const c: number = Math.cos(radians);\r\n    const s: number = Math.sin(radians);\r\n    out.x = c * v_x - s * v_y;\r\n    out.y = s * v_x + c * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static DotVV(a: XY, b: XY): number {\r\n    return a.x * b.x + a.y * b.y;\r\n  }\r\n\r\n  public static CrossVV(a: XY, b: XY): number {\r\n    return a.x * b.y - a.y * b.x;\r\n  }\r\n\r\n  public static CrossVS<T extends XY>(v: XY, s: number, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x =  s * v.y;\r\n    out.y = -s * v_x;\r\n    return out;\r\n  }\r\n\r\n  public static CrossVOne<T extends XY>(v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x =  v.y;\r\n    out.y = -v_x;\r\n    return out;\r\n  }\r\n\r\n  public static CrossSV<T extends XY>(s: number, v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x = -s * v.y;\r\n    out.y =  s * v_x;\r\n    return out;\r\n  }\r\n\r\n  public static CrossOneV<T extends XY>(v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x = -v.y;\r\n    out.y =  v_x;\r\n    return out;\r\n  }\r\n\r\n  public static AddVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = a.x + b.x; out.y = a.y + b.y; return out; }\r\n\r\n  public static SubVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = a.x - b.x; out.y = a.y - b.y; return out; }\r\n\r\n  public static MulSV<T extends XY>(s: number, v: XY, out: T): T { out.x = v.x * s; out.y = v.y * s; return out; }\r\n  public static MulVS<T extends XY>(v: XY, s: number, out: T): T { out.x = v.x * s; out.y = v.y * s; return out; }\r\n\r\n  public static AddVMulSV<T extends XY>(a: XY, s: number, b: XY, out: T): T { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; }\r\n  public static SubVMulSV<T extends XY>(a: XY, s: number, b: XY, out: T): T { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; }\r\n\r\n  public static AddVCrossSV<T extends XY>(a: XY, s: number, v: XY, out: T): T {\r\n    const v_x: number = v.x;\r\n    out.x = a.x - (s * v.y);\r\n    out.y = a.y + (s * v_x);\r\n    return out;\r\n  }\r\n\r\n  public static MidVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; }\r\n\r\n  public static ExtVV<T extends XY>(a: XY, b: XY, out: T): T { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; }\r\n\r\n  public static IsEqualToV(a: XY, b: XY): boolean {\r\n    return a.x === b.x && a.y === b.y;\r\n  }\r\n\r\n  public static DistanceVV(a: XY, b: XY): number {\r\n    const c_x: number = a.x - b.x;\r\n    const c_y: number = a.y - b.y;\r\n    return Math.sqrt(c_x * c_x + c_y * c_y);\r\n  }\r\n\r\n  public static DistanceSquaredVV(a: XY, b: XY): number {\r\n    const c_x: number = a.x - b.x;\r\n    const c_y: number = a.y - b.y;\r\n    return (c_x * c_x + c_y * c_y);\r\n  }\r\n\r\n  public static NegV<T extends XY>(v: XY, out: T): T { out.x = -v.x; out.y = -v.y; return out; }\r\n\r\n}\r\n\r\nexport const b2Vec2_zero: Readonly<b2Vec2> = new b2Vec2(0, 0);\r\n\r\nexport class b2TypedVec2 implements b2Vec2 {\r\n  public readonly data: Float32Array;\r\n  public get x(): number { return this.data[0]; } public set x(value: number) { this.data[0] = value; }\r\n  public get y(): number { return this.data[1]; } public set y(value: number) { this.data[1] = value; }\r\n\r\n  constructor();\r\n  constructor(data: Float32Array);\r\n  constructor(x: number, y: number);\r\n  constructor(...args: any[]) {\r\n    if (args[0] instanceof Float32Array) {\r\n      if (args[0].length !== 2) { throw new Error(); }\r\n      this.data = args[0];\r\n    } else {\r\n      const x: number = typeof args[0] === \"number\" ? args[0] : 0;\r\n      const y: number = typeof args[1] === \"number\" ? args[1] : 0;\r\n      this.data = new Float32Array([ x, y ]);\r\n    }\r\n  }\r\n\r\n  public Clone(): b2TypedVec2 {\r\n    return new b2TypedVec2(new Float32Array(this.data));\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    return this;\r\n  }\r\n\r\n  public Set(x: number, y: number): this {\r\n    this.x = x;\r\n    this.y = y;\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: XY): this {\r\n    if (other instanceof b2TypedVec2) {\r\n      this.data.set(other.data);\r\n    }\r\n    else {\r\n      this.x = other.x;\r\n      this.y = other.y;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public SelfAdd(v: XY): this {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfAddXY(x: number, y: number): this {\r\n    this.x += x;\r\n    this.y += y;\r\n    return this;\r\n  }\r\n\r\n  public SelfSub(v: XY): this {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfSubXY(x: number, y: number): this {\r\n    this.x -= x;\r\n    this.y -= y;\r\n    return this;\r\n  }\r\n\r\n  public SelfMul(s: number): this {\r\n    this.x *= s;\r\n    this.y *= s;\r\n    return this;\r\n  }\r\n\r\n  public SelfMulAdd(s: number, v: XY): this {\r\n    this.x += s * v.x;\r\n    this.y += s * v.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfMulSub(s: number, v: XY): this {\r\n    this.x -= s * v.x;\r\n    this.y -= s * v.y;\r\n    return this;\r\n  }\r\n\r\n  public Dot(v: XY): number {\r\n    return this.x * v.x + this.y * v.y;\r\n  }\r\n\r\n  public Cross(v: XY): number {\r\n    return this.x * v.y - this.y * v.x;\r\n  }\r\n\r\n  public Length(): number {\r\n    const x: number = this.x, y: number = this.y;\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  public LengthSquared(): number {\r\n    const x: number = this.x, y: number = this.y;\r\n    return (x * x + y * y);\r\n  }\r\n\r\n  public Normalize(): number {\r\n    const length: number = this.Length();\r\n    if (length >= b2_epsilon) {\r\n      const inv_length: number = 1 / length;\r\n      this.x *= inv_length;\r\n      this.y *= inv_length;\r\n    }\r\n    return length;\r\n  }\r\n\r\n  public SelfNormalize(): this {\r\n    const length: number = this.Length();\r\n    if (length >= b2_epsilon) {\r\n      const inv_length: number = 1 / length;\r\n      this.x *= inv_length;\r\n      this.y *= inv_length;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public SelfRotate(radians: number): this {\r\n    const c: number = Math.cos(radians);\r\n    const s: number = Math.sin(radians);\r\n    const x: number = this.x;\r\n    this.x = c * x - s * this.y;\r\n    this.y = s * x + c * this.y;\r\n    return this;\r\n  }\r\n\r\n  public SelfRotateCosSin(c: number, s: number): this {\r\n    const x: number = this.x;\r\n    this.x = c * x - s * this.y;\r\n    this.y = s * x + c * this.y;\r\n    return this;\r\n  }\r\n\r\n  public IsValid(): boolean {\r\n    return isFinite(this.x) && isFinite(this.y);\r\n  }\r\n\r\n  public SelfCrossVS(s: number): this {\r\n    const x: number = this.x;\r\n    this.x =  s * this.y;\r\n    this.y = -s * x;\r\n    return this;\r\n  }\r\n\r\n  public SelfCrossSV(s: number): this {\r\n    const x: number = this.x;\r\n    this.x = -s * this.y;\r\n    this.y =  s * x;\r\n    return this;\r\n  }\r\n\r\n  public SelfMinV(v: XY): this {\r\n    this.x = b2Min(this.x, v.x);\r\n    this.y = b2Min(this.y, v.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfMaxV(v: XY): this {\r\n    this.x = b2Max(this.x, v.x);\r\n    this.y = b2Max(this.y, v.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfAbs(): this {\r\n    this.x = b2Abs(this.x);\r\n    this.y = b2Abs(this.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfNeg(): this {\r\n    this.x = (-this.x);\r\n    this.y = (-this.y);\r\n    return this;\r\n  }\r\n\r\n  public SelfSkew(): this {\r\n    const x: number = this.x;\r\n    this.x = -this.y;\r\n    this.y = x;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport interface XYZ extends XY {\r\n  z: number;\r\n}\r\n\r\n/// A 2D column vector with 3 elements.\r\nexport class b2Vec3 implements XYZ {\r\n  public static readonly ZERO: Readonly<b2Vec3> = new b2Vec3(0, 0, 0);\r\n\r\n  public static readonly s_t0: b2Vec3 = new b2Vec3();\r\n\r\n  public readonly data: Float32Array;\r\n  public get x(): number { return this.data[0]; } public set x(value: number) { this.data[0] = value; }\r\n  public get y(): number { return this.data[1]; } public set y(value: number) { this.data[1] = value; }\r\n  public get z(): number { return this.data[2]; } public set z(value: number) { this.data[2] = value; }\r\n\r\n  constructor();\r\n  constructor(data: Float32Array);\r\n  constructor(x: number, y: number, z: number);\r\n  constructor(...args: any[]) {\r\n    if (args[0] instanceof Float32Array) {\r\n      if (args[0].length !== 3) { throw new Error(); }\r\n      this.data = args[0];\r\n    } else {\r\n      const x: number = typeof args[0] === \"number\" ? args[0] : 0;\r\n      const y: number = typeof args[1] === \"number\" ? args[1] : 0;\r\n      const z: number = typeof args[2] === \"number\" ? args[2] : 0;\r\n      this.data = new Float32Array([ x, y, z ]);\r\n    }\r\n  }\r\n\r\n  public Clone(): b2Vec3 {\r\n    return new b2Vec3(this.x, this.y, this.z);\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.z = 0;\r\n    return this;\r\n  }\r\n\r\n  public SetXYZ(x: number, y: number, z: number): this {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: XYZ): this {\r\n    this.x = other.x;\r\n    this.y = other.y;\r\n    this.z = other.z;\r\n    return this;\r\n  }\r\n\r\n  public SelfNeg(): this {\r\n    this.x = (-this.x);\r\n    this.y = (-this.y);\r\n    this.z = (-this.z);\r\n    return this;\r\n  }\r\n\r\n  public SelfAdd(v: XYZ): this {\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    this.z += v.z;\r\n    return this;\r\n  }\r\n\r\n  public SelfAddXYZ(x: number, y: number, z: number): this {\r\n    this.x += x;\r\n    this.y += y;\r\n    this.z += z;\r\n    return this;\r\n  }\r\n\r\n  public SelfSub(v: XYZ): this {\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    this.z -= v.z;\r\n    return this;\r\n  }\r\n\r\n  public SelfSubXYZ(x: number, y: number, z: number): this {\r\n    this.x -= x;\r\n    this.y -= y;\r\n    this.z -= z;\r\n    return this;\r\n  }\r\n\r\n  public SelfMul(s: number): this {\r\n    this.x *= s;\r\n    this.y *= s;\r\n    this.z *= s;\r\n    return this;\r\n  }\r\n\r\n  public static DotV3V3(a: XYZ, b: XYZ): number {\r\n    return a.x * b.x + a.y * b.y + a.z * b.z;\r\n  }\r\n\r\n  public static CrossV3V3<T extends XYZ>(a: XYZ, b: XYZ, out: T): T {\r\n    const a_x: number = a.x, a_y = a.y, a_z = a.z;\r\n    const b_x: number = b.x, b_y = b.y, b_z = b.z;\r\n    out.x = a_y * b_z - a_z * b_y;\r\n    out.y = a_z * b_x - a_x * b_z;\r\n    out.z = a_x * b_y - a_y * b_x;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// A 2-by-2 matrix. Stored in column-major order.\r\nexport class b2Mat22 {\r\n  public static readonly IDENTITY: Readonly<b2Mat22> = new b2Mat22();\r\n\r\n  // public readonly data: Float32Array = new Float32Array([ 1, 0, 0, 1 ]);\r\n  // public readonly ex: b2Vec2 = new b2Vec2(this.data.subarray(0, 2));\r\n  // public readonly ey: b2Vec2 = new b2Vec2(this.data.subarray(2, 4));\r\n\r\n  public readonly ex: b2Vec2 = new b2Vec2(1, 0);\r\n  public readonly ey: b2Vec2 = new b2Vec2(0, 1);\r\n\r\n  public Clone(): b2Mat22 {\r\n    return new b2Mat22().Copy(this);\r\n  }\r\n\r\n  public static FromVV(c1: XY, c2: XY): b2Mat22 {\r\n    return new b2Mat22().SetVV(c1, c2);\r\n  }\r\n\r\n  public static FromSSSS(r1c1: number, r1c2: number, r2c1: number, r2c2: number): b2Mat22 {\r\n    return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n  }\r\n\r\n  public static FromAngle(radians: number): b2Mat22 {\r\n    return new b2Mat22().SetAngle(radians);\r\n  }\r\n\r\n  public SetSSSS(r1c1: number, r1c2: number, r2c1: number, r2c2: number): this {\r\n    this.ex.Set(r1c1, r2c1);\r\n    this.ey.Set(r1c2, r2c2);\r\n    return this;\r\n  }\r\n\r\n  public SetVV(c1: XY, c2: XY): this {\r\n    this.ex.Copy(c1);\r\n    this.ey.Copy(c2);\r\n    return this;\r\n  }\r\n\r\n  public SetAngle(radians: number): this {\r\n    const c: number = Math.cos(radians);\r\n    const s: number = Math.sin(radians);\r\n    this.ex.Set( c, s);\r\n    this.ey.Set(-s, c);\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: b2Mat22): this {\r\n    this.ex.Copy(other.ex);\r\n    this.ey.Copy(other.ey);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.ex.Set(1, 0);\r\n    this.ey.Set(0, 1);\r\n    return this;\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.ex.SetZero();\r\n    this.ey.SetZero();\r\n    return this;\r\n  }\r\n\r\n  public GetAngle(): number {\r\n    return Math.atan2(this.ex.y, this.ex.x);\r\n  }\r\n\r\n  public GetInverse(out: b2Mat22): b2Mat22 {\r\n    const a: number = this.ex.x;\r\n    const b: number = this.ey.x;\r\n    const c: number = this.ex.y;\r\n    const d: number = this.ey.y;\r\n    let det: number = a * d - b * c;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.ex.x =   det * d;\r\n    out.ey.x = (-det * b);\r\n    out.ex.y = (-det * c);\r\n    out.ey.y =   det * a;\r\n    return out;\r\n  }\r\n\r\n  public Solve<T extends XY>(b_x: number, b_y: number, out: T): T {\r\n    const a11: number = this.ex.x, a12 = this.ey.x;\r\n    const a21: number = this.ex.y, a22 = this.ey.y;\r\n    let det: number = a11 * a22 - a12 * a21;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.x = det * (a22 * b_x - a12 * b_y);\r\n    out.y = det * (a11 * b_y - a21 * b_x);\r\n    return out;\r\n  }\r\n\r\n  public SelfAbs(): this {\r\n    this.ex.SelfAbs();\r\n    this.ey.SelfAbs();\r\n    return this;\r\n  }\r\n\r\n  public SelfInv(): this {\r\n    this.GetInverse(this);\r\n    return this;\r\n  }\r\n\r\n  public SelfAddM(M: b2Mat22): this {\r\n    this.ex.SelfAdd(M.ex);\r\n    this.ey.SelfAdd(M.ey);\r\n    return this;\r\n  }\r\n\r\n  public SelfSubM(M: b2Mat22): this {\r\n    this.ex.SelfSub(M.ex);\r\n    this.ey.SelfSub(M.ey);\r\n    return this;\r\n  }\r\n\r\n  public static AbsM(M: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const M_ex: b2Vec2 = M.ex, M_ey: b2Vec2 = M.ey;\r\n    out.ex.x = b2Abs(M_ex.x);\r\n    out.ex.y = b2Abs(M_ex.y);\r\n    out.ey.x = b2Abs(M_ey.x);\r\n    out.ey.y = b2Abs(M_ey.y);\r\n    return out;\r\n  }\r\n\r\n  public static MulMV<T extends XY>(M: b2Mat22, v: XY, out: T): T {\r\n    const M_ex: b2Vec2 = M.ex, M_ey: b2Vec2 = M.ey;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n    out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTMV<T extends XY>(M: b2Mat22, v: XY, out: T): T {\r\n    const M_ex: b2Vec2 = M.ex, M_ey: b2Vec2 = M.ey;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n    out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static AddMM(A: b2Mat22, B: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const A_ex: b2Vec2 = A.ex, A_ey: b2Vec2 = A.ey;\r\n    const B_ex: b2Vec2 = B.ex, B_ey: b2Vec2 = B.ey;\r\n    out.ex.x = A_ex.x + B_ex.x;\r\n    out.ex.y = A_ex.y + B_ex.y;\r\n    out.ey.x = A_ey.x + B_ey.x;\r\n    out.ey.y = A_ey.y + B_ey.y;\r\n    return out;\r\n  }\r\n\r\n  public static MulMM(A: b2Mat22, B: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const A_ex_x: number = A.ex.x, A_ex_y: number = A.ex.y;\r\n    const A_ey_x: number = A.ey.x, A_ey_y: number = A.ey.y;\r\n    const B_ex_x: number = B.ex.x, B_ex_y: number = B.ex.y;\r\n    const B_ey_x: number = B.ey.x, B_ey_y: number = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n    out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n    out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTMM(A: b2Mat22, B: b2Mat22, out: b2Mat22): b2Mat22 {\r\n    const A_ex_x: number = A.ex.x, A_ex_y: number = A.ex.y;\r\n    const A_ey_x: number = A.ey.x, A_ey_y: number = A.ey.y;\r\n    const B_ex_x: number = B.ex.x, B_ex_y: number = B.ex.y;\r\n    const B_ey_x: number = B.ey.x, B_ey_y: number = B.ey.y;\r\n    out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n    out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n    out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n    out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// A 3-by-3 matrix. Stored in column-major order.\r\nexport class b2Mat33 {\r\n  public static readonly IDENTITY: Readonly<b2Mat33> = new b2Mat33();\r\n\r\n  public readonly data: Float32Array = new Float32Array([ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]);\r\n  public readonly ex: b2Vec3 = new b2Vec3(this.data.subarray(0, 3));\r\n  public readonly ey: b2Vec3 = new b2Vec3(this.data.subarray(3, 6));\r\n  public readonly ez: b2Vec3 = new b2Vec3(this.data.subarray(6, 9));\r\n\r\n  public Clone(): b2Mat33 {\r\n    return new b2Mat33().Copy(this);\r\n  }\r\n\r\n  public SetVVV(c1: XYZ, c2: XYZ, c3: XYZ): this {\r\n    this.ex.Copy(c1);\r\n    this.ey.Copy(c2);\r\n    this.ez.Copy(c3);\r\n    return this;\r\n  }\r\n\r\n  public Copy(other: b2Mat33): this {\r\n    this.ex.Copy(other.ex);\r\n    this.ey.Copy(other.ey);\r\n    this.ez.Copy(other.ez);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.ex.SetXYZ(1, 0, 0);\r\n    this.ey.SetXYZ(0, 1, 0);\r\n    this.ez.SetXYZ(0, 0, 1);\r\n    return this;\r\n  }\r\n\r\n  public SetZero(): this {\r\n    this.ex.SetZero();\r\n    this.ey.SetZero();\r\n    this.ez.SetZero();\r\n    return this;\r\n  }\r\n\r\n  public SelfAddM(M: b2Mat33): this {\r\n    this.ex.SelfAdd(M.ex);\r\n    this.ey.SelfAdd(M.ey);\r\n    this.ez.SelfAdd(M.ez);\r\n    return this;\r\n  }\r\n\r\n  public Solve33<T extends XYZ>(b_x: number, b_y: number, b_z: number, out: T): T {\r\n    const a11: number = this.ex.x, a21: number = this.ex.y, a31: number = this.ex.z;\r\n    const a12: number = this.ey.x, a22: number = this.ey.y, a32: number = this.ey.z;\r\n    const a13: number = this.ez.x, a23: number = this.ez.y, a33: number = this.ez.z;\r\n    let det: number = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n    out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n    out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n    return out;\r\n  }\r\n\r\n  public Solve22<T extends XY>(b_x: number, b_y: number, out: T): T {\r\n    const a11: number = this.ex.x, a12: number = this.ey.x;\r\n    const a21: number = this.ex.y, a22: number = this.ey.y;\r\n    let det: number = a11 * a22 - a12 * a21;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n    out.x = det * (a22 * b_x - a12 * b_y);\r\n    out.y = det * (a11 * b_y - a21 * b_x);\r\n    return out;\r\n  }\r\n\r\n  public GetInverse22(M: b2Mat33): void {\r\n    const a: number = this.ex.x, b: number = this.ey.x, c: number = this.ex.y, d: number = this.ey.y;\r\n    let det: number = a * d - b * c;\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    M.ex.x =  det * d; M.ey.x = -det * b; M.ex.z = 0;\r\n    M.ex.y = -det * c; M.ey.y =  det * a; M.ey.z = 0;\r\n    M.ez.x =        0; M.ez.y =        0; M.ez.z = 0;\r\n  }\r\n\r\n  public GetSymInverse33(M: b2Mat33): void {\r\n    let det: number = b2Vec3.DotV3V3(this.ex, b2Vec3.CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n    if (det !== 0) {\r\n      det = 1 / det;\r\n    }\r\n\r\n    const a11: number = this.ex.x, a12: number = this.ey.x, a13: number = this.ez.x;\r\n    const a22: number = this.ey.y, a23: number = this.ez.y;\r\n    const a33: number = this.ez.z;\r\n\r\n    M.ex.x = det * (a22 * a33 - a23 * a23);\r\n    M.ex.y = det * (a13 * a23 - a12 * a33);\r\n    M.ex.z = det * (a12 * a23 - a13 * a22);\r\n\r\n    M.ey.x = M.ex.y;\r\n    M.ey.y = det * (a11 * a33 - a13 * a13);\r\n    M.ey.z = det * (a13 * a12 - a11 * a23);\r\n\r\n    M.ez.x = M.ex.z;\r\n    M.ez.y = M.ey.z;\r\n    M.ez.z = det * (a11 * a22 - a12 * a12);\r\n  }\r\n\r\n  public static MulM33V3<T extends XYZ>(A: b2Mat33, v: XYZ, out: T): T {\r\n    const v_x: number = v.x, v_y: number = v.y, v_z: number = v.z;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n    out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n    return out;\r\n  }\r\n  public static MulM33XYZ<T extends XYZ>(A: b2Mat33, x: number, y: number, z: number, out: T): T {\r\n    out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n    out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n    out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n    return out;\r\n  }\r\n  public static MulM33V2<T extends XY>(A: b2Mat33, v: XY, out: T): T {\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n    out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n    return out;\r\n  }\r\n  public static MulM33XY<T extends XY>(A: b2Mat33, x: number, y: number, out: T): T {\r\n    out.x = A.ex.x * x + A.ey.x * y;\r\n    out.y = A.ex.y * x + A.ey.y * y;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// Rotation\r\nexport class b2Rot {\r\n  public static readonly IDENTITY: Readonly<b2Rot> = new b2Rot();\r\n\r\n  public s: number = 0;\r\n  public c: number = 1;\r\n\r\n  constructor(angle: number = 0) {\r\n    if (angle) {\r\n      this.s = Math.sin(angle);\r\n      this.c = Math.cos(angle);\r\n    }\r\n  }\r\n\r\n  public Clone(): b2Rot {\r\n    return new b2Rot().Copy(this);\r\n  }\r\n\r\n  public Copy(other: b2Rot): this {\r\n    this.s = other.s;\r\n    this.c = other.c;\r\n    return this;\r\n  }\r\n\r\n  public SetAngle(angle: number): this {\r\n    this.s = Math.sin(angle);\r\n    this.c = Math.cos(angle);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.s = 0;\r\n    this.c = 1;\r\n    return this;\r\n  }\r\n\r\n  public GetAngle(): number {\r\n    return Math.atan2(this.s, this.c);\r\n  }\r\n\r\n  public GetXAxis<T extends XY>(out: T): T {\r\n    out.x = this.c;\r\n    out.y = this.s;\r\n    return out;\r\n  }\r\n\r\n  public GetYAxis<T extends XY>(out: T): T {\r\n    out.x = -this.s;\r\n    out.y = this.c;\r\n    return out;\r\n  }\r\n\r\n  public static MulRR(q: b2Rot, r: b2Rot, out: b2Rot): b2Rot {\r\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n    // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n    // s = qs * rc + qc * rs\r\n    // c = qc * rc - qs * rs\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const r_c: number = r.c, r_s: number = r.s;\r\n    out.s = q_s * r_c + q_c * r_s;\r\n    out.c = q_c * r_c - q_s * r_s;\r\n    return out;\r\n  }\r\n\r\n  public static MulTRR(q: b2Rot, r: b2Rot, out: b2Rot): b2Rot {\r\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n    // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n    // s = qc * rs - qs * rc\r\n    // c = qc * rc + qs * rs\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const r_c: number = r.c, r_s: number = r.s;\r\n    out.s = q_c * r_s - q_s * r_c;\r\n    out.c = q_c * r_c + q_s * r_s;\r\n    return out;\r\n  }\r\n\r\n  public static MulRV<T extends XY>(q: b2Rot, v: XY, out: T): T {\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = q_c * v_x - q_s * v_y;\r\n    out.y = q_s * v_x + q_c * v_y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTRV<T extends XY>(q: b2Rot, v: XY, out: T): T {\r\n    const q_c: number = q.c, q_s: number = q.s;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x =  q_c * v_x + q_s * v_y;\r\n    out.y = -q_s * v_x + q_c * v_y;\r\n    return out;\r\n  }\r\n}\r\n\r\n/// A transform contains translation and rotation. It is used to represent\r\n/// the position and orientation of rigid frames.\r\nexport class b2Transform {\r\n  public static readonly IDENTITY: Readonly<b2Transform> = new b2Transform();\r\n\r\n  public readonly p: b2Vec2 = new b2Vec2();\r\n  public readonly q: b2Rot = new b2Rot();\r\n\r\n  public Clone(): b2Transform {\r\n    return new b2Transform().Copy(this);\r\n  }\r\n\r\n  public Copy(other: b2Transform): this {\r\n    this.p.Copy(other.p);\r\n    this.q.Copy(other.q);\r\n    return this;\r\n  }\r\n\r\n  public SetIdentity(): this {\r\n    this.p.SetZero();\r\n    this.q.SetIdentity();\r\n    return this;\r\n  }\r\n\r\n  public SetPositionRotation(position: XY, q: Readonly<b2Rot>): this {\r\n    this.p.Copy(position);\r\n    this.q.Copy(q);\r\n    return this;\r\n  }\r\n\r\n  public SetPositionAngle(pos: XY, a: number): this {\r\n    this.p.Copy(pos);\r\n    this.q.SetAngle(a);\r\n    return this;\r\n  }\r\n\r\n  public SetPosition(position: XY): this {\r\n    this.p.Copy(position);\r\n    return this;\r\n  }\r\n\r\n  public SetPositionXY(x: number, y: number): this {\r\n    this.p.Set(x, y);\r\n    return this;\r\n  }\r\n\r\n  public SetRotation(rotation: Readonly<b2Rot>): this {\r\n    this.q.Copy(rotation);\r\n    return this;\r\n  }\r\n\r\n  public SetRotationAngle(radians: number): this {\r\n    this.q.SetAngle(radians);\r\n    return this;\r\n  }\r\n\r\n  public GetPosition(): Readonly<b2Vec2> {\r\n    return this.p;\r\n  }\r\n\r\n  public GetRotation(): Readonly<b2Rot> {\r\n    return this.q;\r\n  }\r\n\r\n  public GetRotationAngle(): number {\r\n    return this.q.GetAngle();\r\n  }\r\n\r\n  public GetAngle(): number {\r\n    return this.q.GetAngle();\r\n  }\r\n\r\n  public static MulXV<T extends XY>(T: b2Transform, v: XY, out: T): T {\r\n    // float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n    // float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n    // return b2Vec2(x, y);\r\n    const T_q_c: number = T.q.c, T_q_s: number = T.q.s;\r\n    const v_x: number = v.x, v_y: number = v.y;\r\n    out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n    out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n    return out;\r\n  }\r\n\r\n  public static MulTXV<T extends XY>(T: b2Transform, v: XY, out: T): T {\r\n    // float32 px = v.x - T.p.x;\r\n    // float32 py = v.y - T.p.y;\r\n    // float32 x = (T.q.c * px + T.q.s * py);\r\n    // float32 y = (-T.q.s * px + T.q.c * py);\r\n    // return b2Vec2(x, y);\r\n    const T_q_c: number = T.q.c, T_q_s: number = T.q.s;\r\n    const p_x: number = v.x - T.p.x;\r\n    const p_y: number = v.y - T.p.y;\r\n    out.x = ( T_q_c * p_x + T_q_s * p_y);\r\n    out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n    return out;\r\n  }\r\n\r\n  public static MulXX(A: b2Transform, B: b2Transform, out: b2Transform): b2Transform {\r\n    b2Rot.MulRR(A.q, B.q, out.q);\r\n    b2Vec2.AddVV(b2Rot.MulRV(A.q, B.p, out.p), A.p, out.p);\r\n    return out;\r\n  }\r\n\r\n  public static MulTXX(A: b2Transform, B: b2Transform, out: b2Transform): b2Transform {\r\n    b2Rot.MulTRR(A.q, B.q, out.q);\r\n    b2Rot.MulTRV(A.q, b2Vec2.SubVV(B.p, A.p, out.p), out.p);\r\n    return out;\r\n  }\r\n\r\n}\r\n\r\n/// This describes the motion of a body/shape for TOI computation.\r\n/// Shapes are defined with respect to the body origin, which may\r\n/// no coincide with the center of mass. However, to support dynamics\r\n/// we must interpolate the center of mass position.\r\nexport class b2Sweep {\r\n  public readonly localCenter: b2Vec2 = new b2Vec2();\r\n  public readonly c0: b2Vec2 = new b2Vec2();\r\n  public readonly c: b2Vec2 = new b2Vec2();\r\n  public a0: number = 0;\r\n  public a: number = 0;\r\n  public alpha0: number = 0;\r\n\r\n  public Clone(): b2Sweep {\r\n    return new b2Sweep().Copy(this);\r\n  }\r\n\r\n  public Copy(other: b2Sweep): this {\r\n    this.localCenter.Copy(other.localCenter);\r\n    this.c0.Copy(other.c0);\r\n    this.c.Copy(other.c);\r\n    this.a0 = other.a0;\r\n    this.a = other.a;\r\n    this.alpha0 = other.alpha0;\r\n    return this;\r\n  }\r\n\r\n  // https://fgiesen.wordpress.com/2012/08/15/linear-interpolation-past-present-and-future/\r\n  public GetTransform(xf: b2Transform, beta: number): b2Transform {\r\n    xf.p.x = (1.0 - beta) * this.c0.x + beta * this.c.x;\r\n    xf.p.y = (1.0 - beta) * this.c0.y + beta * this.c.y;\r\n    const angle: number = (1.0 - beta) * this.a0 + beta * this.a;\r\n    xf.q.SetAngle(angle);\r\n\r\n    xf.p.SelfSub(b2Rot.MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n    return xf;\r\n  }\r\n\r\n  public Advance(alpha: number): void {\r\n    // DEBUG: b2Assert(this.alpha0 < 1);\r\n    const beta: number = (alpha - this.alpha0) / (1 - this.alpha0);\r\n    const one_minus_beta: number = (1 - beta);\r\n    this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n    this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n    this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n    this.alpha0 = alpha;\r\n  }\r\n\r\n  public Normalize(): void {\r\n    const d: number = b2_two_pi * Math.floor(this.a0 / b2_two_pi);\r\n    this.a0 -= d;\r\n    this.a -= d;\r\n  }\r\n}\r\n",
    "/*\r\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\n\r\n/// @file\r\n/// Settings that can be overriden for your application\r\n///\r\n\r\n// Tunable Constants\r\n\r\n/// You can use this to change the length scale used by your game.\r\n/// For example for inches you could use 39.4.\r\n// export const b2_lengthUnitsPerMeter: number = 1.0;\r\n\r\n/// The maximum number of vertices on a convex polygon. You cannot increase\r\n/// this too much because b2BlockAllocator has a maximum object size.\r\n// export const b2_maxPolygonVertices: number = 8;\r\n\r\n// Memory Allocation\r\n\r\n/// Implement this function to use your own memory allocator.\r\nexport function b2Alloc(size: number): any {\r\n  return null;\r\n}\r\n\r\n/// If you implement b2Alloc, you should also implement this function.\r\nexport function b2Free(mem: any): void {\r\n}\r\n\r\n/// Logging function.\r\nexport function b2Log(message: string, ...args: any[]): void {\r\n  // console.log(message, ...args);\r\n}\r\n\r\nexport * from \"./b2_common\";\r\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nexport class b2StackAllocator {}\n",
    "/*\n* Copyright (c) 2011 Erin Catto http://box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n/// Timer for profiling. This has platform specific code and may\n/// not work on every platform.\nexport class b2Timer {\n  public m_start: number = Date.now();\n\n  /// Reset the timer.\n  public Reset(): b2Timer {\n    this.m_start = Date.now();\n    return this;\n  }\n\n  /// Get the time since construction or the last reset.\n  public GetMilliseconds(): number {\n    return Date.now() - this.m_start;\n  }\n}\n\nexport class b2Counter {\n  public m_count: number = 0;\n  public m_min_count: number = 0;\n  public m_max_count: number = 0;\n\n  public GetCount(): number {\n    return this.m_count;\n  }\n\n  public GetMinCount(): number {\n    return this.m_min_count;\n  }\n\n  public GetMaxCount(): number {\n    return this.m_max_count;\n  }\n\n  public ResetCount(): number {\n    const count: number = this.m_count;\n    this.m_count = 0;\n    return count;\n  }\n\n  public ResetMinCount(): void {\n    this.m_min_count = 0;\n  }\n\n  public ResetMaxCount(): void {\n    this.m_max_count = 0;\n  }\n\n  public Increment(): void {\n    this.m_count++;\n\n    if (this.m_max_count < this.m_count) {\n      this.m_max_count = this.m_count;\n    }\n  }\n\n  public Decrement(): void {\n    this.m_count--;\n\n    if (this.m_min_count > this.m_count) {\n      this.m_min_count = this.m_count;\n    }\n  }\n}\n",
    "/*\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_CONTROLLER\n\nimport { b2Controller, b2ControllerEdge } from \"./b2_controller\";\nimport { b2Vec2 } from \"../common/b2_math\";\nimport { b2TimeStep } from \"../dynamics/b2_time_step\";\nimport { b2_epsilon } from \"../common/b2_common\";\nimport { b2Draw, b2Color } from \"../common/b2_draw\";\n\n/**\n * Calculates buoyancy forces for fluids in the form of a half\n * plane.\n */\nexport class b2BuoyancyController extends b2Controller {\n  /**\n   * The outer surface normal\n   */\n  public readonly normal = new b2Vec2(0, 1);\n  /**\n   * The height of the fluid surface along the normal\n   */\n  public offset = 0;\n  /**\n   * The fluid density\n   */\n  public density = 0;\n  /**\n   * Fluid velocity, for drag calculations\n   */\n  public readonly velocity = new b2Vec2(0, 0);\n  /**\n   * Linear drag co-efficient\n   */\n  public linearDrag = 0;\n  /**\n   * Angular drag co-efficient\n   */\n  public angularDrag = 0;\n  /**\n   * If false, bodies are assumed to be uniformly dense, otherwise\n   * use the shapes densities\n   */\n  public useDensity = false; //False by default to prevent a gotcha\n  /**\n   * If true, gravity is taken from the world instead of the\n   */\n  public useWorldGravity = true;\n  /**\n   * Gravity vector, if the world's gravity is not used\n   */\n  public readonly gravity = new b2Vec2(0, 0);\n\n  public Step(step: b2TimeStep) {\n    if (!this.m_bodyList) {\n      return;\n    }\n    if (this.useWorldGravity) {\n      this.gravity.Copy(this.m_bodyList.body.GetWorld().GetGravity());\n    }\n    for (let i: b2ControllerEdge | null = this.m_bodyList; i; i = i.nextBody) {\n      const body = i.body;\n      if (!body.IsAwake()) {\n        //Buoyancy force is just a function of position,\n        //so unlike most forces, it is safe to ignore sleeping bodes\n        continue;\n      }\n      const areac = new b2Vec2();\n      const massc = new b2Vec2();\n      let area = 0;\n      let mass = 0;\n      for (let fixture = body.GetFixtureList(); fixture; fixture = fixture.m_next) {\n        const sc = new b2Vec2();\n        const sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\n        area += sarea;\n        areac.x += sarea * sc.x;\n        areac.y += sarea * sc.y;\n        let shapeDensity = 0;\n        if (this.useDensity) {\n          //TODO: Expose density publicly\n          shapeDensity = fixture.GetDensity();\n        } else {\n          shapeDensity = 1;\n        }\n        mass += sarea * shapeDensity;\n        massc.x += sarea * sc.x * shapeDensity;\n        massc.y += sarea * sc.y * shapeDensity;\n      }\n      areac.x /= area;\n      areac.y /= area;\n      //    b2Vec2 localCentroid = b2MulT(body->GetXForm(),areac);\n      massc.x /= mass;\n      massc.y /= mass;\n      if (area < b2_epsilon) {\n        continue;\n      }\n      //Buoyancy\n      const buoyancyForce = this.gravity.Clone().SelfNeg();\n      buoyancyForce.SelfMul(this.density * area);\n      body.ApplyForce(buoyancyForce, massc);\n      //Linear drag\n      const dragForce = body.GetLinearVelocityFromWorldPoint(areac, new b2Vec2());\n      dragForce.SelfSub(this.velocity);\n      dragForce.SelfMul((-this.linearDrag * area));\n      body.ApplyForce(dragForce, areac);\n      //Angular drag\n      //TODO: Something that makes more physical sense?\n      body.ApplyTorque((-body.GetInertia() / body.GetMass() * area * body.GetAngularVelocity() * this.angularDrag));\n    }\n  }\n\n  public Draw(debugDraw: b2Draw) {\n    const r = 100;\n    const p1 = new b2Vec2();\n    const p2 = new b2Vec2();\n    p1.x = this.normal.x * this.offset + this.normal.y * r;\n    p1.y = this.normal.y * this.offset - this.normal.x * r;\n    p2.x = this.normal.x * this.offset - this.normal.y * r;\n    p2.y = this.normal.y * this.offset + this.normal.x * r;\n\n    const color = new b2Color(0, 0, 0.8);\n\n    debugDraw.DrawSegment(p1, p2, color);\n  }\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_CONTROLLER\n\nimport { b2Controller } from \"./b2_controller\";\nimport { b2Vec2 } from \"../common/b2_math\";\nimport { b2TimeStep } from \"../dynamics/b2_time_step\";\nimport { b2Draw } from \"../common/b2_draw\";\n\n/**\n * Applies a force every frame\n */\nexport class b2ConstantAccelController extends b2Controller {\n  /**\n   * The acceleration to apply\n   */\n  public readonly A = new b2Vec2(0, 0);\n\n  public Step(step: b2TimeStep) {\n    const dtA = b2Vec2.MulSV(step.dt, this.A, b2ConstantAccelController.Step_s_dtA);\n    for (let i = this.m_bodyList; i; i = i.nextBody) {\n      const body = i.body;\n      if (!body.IsAwake()) {\n        continue;\n      }\n      body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), dtA, b2Vec2.s_t0));\n    }\n  }\n  private static Step_s_dtA = new b2Vec2();\n\n  public Draw(draw: b2Draw) {}\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_CONTROLLER\n\nimport { b2Controller } from \"./b2_controller\";\nimport { b2Vec2 } from \"../common/b2_math\";\nimport { b2TimeStep } from \"../dynamics/b2_time_step\";\nimport { b2Draw } from \"../common/b2_draw\";\n\n/**\n * Applies a force every frame\n */\nexport class b2ConstantForceController extends b2Controller {\n  /**\n   * The force to apply\n   */\n  public readonly F = new b2Vec2(0, 0);\n\n  public Step(step: b2TimeStep) {\n    for (let i = this.m_bodyList; i; i = i.nextBody) {\n      const body = i.body;\n      if (!body.IsAwake()) {\n        continue;\n      }\n      body.ApplyForce(this.F, body.GetWorldCenter());\n    }\n  }\n\n  public Draw(draw: b2Draw) {}\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_CONTROLLER\n\nimport { b2Body } from \"../dynamics/b2_body\";\nimport { b2TimeStep } from \"../dynamics/b2_time_step\";\nimport { b2Draw } from \"../common/b2_draw\";\n\n/**\n * A controller edge is used to connect bodies and controllers\n * together in a bipartite graph.\n */\nexport class b2ControllerEdge {\n  public readonly controller: b2Controller; ///< provides quick access to other end of this edge.\n  public readonly body: b2Body; ///< the body\n  public prevBody: b2ControllerEdge | null = null; ///< the previous controller edge in the controllers's joint list\n  public nextBody: b2ControllerEdge | null = null; ///< the next controller edge in the controllers's joint list\n  public prevController: b2ControllerEdge | null = null; ///< the previous controller edge in the body's joint list\n  public nextController: b2ControllerEdge | null = null; ///< the next controller edge in the body's joint list\n  constructor(controller: b2Controller, body: b2Body) {\n    this.controller = controller;\n    this.body = body;\n  }\n}\n\n/**\n * Base class for controllers. Controllers are a convience for\n * encapsulating common per-step functionality.\n */\nexport abstract class b2Controller {\n  // m_world: b2World;\n  public m_bodyList: b2ControllerEdge | null = null;\n  public m_bodyCount: number = 0;\n  public m_prev: b2Controller | null = null;\n  public m_next: b2Controller | null = null;\n\n  /**\n   * Controllers override this to implement per-step functionality.\n   */\n  public abstract Step(step: b2TimeStep): void;\n\n  /**\n   * Controllers override this to provide debug drawing.\n   */\n  public abstract Draw(debugDraw: b2Draw): void;\n\n  /**\n   * Get the next controller in the world's body list.\n   */\n  public GetNext(): b2Controller | null {\n    return this.m_next;\n  }\n\n  /**\n   * Get the previous controller in the world's body list.\n   */\n  public GetPrev(): b2Controller | null {\n    return this.m_prev;\n  }\n\n  /**\n   * Get the parent world of this body.\n   */\n  // GetWorld() {\n  //   return this.m_world;\n  // }\n\n  /**\n   * Get the attached body list\n   */\n  public GetBodyList(): b2ControllerEdge | null {\n    return this.m_bodyList;\n  }\n\n  /**\n   * Adds a body to the controller list.\n   */\n  public AddBody(body: b2Body): void {\n    const edge = new b2ControllerEdge(this, body);\n\n    //Add edge to controller list\n    edge.nextBody = this.m_bodyList;\n    edge.prevBody = null;\n    if (this.m_bodyList) {\n      this.m_bodyList.prevBody = edge;\n    }\n    this.m_bodyList = edge;\n    ++this.m_bodyCount;\n\n    //Add edge to body list\n    edge.nextController = body.m_controllerList;\n    edge.prevController = null;\n    if (body.m_controllerList) {\n      body.m_controllerList.prevController = edge;\n    }\n    body.m_controllerList = edge;\n    ++body.m_controllerCount;\n  }\n\n  /**\n   * Removes a body from the controller list.\n   */\n  public RemoveBody(body: b2Body): void {\n    //Assert that the controller is not empty\n    if (this.m_bodyCount <= 0) { throw new Error(); }\n\n    //Find the corresponding edge\n    /*b2ControllerEdge*/\n    let edge = this.m_bodyList;\n    while (edge && edge.body !== body) {\n      edge = edge.nextBody;\n    }\n\n    //Assert that we are removing a body that is currently attached to the controller\n    if (edge === null) { throw new Error(); }\n\n    //Remove edge from controller list\n    if (edge.prevBody) {\n      edge.prevBody.nextBody = edge.nextBody;\n    }\n    if (edge.nextBody) {\n      edge.nextBody.prevBody = edge.prevBody;\n    }\n    if (this.m_bodyList === edge) {\n      this.m_bodyList = edge.nextBody;\n    }\n    --this.m_bodyCount;\n\n    //Remove edge from body list\n    if (edge.nextController) {\n      edge.nextController.prevController = edge.prevController;\n    }\n    if (edge.prevController) {\n      edge.prevController.nextController = edge.nextController;\n    }\n    if (body.m_controllerList === edge) {\n      body.m_controllerList = edge.nextController;\n    }\n    --body.m_controllerCount;\n  }\n\n  /**\n   * Removes all bodies from the controller list.\n   */\n  public Clear(): void {\n    while (this.m_bodyList) {\n      this.RemoveBody(this.m_bodyList.body);\n    }\n\n    this.m_bodyCount = 0;\n  }\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_CONTROLLER\n\nimport { b2Controller } from \"./b2_controller\";\nimport { b2TimeStep } from \"../dynamics/b2_time_step\";\nimport { b2_epsilon } from \"../common/b2_common\";\nimport { b2Sqrt, b2Vec2 } from \"../common/b2_math\";\nimport { b2Draw } from \"../common/b2_draw\";\n\n/**\n * Applies simplified gravity between every pair of bodies\n */\nexport class b2GravityController extends b2Controller {\n  /**\n   * Specifies the strength of the gravitiation force\n   */\n  public G = 1;\n  /**\n   * If true, gravity is proportional to r^-2, otherwise r^-1\n   */\n  public invSqr = true;\n\n  /**\n   * @see b2Controller::Step\n   */\n  public Step(step: b2TimeStep) {\n    if (this.invSqr) {\n      for (let i = this.m_bodyList; i; i = i.nextBody) {\n        const body1 = i.body;\n        const p1 = body1.GetWorldCenter();\n        const mass1 = body1.GetMass();\n        for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\n          const body2 = j.body;\n          const p2 = body2.GetWorldCenter();\n          const mass2 = body2.GetMass();\n          const dx = p2.x - p1.x;\n          const dy = p2.y - p1.y;\n          const r2 = dx * dx + dy * dy;\n          if (r2 < b2_epsilon) {\n            continue;\n          }\n          const f = b2GravityController.Step_s_f.Set(dx, dy);\n          f.SelfMul(this.G / r2 / b2Sqrt(r2) * mass1 * mass2);\n          if (body1.IsAwake()) {\n            body1.ApplyForce(f, p1);\n          }\n          if (body2.IsAwake()) {\n            body2.ApplyForce(f.SelfMul(-1), p2);\n          }\n        }\n      }\n    } else {\n      for (let i = this.m_bodyList; i; i = i.nextBody) {\n        const body1 = i.body;\n        const p1 = body1.GetWorldCenter();\n        const mass1 = body1.GetMass();\n        for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\n          const body2 = j.body;\n          const p2 = body2.GetWorldCenter();\n          const mass2 = body2.GetMass();\n          const dx = p2.x - p1.x;\n          const dy = p2.y - p1.y;\n          const r2 = dx * dx + dy * dy;\n          if (r2 < b2_epsilon) {\n            continue;\n          }\n          const f = b2GravityController.Step_s_f.Set(dx, dy);\n          f.SelfMul(this.G / r2 * mass1 * mass2);\n          if (body1.IsAwake()) {\n            body1.ApplyForce(f, p1);\n          }\n          if (body2.IsAwake()) {\n            body2.ApplyForce(f.SelfMul(-1), p2);\n          }\n        }\n      }\n    }\n  }\n  private static Step_s_f = new b2Vec2();\n\n  public Draw(draw: b2Draw) { }\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_CONTROLLER\n\nimport { b2Controller } from \"./b2_controller\";\nimport { b2Mat22, b2Vec2, b2Max } from \"../common/b2_math\";\nimport { b2TimeStep } from \"../dynamics/b2_time_step\";\nimport { b2_epsilon } from \"../common/b2_common\";\nimport { b2Draw } from \"../common/b2_draw\";\n\n/**\n * Applies top down linear damping to the controlled bodies\n * The damping is calculated by multiplying velocity by a matrix\n * in local co-ordinates.\n */\nexport class b2TensorDampingController extends b2Controller {\n    /// Tensor to use in damping model\n    public readonly T = new b2Mat22();\n    /*Some examples (matrixes in format (row1; row2))\n    (-a 0; 0 -a)    Standard isotropic damping with strength a\n    ( 0 a; -a 0)    Electron in fixed field - a force at right angles to velocity with proportional magnitude\n    (-a 0; 0 -b)    Differing x and y damping. Useful e.g. for top-down wheels.\n    */\n    //By the way, tensor in this case just means matrix, don't let the terminology get you down.\n\n    /// Set this to a positive number to clamp the maximum amount of damping done.\n    public maxTimestep = 0;\n    // Typically one wants maxTimestep to be 1/(max eigenvalue of T), so that damping will never cause something to reverse direction\n\n    /**\n     * @see b2Controller::Step\n     */\n    public Step(step: b2TimeStep) {\n        let timestep = step.dt;\n        if (timestep <= b2_epsilon) {\n            return;\n        }\n        if (timestep > this.maxTimestep && this.maxTimestep > 0) {\n            timestep = this.maxTimestep;\n        }\n        for (let i = this.m_bodyList; i; i = i.nextBody) {\n            const body = i.body;\n            if (!body.IsAwake()) {\n                continue;\n            }\n            const damping = body.GetWorldVector(\n            b2Mat22.MulMV(\n                this.T,\n                body.GetLocalVector(\n                body.GetLinearVelocity(),\n                b2Vec2.s_t0),\n                b2Vec2.s_t1),\n            b2TensorDampingController.Step_s_damping);\n            //    body->SetLinearVelocity(body->GetLinearVelocity() + timestep * damping);\n            body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), b2Vec2.MulSV(timestep, damping, b2Vec2.s_t0), b2Vec2.s_t1));\n        }\n    }\n    private static Step_s_damping = new b2Vec2();\n\n    public Draw(draw: b2Draw) {}\n\n    /**\n     * Sets damping independantly along the x and y axes\n     */\n    public SetAxisAligned(xDamping: number, yDamping: number) {\n      this.T.ex.x = (-xDamping);\n      this.T.ex.y = 0;\n      this.T.ey.x = 0;\n      this.T.ey.y = (-yDamping);\n      if (xDamping > 0 || yDamping > 0) {\n        this.maxTimestep = 1 / b2Max(xDamping, yDamping);\n      } else {\n        this.maxTimestep = 0;\n      }\n    }\n}\n\n// #endif\n",
    "// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_epsilon, b2_linearSlop, b2_maxLinearCorrection, b2MakeNumberArray, b2Maybe } from \"../common/b2_common\";\nimport { b2Sq, b2Sqrt, b2Vec2, XY } from \"../common/b2_math\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2DistanceJoint, b2DistanceJointDef } from \"./b2_distance_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Body } from \"./b2_body\";\n\nexport interface b2IAreaJointDef extends b2IJointDef {\n  // world: b2World;\n\n  bodies: b2Body[];\n\n  stiffness?: number;\n\n  damping?: number;\n}\n\nexport class b2AreaJointDef extends b2JointDef implements b2IAreaJointDef {\n  public bodies: b2Body[] = [];\n\n  public stiffness: number = 0;\n\n  public damping: number = 0;\n\n  constructor() {\n    super(b2JointType.e_areaJoint);\n  }\n\n  public AddBody(body: b2Body): void {\n    this.bodies.push(body);\n\n    if (this.bodies.length === 1) {\n      this.bodyA = body;\n    } else if (this.bodies.length === 2) {\n      this.bodyB = body;\n    }\n  }\n}\n\nexport class b2AreaJoint extends b2Joint {\n  public m_bodies: b2Body[];\n  public m_stiffness: number = 0;\n  public m_damping: number = 0;\n\n  // Solver shared\n  public m_impulse: number = 0;\n\n  // Solver temp\n  public readonly m_targetLengths: number[];\n  public m_targetArea: number = 0;\n  public readonly m_normals: b2Vec2[];\n  public readonly m_joints: b2DistanceJoint[];\n  public readonly m_deltas: b2Vec2[];\n  public readonly m_delta: b2Vec2 = new b2Vec2();\n\n  constructor(def: b2IAreaJointDef) {\n    super(def);\n\n    // DEBUG: b2Assert(def.bodies.length >= 3, \"You cannot create an area joint with less than three bodies.\");\n\n    this.m_bodies = def.bodies;\n    this.m_stiffness = b2Maybe(def.stiffness, 0);\n    this.m_damping = b2Maybe(def.damping, 0);\n\n    this.m_targetLengths = b2MakeNumberArray(def.bodies.length);\n    this.m_normals = b2Vec2.MakeArray(def.bodies.length);\n    this.m_joints = []; // b2MakeNullArray(def.bodies.length);\n    this.m_deltas = b2Vec2.MakeArray(def.bodies.length);\n\n    const djd: b2DistanceJointDef = new b2DistanceJointDef();\n    djd.stiffness = this.m_stiffness;\n    djd.damping = this.m_damping;\n\n    this.m_targetArea = 0;\n\n    for (let i: number = 0; i < this.m_bodies.length; ++i) {\n      const body: b2Body = this.m_bodies[i];\n      const next: b2Body = this.m_bodies[(i + 1) % this.m_bodies.length];\n\n      const body_c: b2Vec2 = body.GetWorldCenter();\n      const next_c: b2Vec2 = next.GetWorldCenter();\n\n      this.m_targetLengths[i] = b2Vec2.DistanceVV(body_c, next_c);\n\n      this.m_targetArea += b2Vec2.CrossVV(body_c, next_c);\n\n      djd.Initialize(body, next, body_c, next_c);\n      this.m_joints[i] = body.GetWorld().CreateJoint(djd);\n    }\n\n    this.m_targetArea *= 0.5;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return out;\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return out;\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return 0;\n  }\n\n  public SetStiffness(stiffness: number): void {\n    this.m_stiffness = stiffness;\n\n    for (let i: number = 0; i < this.m_joints.length; ++i) {\n      this.m_joints[i].SetStiffness(stiffness);\n    }\n  }\n\n  public GetStiffness() {\n    return this.m_stiffness;\n  }\n\n  public SetDamping(damping: number): void {\n    this.m_damping = damping;\n\n    for (let i: number = 0; i < this.m_joints.length; ++i) {\n      this.m_joints[i].SetDamping(damping);\n    }\n  }\n\n  public GetDamping() {\n    return this.m_damping;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    log(\"Area joint dumping is not supported.\\n\");\n  }\n\n  public InitVelocityConstraints(data: b2SolverData): void {\n    for (let i: number = 0; i < this.m_bodies.length; ++i) {\n      const prev: b2Body = this.m_bodies[(i + this.m_bodies.length - 1) % this.m_bodies.length];\n      const next: b2Body = this.m_bodies[(i + 1) % this.m_bodies.length];\n      const prev_c: b2Vec2 = data.positions[prev.m_islandIndex].c;\n      const next_c: b2Vec2 = data.positions[next.m_islandIndex].c;\n      const delta: b2Vec2 = this.m_deltas[i];\n\n      b2Vec2.SubVV(next_c, prev_c, delta);\n    }\n\n    if (data.step.warmStarting) {\n      this.m_impulse *= data.step.dtRatio;\n\n      for (let i: number = 0; i < this.m_bodies.length; ++i) {\n        const body: b2Body = this.m_bodies[i];\n        const body_v: b2Vec2 = data.velocities[body.m_islandIndex].v;\n        const delta: b2Vec2 = this.m_deltas[i];\n\n        body_v.x += body.m_invMass *  delta.y * 0.5 * this.m_impulse;\n        body_v.y += body.m_invMass * -delta.x * 0.5 * this.m_impulse;\n      }\n    } else {\n      this.m_impulse = 0;\n    }\n  }\n\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    let dotMassSum: number = 0;\n    let crossMassSum: number = 0;\n\n    for (let i: number = 0; i < this.m_bodies.length; ++i) {\n      const body: b2Body = this.m_bodies[i];\n      const body_v: b2Vec2 = data.velocities[body.m_islandIndex].v;\n      const delta: b2Vec2 = this.m_deltas[i];\n\n      dotMassSum += delta.LengthSquared() / body.GetMass();\n      crossMassSum += b2Vec2.CrossVV(body_v, delta);\n    }\n\n    const lambda: number = -2 * crossMassSum / dotMassSum;\n    // lambda = b2Clamp(lambda, -b2_maxLinearCorrection, b2_maxLinearCorrection);\n\n    this.m_impulse += lambda;\n\n    for (let i: number = 0; i < this.m_bodies.length; ++i) {\n      const body: b2Body = this.m_bodies[i];\n      const body_v: b2Vec2 = data.velocities[body.m_islandIndex].v;\n      const delta: b2Vec2 = this.m_deltas[i];\n\n      body_v.x += body.m_invMass *  delta.y * 0.5 * lambda;\n      body_v.y += body.m_invMass * -delta.x * 0.5 * lambda;\n    }\n  }\n\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    let perimeter: number = 0;\n    let area: number = 0;\n\n    for (let i: number = 0; i < this.m_bodies.length; ++i) {\n      const body: b2Body = this.m_bodies[i];\n      const next: b2Body = this.m_bodies[(i + 1) % this.m_bodies.length];\n      const body_c: b2Vec2 = data.positions[body.m_islandIndex].c;\n      const next_c: b2Vec2 = data.positions[next.m_islandIndex].c;\n\n      const delta: b2Vec2 = b2Vec2.SubVV(next_c, body_c, this.m_delta);\n\n      let dist: number = delta.Length();\n      if (dist < b2_epsilon) {\n        dist = 1;\n      }\n\n      this.m_normals[i].x =  delta.y / dist;\n      this.m_normals[i].y = -delta.x / dist;\n\n      perimeter += dist;\n\n      area += b2Vec2.CrossVV(body_c, next_c);\n    }\n\n    area *= 0.5;\n\n    const deltaArea: number = this.m_targetArea - area;\n    const toExtrude: number = 0.5 * deltaArea / perimeter;\n    let done: boolean = true;\n\n    for (let i: number = 0; i < this.m_bodies.length; ++i) {\n      const body: b2Body = this.m_bodies[i];\n      const body_c: b2Vec2 = data.positions[body.m_islandIndex].c;\n      const next_i: number = (i + 1) % this.m_bodies.length;\n\n      const delta: b2Vec2 = b2Vec2.AddVV(this.m_normals[i], this.m_normals[next_i], this.m_delta);\n      delta.SelfMul(toExtrude);\n\n      const norm_sq: number = delta.LengthSquared();\n      if (norm_sq > b2Sq(b2_maxLinearCorrection)) {\n        delta.SelfMul(b2_maxLinearCorrection / b2Sqrt(norm_sq));\n      }\n      if (norm_sq > b2Sq(b2_linearSlop)) {\n        done = false;\n      }\n\n      body_c.x += delta.x;\n      body_c.y += delta.y;\n    }\n\n    return done;\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\n// DEBUG: import { b2IsValid } from \"../common/b2_math\";\nimport { b2Maybe } from \"../common/b2_common\";\nimport { b2Vec2, b2Rot, b2Transform, b2Sweep, XY } from \"../common/b2_math\";\nimport { b2Shape, b2MassData } from \"../collision/b2_shape\";\nimport { b2ContactEdge } from \"./b2_contact\";\nimport { b2JointEdge } from \"./b2_joint\";\nimport { b2Fixture, b2FixtureDef, b2IFixtureDef } from \"./b2_fixture\";\nimport { b2World } from \"./b2_world\";\n// #if B2_ENABLE_CONTROLLER\nimport { b2ControllerEdge } from \"../controllers/b2_controller\";\n// #endif\n\n/// The body type.\n/// static: zero mass, zero velocity, may be manually moved\n/// kinematic: zero mass, non-zero velocity set by user, moved by solver\n/// dynamic: positive mass, non-zero velocity determined by forces, moved by solver\nexport enum b2BodyType {\n  b2_unknown = -1,\n  b2_staticBody = 0,\n  b2_kinematicBody = 1,\n  b2_dynamicBody = 2,\n\n  // TODO_ERIN\n  // b2_bulletBody = 3\n}\n\nexport interface b2IBodyDef {\n  /// The body type: static, kinematic, or dynamic.\n  /// Note: if a dynamic body would have zero mass, the mass is set to one.\n  type?: b2BodyType;\n\n  /// The world position of the body. Avoid creating bodies at the origin\n  /// since this can lead to many overlapping shapes.\n  position?: XY;\n\n  /// The world setAngle of the body in radians.\n  angle?: number;\n\n  /// The linear velocity of the body's origin in world co-ordinates.\n  linearVelocity?: XY;\n\n  /// The angular velocity of the body.\n  angularVelocity?: number;\n\n  /// Linear damping is use to reduce the linear velocity. The damping parameter\n  /// can be larger than 1.0f but the damping effect becomes sensitive to the\n  /// time step when the damping parameter is large.\n  /// Units are 1/time\n  linearDamping?: number;\n\n  /// Angular damping is use to reduce the angular velocity. The damping parameter\n  /// can be larger than 1.0f but the damping effect becomes sensitive to the\n  /// time step when the damping parameter is large.\n  /// Units are 1/time\n  angularDamping?: number;\n\n  /// Set this flag to false if this body should never fall asleep. Note that\n  /// this increases CPU usage.\n  allowSleep?: boolean;\n\n  /// Is this body initially awake or sleeping?\n  awake?: boolean;\n\n  /// Should this body be prevented from rotating? Useful for characters.\n  fixedRotation?: boolean;\n\n  /// Is this a fast moving body that should be prevented from tunneling through\n  /// other moving bodies? Note that all bodies are prevented from tunneling through\n  /// kinematic and static bodies. This setting is only considered on dynamic bodies.\n  /// @warning You should use this flag sparingly since it increases processing time.\n  bullet?: boolean;\n\n  /// Does this body start out enabled?\n  enabled?: boolean;\n\n  /// Use this to store application specific body data.\n  userData?: any;\n\n  /// Scale the gravity applied to this body.\n  gravityScale?: number;\n}\n\n/// A body definition holds all the data needed to construct a rigid body.\n/// You can safely re-use body definitions. Shapes are added to a body after construction.\nexport class b2BodyDef implements b2IBodyDef {\n  /// The body type: static, kinematic, or dynamic.\n  /// Note: if a dynamic body would have zero mass, the mass is set to one.\n  public type: b2BodyType = b2BodyType.b2_staticBody;\n\n  /// The world position of the body. Avoid creating bodies at the origin\n  /// since this can lead to many overlapping shapes.\n  public readonly position: b2Vec2 = new b2Vec2(0, 0);\n\n  /// The world setAngle of the body in radians.\n  public angle: number = 0;\n\n  /// The linear velocity of the body's origin in world co-ordinates.\n  public readonly linearVelocity: b2Vec2 = new b2Vec2(0, 0);\n\n  /// The angular velocity of the body.\n  public angularVelocity: number = 0;\n\n  /// Linear damping is use to reduce the linear velocity. The damping parameter\n  /// can be larger than 1.0f but the damping effect becomes sensitive to the\n  /// time step when the damping parameter is large.\n  public linearDamping: number = 0;\n\n  /// Angular damping is use to reduce the angular velocity. The damping parameter\n  /// can be larger than 1.0f but the damping effect becomes sensitive to the\n  /// time step when the damping parameter is large.\n  public angularDamping: number = 0;\n\n  /// Set this flag to false if this body should never fall asleep. Note that\n  /// this increases CPU usage.\n  public allowSleep: boolean = true;\n\n  /// Is this body initially awake or sleeping?\n  public awake: boolean = true;\n\n  /// Should this body be prevented from rotating? Useful for characters.\n  public fixedRotation: boolean = false;\n\n  /// Is this a fast moving body that should be prevented from tunneling through\n  /// other moving bodies? Note that all bodies are prevented from tunneling through\n  /// kinematic and static bodies. This setting is only considered on dynamic bodies.\n  /// @warning You should use this flag sparingly since it increases processing time.\n  public bullet: boolean = false;\n\n  /// Does this body start out enabled?\n  public enabled: boolean = true;\n\n  /// Use this to store application specific body data.\n  public userData: any = null;\n\n  /// Scale the gravity applied to this body.\n  public gravityScale: number = 1;\n}\n\n/// A rigid body. These are created via b2World::CreateBody.\nexport class b2Body {\n  public m_type: b2BodyType = b2BodyType.b2_staticBody;\n\n  public m_islandFlag: boolean = false;\n  public m_awakeFlag: boolean = false;\n  public m_autoSleepFlag: boolean = false;\n  public m_bulletFlag: boolean = false;\n  public m_fixedRotationFlag: boolean = false;\n  public m_enabledFlag: boolean = false;\n  public m_toiFlag: boolean = false;\n\n  public m_islandIndex: number = 0;\n\n  public readonly m_xf: b2Transform = new b2Transform();  // the body origin transform\n  // #if B2_ENABLE_PARTICLE\n  public readonly m_xf0: b2Transform = new b2Transform();\n  // #endif\n  public readonly m_sweep: b2Sweep = new b2Sweep();    // the swept motion for CCD\n\n  public readonly m_linearVelocity: b2Vec2 = new b2Vec2();\n  public m_angularVelocity: number = 0;\n\n  public readonly m_force: b2Vec2 = new b2Vec2();\n  public m_torque: number = 0;\n\n  public m_world: b2World;\n  public m_prev: b2Body | null = null;\n  public m_next: b2Body | null = null;\n\n  public m_fixtureList: b2Fixture | null = null;\n  public m_fixtureCount: number = 0;\n\n  public m_jointList: b2JointEdge | null = null;\n  public m_contactList: b2ContactEdge | null = null;\n\n  public m_mass: number = 1;\n  public m_invMass: number = 1;\n\n  // Rotational inertia about the center of mass.\n  public m_I: number = 0;\n  public m_invI: number = 0;\n\n  public m_linearDamping: number = 0;\n  public m_angularDamping: number = 0;\n  public m_gravityScale: number = 1;\n\n  public m_sleepTime: number = 0;\n\n  public m_userData: any = null;\n\n  // #if B2_ENABLE_CONTROLLER\n  public m_controllerList: b2ControllerEdge | null = null;\n  public m_controllerCount: number = 0;\n  // #endif\n\n  constructor(bd: b2IBodyDef, world: b2World) {\n    this.m_bulletFlag = b2Maybe(bd.bullet, false);\n    this.m_fixedRotationFlag = b2Maybe(bd.fixedRotation, false);\n    this.m_autoSleepFlag = b2Maybe(bd.allowSleep, true);\n    // this.m_awakeFlag = b2Maybe(bd.awake, true);\n    if (b2Maybe(bd.awake, false) && b2Maybe(bd.type, b2BodyType.b2_staticBody) !== b2BodyType.b2_staticBody) {\n      this.m_awakeFlag = true;\n    }\n    this.m_enabledFlag = b2Maybe(bd.enabled, true);\n\n    this.m_world = world;\n\n    this.m_xf.p.Copy(b2Maybe(bd.position, b2Vec2.ZERO));\n    // DEBUG: b2Assert(this.m_xf.p.IsValid());\n    this.m_xf.q.SetAngle(b2Maybe(bd.angle, 0));\n    // DEBUG: b2Assert(b2IsValid(this.m_xf.q.GetAngle()));\n    // #if B2_ENABLE_PARTICLE\n    this.m_xf0.Copy(this.m_xf);\n    // #endif\n\n    this.m_sweep.localCenter.SetZero();\n    this.m_sweep.c0.Copy(this.m_xf.p);\n    this.m_sweep.c.Copy(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a = this.m_xf.q.GetAngle();\n    this.m_sweep.alpha0 = 0;\n\n    this.m_linearVelocity.Copy(b2Maybe(bd.linearVelocity, b2Vec2.ZERO));\n    // DEBUG: b2Assert(this.m_linearVelocity.IsValid());\n    this.m_angularVelocity = b2Maybe(bd.angularVelocity, 0);\n    // DEBUG: b2Assert(b2IsValid(this.m_angularVelocity));\n\n    this.m_linearDamping = b2Maybe(bd.linearDamping, 0);\n    this.m_angularDamping = b2Maybe(bd.angularDamping, 0);\n    this.m_gravityScale = b2Maybe(bd.gravityScale, 1);\n    // DEBUG: b2Assert(b2IsValid(this.m_gravityScale) && this.m_gravityScale >= 0);\n    // DEBUG: b2Assert(b2IsValid(this.m_angularDamping) && this.m_angularDamping >= 0);\n    // DEBUG: b2Assert(b2IsValid(this.m_linearDamping) && this.m_linearDamping >= 0);\n\n    this.m_force.SetZero();\n    this.m_torque = 0;\n\n    this.m_sleepTime = 0;\n\n    this.m_type = b2Maybe(bd.type, b2BodyType.b2_staticBody);\n\n    this.m_mass = 0;\n    this.m_invMass = 0;\n\n    this.m_I = 0;\n    this.m_invI = 0;\n\n    this.m_userData = bd.userData;\n\n    this.m_fixtureList = null;\n    this.m_fixtureCount = 0;\n\n    // #if B2_ENABLE_CONTROLLER\n    this.m_controllerList = null;\n    this.m_controllerCount = 0;\n    // #endif\n  }\n\n  public CreateFixture(def: b2IFixtureDef): b2Fixture;\n  public CreateFixture(shape: b2Shape): b2Fixture;\n  public CreateFixture(shape: b2Shape, density: number): b2Fixture;\n  public CreateFixture(a: b2IFixtureDef | b2Shape, b: number = 0): b2Fixture {\n    if (a instanceof b2Shape) {\n      return this.CreateFixtureShapeDensity(a, b);\n    } else {\n      return this.CreateFixtureDef(a);\n    }\n  }\n\n  /// Creates a fixture and attach it to this body. Use this function if you need\n  /// to set some fixture parameters, like friction. Otherwise you can create the\n  /// fixture directly from a shape.\n  /// If the density is non-zero, this function automatically updates the mass of the body.\n  /// Contacts are not created until the next time step.\n  /// @param def the fixture definition.\n  /// @warning This function is locked during callbacks.\n  public CreateFixtureDef(def: b2IFixtureDef): b2Fixture {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    const fixture: b2Fixture = new b2Fixture(this, def);\n\n    if (this.m_enabledFlag) {\n      fixture.CreateProxies();\n    }\n\n    fixture.m_next = this.m_fixtureList;\n    this.m_fixtureList = fixture;\n    ++this.m_fixtureCount;\n\n    // fixture.m_body = this;\n\n    // Adjust mass properties if needed.\n    if (fixture.m_density > 0) {\n      this.ResetMassData();\n    }\n\n    // Let the world know we have a new fixture. This will cause new contacts\n    // to be created at the beginning of the next time step.\n    this.m_world.m_newContacts = true;\n\n    return fixture;\n  }\n\n  /// Creates a fixture from a shape and attach it to this body.\n  /// This is a convenience function. Use b2FixtureDef if you need to set parameters\n  /// like friction, restitution, user data, or filtering.\n  /// If the density is non-zero, this function automatically updates the mass of the body.\n  /// @param shape the shape to be cloned.\n  /// @param density the shape density (set to zero for static bodies).\n  /// @warning This function is locked during callbacks.\n  private static CreateFixtureShapeDensity_s_def: b2FixtureDef = new b2FixtureDef();\n  public CreateFixtureShapeDensity(shape: b2Shape, density: number = 0): b2Fixture {\n    const def: b2FixtureDef = b2Body.CreateFixtureShapeDensity_s_def;\n    def.shape = shape;\n    def.density = density;\n    return this.CreateFixtureDef(def);\n  }\n\n  /// Destroy a fixture. This removes the fixture from the broad-phase and\n  /// destroys all contacts associated with this fixture. This will\n  /// automatically adjust the mass of the body if the body is dynamic and the\n  /// fixture has positive density.\n  /// All fixtures attached to a body are implicitly destroyed when the body is destroyed.\n  /// @param fixture the fixture to be removed.\n  /// @warning This function is locked during callbacks.\n  public DestroyFixture(fixture: b2Fixture): void {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    // DEBUG: b2Assert(fixture.m_body === this);\n\n    // Remove the fixture from this body's singly linked list.\n    // DEBUG: b2Assert(this.m_fixtureCount > 0);\n    let node: b2Fixture | null = this.m_fixtureList;\n    let ppF: b2Fixture | null = null;\n    // DEBUG: let found: boolean = false;\n    while (node !== null) {\n      if (node === fixture) {\n        if (ppF) {\n          ppF.m_next = fixture.m_next;\n        } else {\n          this.m_fixtureList = fixture.m_next;\n        }\n        // DEBUG: found = true;\n        break;\n      }\n\n      ppF = node;\n      node = node.m_next;\n    }\n\n    // You tried to remove a shape that is not attached to this body.\n    // DEBUG: b2Assert(found);\n\n    // Destroy any contacts associated with the fixture.\n    let edge: b2ContactEdge | null = this.m_contactList;\n    while (edge) {\n      const c = edge.contact;\n      edge = edge.next;\n\n      const fixtureA: b2Fixture = c.GetFixtureA();\n      const fixtureB: b2Fixture = c.GetFixtureB();\n\n      if (fixture === fixtureA || fixture === fixtureB) {\n        // This destroys the contact and removes it from\n        // this body's contact list.\n        this.m_world.m_contactManager.Destroy(c);\n      }\n    }\n\n    if (this.m_enabledFlag) {\n      fixture.DestroyProxies();\n    }\n\n    // fixture.m_body = null;\n    fixture.m_next = null;\n    fixture.Reset();\n\n    --this.m_fixtureCount;\n\n    // Reset the mass data.\n    this.ResetMassData();\n  }\n\n  /// Set the position of the body's origin and rotation.\n  /// This breaks any contacts and wakes the other bodies.\n  /// Manipulating a body's transform may cause non-physical behavior.\n  /// @param position the world position of the body's local origin.\n  /// @param setAngle the world rotation in radians.\n  public SetTransformVec(position: XY, angle: number): void {\n    this.SetTransformXY(position.x, position.y, angle);\n  }\n\n  public SetTransformXY(x: number, y: number, angle: number): void {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    this.m_xf.q.SetAngle(angle);\n    this.m_xf.p.Set(x, y);\n    // #if B2_ENABLE_PARTICLE\n    this.m_xf0.Copy(this.m_xf);\n    // #endif\n\n    b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\n    this.m_sweep.a = angle;\n\n    this.m_sweep.c0.Copy(this.m_sweep.c);\n    this.m_sweep.a0 = angle;\n\n    for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n      f.SynchronizeProxies(this.m_xf, this.m_xf);\n    }\n\n    // Check for new contacts the next step\n    this.m_world.m_newContacts = true;\n  }\n\n  public SetTransform(xf: b2Transform): void {\n    this.SetTransformVec(xf.p, xf.GetAngle());\n  }\n\n  /// Get the body transform for the body's origin.\n  /// @return the world transform of the body's origin.\n  public GetTransform(): Readonly<b2Transform> {\n    return this.m_xf;\n  }\n\n  /// Get the world body origin position.\n  /// @return the world position of the body's origin.\n  public GetPosition(): Readonly<b2Vec2> {\n    return this.m_xf.p;\n  }\n\n  public SetPosition(position: XY): void {\n    this.SetTransformVec(position, this.GetAngle());\n  }\n\n  public SetPositionXY(x: number, y: number): void {\n    this.SetTransformXY(x, y, this.GetAngle());\n  }\n\n  /// Get the setAngle in radians.\n  /// @return the current world rotation setAngle in radians.\n  public GetAngle(): number {\n    return this.m_sweep.a;\n  }\n\n  public SetAngle(angle: number): void {\n    this.SetTransformVec(this.GetPosition(), angle);\n  }\n\n  /// Get the world position of the center of mass.\n  public GetWorldCenter(): Readonly<b2Vec2> {\n    return this.m_sweep.c;\n  }\n\n  /// Get the local position of the center of mass.\n  public GetLocalCenter(): Readonly<b2Vec2> {\n    return this.m_sweep.localCenter;\n  }\n\n  /// Set the linear velocity of the center of mass.\n  /// @param v the new linear velocity of the center of mass.\n  public SetLinearVelocity(v: XY): void {\n    if (this.m_type === b2BodyType.b2_staticBody) {\n      return;\n    }\n\n    if (b2Vec2.DotVV(v, v) > 0) {\n      this.SetAwake(true);\n    }\n\n    this.m_linearVelocity.Copy(v);\n  }\n\n  /// Get the linear velocity of the center of mass.\n  /// @return the linear velocity of the center of mass.\n  public GetLinearVelocity(): Readonly<b2Vec2> {\n    return this.m_linearVelocity;\n  }\n\n  /// Set the angular velocity.\n  /// @param omega the new angular velocity in radians/second.\n  public SetAngularVelocity(w: number): void {\n    if (this.m_type === b2BodyType.b2_staticBody) {\n      return;\n    }\n\n    if (w * w > 0) {\n      this.SetAwake(true);\n    }\n\n    this.m_angularVelocity = w;\n  }\n\n  /// Get the angular velocity.\n  /// @return the angular velocity in radians/second.\n  public GetAngularVelocity(): number {\n    return this.m_angularVelocity;\n  }\n\n  public GetDefinition(bd: b2BodyDef): b2BodyDef {\n    bd.type = this.GetType();\n    bd.allowSleep = this.m_autoSleepFlag;\n    bd.angle = this.GetAngle();\n    bd.angularDamping = this.m_angularDamping;\n    bd.gravityScale = this.m_gravityScale;\n    bd.angularVelocity = this.m_angularVelocity;\n    bd.fixedRotation = this.m_fixedRotationFlag;\n    bd.bullet = this.m_bulletFlag;\n    bd.awake = this.m_awakeFlag;\n    bd.linearDamping = this.m_linearDamping;\n    bd.linearVelocity.Copy(this.GetLinearVelocity());\n    bd.position.Copy(this.GetPosition());\n    bd.userData = this.GetUserData();\n    return bd;\n  }\n\n  /// Apply a force at a world point. If the force is not\n  /// applied at the center of mass, it will generate a torque and\n  /// affect the angular velocity. This wakes up the body.\n  /// @param force the world force vector, usually in Newtons (N).\n  /// @param point the world position of the point of application.\n  /// @param wake also wake up the body\n  public ApplyForce(force: XY, point: XY, wake: boolean = true): void {\n    if (this.m_type !== b2BodyType.b2_dynamicBody) {\n      return;\n    }\n\n    if (wake && !this.m_awakeFlag) {\n      this.SetAwake(true);\n    }\n\n    // Don't accumulate a force if the body is sleeping.\n    if (this.m_awakeFlag) {\n      this.m_force.x += force.x;\n      this.m_force.y += force.y;\n      this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\n    }\n  }\n\n  /// Apply a force to the center of mass. This wakes up the body.\n  /// @param force the world force vector, usually in Newtons (N).\n  /// @param wake also wake up the body\n  public ApplyForceToCenter(force: XY, wake: boolean = true): void {\n    if (this.m_type !== b2BodyType.b2_dynamicBody) {\n      return;\n    }\n\n    if (wake && !this.m_awakeFlag) {\n      this.SetAwake(true);\n    }\n\n    // Don't accumulate a force if the body is sleeping.\n    if (this.m_awakeFlag) {\n      this.m_force.x += force.x;\n      this.m_force.y += force.y;\n    }\n  }\n\n  /// Apply a torque. This affects the angular velocity\n  /// without affecting the linear velocity of the center of mass.\n  /// @param torque about the z-axis (out of the screen), usually in N-m.\n  /// @param wake also wake up the body\n  public ApplyTorque(torque: number, wake: boolean = true): void {\n    if (this.m_type !== b2BodyType.b2_dynamicBody) {\n      return;\n    }\n\n    if (wake && !this.m_awakeFlag) {\n      this.SetAwake(true);\n    }\n\n    // Don't accumulate a force if the body is sleeping.\n    if (this.m_awakeFlag) {\n      this.m_torque += torque;\n    }\n  }\n\n  /// Apply an impulse at a point. This immediately modifies the velocity.\n  /// It also modifies the angular velocity if the point of application\n  /// is not at the center of mass. This wakes up the body.\n  /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\n  /// @param point the world position of the point of application.\n  /// @param wake also wake up the body\n  public ApplyLinearImpulse(impulse: XY, point: XY, wake: boolean = true): void {\n    if (this.m_type !== b2BodyType.b2_dynamicBody) {\n      return;\n    }\n\n    if (wake && !this.m_awakeFlag) {\n      this.SetAwake(true);\n    }\n\n    // Don't accumulate a force if the body is sleeping.\n    if (this.m_awakeFlag) {\n      this.m_linearVelocity.x += this.m_invMass * impulse.x;\n      this.m_linearVelocity.y += this.m_invMass * impulse.y;\n      this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\n    }\n  }\n\n  /// Apply an impulse at the center of gravity. This immediately modifies the velocity.\n  /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\n  /// @param wake also wake up the body\n  public ApplyLinearImpulseToCenter(impulse: XY, wake: boolean = true): void {\n    if (this.m_type !== b2BodyType.b2_dynamicBody) {\n      return;\n    }\n\n    if (wake && !this.m_awakeFlag) {\n      this.SetAwake(true);\n    }\n\n    // Don't accumulate a force if the body is sleeping.\n    if (this.m_awakeFlag) {\n      this.m_linearVelocity.x += this.m_invMass * impulse.x;\n      this.m_linearVelocity.y += this.m_invMass * impulse.y;\n    }\n  }\n\n  /// Apply an angular impulse.\n  /// @param impulse the angular impulse in units of kg*m*m/s\n  /// @param wake also wake up the body\n  public ApplyAngularImpulse(impulse: number, wake: boolean = true): void {\n    if (this.m_type !== b2BodyType.b2_dynamicBody) {\n      return;\n    }\n\n    if (wake && !this.m_awakeFlag) {\n      this.SetAwake(true);\n    }\n\n    // Don't accumulate a force if the body is sleeping.\n    if (this.m_awakeFlag) {\n      this.m_angularVelocity += this.m_invI * impulse;\n    }\n  }\n\n  /// Get the total mass of the body.\n  /// @return the mass, usually in kilograms (kg).\n  public GetMass(): number {\n    return this.m_mass;\n  }\n\n  /// Get the rotational inertia of the body about the local origin.\n  /// @return the rotational inertia, usually in kg-m^2.\n  public GetInertia(): number {\n    return this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\n  }\n\n  /// Get the mass data of the body.\n  /// @return a struct containing the mass, inertia and center of the body.\n  public GetMassData(data: b2MassData): b2MassData {\n    data.mass = this.m_mass;\n    data.I = this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\n    data.center.Copy(this.m_sweep.localCenter);\n    return data;\n  }\n\n  /// Set the mass properties to override the mass properties of the fixtures.\n  /// Note that this changes the center of mass position.\n  /// Note that creating or destroying fixtures can also alter the mass.\n  /// This function has no effect if the body isn't dynamic.\n  /// @param massData the mass properties.\n  private static SetMassData_s_oldCenter: b2Vec2 = new b2Vec2();\n  public SetMassData(massData: b2MassData): void {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    if (this.m_type !== b2BodyType.b2_dynamicBody) {\n      return;\n    }\n\n    this.m_invMass = 0;\n    this.m_I = 0;\n    this.m_invI = 0;\n\n    this.m_mass = massData.mass;\n    if (this.m_mass <= 0) {\n      this.m_mass = 1;\n    }\n\n    this.m_invMass = 1 / this.m_mass;\n\n    if (massData.I > 0 && !this.m_fixedRotationFlag) {\n      this.m_I = massData.I - this.m_mass * b2Vec2.DotVV(massData.center, massData.center);\n      // DEBUG: b2Assert(this.m_I > 0);\n      this.m_invI = 1 / this.m_I;\n    }\n\n    // Move center of mass.\n    const oldCenter: b2Vec2 = b2Body.SetMassData_s_oldCenter.Copy(this.m_sweep.c);\n    this.m_sweep.localCenter.Copy(massData.center);\n    b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\n    this.m_sweep.c0.Copy(this.m_sweep.c);\n\n    // Update center of mass velocity.\n    b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\n  }\n\n  /// This resets the mass properties to the sum of the mass properties of the fixtures.\n  /// This normally does not need to be called unless you called SetMassData to override\n  /// the mass and you later want to reset the mass.\n  private static ResetMassData_s_localCenter: b2Vec2 = new b2Vec2();\n  private static ResetMassData_s_oldCenter: b2Vec2 = new b2Vec2();\n  private static ResetMassData_s_massData: b2MassData = new b2MassData();\n  public ResetMassData(): void {\n    // Compute mass data from shapes. Each shape has its own density.\n    this.m_mass = 0;\n    this.m_invMass = 0;\n    this.m_I = 0;\n    this.m_invI = 0;\n    this.m_sweep.localCenter.SetZero();\n\n    // Static and kinematic bodies have zero mass.\n    if (this.m_type === b2BodyType.b2_staticBody || this.m_type === b2BodyType.b2_kinematicBody) {\n      this.m_sweep.c0.Copy(this.m_xf.p);\n      this.m_sweep.c.Copy(this.m_xf.p);\n      this.m_sweep.a0 = this.m_sweep.a;\n      return;\n    }\n\n    // DEBUG: b2Assert(this.m_type === b2BodyType.b2_dynamicBody);\n\n    // Accumulate mass over all fixtures.\n    const localCenter: b2Vec2 = b2Body.ResetMassData_s_localCenter.SetZero();\n    for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n      if (f.m_density === 0) {\n        continue;\n      }\n\n      const massData: b2MassData = f.GetMassData(b2Body.ResetMassData_s_massData);\n      this.m_mass += massData.mass;\n      localCenter.x += massData.center.x * massData.mass;\n      localCenter.y += massData.center.y * massData.mass;\n      this.m_I += massData.I;\n    }\n\n    // Compute center of mass.\n    if (this.m_mass > 0) {\n      this.m_invMass = 1 / this.m_mass;\n      localCenter.x *= this.m_invMass;\n      localCenter.y *= this.m_invMass;\n    }\n\n    if (this.m_I > 0 && !this.m_fixedRotationFlag) {\n      // Center the inertia about the center of mass.\n      this.m_I -= this.m_mass * b2Vec2.DotVV(localCenter, localCenter);\n      // DEBUG: b2Assert(this.m_I > 0);\n      this.m_invI = 1 / this.m_I;\n    } else {\n      this.m_I = 0;\n      this.m_invI = 0;\n    }\n\n    // Move center of mass.\n    const oldCenter: b2Vec2 = b2Body.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);\n    this.m_sweep.localCenter.Copy(localCenter);\n    b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\n    this.m_sweep.c0.Copy(this.m_sweep.c);\n\n    // Update center of mass velocity.\n    b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\n  }\n\n  /// Get the world coordinates of a point given the local coordinates.\n  /// @param localPoint a point on the body measured relative the the body's origin.\n  /// @return the same point expressed in world coordinates.\n  public GetWorldPoint<T extends XY>(localPoint: XY, out: T): T {\n    return b2Transform.MulXV(this.m_xf, localPoint, out);\n  }\n\n  /// Get the world coordinates of a vector given the local coordinates.\n  /// @param localVector a vector fixed in the body.\n  /// @return the same vector expressed in world coordinates.\n  public GetWorldVector<T extends XY>(localVector: XY, out: T): T {\n    return b2Rot.MulRV(this.m_xf.q, localVector, out);\n  }\n\n  /// Gets a local point relative to the body's origin given a world point.\n  /// @param a point in world coordinates.\n  /// @return the corresponding local point relative to the body's origin.\n  public GetLocalPoint<T extends XY>(worldPoint: XY, out: T): T {\n    return b2Transform.MulTXV(this.m_xf, worldPoint, out);\n  }\n\n  /// Gets a local vector given a world vector.\n  /// @param a vector in world coordinates.\n  /// @return the corresponding local vector.\n  public GetLocalVector<T extends XY>(worldVector: XY, out: T): T {\n    return b2Rot.MulTRV(this.m_xf.q, worldVector, out);\n  }\n\n  /// Get the world linear velocity of a world point attached to this body.\n  /// @param a point in world coordinates.\n  /// @return the world velocity of a point.\n  public GetLinearVelocityFromWorldPoint<T extends XY>(worldPoint: XY, out: T): T {\n    return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_sweep.c, b2Vec2.s_t0), out);\n  }\n\n  /// Get the world velocity of a local point.\n  /// @param a point in local coordinates.\n  /// @return the world velocity of a point.\n  public GetLinearVelocityFromLocalPoint<T extends XY>(localPoint: XY, out: T): T {\n    return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(localPoint, out), out);\n  }\n\n  /// Get the linear damping of the body.\n  public GetLinearDamping(): number {\n    return this.m_linearDamping;\n  }\n\n  /// Set the linear damping of the body.\n  public SetLinearDamping(linearDamping: number): void {\n    this.m_linearDamping = linearDamping;\n  }\n\n  /// Get the angular damping of the body.\n  public GetAngularDamping(): number {\n    return this.m_angularDamping;\n  }\n\n  /// Set the angular damping of the body.\n  public SetAngularDamping(angularDamping: number): void {\n    this.m_angularDamping = angularDamping;\n  }\n\n  /// Get the gravity scale of the body.\n  public GetGravityScale(): number {\n    return this.m_gravityScale;\n  }\n\n  /// Set the gravity scale of the body.\n  public SetGravityScale(scale: number): void {\n    this.m_gravityScale = scale;\n  }\n\n  /// Set the type of this body. This may alter the mass and velocity.\n  public SetType(type: b2BodyType): void {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    if (this.m_type === type) {\n      return;\n    }\n\n    this.m_type = type;\n\n    this.ResetMassData();\n\n    if (this.m_type === b2BodyType.b2_staticBody) {\n      this.m_linearVelocity.SetZero();\n      this.m_angularVelocity = 0;\n      this.m_sweep.a0 = this.m_sweep.a;\n      this.m_sweep.c0.Copy(this.m_sweep.c);\n      this.m_awakeFlag = false;\n      this.SynchronizeFixtures();\n    }\n\n    this.SetAwake(true);\n\n    this.m_force.SetZero();\n    this.m_torque = 0;\n\n    // Delete the attached contacts.\n    let ce: b2ContactEdge | null = this.m_contactList;\n    while (ce) {\n      const ce0: b2ContactEdge = ce;\n      ce = ce.next;\n      this.m_world.m_contactManager.Destroy(ce0.contact);\n    }\n    this.m_contactList = null;\n\n    // Touch the proxies so that new contacts will be created (when appropriate)\n    for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n      f.TouchProxies();\n    }\n  }\n\n  /// Get the type of this body.\n  public GetType(): b2BodyType {\n    return this.m_type;\n  }\n\n  /// Should this body be treated like a bullet for continuous collision detection?\n  public SetBullet(flag: boolean): void {\n    this.m_bulletFlag = flag;\n  }\n\n  /// Is this body treated like a bullet for continuous collision detection?\n  public IsBullet(): boolean {\n    return this.m_bulletFlag;\n  }\n\n  /// You can disable sleeping on this body. If you disable sleeping, the\n  /// body will be woken.\n  public SetSleepingAllowed(flag: boolean): void {\n    this.m_autoSleepFlag = flag;\n    if (!flag) {\n      this.SetAwake(true);\n    }\n  }\n\n  /// Is this body allowed to sleep\n  public IsSleepingAllowed(): boolean {\n    return this.m_autoSleepFlag;\n  }\n\n  /// Set the sleep state of the body. A sleeping body has very\n  /// low CPU cost.\n  /// @param flag set to true to wake the body, false to put it to sleep.\n  public SetAwake(flag: boolean): void {\n    if (this.m_type === b2BodyType.b2_staticBody) {\n      return;\n    }\n    if (flag) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0;\n    } else {\n      this.m_awakeFlag = false;\n      this.m_sleepTime = 0;\n      this.m_linearVelocity.SetZero();\n      this.m_angularVelocity = 0;\n      this.m_force.SetZero();\n      this.m_torque = 0;\n    }\n  }\n\n  /// Get the sleeping state of this body.\n  /// @return true if the body is sleeping.\n  public IsAwake(): boolean {\n    return this.m_awakeFlag;\n  }\n\n  /// Allow a body to be disabled. A disabled body is not simulated and cannot\n  /// be collided with or woken up.\n  /// If you pass a flag of true, all fixtures will be added to the broad-phase.\n  /// If you pass a flag of false, all fixtures will be removed from the\n  /// broad-phase and all contacts will be destroyed.\n  /// Fixtures and joints are otherwise unaffected. You may continue\n  /// to create/destroy fixtures and joints on disabled bodies.\n  /// Fixtures on a disabled body are implicitly disabled and will\n  /// not participate in collisions, ray-casts, or queries.\n  /// Joints connected to a disabled body are implicitly disabled.\n  /// An diabled body is still owned by a b2World object and remains\n  /// in the body list.\n  public SetEnabled(flag: boolean): void {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    if (flag === this.IsEnabled()) {\n      return;\n    }\n\n    this.m_enabledFlag = flag;\n\n    if (flag) {\n      // Create all proxies.\n      for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n        f.CreateProxies();\n      }\n      // Contacts are created at the beginning of the next\n      this.m_world.m_newContacts = true;\n    } else {\n      // Destroy all proxies.\n      for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n        f.DestroyProxies();\n      }\n      // Destroy the attached contacts.\n      let ce: b2ContactEdge | null = this.m_contactList;\n      while (ce) {\n        const ce0: b2ContactEdge = ce;\n        ce = ce.next;\n        this.m_world.m_contactManager.Destroy(ce0.contact);\n      }\n      this.m_contactList = null;\n    }\n  }\n\n  /// Get the active state of the body.\n  public IsEnabled(): boolean {\n    return this.m_enabledFlag;\n  }\n\n  /// Set this body to have fixed rotation. This causes the mass\n  /// to be reset.\n  public SetFixedRotation(flag: boolean): void {\n    if (this.m_fixedRotationFlag === flag) {\n      return;\n    }\n\n    this.m_fixedRotationFlag = flag;\n\n    this.m_angularVelocity = 0;\n\n    this.ResetMassData();\n  }\n\n  /// Does this body have fixed rotation?\n  public IsFixedRotation(): boolean {\n    return this.m_fixedRotationFlag;\n  }\n\n  /// Get the list of all fixtures attached to this body.\n  public GetFixtureList(): b2Fixture | null {\n    return this.m_fixtureList;\n  }\n\n  /// Get the list of all joints attached to this body.\n  public GetJointList(): b2JointEdge | null {\n    return this.m_jointList;\n  }\n\n  /// Get the list of all contacts attached to this body.\n  /// @warning this list changes during the time step and you may\n  /// miss some collisions if you don't use b2ContactListener.\n  public GetContactList(): b2ContactEdge | null {\n    return this.m_contactList;\n  }\n\n  /// Get the next body in the world's body list.\n  public GetNext(): b2Body | null {\n    return this.m_next;\n  }\n\n  /// Get the user data pointer that was provided in the body definition.\n  public GetUserData(): any {\n    return this.m_userData;\n  }\n\n  /// Set the user data. Use this to store your application specific data.\n  public SetUserData(data: any): void {\n    this.m_userData = data;\n  }\n\n  /// Get the parent world of this body.\n  public GetWorld(): b2World {\n    return this.m_world;\n  }\n\n  /// Dump this body to a file\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    const bodyIndex: number = this.m_islandIndex;\n\n    log(\"{\\n\");\n    log(\"  const bd: b2BodyDef = new b2BodyDef();\\n\");\n    let type_str: string = \"\";\n    switch (this.m_type) {\n      case b2BodyType.b2_staticBody:\n        type_str = \"b2BodyType.b2_staticBody\";\n        break;\n      case b2BodyType.b2_kinematicBody:\n        type_str = \"b2BodyType.b2_kinematicBody\";\n        break;\n      case b2BodyType.b2_dynamicBody:\n        type_str = \"b2BodyType.b2_dynamicBody\";\n        break;\n      default:\n        // DEBUG: b2Assert(false);\n        break;\n    }\n    log(\"  bd.type = %s;\\n\", type_str);\n    log(\"  bd.position.Set(%.15f, %.15f);\\n\", this.m_xf.p.x, this.m_xf.p.y);\n    log(\"  bd.setAngle = %.15f;\\n\", this.m_sweep.a);\n    log(\"  bd.linearVelocity.Set(%.15f, %.15f);\\n\", this.m_linearVelocity.x, this.m_linearVelocity.y);\n    log(\"  bd.angularVelocity = %.15f;\\n\", this.m_angularVelocity);\n    log(\"  bd.linearDamping = %.15f;\\n\", this.m_linearDamping);\n    log(\"  bd.angularDamping = %.15f;\\n\", this.m_angularDamping);\n    log(\"  bd.allowSleep = %s;\\n\", (this.m_autoSleepFlag) ? (\"true\") : (\"false\"));\n    log(\"  bd.awake = %s;\\n\", (this.m_awakeFlag) ? (\"true\") : (\"false\"));\n    log(\"  bd.fixedRotation = %s;\\n\", (this.m_fixedRotationFlag) ? (\"true\") : (\"false\"));\n    log(\"  bd.bullet = %s;\\n\", (this.m_bulletFlag) ? (\"true\") : (\"false\"));\n    log(\"  bd.active = %s;\\n\", (this.m_enabledFlag) ? (\"true\") : (\"false\"));\n    log(\"  bd.gravityScale = %.15f;\\n\", this.m_gravityScale);\n    log(\"\\n\");\n    log(\"  bodies[%d] = this.m_world.CreateBody(bd);\\n\", this.m_islandIndex);\n    log(\"\\n\");\n    for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n      log(\"  {\\n\");\n      f.Dump(log, bodyIndex);\n      log(\"  }\\n\");\n    }\n    log(\"}\\n\");\n  }\n\n  private static SynchronizeFixtures_s_xf1: b2Transform = new b2Transform();\n  public SynchronizeFixtures(): void {\n    if (this.m_awakeFlag) {\n      const xf1: b2Transform = b2Body.SynchronizeFixtures_s_xf1;\n      xf1.q.SetAngle(this.m_sweep.a0);\n      b2Rot.MulRV(xf1.q, this.m_sweep.localCenter, xf1.p);\n      b2Vec2.SubVV(this.m_sweep.c0, xf1.p, xf1.p);\n\n      for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n        f.SynchronizeProxies(xf1, this.m_xf);\n      }\n    } else {\n      for (let f: b2Fixture | null = this.m_fixtureList; f; f = f.m_next) {\n        f.SynchronizeProxies(this.m_xf, this.m_xf);\n      }\n    }\n  }\n\n  public SynchronizeTransform(): void {\n    this.m_xf.q.SetAngle(this.m_sweep.a);\n    b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\n    b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\n  }\n\n  // This is used to prevent connected bodies from colliding.\n  // It may lie, depending on the collideConnected flag.\n  public ShouldCollide(other: b2Body): boolean {\n    // At least one body should be dynamic or kinematic.\n    if (this.m_type === b2BodyType.b2_staticBody && other.m_type === b2BodyType.b2_staticBody) {\n      return false;\n    }\n    return this.ShouldCollideConnected(other);\n  }\n\n  public ShouldCollideConnected(other: b2Body): boolean {\n    // Does a joint prevent collision?\n    for (let jn: b2JointEdge | null = this.m_jointList; jn; jn = jn.next) {\n      if (jn.other === other) {\n        if (!jn.joint.m_collideConnected) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public Advance(alpha: number): void {\n    // Advance to the new safe time. This doesn't sync the broad-phase.\n    this.m_sweep.Advance(alpha);\n    this.m_sweep.c.Copy(this.m_sweep.c0);\n    this.m_sweep.a = this.m_sweep.a0;\n    this.m_xf.q.SetAngle(this.m_sweep.a);\n    b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\n    b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\n  }\n\n  // #if B2_ENABLE_CONTROLLER\n  public GetControllerList(): b2ControllerEdge | null {\n    return this.m_controllerList;\n  }\n\n  public GetControllerCount(): number {\n    return this.m_controllerCount;\n  }\n  // #endif\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform } from \"../common/b2_math\";\nimport { b2CollideEdgeAndCircle } from \"../collision/b2_collide_edge\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2ChainShape } from \"../collision/b2_chain_shape\";\nimport { b2CircleShape } from \"../collision/b2_circle_shape\";\nimport { b2EdgeShape } from \"../collision/b2_edge_shape\";\nimport { b2Contact } from \"./b2_contact\";\n\nexport class b2ChainAndCircleContact extends b2Contact<b2ChainShape, b2CircleShape> {\n  public static Create(): b2Contact {\n    return new b2ChainAndCircleContact();\n  }\n\n  public static Destroy(contact: b2Contact): void {\n  }\n\n  private static Evaluate_s_edge = new b2EdgeShape();\n  public Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void {\n    const edge: b2EdgeShape = b2ChainAndCircleContact.Evaluate_s_edge;\n    this.GetShapeA().GetChildEdge(edge, this.m_indexA);\n    b2CollideEdgeAndCircle(manifold, edge, xfA, this.GetShapeB(), xfB);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform } from \"../common/b2_math\";\nimport { b2CollideEdgeAndPolygon } from \"../collision/b2_collide_edge\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2ChainShape } from \"../collision/b2_chain_shape\";\nimport { b2EdgeShape } from \"../collision/b2_edge_shape\";\nimport { b2PolygonShape } from \"../collision/b2_polygon_shape\";\nimport { b2Contact } from \"./b2_contact\";\n\nexport class b2ChainAndPolygonContact extends b2Contact<b2ChainShape, b2PolygonShape> {\n  public static Create(): b2Contact {\n    return new b2ChainAndPolygonContact();\n  }\n\n  public static Destroy(contact: b2Contact): void {\n  }\n\n  private static Evaluate_s_edge = new b2EdgeShape();\n  public Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void {\n    const edge: b2EdgeShape = b2ChainAndPolygonContact.Evaluate_s_edge;\n    this.GetShapeA().GetChildEdge(edge, this.m_indexA);\n    b2CollideEdgeAndPolygon(manifold, edge, xfA, this.GetShapeB(), xfB);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform } from \"../common/b2_math\";\nimport { b2CollideCircles } from \"../collision/b2_collide_circle\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2CircleShape } from \"../collision/b2_circle_shape\";\nimport { b2Contact } from \"./b2_contact\";\n\nexport class b2CircleContact extends b2Contact<b2CircleShape, b2CircleShape> {\n  public static Create(): b2Contact {\n    return new b2CircleContact();\n  }\n\n  public static Destroy(contact: b2Contact): void {\n  }\n\n  public Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void {\n    b2CollideCircles(manifold, this.GetShapeA(), xfA, this.GetShapeB(), xfB);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2_linearSlop } from \"../common/b2_common\";\nimport { b2Sqrt, b2Transform, b2Sweep } from \"../common/b2_math\";\nimport { b2Manifold, b2WorldManifold, b2ManifoldPoint, b2ContactID } from \"../collision/b2_collision\";\nimport { b2TestOverlapShape } from \"../collision/b2_collision\";\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput } from \"../collision/b2_time_of_impact\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Fixture } from \"./b2_fixture\";\nimport { b2Shape } from \"../collision/b2_shape\";\nimport { b2ContactListener } from \"./b2_world_callbacks\";\n\n/// Friction mixing law. The idea is to allow either fixture to drive the friction to zero.\n/// For example, anything slides on ice.\nexport function b2MixFriction(friction1: number, friction2: number): number {\n  return b2Sqrt(friction1 * friction2);\n}\n\n/// Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface.\n/// For example, a superball bounces on anything.\nexport function b2MixRestitution(restitution1: number, restitution2: number): number {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\n/// Restitution mixing law. This picks the lowest value.\nexport function b2MixRestitutionThreshold(threshold1: number, threshold2: number): number {\n  return threshold1 < threshold2 ? threshold1 : threshold2;\n}\n\nexport class b2ContactEdge {\n  private _other: b2Body | null = null; ///< provides quick access to the other body attached.\n  public get other(): b2Body {\n    if (this._other === null) { throw new Error(); }\n    return this._other;\n  }\n  public set other(value: b2Body) {\n    if (this._other !== null) { throw new Error(); }\n    this._other = value;\n  }\n  public readonly contact: b2Contact; ///< the contact\n  public prev: b2ContactEdge | null = null; ///< the previous contact edge in the body's contact list\n  public next: b2ContactEdge | null = null; ///< the next contact edge in the body's contact list\n  constructor(contact: b2Contact) {\n    this.contact = contact;\n  }\n  public Reset(): void {\n    this._other = null;\n    this.prev = null;\n    this.next = null;\n  }\n}\n\nexport abstract class b2Contact<A extends b2Shape = b2Shape, B extends b2Shape = b2Shape> {\n  public m_islandFlag: boolean = false; /// Used when crawling contact graph when forming islands.\n  public m_touchingFlag: boolean = false; /// Set when the shapes are touching.\n  public m_enabledFlag: boolean = false; /// This contact can be disabled (by user)\n  public m_filterFlag: boolean = false; /// This contact needs filtering because a fixture filter was changed.\n  public m_bulletHitFlag: boolean = false; /// This bullet contact had a TOI event\n  public m_toiFlag: boolean = false; /// This contact has a valid TOI in m_toi\n\n  public m_prev: b2Contact | null = null;\n  public m_next: b2Contact | null = null;\n\n  public readonly m_nodeA: b2ContactEdge = new b2ContactEdge(this);\n  public readonly m_nodeB: b2ContactEdge = new b2ContactEdge(this);\n\n  public m_fixtureA!: b2Fixture;\n  public m_fixtureB!: b2Fixture;\n\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n\n  public m_manifold: b2Manifold = new b2Manifold(); // TODO: readonly\n\n  public m_toiCount: number = 0;\n  public m_toi: number = 0;\n\n  public m_friction: number = 0;\n  public m_restitution: number = 0;\n  public m_restitutionThreshold: number = 0;\n\n  public m_tangentSpeed: number = 0;\n\n  public m_oldManifold: b2Manifold = new b2Manifold(); // TODO: readonly\n\n  public GetManifold() {\n    return this.m_manifold;\n  }\n\n  public GetWorldManifold(worldManifold: b2WorldManifold): void {\n    const bodyA: b2Body = this.m_fixtureA.GetBody();\n    const bodyB: b2Body = this.m_fixtureB.GetBody();\n    const shapeA: A = this.GetShapeA();\n    const shapeB: B = this.GetShapeB();\n    worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\n  }\n\n  public IsTouching(): boolean {\n    return this.m_touchingFlag;\n  }\n\n  public SetEnabled(flag: boolean): void {\n    this.m_enabledFlag = flag;\n  }\n\n  public IsEnabled(): boolean {\n    return this.m_enabledFlag;\n  }\n\n  public GetNext(): b2Contact | null {\n    return this.m_next;\n  }\n\n  public GetFixtureA(): b2Fixture {\n    return this.m_fixtureA;\n  }\n\n  public GetChildIndexA(): number {\n    return this.m_indexA;\n  }\n\n  public GetShapeA(): A {\n    return this.m_fixtureA.GetShape() as A;\n  }\n\n  public GetFixtureB(): b2Fixture {\n    return this.m_fixtureB;\n  }\n\n  public GetChildIndexB(): number {\n    return this.m_indexB;\n  }\n\n  public GetShapeB(): B {\n    return this.m_fixtureB.GetShape() as B;\n  }\n\n  public abstract Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void;\n\n  public FlagForFiltering(): void {\n    this.m_filterFlag = true;\n  }\n\n  public SetFriction(friction: number): void {\n    this.m_friction = friction;\n  }\n\n  public GetFriction(): number {\n    return this.m_friction;\n  }\n\n  public ResetFriction(): void {\n    this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\n  }\n\n  public SetRestitution(restitution: number): void {\n    this.m_restitution = restitution;\n  }\n\n  public GetRestitution(): number {\n    return this.m_restitution;\n  }\n\n  public ResetRestitution(): void {\n    this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\n  }\n\n  /// Override the default restitution velocity threshold mixture. You can call this in b2ContactListener::PreSolve.\n  /// The value persists until you set or reset.\n  public SetRestitutionThreshold(threshold: number): void {\n    this.m_restitutionThreshold = threshold;\n  }\n\n  /// Get the restitution threshold.\n  public GetRestitutionThreshold(): number {\n    return this.m_restitutionThreshold;\n  }\n\n  /// Reset the restitution threshold to the default value.\n  public ResetRestitutionThreshold(): void {\n    this.m_restitutionThreshold = b2MixRestitutionThreshold(this.m_fixtureA.m_restitutionThreshold, this.m_fixtureB.m_restitutionThreshold);\n  }\n\n  public SetTangentSpeed(speed: number): void {\n    this.m_tangentSpeed = speed;\n  }\n\n  public GetTangentSpeed(): number {\n    return this.m_tangentSpeed;\n  }\n\n  public Reset(fixtureA: b2Fixture, indexA: number, fixtureB: b2Fixture, indexB: number): void {\n    this.m_islandFlag = false;\n    this.m_touchingFlag = false;\n    this.m_enabledFlag = true;\n    this.m_filterFlag = false;\n    this.m_bulletHitFlag = false;\n    this.m_toiFlag = false;\n\n    this.m_fixtureA = fixtureA;\n    this.m_fixtureB = fixtureB;\n\n    this.m_indexA = indexA;\n    this.m_indexB = indexB;\n\n    this.m_manifold.pointCount = 0;\n\n    this.m_prev = null;\n    this.m_next = null;\n\n    this.m_nodeA.Reset();\n    this.m_nodeB.Reset();\n\n    this.m_toiCount = 0;\n\n    this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\n    this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\n    this.m_restitutionThreshold = b2MixRestitutionThreshold(this.m_fixtureA.m_restitutionThreshold, this.m_fixtureB.m_restitutionThreshold);\n  }\n\n  public Update(listener: b2ContactListener): void {\n    const tManifold: b2Manifold = this.m_oldManifold;\n    this.m_oldManifold = this.m_manifold;\n    this.m_manifold = tManifold;\n\n    // Re-enable this contact.\n    this.m_enabledFlag = true;\n\n    let touching: boolean = false;\n    const wasTouching: boolean = this.m_touchingFlag;\n\n    const sensorA: boolean = this.m_fixtureA.IsSensor();\n    const sensorB: boolean = this.m_fixtureB.IsSensor();\n    const sensor: boolean = sensorA || sensorB;\n\n    const bodyA: b2Body = this.m_fixtureA.GetBody();\n    const bodyB: b2Body = this.m_fixtureB.GetBody();\n    const xfA: b2Transform = bodyA.GetTransform();\n    const xfB: b2Transform = bodyB.GetTransform();\n\n    // Is this contact a sensor?\n    if (sensor) {\n      const shapeA: A = this.GetShapeA();\n      const shapeB: B = this.GetShapeB();\n      touching = b2TestOverlapShape(shapeA, this.m_indexA, shapeB, this.m_indexB, xfA, xfB);\n\n      // Sensors don't generate manifolds.\n      this.m_manifold.pointCount = 0;\n    } else {\n      this.Evaluate(this.m_manifold, xfA, xfB);\n      touching = this.m_manifold.pointCount > 0;\n\n      // Match old contact ids to new contact ids and copy the\n      // stored impulses to warm start the solver.\n      for (let i: number = 0; i < this.m_manifold.pointCount; ++i) {\n        const mp2: b2ManifoldPoint = this.m_manifold.points[i];\n        mp2.normalImpulse = 0;\n        mp2.tangentImpulse = 0;\n        const id2: b2ContactID = mp2.id;\n\n        for (let j: number = 0; j < this.m_oldManifold.pointCount; ++j) {\n          const mp1: b2ManifoldPoint = this.m_oldManifold.points[j];\n\n          if (mp1.id.key === id2.key) {\n            mp2.normalImpulse = mp1.normalImpulse;\n            mp2.tangentImpulse = mp1.tangentImpulse;\n            break;\n          }\n        }\n      }\n\n      if (touching !== wasTouching) {\n        bodyA.SetAwake(true);\n        bodyB.SetAwake(true);\n      }\n    }\n\n    this.m_touchingFlag = touching;\n\n    if (!wasTouching && touching && listener) {\n      listener.BeginContact(this);\n    }\n\n    if (wasTouching && !touching && listener) {\n      listener.EndContact(this);\n    }\n\n    if (!sensor && touching && listener) {\n      listener.PreSolve(this, this.m_oldManifold);\n    }\n  }\n\n  private static ComputeTOI_s_input = new b2TOIInput();\n  private static ComputeTOI_s_output = new b2TOIOutput();\n  public ComputeTOI(sweepA: b2Sweep, sweepB: b2Sweep): number {\n    const input: b2TOIInput = b2Contact.ComputeTOI_s_input;\n    input.proxyA.SetShape(this.GetShapeA(), this.m_indexA);\n    input.proxyB.SetShape(this.GetShapeB(), this.m_indexB);\n    input.sweepA.Copy(sweepA);\n    input.sweepB.Copy(sweepB);\n    input.tMax = b2_linearSlop;\n\n    const output: b2TOIOutput = b2Contact.ComputeTOI_s_output;\n\n    b2TimeOfImpact(output, input);\n\n    return output.t;\n  }\n}\n",
    "// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2ShapeType } from \"../collision/b2_shape\";\nimport { b2Contact } from \"./b2_contact\";\nimport { b2CircleContact } from \"./b2_circle_contact\";\nimport { b2PolygonContact } from \"./b2_polygon_contact\";\nimport { b2PolygonAndCircleContact } from \"./b2_polygon_circle_contact\";\nimport { b2EdgeAndCircleContact } from \"./b2_edge_circle_contact\";\nimport { b2EdgeAndPolygonContact } from \"./b2_edge_polygon_contact\";\nimport { b2ChainAndCircleContact } from \"./b2_chain_circle_contact\";\nimport { b2ChainAndPolygonContact } from \"./b2_chain_polygon_contact\";\nimport { b2Fixture } from \"./b2_fixture\";\n\nexport class b2ContactRegister {\n  public pool: b2Contact[] = [];\n  public createFcn: (() => b2Contact) | null = null;\n  public destroyFcn: ((contact: b2Contact) => void) | null = null;\n  public primary: boolean = false;\n}\n\nexport class b2ContactFactory {\n  public readonly m_registers: b2ContactRegister[][] = [];\n\n  constructor() {\n    this.InitializeRegisters();\n  }\n\n  private AddType(createFcn: () => b2Contact, destroyFcn: (contact: b2Contact) => void, typeA: b2ShapeType, typeB: b2ShapeType): void {\n    const pool: b2Contact[] = [];\n\n    function poolCreateFcn(): b2Contact {\n      return pool.pop() || createFcn();\n    }\n\n    function poolDestroyFcn(contact: b2Contact): void {\n      pool.push(contact);\n    }\n\n    this.m_registers[typeA][typeB].pool = pool;\n    this.m_registers[typeA][typeB].createFcn = poolCreateFcn; // createFcn;\n    this.m_registers[typeA][typeB].destroyFcn = poolDestroyFcn; // destroyFcn;\n    this.m_registers[typeA][typeB].primary = true;\n\n    if (typeA !== typeB) {\n      this.m_registers[typeB][typeA].pool = pool;\n      this.m_registers[typeB][typeA].createFcn = poolCreateFcn; // createFcn;\n      this.m_registers[typeB][typeA].destroyFcn = poolDestroyFcn; // destroyFcn;\n      this.m_registers[typeB][typeA].primary = false;\n    }\n  }\n\n  private InitializeRegisters(): void {\n    for (let i: number = 0; i < b2ShapeType.e_shapeTypeCount; i++) {\n      this.m_registers[i] = [];\n      for (let j: number = 0; j < b2ShapeType.e_shapeTypeCount; j++) {\n        this.m_registers[i][j] = new b2ContactRegister();\n      }\n    }\n\n    this.AddType(          b2CircleContact.Create,           b2CircleContact.Destroy, b2ShapeType.e_circleShape,  b2ShapeType.e_circleShape);\n    this.AddType(b2PolygonAndCircleContact.Create, b2PolygonAndCircleContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_circleShape);\n    this.AddType(         b2PolygonContact.Create,          b2PolygonContact.Destroy, b2ShapeType.e_polygonShape, b2ShapeType.e_polygonShape);\n    this.AddType(   b2EdgeAndCircleContact.Create,    b2EdgeAndCircleContact.Destroy, b2ShapeType.e_edgeShape,    b2ShapeType.e_circleShape);\n    this.AddType(  b2EdgeAndPolygonContact.Create,   b2EdgeAndPolygonContact.Destroy, b2ShapeType.e_edgeShape,    b2ShapeType.e_polygonShape);\n    this.AddType(  b2ChainAndCircleContact.Create,   b2ChainAndCircleContact.Destroy, b2ShapeType.e_chainShape,   b2ShapeType.e_circleShape);\n    this.AddType( b2ChainAndPolygonContact.Create,  b2ChainAndPolygonContact.Destroy, b2ShapeType.e_chainShape,   b2ShapeType.e_polygonShape);\n  }\n\n  public Create(fixtureA: b2Fixture, indexA: number, fixtureB: b2Fixture, indexB: number): b2Contact | null {\n    const typeA: b2ShapeType = fixtureA.GetType();\n    const typeB: b2ShapeType = fixtureB.GetType();\n\n    // DEBUG: b2Assert(0 <= typeA && typeA < b2ShapeType.e_shapeTypeCount);\n    // DEBUG: b2Assert(0 <= typeB && typeB < b2ShapeType.e_shapeTypeCount);\n\n    const reg: b2ContactRegister = this.m_registers[typeA][typeB];\n    if (reg.createFcn) {\n      const c: b2Contact = reg.createFcn();\n      if (reg.primary) {\n        c.Reset(fixtureA, indexA, fixtureB, indexB);\n      } else {\n        c.Reset(fixtureB, indexB, fixtureA, indexA);\n      }\n      return c;\n    } else {\n      return null;\n    }\n  }\n\n  public Destroy(contact: b2Contact): void {\n    const typeA: b2ShapeType = contact.m_fixtureA.GetType();\n    const typeB: b2ShapeType = contact.m_fixtureB.GetType();\n\n    // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\n    // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\n\n    const reg: b2ContactRegister = this.m_registers[typeA][typeB];\n    if (reg.destroyFcn) {\n      reg.destroyFcn(contact);\n    }\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2BroadPhase } from \"../collision/b2_broad_phase\";\nimport { b2TreeNode } from \"../collision/b2_dynamic_tree\";\nimport { b2TestOverlapAABB } from \"../collision/b2_collision\";\nimport { b2Contact, b2ContactEdge } from \"./b2_contact\";\nimport { b2ContactFactory } from \"./b2_contact_factory\";\nimport { b2Body, b2BodyType } from \"./b2_body\";\nimport { b2Fixture, b2FixtureProxy } from \"./b2_fixture\";\nimport { b2ContactFilter, b2ContactListener } from \"./b2_world_callbacks\";\n\n// Delegate of b2World.\nexport class b2ContactManager {\n  public readonly m_broadPhase: b2BroadPhase<b2FixtureProxy> = new b2BroadPhase<b2FixtureProxy>();\n  public m_contactList: b2Contact | null = null;\n  public m_contactCount: number = 0;\n  public m_contactFilter: b2ContactFilter = b2ContactFilter.b2_defaultFilter;\n  public m_contactListener: b2ContactListener = b2ContactListener.b2_defaultListener;\n\n  public readonly m_contactFactory: b2ContactFactory = new b2ContactFactory();\n\n  // Broad-phase callback.\n  public AddPair(proxyA: b2FixtureProxy, proxyB: b2FixtureProxy): void {\n    // DEBUG: b2Assert(proxyA instanceof b2FixtureProxy);\n    // DEBUG: b2Assert(proxyB instanceof b2FixtureProxy);\n\n    let fixtureA: b2Fixture = proxyA.fixture;\n    let fixtureB: b2Fixture = proxyB.fixture;\n\n    let indexA: number = proxyA.childIndex;\n    let indexB: number = proxyB.childIndex;\n\n    let bodyA: b2Body = fixtureA.GetBody();\n    let bodyB: b2Body = fixtureB.GetBody();\n\n    // Are the fixtures on the same body?\n    if (bodyA === bodyB) {\n      return;\n    }\n\n    // TODO_ERIN use a hash table to remove a potential bottleneck when both\n    // bodies have a lot of contacts.\n    // Does a contact already exist?\n    let edge: b2ContactEdge | null = bodyB.GetContactList();\n    while (edge) {\n      if (edge.other === bodyA) {\n        const fA: b2Fixture = edge.contact.GetFixtureA();\n        const fB: b2Fixture = edge.contact.GetFixtureB();\n        const iA: number = edge.contact.GetChildIndexA();\n        const iB: number = edge.contact.GetChildIndexB();\n\n        if (fA === fixtureA && fB === fixtureB && iA === indexA && iB === indexB) {\n          // A contact already exists.\n          return;\n        }\n\n        if (fA === fixtureB && fB === fixtureA && iA === indexB && iB === indexA) {\n          // A contact already exists.\n          return;\n        }\n      }\n\n      edge = edge.next;\n    }\n\n    // Check user filtering.\n    if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\n      return;\n    }\n\n    // Call the factory.\n    const c: b2Contact | null = this.m_contactFactory.Create(fixtureA, indexA, fixtureB, indexB);\n    if (c === null) {\n      return;\n    }\n\n    // Contact creation may swap fixtures.\n    fixtureA = c.GetFixtureA();\n    fixtureB = c.GetFixtureB();\n    indexA = c.GetChildIndexA();\n    indexB = c.GetChildIndexB();\n    bodyA = fixtureA.m_body;\n    bodyB = fixtureB.m_body;\n\n    // Insert into the world.\n    c.m_prev = null;\n    c.m_next = this.m_contactList;\n    if (this.m_contactList !== null) {\n      this.m_contactList.m_prev = c;\n    }\n    this.m_contactList = c;\n\n    // Connect to island graph.\n\n    // Connect to body A\n    c.m_nodeA.other = bodyB;\n\n    c.m_nodeA.prev = null;\n    c.m_nodeA.next = bodyA.m_contactList;\n    if (bodyA.m_contactList !== null) {\n      bodyA.m_contactList.prev = c.m_nodeA;\n    }\n    bodyA.m_contactList = c.m_nodeA;\n\n    // Connect to body B\n    c.m_nodeB.other = bodyA;\n\n    c.m_nodeB.prev = null;\n    c.m_nodeB.next = bodyB.m_contactList;\n    if (bodyB.m_contactList !== null) {\n      bodyB.m_contactList.prev = c.m_nodeB;\n    }\n    bodyB.m_contactList = c.m_nodeB;\n\n    ++this.m_contactCount;\n  }\n\n  public FindNewContacts(): void {\n    this.m_broadPhase.UpdatePairs((proxyA: b2FixtureProxy, proxyB: b2FixtureProxy): void => {\n      this.AddPair(proxyA, proxyB);\n    });\n  }\n\n  public Destroy(c: b2Contact): void {\n    const fixtureA: b2Fixture = c.GetFixtureA();\n    const fixtureB: b2Fixture = c.GetFixtureB();\n    const bodyA: b2Body = fixtureA.GetBody();\n    const bodyB: b2Body = fixtureB.GetBody();\n\n    if (this.m_contactListener && c.IsTouching()) {\n      this.m_contactListener.EndContact(c);\n    }\n\n    // Remove from the world.\n    if (c.m_prev) {\n      c.m_prev.m_next = c.m_next;\n    }\n\n    if (c.m_next) {\n      c.m_next.m_prev = c.m_prev;\n    }\n\n    if (c === this.m_contactList) {\n      this.m_contactList = c.m_next;\n    }\n\n    // Remove from body 1\n    if (c.m_nodeA.prev) {\n      c.m_nodeA.prev.next = c.m_nodeA.next;\n    }\n\n    if (c.m_nodeA.next) {\n      c.m_nodeA.next.prev = c.m_nodeA.prev;\n    }\n\n    if (c.m_nodeA === bodyA.m_contactList) {\n      bodyA.m_contactList = c.m_nodeA.next;\n    }\n\n    // Remove from body 2\n    if (c.m_nodeB.prev) {\n      c.m_nodeB.prev.next = c.m_nodeB.next;\n    }\n\n    if (c.m_nodeB.next) {\n      c.m_nodeB.next.prev = c.m_nodeB.prev;\n    }\n\n    if (c.m_nodeB === bodyB.m_contactList) {\n      bodyB.m_contactList = c.m_nodeB.next;\n    }\n\n    // moved this from b2ContactFactory:Destroy\n    if (c.m_manifold.pointCount > 0 &&\n      !fixtureA.IsSensor() &&\n      !fixtureB.IsSensor()) {\n      fixtureA.GetBody().SetAwake(true);\n      fixtureB.GetBody().SetAwake(true);\n    }\n\n    // Call the factory.\n    this.m_contactFactory.Destroy(c);\n    --this.m_contactCount;\n  }\n\n  // This is the top level collision call for the time step. Here\n  // all the narrow phase collision is processed for the world\n  // contact list.\n  public Collide(): void {\n    // Update awake contacts.\n    let c: b2Contact | null = this.m_contactList;\n    while (c) {\n      const fixtureA: b2Fixture = c.GetFixtureA();\n      const fixtureB: b2Fixture = c.GetFixtureB();\n      const indexA: number = c.GetChildIndexA();\n      const indexB: number = c.GetChildIndexB();\n      const bodyA: b2Body = fixtureA.GetBody();\n      const bodyB: b2Body = fixtureB.GetBody();\n\n      // Is this contact flagged for filtering?\n      if (c.m_filterFlag) {\n        // Check user filtering.\n        if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\n          const cNuke: b2Contact = c;\n          c = cNuke.m_next;\n          this.Destroy(cNuke);\n          continue;\n        }\n\n        // Clear the filtering flag.\n        c.m_filterFlag = false;\n      }\n\n      const activeA: boolean = bodyA.IsAwake() && bodyA.m_type !== b2BodyType.b2_staticBody;\n      const activeB: boolean = bodyB.IsAwake() && bodyB.m_type !== b2BodyType.b2_staticBody;\n\n      // At least one body must be awake and it must be dynamic or kinematic.\n      if (!activeA && !activeB) {\n        c = c.m_next;\n        continue;\n      }\n\n      const treeNodeA: b2TreeNode<b2FixtureProxy> = fixtureA.m_proxies[indexA].treeNode;\n      const treeNodeB: b2TreeNode<b2FixtureProxy> = fixtureB.m_proxies[indexB].treeNode;\n      const overlap: boolean = b2TestOverlapAABB(treeNodeA.aabb, treeNodeB.aabb);\n\n      // Here we destroy contacts that cease to overlap in the broad-phase.\n      if (!overlap) {\n        const cNuke: b2Contact = c;\n        c = cNuke.m_next;\n        this.Destroy(cNuke);\n        continue;\n      }\n\n      // The contact persists.\n      c.Update(this.m_contactListener);\n      c = c.m_next;\n    }\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_linearSlop, b2_maxManifoldPoints, b2_maxLinearCorrection, b2_baumgarte, b2_toiBaumgarte, b2MakeArray } from \"../common/b2_common\";\nimport { b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Rot, b2Transform } from \"../common/b2_math\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2ManifoldPoint } from \"../collision/b2_collision\";\nimport { b2WorldManifold } from \"../collision/b2_collision\";\nimport { b2ManifoldType } from \"../collision/b2_collision\";\nimport { b2Shape } from \"../collision/b2_shape\";\nimport { b2Contact } from \"./b2_contact\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Fixture } from \"./b2_fixture\";\nimport { b2TimeStep, b2Position, b2Velocity } from \"./b2_time_step\";\n\n// Solver debugging is normally disabled because the block solver sometimes has to deal with a poorly conditioned effective mass matrix.\n// #define B2_DEBUG_SOLVER 0\n\nexport let g_blockSolve: boolean = false;\nexport function get_g_blockSolve(): boolean { return g_blockSolve; }\nexport function set_g_blockSolve(value: boolean): void { g_blockSolve = value; }\n\nexport class b2VelocityConstraintPoint {\n  public readonly rA: b2Vec2 = new b2Vec2();\n  public readonly rB: b2Vec2 = new b2Vec2();\n  public normalImpulse: number = 0;\n  public tangentImpulse: number = 0;\n  public normalMass: number = 0;\n  public tangentMass: number = 0;\n  public velocityBias: number = 0;\n\n  public static MakeArray(length: number): b2VelocityConstraintPoint[] {\n    return b2MakeArray(length, (i: number) => new b2VelocityConstraintPoint());\n  }\n}\n\nexport class b2ContactVelocityConstraint {\n  public readonly points: b2VelocityConstraintPoint[] = b2VelocityConstraintPoint.MakeArray(b2_maxManifoldPoints);\n  public readonly normal: b2Vec2 = new b2Vec2();\n  public readonly tangent: b2Vec2 = new b2Vec2();\n  public readonly normalMass: b2Mat22 = new b2Mat22();\n  public readonly K: b2Mat22 = new b2Mat22();\n  public indexA: number = 0;\n  public indexB: number = 0;\n  public invMassA: number = 0;\n  public invMassB: number = 0;\n  public invIA: number = 0;\n  public invIB: number = 0;\n  public friction: number = 0;\n  public restitution: number = 0;\n  public threshold: number = 0;\n  public tangentSpeed: number = 0;\n  public pointCount: number = 0;\n  public contactIndex: number = 0;\n\n  public static MakeArray(length: number): b2ContactVelocityConstraint[] {\n    return b2MakeArray(length, (i: number) => new b2ContactVelocityConstraint());\n  }\n}\n\nexport class b2ContactPositionConstraint {\n  public readonly localPoints: b2Vec2[] = b2Vec2.MakeArray(b2_maxManifoldPoints);\n  public readonly localNormal: b2Vec2 = new b2Vec2();\n  public readonly localPoint: b2Vec2 = new b2Vec2();\n  public indexA: number = 0;\n  public indexB: number = 0;\n  public invMassA: number = 0;\n  public invMassB: number = 0;\n  public readonly localCenterA: b2Vec2 = new b2Vec2();\n  public readonly localCenterB: b2Vec2 = new b2Vec2();\n  public invIA: number = 0;\n  public invIB: number = 0;\n  public type: b2ManifoldType = b2ManifoldType.e_unknown;\n  public radiusA: number = 0;\n  public radiusB: number = 0;\n  public pointCount: number = 0;\n\n  public static MakeArray(length: number): b2ContactPositionConstraint[] {\n    return b2MakeArray(length, (i: number) => new b2ContactPositionConstraint());\n  }\n}\n\nexport class b2ContactSolverDef {\n  public readonly step: b2TimeStep = new b2TimeStep();\n  public contacts!: b2Contact[];\n  public count: number = 0;\n  public positions!: b2Position[];\n  public velocities!: b2Velocity[];\n}\n\nexport class b2PositionSolverManifold {\n  public readonly normal: b2Vec2 = new b2Vec2();\n  public readonly point: b2Vec2 = new b2Vec2();\n  public separation: number = 0;\n\n  private static Initialize_s_pointA = new b2Vec2();\n  private static Initialize_s_pointB = new b2Vec2();\n  private static Initialize_s_planePoint = new b2Vec2();\n  private static Initialize_s_clipPoint = new b2Vec2();\n  public Initialize(pc: b2ContactPositionConstraint, xfA: b2Transform, xfB: b2Transform, index: number): void {\n    const pointA: b2Vec2 = b2PositionSolverManifold.Initialize_s_pointA;\n    const pointB: b2Vec2 = b2PositionSolverManifold.Initialize_s_pointB;\n    const planePoint: b2Vec2 = b2PositionSolverManifold.Initialize_s_planePoint;\n    const clipPoint: b2Vec2 = b2PositionSolverManifold.Initialize_s_clipPoint;\n\n    // DEBUG: b2Assert(pc.pointCount > 0);\n\n    switch (pc.type) {\n    case b2ManifoldType.e_circles: {\n        // b2Vec2 pointA = b2Mul(xfA, pc->localPoint);\n        b2Transform.MulXV(xfA, pc.localPoint, pointA);\n        // b2Vec2 pointB = b2Mul(xfB, pc->localPoints[0]);\n        b2Transform.MulXV(xfB, pc.localPoints[0], pointB);\n        // normal = pointB - pointA;\n        // normal.Normalize();\n        b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\n        // point = 0.5f * (pointA + pointB);\n        b2Vec2.MidVV(pointA, pointB, this.point);\n        // separation = b2Dot(pointB - pointA, normal) - pc->radius;\n        this.separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\n        break;\n      }\n\n    case b2ManifoldType.e_faceA: {\n        // normal = b2Mul(xfA.q, pc->localNormal);\n        b2Rot.MulRV(xfA.q, pc.localNormal, this.normal);\n        // b2Vec2 planePoint = b2Mul(xfA, pc->localPoint);\n        b2Transform.MulXV(xfA, pc.localPoint, planePoint);\n\n        // b2Vec2 clipPoint = b2Mul(xfB, pc->localPoints[index]);\n        b2Transform.MulXV(xfB, pc.localPoints[index], clipPoint);\n        // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\n        this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\n        // point = clipPoint;\n        this.point.Copy(clipPoint);\n        break;\n      }\n\n    case b2ManifoldType.e_faceB: {\n        // normal = b2Mul(xfB.q, pc->localNormal);\n        b2Rot.MulRV(xfB.q, pc.localNormal, this.normal);\n        // b2Vec2 planePoint = b2Mul(xfB, pc->localPoint);\n        b2Transform.MulXV(xfB, pc.localPoint, planePoint);\n\n        // b2Vec2 clipPoint = b2Mul(xfA, pc->localPoints[index]);\n        b2Transform.MulXV(xfA, pc.localPoints[index], clipPoint);\n        // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\n        this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\n        // point = clipPoint;\n        this.point.Copy(clipPoint);\n\n        // Ensure normal points from A to B\n        // normal = -normal;\n        this.normal.SelfNeg();\n        break;\n      }\n    }\n  }\n}\n\nexport class b2ContactSolver {\n  public readonly m_step: b2TimeStep = new b2TimeStep();\n  public m_positions!: b2Position[];\n  public m_velocities!: b2Velocity[];\n  public readonly m_positionConstraints: b2ContactPositionConstraint[] = b2ContactPositionConstraint.MakeArray(1024); // TODO: b2Settings\n  public readonly m_velocityConstraints: b2ContactVelocityConstraint[] = b2ContactVelocityConstraint.MakeArray(1024); // TODO: b2Settings\n  public m_contacts!: b2Contact[];\n  public m_count: number = 0;\n\n  public Initialize(def: b2ContactSolverDef): b2ContactSolver {\n    this.m_step.Copy(def.step);\n    this.m_count = def.count;\n    // TODO:\n    if (this.m_positionConstraints.length < this.m_count) {\n      const new_length: number = b2Max(this.m_positionConstraints.length * 2, this.m_count);\n      while (this.m_positionConstraints.length < new_length) {\n        this.m_positionConstraints[this.m_positionConstraints.length] = new b2ContactPositionConstraint();\n      }\n    }\n    // TODO:\n    if (this.m_velocityConstraints.length < this.m_count) {\n      const new_length: number = b2Max(this.m_velocityConstraints.length * 2, this.m_count);\n      while (this.m_velocityConstraints.length < new_length) {\n        this.m_velocityConstraints[this.m_velocityConstraints.length] = new b2ContactVelocityConstraint();\n      }\n    }\n    this.m_positions = def.positions;\n    this.m_velocities = def.velocities;\n    this.m_contacts = def.contacts;\n\n    // Initialize position independent portions of the constraints.\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const contact: b2Contact = this.m_contacts[i];\n\n      const fixtureA: b2Fixture = contact.m_fixtureA;\n      const fixtureB: b2Fixture = contact.m_fixtureB;\n      const shapeA: b2Shape = fixtureA.GetShape();\n      const shapeB: b2Shape = fixtureB.GetShape();\n      const radiusA: number = shapeA.m_radius;\n      const radiusB: number = shapeB.m_radius;\n      const bodyA: b2Body = fixtureA.GetBody();\n      const bodyB: b2Body = fixtureB.GetBody();\n      const manifold: b2Manifold = contact.GetManifold();\n\n      const pointCount: number = manifold.pointCount;\n      // DEBUG: b2Assert(pointCount > 0);\n\n      const vc: b2ContactVelocityConstraint = this.m_velocityConstraints[i];\n      vc.friction = contact.m_friction;\n      vc.restitution = contact.m_restitution;\n      vc.threshold = contact.m_restitutionThreshold;\n      vc.tangentSpeed = contact.m_tangentSpeed;\n      vc.indexA = bodyA.m_islandIndex;\n      vc.indexB = bodyB.m_islandIndex;\n      vc.invMassA = bodyA.m_invMass;\n      vc.invMassB = bodyB.m_invMass;\n      vc.invIA = bodyA.m_invI;\n      vc.invIB = bodyB.m_invI;\n      vc.contactIndex = i;\n      vc.pointCount = pointCount;\n      vc.K.SetZero();\n      vc.normalMass.SetZero();\n\n      const pc: b2ContactPositionConstraint = this.m_positionConstraints[i];\n      pc.indexA = bodyA.m_islandIndex;\n      pc.indexB = bodyB.m_islandIndex;\n      pc.invMassA = bodyA.m_invMass;\n      pc.invMassB = bodyB.m_invMass;\n      pc.localCenterA.Copy(bodyA.m_sweep.localCenter);\n      pc.localCenterB.Copy(bodyB.m_sweep.localCenter);\n      pc.invIA = bodyA.m_invI;\n      pc.invIB = bodyB.m_invI;\n      pc.localNormal.Copy(manifold.localNormal);\n      pc.localPoint.Copy(manifold.localPoint);\n      pc.pointCount = pointCount;\n      pc.radiusA = radiusA;\n      pc.radiusB = radiusB;\n      pc.type = manifold.type;\n\n      for (let j: number = 0; j < pointCount; ++j) {\n        const cp: b2ManifoldPoint = manifold.points[j];\n        const vcp: b2VelocityConstraintPoint = vc.points[j];\n\n        if (this.m_step.warmStarting) {\n          vcp.normalImpulse = this.m_step.dtRatio * cp.normalImpulse;\n          vcp.tangentImpulse = this.m_step.dtRatio * cp.tangentImpulse;\n        } else {\n          vcp.normalImpulse = 0;\n          vcp.tangentImpulse = 0;\n        }\n\n        vcp.rA.SetZero();\n        vcp.rB.SetZero();\n        vcp.normalMass = 0;\n        vcp.tangentMass = 0;\n        vcp.velocityBias = 0;\n\n        pc.localPoints[j].Copy(cp.localPoint);\n      }\n    }\n\n    return this;\n  }\n\n  private static InitializeVelocityConstraints_s_xfA = new b2Transform();\n  private static InitializeVelocityConstraints_s_xfB = new b2Transform();\n  private static InitializeVelocityConstraints_s_worldManifold = new b2WorldManifold();\n  public InitializeVelocityConstraints(): void {\n    const xfA: b2Transform = b2ContactSolver.InitializeVelocityConstraints_s_xfA;\n    const xfB: b2Transform = b2ContactSolver.InitializeVelocityConstraints_s_xfB;\n    const worldManifold: b2WorldManifold = b2ContactSolver.InitializeVelocityConstraints_s_worldManifold;\n\n    const k_maxConditionNumber: number = 1000;\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const vc: b2ContactVelocityConstraint = this.m_velocityConstraints[i];\n      const pc: b2ContactPositionConstraint = this.m_positionConstraints[i];\n\n      const radiusA: number = pc.radiusA;\n      const radiusB: number = pc.radiusB;\n      const manifold: b2Manifold = this.m_contacts[vc.contactIndex].GetManifold();\n\n      const indexA: number = vc.indexA;\n      const indexB: number = vc.indexB;\n\n      const mA: number = vc.invMassA;\n      const mB: number = vc.invMassB;\n      const iA: number = vc.invIA;\n      const iB: number = vc.invIB;\n      const localCenterA: b2Vec2 = pc.localCenterA;\n      const localCenterB: b2Vec2 = pc.localCenterB;\n\n      const cA: b2Vec2 = this.m_positions[indexA].c;\n      const aA: number = this.m_positions[indexA].a;\n      const vA: b2Vec2 = this.m_velocities[indexA].v;\n      const wA: number = this.m_velocities[indexA].w;\n\n      const cB: b2Vec2 = this.m_positions[indexB].c;\n      const aB: number = this.m_positions[indexB].a;\n      const vB: b2Vec2 = this.m_velocities[indexB].v;\n      const wB: number = this.m_velocities[indexB].w;\n\n      // DEBUG: b2Assert(manifold.pointCount > 0);\n\n      xfA.q.SetAngle(aA);\n      xfB.q.SetAngle(aB);\n      b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\n      b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\n\n      worldManifold.Initialize(manifold, xfA, radiusA, xfB, radiusB);\n\n      vc.normal.Copy(worldManifold.normal);\n      b2Vec2.CrossVOne(vc.normal, vc.tangent); // compute from normal\n\n      const pointCount: number = vc.pointCount;\n      for (let j: number = 0; j < pointCount; ++j) {\n        const vcp: b2VelocityConstraintPoint = vc.points[j];\n\n        // vcp->rA = worldManifold.points[j] - cA;\n        b2Vec2.SubVV(worldManifold.points[j], cA, vcp.rA);\n        // vcp->rB = worldManifold.points[j] - cB;\n        b2Vec2.SubVV(worldManifold.points[j], cB, vcp.rB);\n\n        const rnA: number = b2Vec2.CrossVV(vcp.rA, vc.normal);\n        const rnB: number = b2Vec2.CrossVV(vcp.rB, vc.normal);\n\n        const kNormal: number = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n        vcp.normalMass = kNormal > 0 ? 1 / kNormal : 0;\n\n        // b2Vec2 tangent = b2Cross(vc->normal, 1.0f);\n        const tangent: b2Vec2 = vc.tangent; // precomputed from normal\n\n        const rtA: number = b2Vec2.CrossVV(vcp.rA, tangent);\n        const rtB: number = b2Vec2.CrossVV(vcp.rB, tangent);\n\n        const kTangent: number = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n        vcp.tangentMass = kTangent > 0 ? 1 / kTangent : 0;\n\n        // Setup a velocity bias for restitution.\n        vcp.velocityBias = 0;\n        // float32 vRel = b2Dot(vc->normal, vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA));\n        const vRel: number = b2Vec2.DotVV(\n          vc.normal,\n          b2Vec2.SubVV(\n            b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0),\n            b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1),\n            b2Vec2.s_t0));\n        if (vRel < -vc.threshold) {\n          vcp.velocityBias += (-vc.restitution * vRel);\n        }\n      }\n\n      // If we have two points, then prepare the block solver.\n      if (vc.pointCount === 2 && g_blockSolve) {\n        const vcp1: b2VelocityConstraintPoint = vc.points[0];\n        const vcp2: b2VelocityConstraintPoint = vc.points[1];\n\n        const rn1A: number = b2Vec2.CrossVV(vcp1.rA, vc.normal);\n        const rn1B: number = b2Vec2.CrossVV(vcp1.rB, vc.normal);\n        const rn2A: number = b2Vec2.CrossVV(vcp2.rA, vc.normal);\n        const rn2B: number = b2Vec2.CrossVV(vcp2.rB, vc.normal);\n\n        const k11: number = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n        const k22: number = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n        const k12: number = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n        // Ensure a reasonable condition number.\n        // float32 k_maxConditionNumber = 1000.0f;\n        if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n          // K is safe to invert.\n          vc.K.ex.Set(k11, k12);\n          vc.K.ey.Set(k12, k22);\n          vc.K.GetInverse(vc.normalMass);\n        } else {\n          // The constraints are redundant, just use one.\n          // TODO_ERIN use deepest?\n          vc.pointCount = 1;\n        }\n      }\n    }\n  }\n\n  private static WarmStart_s_P = new b2Vec2();\n  public WarmStart(): void {\n    const P: b2Vec2 = b2ContactSolver.WarmStart_s_P;\n\n    // Warm start.\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const vc: b2ContactVelocityConstraint = this.m_velocityConstraints[i];\n\n      const indexA: number = vc.indexA;\n      const indexB: number = vc.indexB;\n      const mA: number = vc.invMassA;\n      const iA: number = vc.invIA;\n      const mB: number = vc.invMassB;\n      const iB: number = vc.invIB;\n      const pointCount: number = vc.pointCount;\n\n      const vA: b2Vec2 = this.m_velocities[indexA].v;\n      let wA: number = this.m_velocities[indexA].w;\n      const vB: b2Vec2 = this.m_velocities[indexB].v;\n      let wB: number = this.m_velocities[indexB].w;\n\n      const normal: b2Vec2 = vc.normal;\n      // b2Vec2 tangent = b2Cross(normal, 1.0f);\n      const tangent: b2Vec2 = vc.tangent; // precomputed from normal\n\n      for (let j: number = 0; j < pointCount; ++j) {\n        const vcp: b2VelocityConstraintPoint = vc.points[j];\n        // b2Vec2 P = vcp->normalImpulse * normal + vcp->tangentImpulse * tangent;\n        b2Vec2.AddVV(\n          b2Vec2.MulSV(vcp.normalImpulse, normal, b2Vec2.s_t0),\n          b2Vec2.MulSV(vcp.tangentImpulse, tangent, b2Vec2.s_t1),\n          P);\n        // wA -= iA * b2Cross(vcp->rA, P);\n        wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\n        // vA -= mA * P;\n        vA.SelfMulSub(mA, P);\n        // wB += iB * b2Cross(vcp->rB, P);\n        wB += iB * b2Vec2.CrossVV(vcp.rB, P);\n        // vB += mB * P;\n        vB.SelfMulAdd(mB, P);\n      }\n\n      // this.m_velocities[indexA].v = vA;\n      this.m_velocities[indexA].w = wA;\n      // this.m_velocities[indexB].v = vB;\n      this.m_velocities[indexB].w = wB;\n    }\n  }\n\n  private static SolveVelocityConstraints_s_dv = new b2Vec2();\n  private static SolveVelocityConstraints_s_dv1 = new b2Vec2();\n  private static SolveVelocityConstraints_s_dv2 = new b2Vec2();\n  private static SolveVelocityConstraints_s_P = new b2Vec2();\n  private static SolveVelocityConstraints_s_a = new b2Vec2();\n  private static SolveVelocityConstraints_s_b = new b2Vec2();\n  private static SolveVelocityConstraints_s_x = new b2Vec2();\n  private static SolveVelocityConstraints_s_d = new b2Vec2();\n  private static SolveVelocityConstraints_s_P1 = new b2Vec2();\n  private static SolveVelocityConstraints_s_P2 = new b2Vec2();\n  private static SolveVelocityConstraints_s_P1P2 = new b2Vec2();\n  public SolveVelocityConstraints(): void {\n    const dv: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_dv;\n    const dv1: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_dv1;\n    const dv2: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_dv2;\n    const P: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_P;\n    const a: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_a;\n    const b: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_b;\n    const x: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_x;\n    const d: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_d;\n    const P1: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_P1;\n    const P2: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_P2;\n    const P1P2: b2Vec2 = b2ContactSolver.SolveVelocityConstraints_s_P1P2;\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const vc: b2ContactVelocityConstraint = this.m_velocityConstraints[i];\n\n      const indexA: number = vc.indexA;\n      const indexB: number = vc.indexB;\n      const mA: number = vc.invMassA;\n      const iA: number = vc.invIA;\n      const mB: number = vc.invMassB;\n      const iB: number = vc.invIB;\n      const pointCount: number = vc.pointCount;\n\n      const vA: b2Vec2 = this.m_velocities[indexA].v;\n      let wA: number = this.m_velocities[indexA].w;\n      const vB: b2Vec2 = this.m_velocities[indexB].v;\n      let wB: number = this.m_velocities[indexB].w;\n\n      // b2Vec2 normal = vc->normal;\n      const normal: b2Vec2 = vc.normal;\n      // b2Vec2 tangent = b2Cross(normal, 1.0f);\n      const tangent: b2Vec2 = vc.tangent; // precomputed from normal\n      const friction: number = vc.friction;\n\n      // DEBUG: b2Assert(pointCount === 1 || pointCount === 2);\n\n      // Solve tangent constraints first because non-penetration is more important\n      // than friction.\n      for (let j: number = 0; j < pointCount; ++j) {\n        const vcp: b2VelocityConstraintPoint = vc.points[j];\n\n        // Relative velocity at contact\n        // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\n        b2Vec2.SubVV(\n          b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0),\n          b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1),\n          dv);\n\n        // Compute tangent force\n        // float32 vt = b2Dot(dv, tangent) - vc->tangentSpeed;\n        const vt: number = b2Vec2.DotVV(dv, tangent) - vc.tangentSpeed;\n        let lambda: number = vcp.tangentMass * (-vt);\n\n        // b2Clamp the accumulated force\n        const maxFriction: number = friction * vcp.normalImpulse;\n        const newImpulse: number = b2Clamp(vcp.tangentImpulse + lambda, (-maxFriction), maxFriction);\n        lambda = newImpulse - vcp.tangentImpulse;\n        vcp.tangentImpulse = newImpulse;\n\n        // Apply contact impulse\n        // b2Vec2 P = lambda * tangent;\n        b2Vec2.MulSV(lambda, tangent, P);\n\n        // vA -= mA * P;\n        vA.SelfMulSub(mA, P);\n        // wA -= iA * b2Cross(vcp->rA, P);\n        wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\n\n        // vB += mB * P;\n        vB.SelfMulAdd(mB, P);\n        // wB += iB * b2Cross(vcp->rB, P);\n        wB += iB * b2Vec2.CrossVV(vcp.rB, P);\n      }\n\n      // Solve normal constraints\n      if (vc.pointCount === 1 || g_blockSolve === false) {\n        for (let j = 0; j < pointCount; ++j) {\n          const vcp: b2VelocityConstraintPoint = vc.points[j];\n\n          // Relative velocity at contact\n          // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\n          b2Vec2.SubVV(\n            b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0),\n            b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1),\n            dv);\n\n          // Compute normal impulse\n          // float32 vn = b2Dot(dv, normal);\n          const vn: number = b2Vec2.DotVV(dv, normal);\n          let lambda: number = (-vcp.normalMass * (vn - vcp.velocityBias));\n\n          // b2Clamp the accumulated impulse\n          // float32 newImpulse = b2Max(vcp->normalImpulse + lambda, 0.0f);\n          const newImpulse: number = b2Max(vcp.normalImpulse + lambda, 0);\n          lambda = newImpulse - vcp.normalImpulse;\n          vcp.normalImpulse = newImpulse;\n\n          // Apply contact impulse\n          // b2Vec2 P = lambda * normal;\n          b2Vec2.MulSV(lambda, normal, P);\n          // vA -= mA * P;\n          vA.SelfMulSub(mA, P);\n          // wA -= iA * b2Cross(vcp->rA, P);\n          wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\n\n          // vB += mB * P;\n          vB.SelfMulAdd(mB, P);\n          // wB += iB * b2Cross(vcp->rB, P);\n          wB += iB * b2Vec2.CrossVV(vcp.rB, P);\n        }\n      } else {\n        // Block solver developed in collaboration with Dirk Gregorius (back in 01/07 on Box2D_Lite).\n        // Build the mini LCP for this contact patch\n        //\n        // vn = A * x + b, vn >= 0, x >= 0 and vn_i * x_i = 0 with i = 1..2\n        //\n        // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n        // b = vn0 - velocityBias\n        //\n        // The system is solved using the \"Total enumeration method\" (s. Murty). The complementary constraint vn_i * x_i\n        // implies that we must have in any solution either vn_i = 0 or x_i = 0. So for the 2D contact problem the cases\n        // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and vn1 = 0 need to be tested. The first valid\n        // solution that satisfies the problem is chosen.\n        //\n        // In order to account of the accumulated impulse 'a' (because of the iterative nature of the solver which only requires\n        // that the accumulated impulse is clamped and not the incremental impulse) we change the impulse variable (x_i).\n        //\n        // Substitute:\n        //\n        // x = a + d\n        //\n        // a := old total impulse\n        // x := new total impulse\n        // d := incremental impulse\n        //\n        // For the current iteration we extend the formula for the incremental impulse\n        // to compute the new total impulse:\n        //\n        // vn = A * d + b\n        //    = A * (x - a) + b\n        //    = A * x + b - A * a\n        //    = A * x + b'\n        // b' = b - A * a;\n\n        const cp1: b2VelocityConstraintPoint = vc.points[0];\n        const cp2: b2VelocityConstraintPoint = vc.points[1];\n\n        // b2Vec2 a(cp1->normalImpulse, cp2->normalImpulse);\n        a.Set(cp1.normalImpulse, cp2.normalImpulse);\n        // DEBUG: b2Assert(a.x >= 0 && a.y >= 0);\n\n        // Relative velocity at contact\n        // b2Vec2 dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\n        b2Vec2.SubVV(\n          b2Vec2.AddVCrossSV(vB, wB, cp1.rB, b2Vec2.s_t0),\n          b2Vec2.AddVCrossSV(vA, wA, cp1.rA, b2Vec2.s_t1),\n          dv1);\n        // b2Vec2 dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\n        b2Vec2.SubVV(\n          b2Vec2.AddVCrossSV(vB, wB, cp2.rB, b2Vec2.s_t0),\n          b2Vec2.AddVCrossSV(vA, wA, cp2.rA, b2Vec2.s_t1),\n          dv2);\n\n        // Compute normal velocity\n        // float32 vn1 = b2Dot(dv1, normal);\n        let vn1: number = b2Vec2.DotVV(dv1, normal);\n        // float32 vn2 = b2Dot(dv2, normal);\n        let vn2: number = b2Vec2.DotVV(dv2, normal);\n\n        // b2Vec2 b;\n        b.x = vn1 - cp1.velocityBias;\n        b.y = vn2 - cp2.velocityBias;\n\n        // Compute b'\n        // b -= b2Mul(vc->K, a);\n        b.SelfSub(b2Mat22.MulMV(vc.K, a, b2Vec2.s_t0));\n\n        /*\n        #if B2_DEBUG_SOLVER === 1\n        const k_errorTol: number = 0.001;\n        #endif\n        */\n\n        for (; ; ) {\n          //\n          // Case 1: vn = 0\n          //\n          // 0 = A * x + b'\n          //\n          // Solve for x:\n          //\n          // x = - inv(A) * b'\n          //\n          // b2Vec2 x = - b2Mul(vc->normalMass, b);\n          b2Mat22.MulMV(vc.normalMass, b, x).SelfNeg();\n\n          if (x.x >= 0 && x.y >= 0) {\n            // Get the incremental impulse\n            // b2Vec2 d = x - a;\n            b2Vec2.SubVV(x, a, d);\n\n            // Apply incremental impulse\n            // b2Vec2 P1 = d.x * normal;\n            b2Vec2.MulSV(d.x, normal, P1);\n            // b2Vec2 P2 = d.y * normal;\n            b2Vec2.MulSV(d.y, normal, P2);\n            b2Vec2.AddVV(P1, P2, P1P2);\n            // vA -= mA * (P1 + P2);\n            vA.SelfMulSub(mA, P1P2);\n            // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\n            wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\n\n            // vB += mB * (P1 + P2);\n            vB.SelfMulAdd(mB, P1P2);\n            // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\n            wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\n\n            // Accumulate\n            cp1.normalImpulse = x.x;\n            cp2.normalImpulse = x.y;\n\n            /*\n            #if B2_DEBUG_SOLVER === 1\n            // Postconditions\n            dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\n            dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\n\n            // Compute normal velocity\n            vn1 = b2Dot(dv1, normal);\n            vn2 = b2Dot(dv2, normal);\n\n            b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\n            b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\n            #endif\n            */\n            break;\n          }\n\n          //\n          // Case 2: vn1 = 0 and x2 = 0\n          //\n          //   0 = a11 * x1 + a12 * 0 + b1'\n          // vn2 = a21 * x1 + a22 * 0 + b2'\n          //\n          x.x = (-cp1.normalMass * b.x);\n          x.y = 0;\n          vn1 = 0;\n          vn2 = vc.K.ex.y * x.x + b.y;\n\n          if (x.x >= 0 && vn2 >= 0) {\n            // Get the incremental impulse\n            // b2Vec2 d = x - a;\n            b2Vec2.SubVV(x, a, d);\n\n            // Apply incremental impulse\n            // b2Vec2 P1 = d.x * normal;\n            b2Vec2.MulSV(d.x, normal, P1);\n            // b2Vec2 P2 = d.y * normal;\n            b2Vec2.MulSV(d.y, normal, P2);\n            b2Vec2.AddVV(P1, P2, P1P2);\n            // vA -= mA * (P1 + P2);\n            vA.SelfMulSub(mA, P1P2);\n            // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\n            wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\n\n            // vB += mB * (P1 + P2);\n            vB.SelfMulAdd(mB, P1P2);\n            // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\n            wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\n\n            // Accumulate\n            cp1.normalImpulse = x.x;\n            cp2.normalImpulse = x.y;\n\n            /*\n            #if B2_DEBUG_SOLVER === 1\n            // Postconditions\n            dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\n\n            // Compute normal velocity\n            vn1 = b2Dot(dv1, normal);\n\n            b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\n            #endif\n            */\n            break;\n          }\n\n          //\n          // Case 3: vn2 = 0 and x1 = 0\n          //\n          // vn1 = a11 * 0 + a12 * x2 + b1'\n          //   0 = a21 * 0 + a22 * x2 + b2'\n          //\n          x.x = 0;\n          x.y = (-cp2.normalMass * b.y);\n          vn1 = vc.K.ey.x * x.y + b.x;\n          vn2 = 0;\n\n          if (x.y >= 0 && vn1 >= 0) {\n            // Resubstitute for the incremental impulse\n            // b2Vec2 d = x - a;\n            b2Vec2.SubVV(x, a, d);\n\n            // Apply incremental impulse\n            // b2Vec2 P1 = d.cursorX * normal;\n            b2Vec2.MulSV(d.x, normal, P1);\n            // b2Vec2 P2 = d.y * normal;\n            b2Vec2.MulSV(d.y, normal, P2);\n            b2Vec2.AddVV(P1, P2, P1P2);\n            // vA -= mA * (P1 + P2);\n            vA.SelfMulSub(mA, P1P2);\n            // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\n            wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\n\n            // vB += mB * (P1 + P2);\n            vB.SelfMulAdd(mB, P1P2);\n            // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\n            wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\n\n            // Accumulate\n            cp1.normalImpulse = x.x;\n            cp2.normalImpulse = x.y;\n\n            /*\n            #if B2_DEBUG_SOLVER === 1\n            // Postconditions\n            dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\n\n            // Compute normal velocity\n            vn2 = b2Dot(dv2, normal);\n\n            b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\n            #endif\n            */\n            break;\n          }\n\n          //\n          // Case 4: x1 = 0 and x2 = 0\n          //\n          // vn1 = b1\n          // vn2 = b2;\n          x.x = 0;\n          x.y = 0;\n          vn1 = b.x;\n          vn2 = b.y;\n\n          if (vn1 >= 0 && vn2 >= 0) {\n            // Resubstitute for the incremental impulse\n            // b2Vec2 d = cursorX - a;\n            b2Vec2.SubVV(x, a, d);\n\n            // Apply incremental impulse\n            // b2Vec2 P1 = d.cursorX * normal;\n            b2Vec2.MulSV(d.x, normal, P1);\n            // b2Vec2 P2 = d.y * normal;\n            b2Vec2.MulSV(d.y, normal, P2);\n            b2Vec2.AddVV(P1, P2, P1P2);\n            // vA -= mA * (P1 + P2);\n            vA.SelfMulSub(mA, P1P2);\n            // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\n            wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\n\n            // vB += mB * (P1 + P2);\n            vB.SelfMulAdd(mB, P1P2);\n            // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\n            wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\n\n            // Accumulate\n            cp1.normalImpulse = x.x;\n            cp2.normalImpulse = x.y;\n\n            break;\n          }\n\n          // No solution, give up. This is hit sometimes, but it doesn't seem to matter.\n          break;\n        }\n      }\n\n      // this.m_velocities[indexA].v = vA;\n      this.m_velocities[indexA].w = wA;\n      // this.m_velocities[indexB].v = vB;\n      this.m_velocities[indexB].w = wB;\n    }\n  }\n\n  public StoreImpulses(): void {\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const vc: b2ContactVelocityConstraint = this.m_velocityConstraints[i];\n      const manifold: b2Manifold = this.m_contacts[vc.contactIndex].GetManifold();\n\n      for (let j: number = 0; j < vc.pointCount; ++j) {\n        manifold.points[j].normalImpulse = vc.points[j].normalImpulse;\n        manifold.points[j].tangentImpulse = vc.points[j].tangentImpulse;\n      }\n    }\n  }\n\n  private static SolvePositionConstraints_s_xfA = new b2Transform();\n  private static SolvePositionConstraints_s_xfB = new b2Transform();\n  private static SolvePositionConstraints_s_psm = new b2PositionSolverManifold();\n  private static SolvePositionConstraints_s_rA = new b2Vec2();\n  private static SolvePositionConstraints_s_rB = new b2Vec2();\n  private static SolvePositionConstraints_s_P = new b2Vec2();\n  public SolvePositionConstraints(): boolean {\n    const xfA: b2Transform = b2ContactSolver.SolvePositionConstraints_s_xfA;\n    const xfB: b2Transform = b2ContactSolver.SolvePositionConstraints_s_xfB;\n    const psm: b2PositionSolverManifold = b2ContactSolver.SolvePositionConstraints_s_psm;\n    const rA: b2Vec2 = b2ContactSolver.SolvePositionConstraints_s_rA;\n    const rB: b2Vec2 = b2ContactSolver.SolvePositionConstraints_s_rB;\n    const P: b2Vec2 = b2ContactSolver.SolvePositionConstraints_s_P;\n\n    let minSeparation: number = 0;\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const pc: b2ContactPositionConstraint = this.m_positionConstraints[i];\n\n      const indexA: number = pc.indexA;\n      const indexB: number = pc.indexB;\n      const localCenterA: b2Vec2 = pc.localCenterA;\n      const mA: number = pc.invMassA;\n      const iA: number = pc.invIA;\n      const localCenterB: b2Vec2 = pc.localCenterB;\n      const mB: number = pc.invMassB;\n      const iB: number = pc.invIB;\n      const pointCount: number = pc.pointCount;\n\n      const cA: b2Vec2 = this.m_positions[indexA].c;\n      let aA: number = this.m_positions[indexA].a;\n\n      const cB: b2Vec2 = this.m_positions[indexB].c;\n      let aB: number = this.m_positions[indexB].a;\n\n      // Solve normal constraints\n      for (let j: number = 0; j < pointCount; ++j) {\n        xfA.q.SetAngle(aA);\n        xfB.q.SetAngle(aB);\n        b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\n        b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\n\n        psm.Initialize(pc, xfA, xfB, j);\n        const normal: b2Vec2 = psm.normal;\n\n        const point: b2Vec2 = psm.point;\n        const separation: number = psm.separation;\n\n        // b2Vec2 rA = point - cA;\n        b2Vec2.SubVV(point, cA, rA);\n        // b2Vec2 rB = point - cB;\n        b2Vec2.SubVV(point, cB, rB);\n\n        // Track max constraint error.\n        minSeparation = b2Min(minSeparation, separation);\n\n        // Prevent large corrections and allow slop.\n        const C: number = b2Clamp(b2_baumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\n\n        // Compute the effective mass.\n        // float32 rnA = b2Cross(rA, normal);\n        const rnA: number = b2Vec2.CrossVV(rA, normal);\n        // float32 rnB = b2Cross(rB, normal);\n        const rnB: number = b2Vec2.CrossVV(rB, normal);\n        // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n        const K: number = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n        // Compute normal impulse\n        const impulse: number = K > 0 ? - C / K : 0;\n\n        // b2Vec2 P = impulse * normal;\n        b2Vec2.MulSV(impulse, normal, P);\n\n        // cA -= mA * P;\n        cA.SelfMulSub(mA, P);\n        // aA -= iA * b2Cross(rA, P);\n        aA -= iA * b2Vec2.CrossVV(rA, P);\n\n        // cB += mB * P;\n        cB.SelfMulAdd(mB, P);\n        // aB += iB * b2Cross(rB, P);\n        aB += iB * b2Vec2.CrossVV(rB, P);\n      }\n\n      // this.m_positions[indexA].c = cA;\n      this.m_positions[indexA].a = aA;\n\n      // this.m_positions[indexB].c = cB;\n      this.m_positions[indexB].a = aB;\n    }\n\n    // We can't expect minSpeparation >= -b2_linearSlop because we don't\n    // push the separation above -b2_linearSlop.\n    return minSeparation > (-3 * b2_linearSlop);\n  }\n\n  private static SolveTOIPositionConstraints_s_xfA = new b2Transform();\n  private static SolveTOIPositionConstraints_s_xfB = new b2Transform();\n  private static SolveTOIPositionConstraints_s_psm = new b2PositionSolverManifold();\n  private static SolveTOIPositionConstraints_s_rA = new b2Vec2();\n  private static SolveTOIPositionConstraints_s_rB = new b2Vec2();\n  private static SolveTOIPositionConstraints_s_P = new b2Vec2();\n  public SolveTOIPositionConstraints(toiIndexA: number, toiIndexB: number): boolean {\n    const xfA: b2Transform = b2ContactSolver.SolveTOIPositionConstraints_s_xfA;\n    const xfB: b2Transform = b2ContactSolver.SolveTOIPositionConstraints_s_xfB;\n    const psm: b2PositionSolverManifold = b2ContactSolver.SolveTOIPositionConstraints_s_psm;\n    const rA: b2Vec2 = b2ContactSolver.SolveTOIPositionConstraints_s_rA;\n    const rB: b2Vec2 = b2ContactSolver.SolveTOIPositionConstraints_s_rB;\n    const P: b2Vec2 = b2ContactSolver.SolveTOIPositionConstraints_s_P;\n\n    let minSeparation: number = 0;\n\n    for (let i: number = 0; i < this.m_count; ++i) {\n      const pc: b2ContactPositionConstraint = this.m_positionConstraints[i];\n\n      const indexA: number = pc.indexA;\n      const indexB: number = pc.indexB;\n      const localCenterA: b2Vec2 = pc.localCenterA;\n      const localCenterB: b2Vec2 = pc.localCenterB;\n      const pointCount: number = pc.pointCount;\n\n      let mA: number = 0;\n      let iA: number = 0;\n      if (indexA === toiIndexA || indexA === toiIndexB) {\n        mA = pc.invMassA;\n        iA = pc.invIA;\n      }\n\n      let mB: number = 0;\n      let iB: number = 0;\n      if (indexB === toiIndexA || indexB === toiIndexB) {\n        mB = pc.invMassB;\n        iB = pc.invIB;\n      }\n\n      const cA: b2Vec2 = this.m_positions[indexA].c;\n      let aA: number = this.m_positions[indexA].a;\n\n      const cB: b2Vec2 = this.m_positions[indexB].c;\n      let aB: number = this.m_positions[indexB].a;\n\n      // Solve normal constraints\n      for (let j: number = 0; j < pointCount; ++j) {\n        xfA.q.SetAngle(aA);\n        xfB.q.SetAngle(aB);\n        b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\n        b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\n\n        psm.Initialize(pc, xfA, xfB, j);\n        const normal: b2Vec2 = psm.normal;\n\n        const point: b2Vec2 = psm.point;\n        const separation: number = psm.separation;\n\n        // b2Vec2 rA = point - cA;\n        b2Vec2.SubVV(point, cA, rA);\n        // b2Vec2 rB = point - cB;\n        b2Vec2.SubVV(point, cB, rB);\n\n        // Track max constraint error.\n        minSeparation = b2Min(minSeparation, separation);\n\n        // Prevent large corrections and allow slop.\n        const C: number = b2Clamp(b2_toiBaumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\n\n        // Compute the effective mass.\n        // float32 rnA = b2Cross(rA, normal);\n        const rnA: number = b2Vec2.CrossVV(rA, normal);\n        // float32 rnB = b2Cross(rB, normal);\n        const rnB: number = b2Vec2.CrossVV(rB, normal);\n        // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n        const K: number = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n        // Compute normal impulse\n        const impulse: number = K > 0 ? - C / K : 0;\n\n        // b2Vec2 P = impulse * normal;\n        b2Vec2.MulSV(impulse, normal, P);\n\n        // cA -= mA * P;\n        cA.SelfMulSub(mA, P);\n        // aA -= iA * b2Cross(rA, P);\n        aA -= iA * b2Vec2.CrossVV(rA, P);\n\n        // cB += mB * P;\n        cB.SelfMulAdd(mB, P);\n        // aB += iB * b2Cross(rB, P);\n        aB += iB * b2Vec2.CrossVV(rB, P);\n      }\n\n      // this.m_positions[indexA].c = cA;\n      this.m_positions[indexA].a = aA;\n\n      // this.m_positions[indexB].c = cB;\n      this.m_positions[indexB].a = aB;\n    }\n\n    // We can't expect minSpeparation >= -b2_linearSlop because we don't\n    // push the separation above -b2_linearSlop.\n    return minSeparation >= -1.5 * b2_linearSlop;\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2_linearSlop, b2Maybe, b2_maxFloat } from \"../common/b2_common\";\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot, XY, b2Max, b2Transform } from \"../common/b2_math\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Color, b2Draw } from \"../common/b2_draw\";\n\nexport interface b2IDistanceJointDef extends b2IJointDef {\n  localAnchorA?: XY;\n  localAnchorB?: XY;\n  length?: number;\n  minLength?: number;\n  maxLength?: number;\n  stiffness?: number;\n  damping?: number;\n}\n\n/// Distance joint definition. This requires defining an\n/// anchor point on both bodies and the non-zero length of the\n/// distance joint. The definition uses local anchor points\n/// so that the initial configuration can violate the constraint\n/// slightly. This helps when saving and loading a game.\n/// @warning Do not use a zero or short length.\nexport class b2DistanceJointDef extends b2JointDef implements b2IDistanceJointDef {\n  public readonly localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly localAnchorB: b2Vec2 = new b2Vec2();\n  public length: number = 1;\n  public minLength: number = 0;\n  public maxLength: number = b2_maxFloat; // FLT_MAX;\n  public stiffness: number = 0;\n  public damping: number = 0;\n\n  constructor() {\n    super(b2JointType.e_distanceJoint);\n  }\n\n  public Initialize(b1: b2Body, b2: b2Body, anchor1: XY, anchor2: XY): void {\n    this.bodyA = b1;\n    this.bodyB = b2;\n    this.bodyA.GetLocalPoint(anchor1, this.localAnchorA);\n    this.bodyB.GetLocalPoint(anchor2, this.localAnchorB);\n    this.length = b2Max(b2Vec2.DistanceVV(anchor1, anchor2), b2_linearSlop);\n    this.minLength = this.length;\n    this.maxLength = this.length;\n  }\n}\n\nexport class b2DistanceJoint extends b2Joint {\n  public m_stiffness: number = 0;\n  public m_damping: number = 0;\n  public m_bias: number = 0;\n  public m_length: number = 0;\n  public m_minLength: number = 0;\n  public m_maxLength: number = 0;\n\n  // Solver shared\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n  public m_gamma: number = 0;\n  public m_impulse: number = 0;\n  public m_lowerImpulse: number = 0;\n  public m_upperImpulse: number = 0;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_u: b2Vec2 = new b2Vec2();\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public m_currentLength: number = 0;\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n  public m_softMass: number = 0;\n  public m_mass: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n\n  constructor(def: b2IDistanceJointDef) {\n    super(def);\n\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\n    this.m_length = b2Max(b2Maybe(def.length, this.GetCurrentLength()), b2_linearSlop);\n    this.m_minLength = b2Max(b2Maybe(def.minLength, this.m_length), b2_linearSlop);\n    this.m_maxLength = b2Max(b2Maybe(def.maxLength, this.m_length), this.m_minLength);\n    this.m_stiffness = b2Maybe(def.stiffness, 0);\n    this.m_damping = b2Maybe(def.damping, 0);\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    // b2Vec2 F = inv_dt * (m_impulse + m_lowerImpulse - m_upperImpulse) * m_u;\n    out.x = inv_dt * (this.m_impulse + this.m_lowerImpulse - this.m_upperImpulse) * this.m_u.x;\n    out.y = inv_dt * (this.m_impulse + this.m_lowerImpulse - this.m_upperImpulse) * this.m_u.y;\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return 0;\n  }\n\n  public GetLocalAnchorA(): Readonly<b2Vec2> { return this.m_localAnchorA; }\n\n  public GetLocalAnchorB(): Readonly<b2Vec2> { return this.m_localAnchorB; }\n\n  public SetLength(length: number): number {\n    this.m_impulse = 0;\n    this.m_length = b2Max(b2_linearSlop, length);\n    return this.m_length;\n  }\n\n  public GetLength(): number {\n    return this.m_length;\n  }\n\n  public SetMinLength(minLength: number): number {\n    this.m_lowerImpulse = 0;\n    this.m_minLength = b2Clamp(minLength, b2_linearSlop, this.m_maxLength);\n    return this.m_minLength;\n  }\n\n  public SetMaxLength(maxLength: number): number {\n    this.m_upperImpulse = 0;\n    this.m_maxLength = b2Max(maxLength, this.m_minLength);\n    return this.m_maxLength;\n  }\n\n  public GetCurrentLength(): number {\n    const pA: b2Vec2 = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, new b2Vec2());\n    const pB: b2Vec2 = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, new b2Vec2());\n    return b2Vec2.DistanceVV(pA, pB);\n  }\n\n  public SetStiffness(stiffness: number): void {\n    this.m_stiffness = stiffness;\n  }\n\n  public GetStiffness() {\n    return this.m_stiffness;\n  }\n\n  public SetDamping(damping: number): void {\n    this.m_damping = damping;\n  }\n\n  public GetDamping() {\n    return this.m_damping;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    const indexA: number = this.m_bodyA.m_islandIndex;\n    const indexB: number = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2DistanceJointDef = new b2DistanceJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\n    log(\"  jd.length = %.15f;\\n\", this.m_length);\n    log(\"  jd.minLength = %.15f;\\n\", this.m_minLength);\n    log(\"  jd.maxLength = %.15f;\\n\", this.m_maxLength);\n    log(\"  jd.stiffness = %.15f;\\n\", this.m_stiffness);\n    log(\"  jd.damping = %.15f;\\n\", this.m_damping);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n\n  private static InitVelocityConstraints_s_P = new b2Vec2();\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n    // m_u = cB + m_rB - cA - m_rA;\n    this.m_u.x = cB.x + this.m_rB.x - cA.x - this.m_rA.x;\n    this.m_u.y = cB.y + this.m_rB.y - cA.y - this.m_rA.y;\n\n    // Handle singularity.\n    this.m_currentLength = this.m_u.Length();\n    if (this.m_currentLength > b2_linearSlop) {\n      this.m_u.SelfMul(1 / this.m_currentLength);\n    } else {\n      this.m_u.SetZero();\n      this.m_mass = 0;\n      this.m_impulse = 0;\n      this.m_lowerImpulse = 0;\n      this.m_upperImpulse = 0;\n    }\n\n    // float32 crAu = b2Cross(m_rA, m_u);\n    const crAu: number = b2Vec2.CrossVV(this.m_rA, this.m_u);\n    // float32 crBu = b2Cross(m_rB, m_u);\n    const crBu: number = b2Vec2.CrossVV(this.m_rB, this.m_u);\n    // float32 invMass = m_invMassA + m_invIA * crAu * crAu + m_invMassB + m_invIB * crBu * crBu;\n    let invMass: number = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB + this.m_invIB * crBu * crBu;\n    this.m_mass = invMass !== 0 ? 1 / invMass : 0;\n\n    if (this.m_stiffness > 0 && this.m_minLength < this.m_maxLength) {\n      // soft\n      const C: number = this.m_currentLength - this.m_length;\n\n      const d: number = this.m_damping;\n      const k: number = this.m_stiffness;\n\n      // magic formulas\n      const h: number = data.step.dt;\n\n      // gamma = 1 / (h * (d + h * k))\n      // the extra factor of h in the denominator is since the lambda is an impulse, not a force\n      this.m_gamma = h * (d + h * k);\n      this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\n      this.m_bias = C * h * k * this.m_gamma;\n\n      invMass += this.m_gamma;\n      this.m_softMass = invMass !== 0 ? 1 / invMass : 0;\n    }\n    else {\n      // rigid\n      this.m_gamma = 0;\n      this.m_bias = 0;\n      this.m_softMass = this.m_mass;\n    }\n\n    if (data.step.warmStarting) {\n      // Scale the impulse to support a variable time step.\n      this.m_impulse *= data.step.dtRatio;\n      this.m_lowerImpulse *= data.step.dtRatio;\n      this.m_upperImpulse *= data.step.dtRatio;\n\n      const P: b2Vec2 = b2Vec2.MulSV(this.m_impulse + this.m_lowerImpulse - this.m_upperImpulse, this.m_u, b2DistanceJoint.InitVelocityConstraints_s_P);\n      vA.SelfMulSub(this.m_invMassA, P);\n      wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\n      vB.SelfMulAdd(this.m_invMassB, P);\n      wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\n    }\n    else {\n      this.m_impulse = 0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_vpA = new b2Vec2();\n  private static SolveVelocityConstraints_s_vpB = new b2Vec2();\n  private static SolveVelocityConstraints_s_P = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    if (this.m_minLength < this.m_maxLength) {\n      if (this.m_stiffness > 0) {\n        // Cdot = dot(u, v + cross(w, r))\n        const vpA: b2Vec2 = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\n        const vpB: b2Vec2 = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\n        const Cdot: number = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\n\n        const impulse: number = -this.m_softMass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n        this.m_impulse += impulse;\n\n        const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\n        vA.SelfMulSub(this.m_invMassA, P);\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\n        vB.SelfMulAdd(this.m_invMassB, P);\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\n      }\n\n      // lower\n      {\n        const C: number = this.m_currentLength - this.m_minLength;\n        const bias: number = b2Max(0, C) * data.step.inv_dt;\n\n        const vpA: b2Vec2 = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\n        const vpB: b2Vec2 = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\n        const Cdot: number = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\n\n        let impulse: number = -this.m_mass * (Cdot + bias);\n        const oldImpulse: number = this.m_lowerImpulse;\n        this.m_lowerImpulse = b2Max(0, this.m_lowerImpulse + impulse);\n        impulse = this.m_lowerImpulse - oldImpulse;\n        const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\n\n        vA.SelfMulSub(this.m_invMassA, P);\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\n        vB.SelfMulAdd(this.m_invMassB, P);\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\n      }\n\n      // upper\n      {\n        const C: number = this.m_maxLength - this.m_currentLength;\n        const bias: number = b2Max(0, C) * data.step.inv_dt;\n\n        const vpA: b2Vec2 = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\n        const vpB: b2Vec2 = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\n        const Cdot: number = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpA, vpB, b2Vec2.s_t0));\n\n        let impulse: number = -this.m_mass * (Cdot + bias);\n        const oldImpulse: number = this.m_upperImpulse;\n        this.m_upperImpulse = b2Max(0, this.m_upperImpulse + impulse);\n        impulse = this.m_upperImpulse - oldImpulse;\n        const P: b2Vec2 = b2Vec2.MulSV(-impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\n\n        vA.SelfMulSub(this.m_invMassA, P);\n        wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\n        vB.SelfMulAdd(this.m_invMassB, P);\n        wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\n      }\n    }\n    else {\n      // Equal limits\n\n      // Cdot = dot(u, v + cross(w, r))\n      const vpA: b2Vec2 = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\n      const vpB: b2Vec2 = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\n      const Cdot: number = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\n\n      const impulse: number = -this.m_mass * Cdot;\n      this.m_impulse += impulse;\n\n      const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\n      vA.SelfMulSub(this.m_invMassA, P);\n      wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\n      vB.SelfMulAdd(this.m_invMassB, P);\n      wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolvePositionConstraints_s_P = new b2Vec2();\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    let aA: number = data.positions[this.m_indexA].a;\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    let aB: number = data.positions[this.m_indexB].a;\n\n    // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA); // use m_rA\n    // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB); // use m_rB\n    // b2Vec2 u = cB + rB - cA - rA;\n    const u: b2Vec2 = this.m_u; // use m_u\n    u.x = cB.x + rB.x - cA.x - rA.x;\n    u.y = cB.y + rB.y - cA.y - rA.y;\n\n    const length: number = this.m_u.Normalize();\n    let C: number;\n    if (this.m_minLength == this.m_maxLength)\n    {\n      C = length - this.m_minLength;\n    }\n    else if (length < this.m_minLength)\n    {\n      C = length - this.m_minLength;\n    }\n    else if (this.m_maxLength < length)\n    {\n      C = length - this.m_maxLength;\n    }\n    else\n    {\n      return true;\n    }\n\n    const impulse: number = -this.m_mass * C;\n    const P: b2Vec2 = b2Vec2.MulSV(impulse, u, b2DistanceJoint.SolvePositionConstraints_s_P);\n\n    cA.SelfMulSub(this.m_invMassA, P);\n    aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\n    cB.SelfMulAdd(this.m_invMassB, P);\n    aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\n\n    // data.positions[this.m_indexA].c = cA;\n    data.positions[this.m_indexA].a = aA;\n    // data.positions[this.m_indexB].c = cB;\n    data.positions[this.m_indexB].a = aB;\n\n    return b2Abs(C) < b2_linearSlop;\n  }\n\n  private static Draw_s_pA = new b2Vec2();\n  private static Draw_s_pB = new b2Vec2();\n  private static Draw_s_axis = new b2Vec2();\n  private static Draw_s_c1 = new b2Color(0.7, 0.7, 0.7);\n  private static Draw_s_c2 = new b2Color(0.3, 0.9, 0.3);\n  private static Draw_s_c3 = new b2Color(0.9, 0.3, 0.3);\n  private static Draw_s_c4 = new b2Color(0.4, 0.4, 0.4);\n  private static Draw_s_pRest = new b2Vec2();\n  private static Draw_s_pMin = new b2Vec2();\n  private static Draw_s_pMax = new b2Vec2();\n  public Draw(draw: b2Draw): void {\n    const xfA: Readonly<b2Transform> = this.m_bodyA.GetTransform();\n    const xfB: Readonly<b2Transform> = this.m_bodyB.GetTransform();\n    const pA = b2Transform.MulXV(xfA, this.m_localAnchorA, b2DistanceJoint.Draw_s_pA);\n    const pB = b2Transform.MulXV(xfB, this.m_localAnchorB, b2DistanceJoint.Draw_s_pB);\n\n    const axis: b2Vec2 = b2Vec2.SubVV(pB, pA, b2DistanceJoint.Draw_s_axis);\n    axis.Normalize();\n  \n    const c1 = b2DistanceJoint.Draw_s_c1; // b2Color c1(0.7f, 0.7f, 0.7f);\n    const c2 = b2DistanceJoint.Draw_s_c2; // b2Color c2(0.3f, 0.9f, 0.3f);\n    const c3 = b2DistanceJoint.Draw_s_c3; // b2Color c3(0.9f, 0.3f, 0.3f);\n    const c4 = b2DistanceJoint.Draw_s_c4; // b2Color c4(0.4f, 0.4f, 0.4f);\n  \n    draw.DrawSegment(pA, pB, c4);\n    \n    // b2Vec2 pRest = pA + this.m_length * axis;\n    const pRest: b2Vec2 = b2Vec2.AddVMulSV(pA, this.m_length, axis, b2DistanceJoint.Draw_s_pRest);\n    draw.DrawPoint(pRest, 8.0, c1);\n  \n    if (this.m_minLength != this.m_maxLength) {\n      if (this.m_minLength > b2_linearSlop) {\n        // b2Vec2 pMin = pA + this.m_minLength * axis;\n        const pMin: b2Vec2 = b2Vec2.AddVMulSV(pA, this.m_minLength, axis, b2DistanceJoint.Draw_s_pMin);\n        draw.DrawPoint(pMin, 4.0, c2);\n      }\n  \n      if (this.m_maxLength < b2_maxFloat) {\n        // b2Vec2 pMax = pA + this.m_maxLength * axis;\n        const pMax: b2Vec2 = b2Vec2.AddVMulSV(pA, this.m_maxLength, axis, b2DistanceJoint.Draw_s_pMax);\n        draw.DrawPoint(pMax, 4.0, c3);\n      }\n    }\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform } from \"../common/b2_math\";\nimport { b2CollideEdgeAndCircle } from \"../collision/b2_collide_edge\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2CircleShape } from \"../collision/b2_circle_shape\";\nimport { b2EdgeShape } from \"../collision/b2_edge_shape\";\nimport { b2Contact } from \"./b2_contact\";\n\nexport class b2EdgeAndCircleContact extends b2Contact<b2EdgeShape, b2CircleShape> {\n  public static Create(): b2Contact {\n    return new b2EdgeAndCircleContact();\n  }\n\n  public static Destroy(contact: b2Contact): void {\n  }\n\n  public Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void {\n    b2CollideEdgeAndCircle(manifold, this.GetShapeA(), xfA, this.GetShapeB(), xfB);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform } from \"../common/b2_math\";\nimport { b2CollideEdgeAndPolygon } from \"../collision/b2_collide_edge\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2EdgeShape } from \"../collision/b2_edge_shape\";\nimport { b2PolygonShape } from \"../collision/b2_polygon_shape\";\nimport { b2Contact } from \"./b2_contact\";\n\nexport class b2EdgeAndPolygonContact extends b2Contact<b2EdgeShape, b2PolygonShape> {\n  public static Create(): b2Contact {\n    return new b2EdgeAndPolygonContact();\n  }\n\n  public static Destroy(contact: b2Contact): void {\n  }\n\n  public Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void {\n    b2CollideEdgeAndPolygon(manifold, this.GetShapeA(), xfA, this.GetShapeB(), xfB);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2Maybe, b2_lengthUnitsPerMeter } from \"../common/b2_common\";\nimport { b2Vec2, b2Transform, XY } from \"../common/b2_math\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"../collision/b2_collision\";\nimport { b2TreeNode } from \"../collision/b2_dynamic_tree\";\nimport { b2Shape, b2ShapeType, b2MassData } from \"../collision/b2_shape\";\nimport { b2Body } from \"./b2_body\";\n\n/// This holds contact filtering data.\nexport interface b2IFilter {\n  /// The collision category bits. Normally you would just set one bit.\n  categoryBits: number;\n\n  /// The collision mask bits. This states the categories that this\n  /// shape would accept for collision.\n  maskBits: number;\n\n  /// Collision groups allow a certain group of objects to never collide (negative)\n  /// or always collide (positive). Zero means no collision group. Non-zero group\n  /// filtering always wins against the mask bits.\n  groupIndex?: number;\n}\n\n/// This holds contact filtering data.\nexport class b2Filter implements b2IFilter {\n  public static readonly DEFAULT: Readonly<b2Filter> = new b2Filter();\n\n  /// The collision category bits. Normally you would just set one bit.\n  public categoryBits: number = 0x0001;\n\n  /// The collision mask bits. This states the categories that this\n  /// shape would accept for collision.\n  public maskBits: number = 0xFFFF;\n\n  /// Collision groups allow a certain group of objects to never collide (negative)\n  /// or always collide (positive). Zero means no collision group. Non-zero group\n  /// filtering always wins against the mask bits.\n  public groupIndex: number = 0;\n\n  public Clone(): b2Filter {\n    return new b2Filter().Copy(this);\n  }\n\n  public Copy(other: b2IFilter): this {\n    // DEBUG: b2Assert(this !== other);\n    this.categoryBits = other.categoryBits;\n    this.maskBits = other.maskBits;\n    this.groupIndex = other.groupIndex || 0;\n    return this;\n  }\n}\n\n/// A fixture definition is used to create a fixture. This class defines an\n/// abstract fixture definition. You can reuse fixture definitions safely.\nexport interface b2IFixtureDef {\n  /// The shape, this must be set. The shape will be cloned, so you\n  /// can create the shape on the stack.\n  shape: b2Shape;\n\n  /// Use this to store application specific fixture data.\n  userData?: any;\n\n  /// The friction coefficient, usually in the range [0,1].\n  friction?: number;\n\n  /// The restitution (elasticity) usually in the range [0,1].\n  restitution?: number;\n\n  /// Restitution velocity threshold, usually in m/s. Collisions above this\n  /// speed have restitution applied (will bounce).\n  restitutionThreshold?: number;\n\n  /// The density, usually in kg/m^2.\n  density?: number;\n\n  /// A sensor shape collects contact information but never generates a collision\n  /// response.\n  isSensor?: boolean;\n\n  /// Contact filtering data.\n  filter?: b2IFilter;\n}\n\n/// A fixture definition is used to create a fixture. This class defines an\n/// abstract fixture definition. You can reuse fixture definitions safely.\nexport class b2FixtureDef implements b2IFixtureDef {\n  /// The shape, this must be set. The shape will be cloned, so you\n  /// can create the shape on the stack.\n  public shape!: b2Shape;\n\n  /// Use this to store application specific fixture data.\n  public userData: any = null;\n\n  /// The friction coefficient, usually in the range [0,1].\n  public friction: number = 0.2;\n\n  /// The restitution (elasticity) usually in the range [0,1].\n  public restitution: number = 0;\n\n  /// Restitution velocity threshold, usually in m/s. Collisions above this\n  /// speed have restitution applied (will bounce).\n  public restitutionThreshold: number = 1.0 * b2_lengthUnitsPerMeter;\n\n  /// The density, usually in kg/m^2.\n  public density: number = 0;\n\n  /// A sensor shape collects contact information but never generates a collision\n  /// response.\n  public isSensor: boolean = false;\n\n  /// Contact filtering data.\n  public readonly filter: b2Filter = new b2Filter();\n}\n\n/// This proxy is used internally to connect fixtures to the broad-phase.\nexport class b2FixtureProxy {\n  public readonly aabb: b2AABB = new b2AABB();\n  public readonly fixture: b2Fixture;\n  public readonly childIndex: number = 0;\n  public treeNode: b2TreeNode<b2FixtureProxy>;\n  constructor(fixture: b2Fixture, childIndex: number) {\n    this.fixture = fixture;\n    this.childIndex = childIndex;\n    this.fixture.m_shape.ComputeAABB(this.aabb, this.fixture.m_body.GetTransform(), childIndex);\n    this.treeNode = this.fixture.m_body.m_world.m_contactManager.m_broadPhase.CreateProxy(this.aabb, this);\n  }\n  public Reset(): void {\n    this.fixture.m_body.m_world.m_contactManager.m_broadPhase.DestroyProxy(this.treeNode);\n  }\n  public Touch(): void {\n    this.fixture.m_body.m_world.m_contactManager.m_broadPhase.TouchProxy(this.treeNode);\n  }\n  private static Synchronize_s_aabb1 = new b2AABB();\n  private static Synchronize_s_aabb2 = new b2AABB();\n  private static Synchronize_s_displacement = new b2Vec2();\n  public Synchronize(transform1: b2Transform, transform2: b2Transform): void {\n    if (transform1 === transform2) {\n      this.fixture.m_shape.ComputeAABB(this.aabb, transform1, this.childIndex);\n      this.fixture.m_body.m_world.m_contactManager.m_broadPhase.MoveProxy(this.treeNode, this.aabb, b2Vec2.ZERO);\n    } else {\n      // Compute an AABB that covers the swept shape (may miss some rotation effect).\n      const aabb1: b2AABB = b2FixtureProxy.Synchronize_s_aabb1;\n      const aabb2: b2AABB = b2FixtureProxy.Synchronize_s_aabb2;\n      this.fixture.m_shape.ComputeAABB(aabb1, transform1, this.childIndex);\n      this.fixture.m_shape.ComputeAABB(aabb2, transform2, this.childIndex);\n      this.aabb.Combine2(aabb1, aabb2);\n      const displacement: b2Vec2 = b2FixtureProxy.Synchronize_s_displacement;\n      displacement.Copy(aabb2.GetCenter()).SelfSub(aabb1.GetCenter());\n      this.fixture.m_body.m_world.m_contactManager.m_broadPhase.MoveProxy(this.treeNode, this.aabb, displacement);\n    }\n  }\n}\n\n/// A fixture is used to attach a shape to a body for collision detection. A fixture\n/// inherits its transform from its parent. Fixtures hold additional non-geometric data\n/// such as friction, collision filters, etc.\n/// Fixtures are created via b2Body::CreateFixture.\n/// @warning you cannot reuse fixtures.\nexport class b2Fixture {\n  public m_density: number = 0;\n\n  public m_next: b2Fixture | null = null;\n  public readonly m_body: b2Body;\n\n  public readonly m_shape: b2Shape;\n\n  public m_friction: number = 0;\n  public m_restitution: number = 0;\n  public m_restitutionThreshold: number = 1.0 * b2_lengthUnitsPerMeter;\n\n  public readonly m_proxies: b2FixtureProxy[] = [];\n  public get m_proxyCount(): number { return this.m_proxies.length; }\n\n  public readonly m_filter: b2Filter = new b2Filter();\n\n  public m_isSensor: boolean = false;\n\n  public m_userData: any = null;\n\n  constructor(body: b2Body, def: b2IFixtureDef) {\n    this.m_body = body;\n    this.m_shape = def.shape.Clone();\n    this.m_userData = b2Maybe(def.userData, null);\n    this.m_friction = b2Maybe(def.friction, 0.2);\n    this.m_restitution = b2Maybe(def.restitution, 0);\n    this.m_restitutionThreshold = b2Maybe(def.restitutionThreshold, 0);\n    this.m_filter.Copy(b2Maybe(def.filter, b2Filter.DEFAULT));\n    this.m_isSensor = b2Maybe(def.isSensor, false);\n    this.m_density = b2Maybe(def.density, 0);\n  }\n\n  public Reset(): void {\n    // The proxies must be destroyed before calling this.\n    // DEBUG: b2Assert(this.m_proxyCount === 0);\n  }\n\n  /// Get the type of the child shape. You can use this to down cast to the concrete shape.\n  /// @return the shape type.\n  public GetType(): b2ShapeType {\n    return this.m_shape.GetType();\n  }\n\n  /// Get the child shape. You can modify the child shape, however you should not change the\n  /// number of vertices because this will crash some collision caching mechanisms.\n  /// Manipulating the shape may lead to non-physical behavior.\n  public GetShape(): b2Shape {\n    return this.m_shape;\n  }\n\n  /// Set if this fixture is a sensor.\n  public SetSensor(sensor: boolean): void {\n    if (sensor !== this.m_isSensor) {\n      this.m_body.SetAwake(true);\n      this.m_isSensor = sensor;\n    }\n  }\n\n  /// Is this fixture a sensor (non-solid)?\n  /// @return the true if the shape is a sensor.\n  public IsSensor(): boolean {\n    return this.m_isSensor;\n  }\n\n  /// Set the contact filtering data. This will not update contacts until the next time\n  /// step when either parent body is active and awake.\n  /// This automatically calls Refilter.\n  public SetFilterData(filter: b2Filter): void {\n    this.m_filter.Copy(filter);\n\n    this.Refilter();\n  }\n\n  /// Get the contact filtering data.\n  public GetFilterData(): Readonly<b2Filter> {\n    return this.m_filter;\n  }\n\n  /// Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldCollide.\n  public Refilter(): void {\n    // Flag associated contacts for filtering.\n    let edge = this.m_body.GetContactList();\n\n    while (edge) {\n      const contact = edge.contact;\n      const fixtureA = contact.GetFixtureA();\n      const fixtureB = contact.GetFixtureB();\n      if (fixtureA === this || fixtureB === this) {\n        contact.FlagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n\n    // Touch each proxy so that new pairs may be created\n    this.TouchProxies();\n  }\n\n  /// Get the parent body of this fixture. This is NULL if the fixture is not attached.\n  /// @return the parent body.\n  public GetBody(): b2Body {\n    return this.m_body;\n  }\n\n  /// Get the next fixture in the parent body's fixture list.\n  /// @return the next shape.\n  public GetNext(): b2Fixture | null {\n    return this.m_next;\n  }\n\n  /// Get the user data that was assigned in the fixture definition. Use this to\n  /// store your application specific data.\n  public GetUserData(): any {\n    return this.m_userData;\n  }\n\n  /// Set the user data. Use this to store your application specific data.\n  public SetUserData(data: any): void {\n    this.m_userData = data;\n  }\n\n  /// Test a point for containment in this fixture.\n  /// @param p a point in world coordinates.\n  public TestPoint(p: XY): boolean {\n    return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  public ComputeDistance(p: b2Vec2, normal: b2Vec2, childIndex: number): number {\n    return this.m_shape.ComputeDistance(this.m_body.GetTransform(), p, normal, childIndex);\n  }\n  // #endif\n\n  /// Cast a ray against this shape.\n  /// @param output the ray-cast results.\n  /// @param input the ray-cast input parameters.\n  public RayCast(output: b2RayCastOutput, input: b2RayCastInput, childIndex: number): boolean {\n    return this.m_shape.RayCast(output, input, this.m_body.GetTransform(), childIndex);\n  }\n\n  /// Get the mass data for this fixture. The mass data is based on the density and\n  /// the shape. The rotational inertia is about the shape's origin. This operation\n  /// may be expensive.\n  public GetMassData(massData: b2MassData = new b2MassData()): b2MassData {\n    this.m_shape.ComputeMass(massData, this.m_density);\n\n    return massData;\n  }\n\n  /// Set the density of this fixture. This will _not_ automatically adjust the mass\n  /// of the body. You must call b2Body::ResetMassData to update the body's mass.\n  public SetDensity(density: number): void {\n    this.m_density = density;\n  }\n\n  /// Get the density of this fixture.\n  public GetDensity(): number {\n    return this.m_density;\n  }\n\n  /// Get the coefficient of friction.\n  public GetFriction(): number {\n    return this.m_friction;\n  }\n\n  /// Set the coefficient of friction. This will _not_ change the friction of\n  /// existing contacts.\n  public SetFriction(friction: number): void {\n    this.m_friction = friction;\n  }\n\n  /// Get the coefficient of restitution.\n  public GetRestitution(): number {\n    return this.m_restitution;\n  }\n\n  /// Set the coefficient of restitution. This will _not_ change the restitution of\n  /// existing contacts.\n  public SetRestitution(restitution: number): void {\n    this.m_restitution = restitution;\n  }\n\n\t/// Get the restitution velocity threshold.\n\tpublic GetRestitutionThreshold(): number {\n    return this.m_restitutionThreshold;\n  }\n\n\t/// Set the restitution threshold. This will _not_ change the restitution threshold of\n\t/// existing contacts.\n\tpublic SetRestitutionThreshold(threshold: number): void {\n    this.m_restitutionThreshold = threshold;\n  }\n\n  /// Get the fixture's AABB. This AABB may be enlarge and/or stale.\n  /// If you need a more accurate AABB, compute it using the shape and\n  /// the body transform.\n  public GetAABB(childIndex: number): Readonly<b2AABB> {\n    // DEBUG: b2Assert(0 <= childIndex && childIndex < this.m_proxyCount);\n    return this.m_proxies[childIndex].aabb;\n  }\n\n  /// Dump this fixture to the log file.\n  public Dump(log: (format: string, ...args: any[]) => void, bodyIndex: number): void {\n    log(\"    const fd: b2FixtureDef = new b2FixtureDef();\\n\");\n    log(\"    fd.friction = %.15f;\\n\", this.m_friction);\n    log(\"    fd.restitution = %.15f;\\n\", this.m_restitution);\n    log(\"    fd.restitutionThreshold = %.15f;\\n\", this.m_restitutionThreshold);\n    log(\"    fd.density = %.15f;\\n\", this.m_density);\n    log(\"    fd.isSensor = %s;\\n\", (this.m_isSensor) ? (\"true\") : (\"false\"));\n    log(\"    fd.filter.categoryBits = %d;\\n\", this.m_filter.categoryBits);\n    log(\"    fd.filter.maskBits = %d;\\n\", this.m_filter.maskBits);\n    log(\"    fd.filter.groupIndex = %d;\\n\", this.m_filter.groupIndex);\n\n    this.m_shape.Dump(log);\n\n    log(\"\\n\");\n    log(\"    fd.shape = shape;\\n\");\n    log(\"\\n\");\n    log(\"    bodies[%d].CreateFixture(fd);\\n\", bodyIndex);\n  }\n\n  // These support body activation/deactivation.\n  public CreateProxies(): void {\n    if (this.m_proxies.length !== 0) { throw new Error(); }\n    // Create proxies in the broad-phase.\n    for (let i: number = 0; i < this.m_shape.GetChildCount(); ++i) {\n      this.m_proxies[i] = new b2FixtureProxy(this, i);\n    }\n  }\n\n  public DestroyProxies(): void {\n    // Destroy proxies in the broad-phase.\n    for (const proxy of this.m_proxies) {\n      proxy.Reset();\n    }\n    this.m_proxies.length = 0;\n  }\n\n  public TouchProxies(): void {\n    for (const proxy of this.m_proxies) {\n      proxy.Touch();\n    }\n  }\n\n  public SynchronizeProxies(transform1: b2Transform, transform2: b2Transform): void {\n    for (const proxy of this.m_proxies) {\n      proxy.Synchronize(transform1, transform2);\n    }\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Maybe } from \"../common/b2_common\";\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot, XY } from \"../common/b2_math\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Body } from \"./b2_body\";\n\nexport interface b2IFrictionJointDef extends b2IJointDef {\n  localAnchorA?: XY;\n\n  localAnchorB?: XY;\n\n  maxForce?: number;\n\n  maxTorque?: number;\n}\n\n/// Friction joint definition.\nexport class b2FrictionJointDef extends b2JointDef implements b2IFrictionJointDef {\n  public readonly localAnchorA: b2Vec2 = new b2Vec2();\n\n  public readonly localAnchorB: b2Vec2 = new b2Vec2();\n\n  public maxForce: number = 0;\n\n  public maxTorque: number = 0;\n\n  constructor() {\n    super(b2JointType.e_frictionJoint);\n  }\n\n  public Initialize(bA: b2Body, bB: b2Body, anchor: b2Vec2): void {\n    this.bodyA = bA;\n    this.bodyB = bB;\n    this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\n    this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\n  }\n}\n\nexport class b2FrictionJoint extends b2Joint {\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n\n  // Solver shared\n  public readonly m_linearImpulse: b2Vec2 = new b2Vec2();\n  public m_angularImpulse: number = 0;\n  public m_maxForce: number = 0;\n  public m_maxTorque: number = 0;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n  public readonly m_linearMass: b2Mat22 = new b2Mat22();\n  public m_angularMass: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n  public readonly m_K: b2Mat22 = new b2Mat22();\n\n  constructor(def: b2IFrictionJointDef) {\n    super(def);\n\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\n\n    this.m_linearImpulse.SetZero();\n    this.m_maxForce = b2Maybe(def.maxForce, 0);\n    this.m_maxTorque = b2Maybe(def.maxTorque, 0);\n\n    this.m_linearMass.SetZero();\n  }\n\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    // const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    // const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // Compute the effective mass matrix.\n    // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n    // J = [-I -r1_skew I r2_skew]\n    //     [ 0       -1 0       1]\n    // r_skew = [-ry; rx]\n\n    // Matlab\n    // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\n    //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\n    //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    const K: b2Mat22 = this.m_K; // new b2Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    K.GetInverse(this.m_linearMass);\n\n    this.m_angularMass = iA + iB;\n    if (this.m_angularMass > 0) {\n      this.m_angularMass = 1 / this.m_angularMass;\n    }\n\n    if (data.step.warmStarting) {\n      // Scale impulses to support a variable time step.\n      // m_linearImpulse *= data.step.dtRatio;\n      this.m_linearImpulse.SelfMul(data.step.dtRatio);\n      this.m_angularImpulse *= data.step.dtRatio;\n\n      // const P: b2Vec2(m_linearImpulse.x, m_linearImpulse.y);\n      const P: b2Vec2 = this.m_linearImpulse;\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      // wA -= iA * (b2Cross(m_rA, P) + m_angularImpulse);\n      wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_angularImpulse);\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      // wB += iB * (b2Cross(m_rB, P) + m_angularImpulse);\n      wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_angularImpulse);\n    } else {\n      this.m_linearImpulse.SetZero();\n      this.m_angularImpulse = 0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\n  private static SolveVelocityConstraints_s_impulseV = new b2Vec2();\n  private static SolveVelocityConstraints_s_oldImpulseV = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    const h: number = data.step.dt;\n\n    // Solve angular friction\n    {\n      const Cdot: number = wB - wA;\n      let impulse: number = (-this.m_angularMass * Cdot);\n\n      const oldImpulse: number = this.m_angularImpulse;\n      const maxImpulse: number = h * this.m_maxTorque;\n      this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\n      impulse = this.m_angularImpulse - oldImpulse;\n\n      wA -= iA * impulse;\n      wB += iB * impulse;\n    }\n\n    // Solve linear friction\n    {\n      // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\n      const Cdot_v2: b2Vec2 = b2Vec2.SubVV(\n        b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0),\n        b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1),\n        b2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2);\n\n      // b2Vec2 impulse = -b2Mul(m_linearMass, Cdot);\n      const impulseV: b2Vec2 = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2FrictionJoint.SolveVelocityConstraints_s_impulseV).SelfNeg();\n      // b2Vec2 oldImpulse = m_linearImpulse;\n      const oldImpulseV = b2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);\n      // m_linearImpulse += impulse;\n      this.m_linearImpulse.SelfAdd(impulseV);\n\n      const maxImpulse: number = h * this.m_maxForce;\n\n      if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\n        this.m_linearImpulse.Normalize();\n        this.m_linearImpulse.SelfMul(maxImpulse);\n      }\n\n      // impulse = m_linearImpulse - oldImpulse;\n      b2Vec2.SubVV(this.m_linearImpulse, oldImpulseV, impulseV);\n\n      // vA -= mA * impulse;\n      vA.SelfMulSub(mA, impulseV);\n      // wA -= iA * b2Cross(m_rA, impulse);\n      wA -= iA * b2Vec2.CrossVV(this.m_rA, impulseV);\n\n      // vB += mB * impulse;\n      vB.SelfMulAdd(mB, impulseV);\n      // wB += iB * b2Cross(m_rB, impulse);\n      wB += iB * b2Vec2.CrossVV(this.m_rB, impulseV);\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    return true;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    out.x = inv_dt * this.m_linearImpulse.x;\n    out.y = inv_dt * this.m_linearImpulse.y;\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return inv_dt * this.m_angularImpulse;\n  }\n\n  public GetLocalAnchorA(): Readonly<b2Vec2> { return this.m_localAnchorA; }\n\n  public GetLocalAnchorB(): Readonly<b2Vec2> { return this.m_localAnchorB; }\n\n  public SetMaxForce(force: number): void {\n    this.m_maxForce = force;\n  }\n\n  public GetMaxForce(): number {\n    return this.m_maxForce;\n  }\n\n  public SetMaxTorque(torque: number): void {\n    this.m_maxTorque = torque;\n  }\n\n  public GetMaxTorque(): number {\n    return this.m_maxTorque;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    const indexA: number = this.m_bodyA.m_islandIndex;\n    const indexB: number = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2FrictionJointDef = new b2FrictionJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\n    log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\n    log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\n// DEBUG: import { b2IsValid } from \"../common/b2_math\";\nimport { b2_linearSlop, b2Maybe } from \"../common/b2_common\";\nimport { b2Vec2, b2Rot, b2Transform, XY } from \"../common/b2_math\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2PrismaticJoint } from \"./b2_prismatic_joint\";\nimport { b2RevoluteJoint } from \"./b2_revolute_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Body } from \"./b2_body\";\n\nexport interface b2IGearJointDef extends b2IJointDef {\n  joint1: b2RevoluteJoint | b2PrismaticJoint;\n\n  joint2: b2RevoluteJoint | b2PrismaticJoint;\n\n  ratio?: number;\n}\n\n/// Gear joint definition. This definition requires two existing\n/// revolute or prismatic joints (any combination will work).\nexport class b2GearJointDef extends b2JointDef implements b2IGearJointDef {\n  public joint1!: b2RevoluteJoint | b2PrismaticJoint;\n\n  public joint2!: b2RevoluteJoint | b2PrismaticJoint;\n\n  public ratio: number = 1;\n\n  constructor() {\n    super(b2JointType.e_gearJoint);\n  }\n}\n\nexport class b2GearJoint extends b2Joint {\n  public m_joint1: b2RevoluteJoint | b2PrismaticJoint;\n  public m_joint2: b2RevoluteJoint | b2PrismaticJoint;\n\n  public m_typeA: b2JointType = b2JointType.e_unknownJoint;\n  public m_typeB: b2JointType = b2JointType.e_unknownJoint;\n\n  // Body A is connected to body C\n  // Body B is connected to body D\n  public m_bodyC: b2Body;\n  public m_bodyD: b2Body;\n\n  // Solver shared\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorC: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorD: b2Vec2 = new b2Vec2();\n\n  public readonly m_localAxisC: b2Vec2 = new b2Vec2();\n  public readonly m_localAxisD: b2Vec2 = new b2Vec2();\n\n  public m_referenceAngleA: number = 0;\n  public m_referenceAngleB: number = 0;\n\n  public m_constant: number = 0;\n  public m_ratio: number = 0;\n\n  public m_impulse: number = 0;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public m_indexC: number = 0;\n  public m_indexD: number = 0;\n  public readonly m_lcA: b2Vec2 = new b2Vec2();\n  public readonly m_lcB: b2Vec2 = new b2Vec2();\n  public readonly m_lcC: b2Vec2 = new b2Vec2();\n  public readonly m_lcD: b2Vec2 = new b2Vec2();\n  public m_mA: number = 0;\n  public m_mB: number = 0;\n  public m_mC: number = 0;\n  public m_mD: number = 0;\n  public m_iA: number = 0;\n  public m_iB: number = 0;\n  public m_iC: number = 0;\n  public m_iD: number = 0;\n  public readonly m_JvAC: b2Vec2 = new b2Vec2();\n  public readonly m_JvBD: b2Vec2 = new b2Vec2();\n  public m_JwA: number = 0;\n  public m_JwB: number = 0;\n  public m_JwC: number = 0;\n  public m_JwD: number = 0;\n  public m_mass: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_qC: b2Rot = new b2Rot();\n  public readonly m_qD: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n  public readonly m_lalcC: b2Vec2 = new b2Vec2();\n  public readonly m_lalcD: b2Vec2 = new b2Vec2();\n\n  constructor(def: b2IGearJointDef) {\n    super(def);\n\n    this.m_joint1 = def.joint1;\n    this.m_joint2 = def.joint2;\n\n    this.m_typeA = this.m_joint1.GetType();\n    this.m_typeB = this.m_joint2.GetType();\n\n    // DEBUG: b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\n    // DEBUG: b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\n\n    let coordinateA: number, coordinateB: number;\n\n    // TODO_ERIN there might be some problem with the joint edges in b2Joint.\n\n    this.m_bodyC = this.m_joint1.GetBodyA();\n    this.m_bodyA = this.m_joint1.GetBodyB();\n\n    // Body B on joint1 must be dynamic\n    // b2Assert(this.m_bodyA.m_type === b2_dynamicBody);\n\n    // Get geometry of joint1\n    const xfA: b2Transform = this.m_bodyA.m_xf;\n    const aA: number = this.m_bodyA.m_sweep.a;\n    const xfC: b2Transform = this.m_bodyC.m_xf;\n    const aC: number = this.m_bodyC.m_sweep.a;\n\n    if (this.m_typeA === b2JointType.e_revoluteJoint) {\n      const revolute: b2RevoluteJoint = def.joint1 as b2RevoluteJoint;\n      this.m_localAnchorC.Copy(revolute.m_localAnchorA);\n      this.m_localAnchorA.Copy(revolute.m_localAnchorB);\n      this.m_referenceAngleA = revolute.m_referenceAngle;\n      this.m_localAxisC.SetZero();\n\n      coordinateA = aA - aC - this.m_referenceAngleA;\n    } else {\n      const prismatic: b2PrismaticJoint = def.joint1 as b2PrismaticJoint;\n      this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\n      this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\n      this.m_referenceAngleA = prismatic.m_referenceAngle;\n      this.m_localAxisC.Copy(prismatic.m_localXAxisA);\n\n      // b2Vec2 pC = m_localAnchorC;\n      const pC = this.m_localAnchorC;\n      // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\n      const pA: b2Vec2 = b2Rot.MulTRV(\n        xfC.q,\n        b2Vec2.AddVV(\n          b2Rot.MulRV(xfA.q, this.m_localAnchorA, b2Vec2.s_t0),\n          b2Vec2.SubVV(xfA.p, xfC.p, b2Vec2.s_t1),\n          b2Vec2.s_t0),\n        b2Vec2.s_t0); // pA uses s_t0\n      // coordinateA = b2Dot(pA - pC, m_localAxisC);\n      coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\n    }\n\n    this.m_bodyD = this.m_joint2.GetBodyA();\n    this.m_bodyB = this.m_joint2.GetBodyB();\n\n    // Body B on joint2 must be dynamic\n    // b2Assert(this.m_bodyB.m_type === b2_dynamicBody);\n\n    // Get geometry of joint2\n    const xfB: b2Transform = this.m_bodyB.m_xf;\n    const aB: number = this.m_bodyB.m_sweep.a;\n    const xfD: b2Transform = this.m_bodyD.m_xf;\n    const aD: number = this.m_bodyD.m_sweep.a;\n\n    if (this.m_typeB === b2JointType.e_revoluteJoint) {\n      const revolute: b2RevoluteJoint = def.joint2 as b2RevoluteJoint;\n      this.m_localAnchorD.Copy(revolute.m_localAnchorA);\n      this.m_localAnchorB.Copy(revolute.m_localAnchorB);\n      this.m_referenceAngleB = revolute.m_referenceAngle;\n      this.m_localAxisD.SetZero();\n\n      coordinateB = aB - aD - this.m_referenceAngleB;\n    } else {\n      const prismatic: b2PrismaticJoint = def.joint2 as b2PrismaticJoint;\n      this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\n      this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\n      this.m_referenceAngleB = prismatic.m_referenceAngle;\n      this.m_localAxisD.Copy(prismatic.m_localXAxisA);\n\n      // b2Vec2 pD = m_localAnchorD;\n      const pD = this.m_localAnchorD;\n      // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\n      const pB: b2Vec2 = b2Rot.MulTRV(\n        xfD.q,\n        b2Vec2.AddVV(\n          b2Rot.MulRV(xfB.q, this.m_localAnchorB, b2Vec2.s_t0),\n          b2Vec2.SubVV(xfB.p, xfD.p, b2Vec2.s_t1),\n          b2Vec2.s_t0),\n        b2Vec2.s_t0); // pB uses s_t0\n      // coordinateB = b2Dot(pB - pD, m_localAxisD);\n      coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\n    }\n\n    this.m_ratio = b2Maybe(def.ratio, 1);\n\n    this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n    this.m_impulse = 0;\n  }\n\n  private static InitVelocityConstraints_s_u = new b2Vec2();\n  private static InitVelocityConstraints_s_rA = new b2Vec2();\n  private static InitVelocityConstraints_s_rB = new b2Vec2();\n  private static InitVelocityConstraints_s_rC = new b2Vec2();\n  private static InitVelocityConstraints_s_rD = new b2Vec2();\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_indexC = this.m_bodyC.m_islandIndex;\n    this.m_indexD = this.m_bodyD.m_islandIndex;\n    this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\n    this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\n    this.m_mA = this.m_bodyA.m_invMass;\n    this.m_mB = this.m_bodyB.m_invMass;\n    this.m_mC = this.m_bodyC.m_invMass;\n    this.m_mD = this.m_bodyD.m_invMass;\n    this.m_iA = this.m_bodyA.m_invI;\n    this.m_iB = this.m_bodyB.m_invI;\n    this.m_iC = this.m_bodyC.m_invI;\n    this.m_iD = this.m_bodyD.m_invI;\n\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const aC: number = data.positions[this.m_indexC].a;\n    const vC: b2Vec2 = data.velocities[this.m_indexC].v;\n    let wC: number = data.velocities[this.m_indexC].w;\n\n    const aD: number = data.positions[this.m_indexD].a;\n    const vD: b2Vec2 = data.velocities[this.m_indexD].v;\n    let wD: number = data.velocities[this.m_indexD].w;\n\n    // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\n    const qA: b2Rot = this.m_qA.SetAngle(aA),\n      qB: b2Rot = this.m_qB.SetAngle(aB),\n      qC: b2Rot = this.m_qC.SetAngle(aC),\n      qD: b2Rot = this.m_qD.SetAngle(aD);\n\n    this.m_mass = 0;\n\n    if (this.m_typeA === b2JointType.e_revoluteJoint) {\n      this.m_JvAC.SetZero();\n      this.m_JwA = 1;\n      this.m_JwC = 1;\n      this.m_mass += this.m_iA + this.m_iC;\n    } else {\n      // b2Vec2 u = b2Mul(qC, m_localAxisC);\n      const u: b2Vec2 = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\n      // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\n      b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\n      const rC: b2Vec2 = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\n      b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\n      const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\n      // m_JvAC = u;\n      this.m_JvAC.Copy(u);\n      // m_JwC = b2Cross(rC, u);\n      this.m_JwC = b2Vec2.CrossVV(rC, u);\n      // m_JwA = b2Cross(rA, u);\n      this.m_JwA = b2Vec2.CrossVV(rA, u);\n      this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n    }\n\n    if (this.m_typeB === b2JointType.e_revoluteJoint) {\n      this.m_JvBD.SetZero();\n      this.m_JwB = this.m_ratio;\n      this.m_JwD = this.m_ratio;\n      this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n    } else {\n      // b2Vec2 u = b2Mul(qD, m_localAxisD);\n      const u: b2Vec2 = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\n      // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\n      b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\n      const rD: b2Vec2 = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\n      b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\n      const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\n      // m_JvBD = m_ratio * u;\n      b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\n      // m_JwD = m_ratio * b2Cross(rD, u);\n      this.m_JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\n      // m_JwB = m_ratio * b2Cross(rB, u);\n      this.m_JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\n      this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n    }\n\n    // Compute effective mass.\n    this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\n\n    if (data.step.warmStarting) {\n      // vA += (m_mA * m_impulse) * m_JvAC;\n      vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\n      wA += this.m_iA * this.m_impulse * this.m_JwA;\n      // vB += (m_mB * m_impulse) * m_JvBD;\n      vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\n      wB += this.m_iB * this.m_impulse * this.m_JwB;\n      // vC -= (m_mC * m_impulse) * m_JvAC;\n      vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\n      wC -= this.m_iC * this.m_impulse * this.m_JwC;\n      // vD -= (m_mD * m_impulse) * m_JvBD;\n      vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\n      wD -= this.m_iD * this.m_impulse * this.m_JwD;\n    } else {\n      this.m_impulse = 0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n    // data.velocities[this.m_indexC].v = vC;\n    data.velocities[this.m_indexC].w = wC;\n    // data.velocities[this.m_indexD].v = vD;\n    data.velocities[this.m_indexD].w = wD;\n  }\n\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n    const vC: b2Vec2 = data.velocities[this.m_indexC].v;\n    let wC: number = data.velocities[this.m_indexC].w;\n    const vD: b2Vec2 = data.velocities[this.m_indexD].v;\n    let wD: number = data.velocities[this.m_indexD].w;\n\n    // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\n    let Cdot =\n      b2Vec2.DotVV(this.m_JvAC, b2Vec2.SubVV(vA, vC, b2Vec2.s_t0)) +\n      b2Vec2.DotVV(this.m_JvBD, b2Vec2.SubVV(vB, vD, b2Vec2.s_t0));\n    Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\n\n    const impulse: number = -this.m_mass * Cdot;\n    this.m_impulse += impulse;\n\n    // vA += (m_mA * impulse) * m_JvAC;\n    vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\n    wA += this.m_iA * impulse * this.m_JwA;\n    // vB += (m_mB * impulse) * m_JvBD;\n    vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\n    wB += this.m_iB * impulse * this.m_JwB;\n    // vC -= (m_mC * impulse) * m_JvAC;\n    vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\n    wC -= this.m_iC * impulse * this.m_JwC;\n    // vD -= (m_mD * impulse) * m_JvBD;\n    vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\n    wD -= this.m_iD * impulse * this.m_JwD;\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n    // data.velocities[this.m_indexC].v = vC;\n    data.velocities[this.m_indexC].w = wC;\n    // data.velocities[this.m_indexD].v = vD;\n    data.velocities[this.m_indexD].w = wD;\n  }\n\n  private static SolvePositionConstraints_s_u = new b2Vec2();\n  private static SolvePositionConstraints_s_rA = new b2Vec2();\n  private static SolvePositionConstraints_s_rB = new b2Vec2();\n  private static SolvePositionConstraints_s_rC = new b2Vec2();\n  private static SolvePositionConstraints_s_rD = new b2Vec2();\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    let aA: number = data.positions[this.m_indexA].a;\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    let aB: number = data.positions[this.m_indexB].a;\n    const cC: b2Vec2 = data.positions[this.m_indexC].c;\n    let aC: number = data.positions[this.m_indexC].a;\n    const cD: b2Vec2 = data.positions[this.m_indexD].c;\n    let aD: number = data.positions[this.m_indexD].a;\n\n    // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\n    const qA: b2Rot = this.m_qA.SetAngle(aA),\n      qB: b2Rot = this.m_qB.SetAngle(aB),\n      qC: b2Rot = this.m_qC.SetAngle(aC),\n      qD: b2Rot = this.m_qD.SetAngle(aD);\n\n    const linearError: number = 0;\n\n    let coordinateA: number, coordinateB: number;\n\n    const JvAC: b2Vec2 = this.m_JvAC, JvBD: b2Vec2 = this.m_JvBD;\n    let JwA: number, JwB: number, JwC: number, JwD: number;\n    let mass: number = 0;\n\n    if (this.m_typeA === b2JointType.e_revoluteJoint) {\n      JvAC.SetZero();\n      JwA = 1;\n      JwC = 1;\n      mass += this.m_iA + this.m_iC;\n\n      coordinateA = aA - aC - this.m_referenceAngleA;\n    } else {\n      // b2Vec2 u = b2Mul(qC, m_localAxisC);\n      const u: b2Vec2 = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\n      // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\n      const rC: b2Vec2 = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\n      const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\n      // JvAC = u;\n      JvAC.Copy(u);\n      // JwC = b2Cross(rC, u);\n      JwC = b2Vec2.CrossVV(rC, u);\n      // JwA = b2Cross(rA, u);\n      JwA = b2Vec2.CrossVV(rA, u);\n      mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n      // b2Vec2 pC = m_localAnchorC - m_lcC;\n      const pC = this.m_lalcC;\n      // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\n      const pA: b2Vec2 = b2Rot.MulTRV(\n        qC,\n        b2Vec2.AddVV(\n          rA,\n          b2Vec2.SubVV(cA, cC, b2Vec2.s_t0),\n          b2Vec2.s_t0),\n        b2Vec2.s_t0); // pA uses s_t0\n      // coordinateA = b2Dot(pA - pC, m_localAxisC);\n      coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\n    }\n\n    if (this.m_typeB === b2JointType.e_revoluteJoint) {\n      JvBD.SetZero();\n      JwB = this.m_ratio;\n      JwD = this.m_ratio;\n      mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n      coordinateB = aB - aD - this.m_referenceAngleB;\n    } else {\n      // b2Vec2 u = b2Mul(qD, m_localAxisD);\n      const u: b2Vec2 = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\n      // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\n      const rD: b2Vec2 = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\n      const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\n      // JvBD = m_ratio * u;\n      b2Vec2.MulSV(this.m_ratio, u, JvBD);\n      // JwD = m_ratio * b2Cross(rD, u);\n      JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\n      // JwB = m_ratio * b2Cross(rB, u);\n      JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\n      mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\n\n      // b2Vec2 pD = m_localAnchorD - m_lcD;\n      const pD = this.m_lalcD;\n      // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\n      const pB: b2Vec2 = b2Rot.MulTRV(\n        qD,\n        b2Vec2.AddVV(\n          rB,\n          b2Vec2.SubVV(cB, cD, b2Vec2.s_t0),\n          b2Vec2.s_t0),\n        b2Vec2.s_t0); // pB uses s_t0\n      // coordinateB = b2Dot(pB - pD, m_localAxisD);\n      coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\n    }\n\n    const C: number = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\n\n    let impulse: number = 0;\n    if (mass > 0) {\n      impulse = -C / mass;\n    }\n\n    // cA += m_mA * impulse * JvAC;\n    cA.SelfMulAdd(this.m_mA * impulse, JvAC);\n    aA += this.m_iA * impulse * JwA;\n    // cB += m_mB * impulse * JvBD;\n    cB.SelfMulAdd(this.m_mB * impulse, JvBD);\n    aB += this.m_iB * impulse * JwB;\n    // cC -= m_mC * impulse * JvAC;\n    cC.SelfMulSub(this.m_mC * impulse, JvAC);\n    aC -= this.m_iC * impulse * JwC;\n    // cD -= m_mD * impulse * JvBD;\n    cD.SelfMulSub(this.m_mD * impulse, JvBD);\n    aD -= this.m_iD * impulse * JwD;\n\n    // data.positions[this.m_indexA].c = cA;\n    data.positions[this.m_indexA].a = aA;\n    // data.positions[this.m_indexB].c = cB;\n    data.positions[this.m_indexB].a = aB;\n    // data.positions[this.m_indexC].c = cC;\n    data.positions[this.m_indexC].a = aC;\n    // data.positions[this.m_indexD].c = cD;\n    data.positions[this.m_indexD].a = aD;\n\n    // TODO_ERIN not implemented\n    return linearError < b2_linearSlop;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    // b2Vec2 P = m_impulse * m_JvAC;\n    // return inv_dt * P;\n    return b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    // float32 L = m_impulse * m_JwA;\n    // return inv_dt * L;\n    return inv_dt * this.m_impulse * this.m_JwA;\n  }\n\n  public GetJoint1() { return this.m_joint1; }\n\n  public GetJoint2() { return this.m_joint2; }\n\n  public GetRatio() {\n    return this.m_ratio;\n  }\n\n  public SetRatio(ratio: number): void {\n    // DEBUG: b2Assert(b2IsValid(ratio));\n    this.m_ratio = ratio;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    const indexA = this.m_bodyA.m_islandIndex;\n    const indexB = this.m_bodyB.m_islandIndex;\n\n    const index1 = this.m_joint1.m_index;\n    const index2 = this.m_joint2.m_index;\n\n    log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.joint1 = joints[%d];\\n\", index1);\n    log(\"  jd.joint2 = joints[%d];\\n\", index2);\n    log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_maxFloat, b2_timeToSleep } from \"../common/b2_common\";\nimport { b2_maxTranslation, b2_maxTranslationSquared } from \"../common/b2_common\";\nimport { b2_maxRotation, b2_maxRotationSquared } from \"../common/b2_common\";\nimport { b2_linearSleepTolerance, b2_angularSleepTolerance } from \"../common/b2_common\";\nimport { b2Abs, b2Min, b2Max, b2Vec2 } from \"../common/b2_math\";\nimport { b2Timer } from \"../common/b2_timer\";\nimport { b2Contact } from \"./b2_contact\";\nimport { b2ContactSolver, b2ContactSolverDef } from \"./b2_contact_solver\";\nimport { b2ContactVelocityConstraint } from \"./b2_contact_solver\";\nimport { b2Joint } from \"./b2_joint\";\nimport { b2Body, b2BodyType } from \"./b2_body\";\nimport { b2TimeStep, b2Profile, b2SolverData, b2Position, b2Velocity } from \"./b2_time_step\";\nimport { b2ContactImpulse, b2ContactListener } from \"./b2_world_callbacks\";\n\n/*\nPosition Correction Notes\n=========================\nI tried the several algorithms for position correction of the 2D revolute joint.\nI looked at these systems:\n- simple pendulum (1m diameter sphere on massless 5m stick) with initial angular velocity of 100 rad/s.\n- suspension bridge with 30 1m long planks of length 1m.\n- multi-link chain with 30 1m long links.\n\nHere are the algorithms:\n\nBaumgarte - A fraction of the position error is added to the velocity error. There is no\nseparate position solver.\n\nPseudo Velocities - After the velocity solver and position integration,\nthe position error, Jacobian, and effective mass are recomputed. Then\nthe velocity constraints are solved with pseudo velocities and a fraction\nof the position error is added to the pseudo velocity error. The pseudo\nvelocities are initialized to zero and there is no warm-starting. After\nthe position solver, the pseudo velocities are added to the positions.\nThis is also called the First Order World method or the Position LCP method.\n\nModified Nonlinear Gauss-Seidel (NGS) - Like Pseudo Velocities except the\nposition error is re-computed for each constraint and the positions are updated\nafter the constraint is solved. The radius vectors (aka Jacobians) are\nre-computed too (otherwise the algorithm has horrible instability). The pseudo\nvelocity states are not needed because they are effectively zero at the beginning\nof each iteration. Since we have the current position error, we allow the\niterations to terminate early if the error becomes smaller than b2_linearSlop.\n\nFull NGS or just NGS - Like Modified NGS except the effective mass are re-computed\neach time a constraint is solved.\n\nHere are the results:\nBaumgarte - this is the cheapest algorithm but it has some stability problems,\nespecially with the bridge. The chain links separate easily close to the root\nand they jitter as they struggle to pull together. This is one of the most common\nmethods in the field. The big drawback is that the position correction artificially\naffects the momentum, thus leading to instabilities and false bounce. I used a\nbias factor of 0.2. A larger bias factor makes the bridge less stable, a smaller\nfactor makes joints and contacts more spongy.\n\nPseudo Velocities - the is more stable than the Baumgarte method. The bridge is\nstable. However, joints still separate with large angular velocities. Drag the\nsimple pendulum in a circle quickly and the joint will separate. The chain separates\neasily and does not recover. I used a bias factor of 0.2. A larger value lead to\nthe bridge collapsing when a heavy cube drops on it.\n\nModified NGS - this algorithm is better in some ways than Baumgarte and Pseudo\nVelocities, but in other ways it is worse. The bridge and chain are much more\nstable, but the simple pendulum goes unstable at high angular velocities.\n\nFull NGS - stable in all tests. The joints display good stiffness. The bridge\nstill sags, but this is better than infinite forces.\n\nRecommendations\nPseudo Velocities are not really worthwhile because the bridge and chain cannot\nrecover from joint separation. In other cases the benefit over Baumgarte is small.\n\nModified NGS is not a robust method for the revolute joint due to the violent\ninstability seen in the simple pendulum. Perhaps it is viable with other constraint\ntypes, especially scalar constraints where the effective mass is a scalar.\n\nThis leaves Baumgarte and Full NGS. Baumgarte has small, but manageable instabilities\nand is very fast. I don't think we can escape Baumgarte, especially in highly\ndemanding cases where high constraint fidelity is not needed.\n\nFull NGS is robust and easy on the eyes. I recommend this as an option for\nhigher fidelity simulation and certainly for suspension bridges and long chains.\nFull NGS might be a good choice for ragdolls, especially motorized ragdolls where\njoint separation can be problematic. The number of NGS iterations can be reduced\nfor better performance without harming robustness much.\n\nEach joint in a can be handled differently in the position solver. So I recommend\na system where the user can select the algorithm on a per joint basis. I would\nprobably default to the slower Full NGS and let the user select the faster\nBaumgarte method in performance critical scenarios.\n*/\n\n/*\nCache Performance\n\nThe Box2D solvers are dominated by cache misses. Data structures are designed\nto increase the number of cache hits. Much of misses are due to random access\nto body data. The constraint structures are iterated over linearly, which leads\nto few cache misses.\n\nThe bodies are not accessed during iteration. Instead read only data, such as\nthe mass values are stored with the constraints. The mutable data are the constraint\nimpulses and the bodies velocities/positions. The impulses are held inside the\nconstraint structures. The body velocities/positions are held in compact, temporary\narrays to increase the number of cache hits. Linear and angular velocity are\nstored in a single array since multiple arrays lead to multiple misses.\n*/\n\n/*\n2D Rotation\n\nR = [cos(theta) -sin(theta)]\n    [sin(theta) cos(theta) ]\n\nthetaDot = omega\n\nLet q1 = cos(theta), q2 = sin(theta).\nR = [q1 -q2]\n    [q2  q1]\n\nq1Dot = -thetaDot * q2\nq2Dot = thetaDot * q1\n\nq1_new = q1_old - dt * w * q2\nq2_new = q2_old + dt * w * q1\nthen normalize.\n\nThis might be faster than computing sin+cos.\nHowever, we can compute sin+cos of the same setAngle fast.\n*/\n\nexport class b2Island {\n  public m_listener!: b2ContactListener;\n\n  public readonly m_bodies: b2Body[] = [/*1024*/]; // TODO: b2Settings\n  public readonly m_contacts: b2Contact[] = [/*1024*/]; // TODO: b2Settings\n  public readonly m_joints: b2Joint[] = [/*1024*/]; // TODO: b2Settings\n\n  public readonly m_positions: b2Position[] = b2Position.MakeArray(1024); // TODO: b2Settings\n  public readonly m_velocities: b2Velocity[] = b2Velocity.MakeArray(1024); // TODO: b2Settings\n\n  public m_bodyCount: number = 0;\n  public m_jointCount: number = 0;\n  public m_contactCount: number = 0;\n\n  public m_bodyCapacity: number = 0;\n  public m_contactCapacity: number = 0;\n  public m_jointCapacity: number = 0;\n\n  public Initialize(bodyCapacity: number, contactCapacity: number, jointCapacity: number, listener: b2ContactListener): void {\n    this.m_bodyCapacity = bodyCapacity;\n    this.m_contactCapacity = contactCapacity;\n    this.m_jointCapacity = jointCapacity;\n    this.m_bodyCount = 0;\n    this.m_contactCount = 0;\n    this.m_jointCount = 0;\n\n    this.m_listener = listener;\n\n    // TODO:\n    // while (this.m_bodies.length < bodyCapacity) {\n    //   this.m_bodies[this.m_bodies.length] = null;\n    // }\n    // TODO:\n    // while (this.m_contacts.length < contactCapacity) {\n    //   this.m_contacts[this.m_contacts.length] = null;\n    // }\n    // TODO:\n    // while (this.m_joints.length < jointCapacity) {\n    //   this.m_joints[this.m_joints.length] = null;\n    // }\n\n    // TODO:\n    if (this.m_positions.length < bodyCapacity) {\n      const new_length = b2Max(this.m_positions.length * 2, bodyCapacity);\n      while (this.m_positions.length < new_length) {\n        this.m_positions[this.m_positions.length] = new b2Position();\n      }\n    }\n    // TODO:\n    if (this.m_velocities.length < bodyCapacity) {\n      const new_length = b2Max(this.m_velocities.length * 2, bodyCapacity);\n      while (this.m_velocities.length < new_length) {\n        this.m_velocities[this.m_velocities.length] = new b2Velocity();\n      }\n    }\n  }\n\n  public Clear(): void {\n    this.m_bodyCount = 0;\n    this.m_contactCount = 0;\n    this.m_jointCount = 0;\n  }\n\n  public AddBody(body: b2Body): void {\n    // DEBUG: b2Assert(this.m_bodyCount < this.m_bodyCapacity);\n    body.m_islandIndex = this.m_bodyCount;\n    this.m_bodies[this.m_bodyCount++] = body;\n  }\n\n  public AddContact(contact: b2Contact): void {\n    // DEBUG: b2Assert(this.m_contactCount < this.m_contactCapacity);\n    this.m_contacts[this.m_contactCount++] = contact;\n  }\n\n  public AddJoint(joint: b2Joint): void {\n    // DEBUG: b2Assert(this.m_jointCount < this.m_jointCapacity);\n    this.m_joints[this.m_jointCount++] = joint;\n  }\n\n  private static s_timer = new b2Timer();\n  private static s_solverData = new b2SolverData();\n  private static s_contactSolverDef = new b2ContactSolverDef();\n  private static s_contactSolver = new b2ContactSolver();\n  private static s_translation = new b2Vec2();\n  public Solve(profile: b2Profile, step: b2TimeStep, gravity: b2Vec2, allowSleep: boolean): void {\n    const timer: b2Timer = b2Island.s_timer.Reset();\n\n    const h: number = step.dt;\n\n    // Integrate velocities and apply damping. Initialize the body state.\n    for (let i: number = 0; i < this.m_bodyCount; ++i) {\n      const b: b2Body = this.m_bodies[i];\n\n      // const c: b2Vec2 =\n      this.m_positions[i].c.Copy(b.m_sweep.c);\n      const a: number = b.m_sweep.a;\n      const v: b2Vec2 = this.m_velocities[i].v.Copy(b.m_linearVelocity);\n      let w: number = b.m_angularVelocity;\n\n      // Store positions for continuous collision.\n      b.m_sweep.c0.Copy(b.m_sweep.c);\n      b.m_sweep.a0 = b.m_sweep.a;\n\n      if (b.m_type === b2BodyType.b2_dynamicBody) {\n        // Integrate velocities.\n        // v += h * b->m_invMass * (b->m_gravityScale * b->m_mass * gravity + b->m_force);\n        v.x += h * b.m_invMass * (b.m_gravityScale * b.m_mass * gravity.x + b.m_force.x);\n        v.y += h * b.m_invMass * (b.m_gravityScale * b.m_mass * gravity.y + b.m_force.y);\n        w += h * b.m_invI * b.m_torque;\n\n        // Apply damping.\n        // ODE: dv/dt + c * v = 0\n        // Solution: v(t) = v0 * exp(-c * t)\n        // Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n        // v2 = exp(-c * dt) * v1\n        // Pade approximation:\n        // v2 = v1 * 1 / (1 + c * dt)\n        v.SelfMul(1.0 / (1.0 + h * b.m_linearDamping));\n        w *= 1.0 / (1.0 + h * b.m_angularDamping);\n      }\n\n      // this.m_positions[i].c = c;\n      this.m_positions[i].a = a;\n      // this.m_velocities[i].v = v;\n      this.m_velocities[i].w = w;\n    }\n\n    timer.Reset();\n\n    // Solver data\n    const solverData: b2SolverData = b2Island.s_solverData;\n    solverData.step.Copy(step);\n    solverData.positions = this.m_positions;\n    solverData.velocities = this.m_velocities;\n\n    // Initialize velocity constraints.\n    const contactSolverDef: b2ContactSolverDef = b2Island.s_contactSolverDef;\n    contactSolverDef.step.Copy(step);\n    contactSolverDef.contacts = this.m_contacts;\n    contactSolverDef.count = this.m_contactCount;\n    contactSolverDef.positions = this.m_positions;\n    contactSolverDef.velocities = this.m_velocities;\n\n    const contactSolver: b2ContactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\n    contactSolver.InitializeVelocityConstraints();\n\n    if (step.warmStarting) {\n      contactSolver.WarmStart();\n    }\n\n    for (let i: number = 0; i < this.m_jointCount; ++i) {\n      this.m_joints[i].InitVelocityConstraints(solverData);\n    }\n\n    profile.solveInit = timer.GetMilliseconds();\n\n    // Solve velocity constraints.\n    timer.Reset();\n    for (let i: number = 0; i < step.velocityIterations; ++i) {\n      for (let j: number = 0; j < this.m_jointCount; ++j) {\n        this.m_joints[j].SolveVelocityConstraints(solverData);\n      }\n\n      contactSolver.SolveVelocityConstraints();\n    }\n\n    // Store impulses for warm starting\n    contactSolver.StoreImpulses();\n    profile.solveVelocity = timer.GetMilliseconds();\n\n    // Integrate positions.\n    for (let i: number = 0; i < this.m_bodyCount; ++i) {\n      const c: b2Vec2 = this.m_positions[i].c;\n      let a: number = this.m_positions[i].a;\n      const v: b2Vec2 = this.m_velocities[i].v;\n      let w: number = this.m_velocities[i].w;\n\n      // Check for large velocities\n      const translation: b2Vec2 = b2Vec2.MulSV(h, v, b2Island.s_translation);\n      if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\n        const ratio: number = b2_maxTranslation / translation.Length();\n        v.SelfMul(ratio);\n      }\n\n      const rotation: number = h * w;\n      if (rotation * rotation > b2_maxRotationSquared) {\n        const ratio: number = b2_maxRotation / b2Abs(rotation);\n        w *= ratio;\n      }\n\n      // Integrate\n      c.x += h * v.x;\n      c.y += h * v.y;\n      a += h * w;\n\n      // this.m_positions[i].c = c;\n      this.m_positions[i].a = a;\n      // this.m_velocities[i].v = v;\n      this.m_velocities[i].w = w;\n    }\n\n    // Solve position constraints\n    timer.Reset();\n    let positionSolved: boolean = false;\n    for (let i: number = 0; i < step.positionIterations; ++i) {\n      const contactsOkay: boolean = contactSolver.SolvePositionConstraints();\n\n      let jointsOkay: boolean = true;\n      for (let j: number = 0; j < this.m_jointCount; ++j) {\n        const jointOkay: boolean = this.m_joints[j].SolvePositionConstraints(solverData);\n        jointsOkay = jointsOkay && jointOkay;\n      }\n\n      if (contactsOkay && jointsOkay) {\n        // Exit early if the position errors are small.\n        positionSolved = true;\n        break;\n      }\n    }\n\n    // Copy state buffers back to the bodies\n    for (let i: number = 0; i < this.m_bodyCount; ++i) {\n      const body: b2Body = this.m_bodies[i];\n      body.m_sweep.c.Copy(this.m_positions[i].c);\n      body.m_sweep.a = this.m_positions[i].a;\n      body.m_linearVelocity.Copy(this.m_velocities[i].v);\n      body.m_angularVelocity = this.m_velocities[i].w;\n      body.SynchronizeTransform();\n    }\n\n    profile.solvePosition = timer.GetMilliseconds();\n\n    this.Report(contactSolver.m_velocityConstraints);\n\n    if (allowSleep) {\n      let minSleepTime: number = b2_maxFloat;\n\n      const linTolSqr: number = b2_linearSleepTolerance * b2_linearSleepTolerance;\n      const angTolSqr: number = b2_angularSleepTolerance * b2_angularSleepTolerance;\n\n      for (let i: number = 0; i < this.m_bodyCount; ++i) {\n        const b: b2Body = this.m_bodies[i];\n        if (b.GetType() === b2BodyType.b2_staticBody) {\n          continue;\n        }\n\n        if (!b.m_autoSleepFlag ||\n          b.m_angularVelocity * b.m_angularVelocity > angTolSqr ||\n          b2Vec2.DotVV(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\n          b.m_sleepTime = 0;\n          minSleepTime = 0;\n        } else {\n          b.m_sleepTime += h;\n          minSleepTime = b2Min(minSleepTime, b.m_sleepTime);\n        }\n      }\n\n      if (minSleepTime >= b2_timeToSleep && positionSolved) {\n        for (let i: number = 0; i < this.m_bodyCount; ++i) {\n          const b: b2Body = this.m_bodies[i];\n          b.SetAwake(false);\n        }\n      }\n    }\n  }\n\n  public SolveTOI(subStep: b2TimeStep, toiIndexA: number, toiIndexB: number): void {\n    // DEBUG: b2Assert(toiIndexA < this.m_bodyCount);\n    // DEBUG: b2Assert(toiIndexB < this.m_bodyCount);\n\n    // Initialize the body state.\n    for (let i: number = 0; i < this.m_bodyCount; ++i) {\n      const b: b2Body = this.m_bodies[i];\n      this.m_positions[i].c.Copy(b.m_sweep.c);\n      this.m_positions[i].a = b.m_sweep.a;\n      this.m_velocities[i].v.Copy(b.m_linearVelocity);\n      this.m_velocities[i].w = b.m_angularVelocity;\n    }\n\n    const contactSolverDef: b2ContactSolverDef = b2Island.s_contactSolverDef;\n    contactSolverDef.contacts = this.m_contacts;\n    contactSolverDef.count = this.m_contactCount;\n    contactSolverDef.step.Copy(subStep);\n    contactSolverDef.positions = this.m_positions;\n    contactSolverDef.velocities = this.m_velocities;\n    const contactSolver: b2ContactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\n\n    // Solve position constraints.\n    for (let i: number = 0; i < subStep.positionIterations; ++i) {\n      const contactsOkay: boolean = contactSolver.SolveTOIPositionConstraints(toiIndexA, toiIndexB);\n      if (contactsOkay) {\n        break;\n      }\n    }\n\n  /*\n  #if 0\n    // Is the new position really safe?\n    for (int32 i = 0; i < this.m_contactCount; ++i) {\n      b2Contact* c = this.m_contacts[i];\n      b2Fixture* fA = c.GetFixtureA();\n      b2Fixture* fB = c.GetFixtureB();\n\n      b2Body* bA = fA.GetBody();\n      b2Body* bB = fB.GetBody();\n\n      int32 indexA = c.GetChildIndexA();\n      int32 indexB = c.GetChildIndexB();\n\n      b2DistanceInput input;\n      input.proxyA.Set(fA.GetShape(), indexA);\n      input.proxyB.Set(fB.GetShape(), indexB);\n      input.transformA = bA.GetTransform();\n      input.transformB = bB.GetTransform();\n      input.useRadii = false;\n\n      b2DistanceOutput output;\n      b2SimplexCache cache;\n      cache.count = 0;\n      b2Distance(&output, &cache, &input);\n\n      if (output.distance === 0 || cache.count === 3) {\n        cache.count += 0;\n      }\n    }\n  #endif\n  */\n\n    // Leap of faith to new safe state.\n    this.m_bodies[toiIndexA].m_sweep.c0.Copy(this.m_positions[toiIndexA].c);\n    this.m_bodies[toiIndexA].m_sweep.a0 = this.m_positions[toiIndexA].a;\n    this.m_bodies[toiIndexB].m_sweep.c0.Copy(this.m_positions[toiIndexB].c);\n    this.m_bodies[toiIndexB].m_sweep.a0 = this.m_positions[toiIndexB].a;\n\n    // No warm starting is needed for TOI events because warm\n    // starting impulses were applied in the discrete solver.\n    contactSolver.InitializeVelocityConstraints();\n\n    // Solve velocity constraints.\n    for (let i: number = 0; i < subStep.velocityIterations; ++i) {\n      contactSolver.SolveVelocityConstraints();\n    }\n\n    // Don't store the TOI contact forces for warm starting\n    // because they can be quite large.\n\n    const h: number = subStep.dt;\n\n    // Integrate positions\n    for (let i: number = 0; i < this.m_bodyCount; ++i) {\n      const c: b2Vec2 = this.m_positions[i].c;\n      let a: number = this.m_positions[i].a;\n      const v: b2Vec2 = this.m_velocities[i].v;\n      let w: number = this.m_velocities[i].w;\n\n      // Check for large velocities\n      const translation: b2Vec2 = b2Vec2.MulSV(h, v, b2Island.s_translation);\n      if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\n        const ratio: number = b2_maxTranslation / translation.Length();\n        v.SelfMul(ratio);\n      }\n\n      const rotation: number = h * w;\n      if (rotation * rotation > b2_maxRotationSquared) {\n        const ratio: number = b2_maxRotation / b2Abs(rotation);\n        w *= ratio;\n      }\n\n      // Integrate\n      c.SelfMulAdd(h, v);\n      a += h * w;\n\n      // this.m_positions[i].c = c;\n      this.m_positions[i].a = a;\n      // this.m_velocities[i].v = v;\n      this.m_velocities[i].w = w;\n\n      // Sync bodies\n      const body: b2Body = this.m_bodies[i];\n      body.m_sweep.c.Copy(c);\n      body.m_sweep.a = a;\n      body.m_linearVelocity.Copy(v);\n      body.m_angularVelocity = w;\n      body.SynchronizeTransform();\n    }\n\n    this.Report(contactSolver.m_velocityConstraints);\n  }\n\n  private static s_impulse = new b2ContactImpulse();\n  public Report(constraints: b2ContactVelocityConstraint[]): void {\n    if (this.m_listener === null) {\n      return;\n    }\n\n    for (let i: number = 0; i < this.m_contactCount; ++i) {\n      const c: b2Contact = this.m_contacts[i];\n\n      if (!c) { continue; }\n\n      const vc: b2ContactVelocityConstraint = constraints[i];\n\n      const impulse: b2ContactImpulse = b2Island.s_impulse;\n      impulse.count = vc.pointCount;\n      for (let j: number = 0; j < vc.pointCount; ++j) {\n        impulse.normalImpulses[j] = vc.points[j].normalImpulse;\n        impulse.tangentImpulses[j] = vc.points[j].tangentImpulse;\n      }\n\n      this.m_listener.PostSolve(c, impulse);\n    }\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2Maybe, b2_pi } from \"../common/b2_common\";\nimport { b2Vec2, XY, b2Transform } from \"../common/b2_math\";\nimport { b2Body } from \"./b2_body\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Draw, b2Color } from \"../common/b2_draw\";\nimport { b2PulleyJoint } from \"./b2_pulley_joint\";\n\nexport enum b2JointType {\n  e_unknownJoint = 0,\n  e_revoluteJoint = 1,\n  e_prismaticJoint = 2,\n  e_distanceJoint = 3,\n  e_pulleyJoint = 4,\n  e_mouseJoint = 5,\n  e_gearJoint = 6,\n  e_wheelJoint = 7,\n  e_weldJoint = 8,\n  e_frictionJoint = 9,\n  e_ropeJoint = 10,\n  e_motorJoint = 11,\n  e_areaJoint = 12,\n}\n\nexport class b2Jacobian {\n  public readonly linear: b2Vec2 = new b2Vec2();\n  public angularA: number = 0;\n  public angularB: number = 0;\n\n  public SetZero(): b2Jacobian {\n    this.linear.SetZero();\n    this.angularA = 0;\n    this.angularB = 0;\n    return this;\n  }\n\n  public Set(x: XY, a1: number, a2: number): b2Jacobian {\n    this.linear.Copy(x);\n    this.angularA = a1;\n    this.angularB = a2;\n    return this;\n  }\n}\n\n/// A joint edge is used to connect bodies and joints together\n/// in a joint graph where each body is a node and each joint\n/// is an edge. A joint edge belongs to a doubly linked list\n/// maintained in each attached body. Each joint has two joint\n/// nodes, one for each attached body.\nexport class b2JointEdge {\n  private _other: b2Body | null = null; ///< provides quick access to the other body attached.\n  public get other(): b2Body {\n    if (this._other === null) { throw new Error(); }\n    return this._other;\n  }\n  public set other(value: b2Body) {\n    if (this._other !== null) { throw new Error(); }\n    this._other = value;\n  }\n  public readonly joint: b2Joint;    ///< the joint\n  public prev: b2JointEdge | null = null;  ///< the previous joint edge in the body's joint list\n  public next: b2JointEdge | null = null;  ///< the next joint edge in the body's joint list\n  constructor(joint: b2Joint) {\n    this.joint = joint;\n  }\n  public Reset(): void {\n    this._other = null;\n    this.prev = null;\n    this.next = null;\n  }\n}\n\n/// Joint definitions are used to construct joints.\nexport interface b2IJointDef {\n  /// The joint type is set automatically for concrete joint types.\n  type: b2JointType;\n\n  /// Use this to attach application specific data to your joints.\n  userData?: any;\n\n  /// The first attached body.\n  bodyA: b2Body;\n\n  /// The second attached body.\n  bodyB: b2Body;\n\n  /// Set this flag to true if the attached bodies should collide.\n  collideConnected?: boolean;\n}\n\n/// Joint definitions are used to construct joints.\nexport abstract class b2JointDef implements b2IJointDef {\n  /// The joint type is set automatically for concrete joint types.\n  public readonly type: b2JointType = b2JointType.e_unknownJoint;\n\n  /// Use this to attach application specific data to your joints.\n  public userData: any = null;\n\n  /// The first attached body.\n  public bodyA!: b2Body;\n\n  /// The second attached body.\n  public bodyB!: b2Body;\n\n  /// Set this flag to true if the attached bodies should collide.\n  public collideConnected: boolean = false;\n\n  constructor(type: b2JointType) {\n    this.type = type;\n  }\n}\n\n/// Utility to compute linear stiffness values from frequency and damping ratio\n// void b2LinearStiffness(float& stiffness, float& damping,\n// \tfloat frequencyHertz, float dampingRatio,\n// \tconst b2Body* bodyA, const b2Body* bodyB);\nexport function b2LinearStiffness(def: { stiffness: number, damping: number }, frequencyHertz: number, dampingRatio: number, bodyA: b2Body, bodyB: b2Body): void {\n  const massA: number = bodyA.GetMass();\n  const massB: number = bodyB.GetMass();\n  let mass: number;\n  if (massA > 0.0 && massB > 0.0) {\n    mass = massA * massB / (massA + massB);\n  } else if (massA > 0.0) {\n    mass = massA;\n  } else {\n    mass = massB;\n  }\n\n  const omega: number = 2.0 * b2_pi * frequencyHertz;\n  def.stiffness = mass * omega * omega;\n  def.damping = 2.0 * mass * dampingRatio * omega;\n}\n\n/// Utility to compute rotational stiffness values frequency and damping ratio\n// void b2AngularStiffness(float& stiffness, float& damping,\n// \tfloat frequencyHertz, float dampingRatio,\n// \tconst b2Body* bodyA, const b2Body* bodyB);\nexport function b2AngularStiffness(def: { stiffness: number, damping: number }, frequencyHertz: number, dampingRatio: number, bodyA: b2Body, bodyB: b2Body): void {\n  const IA: number = bodyA.GetInertia();\n  const IB: number = bodyB.GetInertia();\n  let I: number;\n  if (IA > 0.0 && IB > 0.0) {\n    I = IA * IB / (IA + IB);\n  } else if (IA > 0.0) {\n    I = IA;\n  } else {\n    I = IB;\n  }\n\n  const omega: number = 2.0 * b2_pi * frequencyHertz;\n  def.stiffness = I * omega * omega;\n  def.damping = 2.0 * I * dampingRatio * omega;\n}\n\n/// The base joint class. Joints are used to constraint two bodies together in\n/// various fashions. Some joints also feature limits and motors.\nexport abstract class b2Joint {\n  public readonly m_type: b2JointType = b2JointType.e_unknownJoint;\n  public m_prev: b2Joint | null = null;\n  public m_next: b2Joint | null = null;\n  public readonly m_edgeA: b2JointEdge = new b2JointEdge(this);\n  public readonly m_edgeB: b2JointEdge = new b2JointEdge(this);\n  public m_bodyA: b2Body;\n  public m_bodyB: b2Body;\n\n  public m_index: number = 0;\n\n  public m_islandFlag: boolean = false;\n  public m_collideConnected: boolean = false;\n\n  public m_userData: any = null;\n\n  constructor(def: b2IJointDef) {\n    // DEBUG: b2Assert(def.bodyA !== def.bodyB);\n\n    this.m_type = def.type;\n    this.m_edgeA.other = def.bodyB;\n    this.m_edgeB.other = def.bodyA;\n    this.m_bodyA = def.bodyA;\n    this.m_bodyB = def.bodyB;\n\n    this.m_collideConnected = b2Maybe(def.collideConnected, false);\n\n    this.m_userData = b2Maybe(def.userData, null);\n  }\n\n  /// Get the type of the concrete joint.\n  public GetType(): b2JointType {\n    return this.m_type;\n  }\n\n  /// Get the first body attached to this joint.\n  public GetBodyA(): b2Body {\n    return this.m_bodyA;\n  }\n\n  /// Get the second body attached to this joint.\n  public GetBodyB(): b2Body {\n    return this.m_bodyB;\n  }\n\n  /// Get the anchor point on bodyA in world coordinates.\n  public abstract GetAnchorA<T extends XY>(out: T): T;\n\n  /// Get the anchor point on bodyB in world coordinates.\n  public abstract GetAnchorB<T extends XY>(out: T): T;\n\n  /// Get the reaction force on bodyB at the joint anchor in Newtons.\n  public abstract GetReactionForce<T extends XY>(inv_dt: number, out: T): T;\n\n  /// Get the reaction torque on bodyB in N*m.\n  public abstract GetReactionTorque(inv_dt: number): number;\n\n  /// Get the next joint the world joint list.\n  public GetNext(): b2Joint | null {\n    return this.m_next;\n  }\n\n  /// Get the user data pointer.\n  public GetUserData(): any {\n    return this.m_userData;\n  }\n\n  /// Set the user data pointer.\n  public SetUserData(data: any): void {\n    this.m_userData = data;\n  }\n\n  /// Short-cut function to determine if either body is inactive.\n  public IsEnabled(): boolean {\n    return this.m_bodyA.IsEnabled() && this.m_bodyB.IsEnabled();\n  }\n\n  /// Get collide connected.\n  /// Note: modifying the collide connect flag won't work correctly because\n  /// the flag is only checked when fixture AABBs begin to overlap.\n  public GetCollideConnected(): boolean {\n    return this.m_collideConnected;\n  }\n\n  /// Dump this joint to the log file.\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    log(\"// Dump is not supported for this joint type.\\n\");\n  }\n\n  /// Shift the origin for any points stored in world coordinates.\n  public ShiftOrigin(newOrigin: XY): void { }\n\n  /// Debug draw this joint\n  private static Draw_s_p1: b2Vec2 = new b2Vec2();\n  private static Draw_s_p2: b2Vec2 = new b2Vec2();\n  private static Draw_s_color: b2Color = new b2Color(0.5, 0.8, 0.8);\n  private static Draw_s_c: b2Color = new b2Color();\n  public Draw(draw: b2Draw): void {\n    const xf1: b2Transform = this.m_bodyA.GetTransform();\n    const xf2: b2Transform = this.m_bodyB.GetTransform();\n    const x1: b2Vec2 = xf1.p;\n    const x2: b2Vec2 = xf2.p;\n    const p1: b2Vec2 = this.GetAnchorA(b2Joint.Draw_s_p1);\n    const p2: b2Vec2 = this.GetAnchorB(b2Joint.Draw_s_p2);\n\n    const color: b2Color = b2Joint.Draw_s_color.SetRGB(0.5, 0.8, 0.8);\n\n    switch (this.m_type) {\n      case b2JointType.e_distanceJoint:\n        draw.DrawSegment(p1, p2, color);\n        break;\n\n      case b2JointType.e_pulleyJoint:\n        {\n          const pulley: b2PulleyJoint = this as unknown as b2PulleyJoint;\n          const s1: b2Vec2 = pulley.GetGroundAnchorA();\n          const s2: b2Vec2 = pulley.GetGroundAnchorB();\n          draw.DrawSegment(s1, p1, color);\n          draw.DrawSegment(s2, p2, color);\n          draw.DrawSegment(s1, s2, color);\n        }\n        break;\n\n      case b2JointType.e_mouseJoint:\n        {\n          const c = b2Joint.Draw_s_c;\n          c.Set(0.0, 1.0, 0.0);\n          draw.DrawPoint(p1, 4.0, c);\n          draw.DrawPoint(p2, 4.0, c);\n\n          c.Set(0.8, 0.8, 0.8);\n          draw.DrawSegment(p1, p2, c);\n        }\n        break;\n\n      default:\n        draw.DrawSegment(x1, p1, color);\n        draw.DrawSegment(p1, p2, color);\n        draw.DrawSegment(x2, p2, color);\n      }\n    }\n\n  public abstract InitVelocityConstraints(data: b2SolverData): void;\n\n  public abstract SolveVelocityConstraints(data: b2SolverData): void;\n\n  // This returns true if the position errors are within tolerance.\n  public abstract SolvePositionConstraints(data: b2SolverData): boolean;\n}\n",
    "/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\n// DEBUG: import { b2IsValid } from \"../common/b2_math\";\nimport { b2Maybe } from \"../common/b2_common\";\nimport { b2Clamp, b2Vec2, b2Mat22, b2Rot, XY } from \"../common/b2_math\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\n\n// Point-to-point constraint\n// Cdot = v2 - v1\n//      = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n// J = [-I -r1_skew I r2_skew ]\n// Identity used:\n// w k % (rx i + ry j) = w * (-ry i + rx j)\n//\n// r1 = offset - c1\n// r2 = -c2\n\n// Angle constraint\n// Cdot = w2 - w1\n// J = [0 0 -1 0 0 1]\n// K = invI1 + invI2\n\nexport interface b2IMotorJointDef extends b2IJointDef {\n  linearOffset?: XY;\n\n  angularOffset?: number;\n\n  maxForce?: number;\n\n  maxTorque?: number;\n\n  correctionFactor?: number;\n}\n\nexport class b2MotorJointDef extends b2JointDef implements b2IMotorJointDef {\n  public readonly linearOffset: b2Vec2 = new b2Vec2(0, 0);\n\n  public angularOffset: number = 0;\n\n  public maxForce: number = 1;\n\n  public maxTorque: number = 1;\n\n  public correctionFactor: number = 0.3;\n\n  constructor() {\n    super(b2JointType.e_motorJoint);\n  }\n\n  public Initialize(bA: b2Body, bB: b2Body): void {\n    this.bodyA = bA;\n    this.bodyB = bB;\n    // b2Vec2 xB = bodyB->GetPosition();\n    // linearOffset = bodyA->GetLocalPoint(xB);\n    this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);\n\n    const angleA: number = this.bodyA.GetAngle();\n    const angleB: number = this.bodyB.GetAngle();\n    this.angularOffset = angleB - angleA;\n  }\n}\n\nexport class b2MotorJoint extends b2Joint {\n  // Solver shared\n  public readonly m_linearOffset: b2Vec2 = new b2Vec2();\n  public m_angularOffset: number = 0;\n  public readonly m_linearImpulse: b2Vec2 = new b2Vec2();\n  public m_angularImpulse: number = 0;\n  public m_maxForce: number = 0;\n  public m_maxTorque: number = 0;\n  public m_correctionFactor: number = 0.3;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public readonly m_linearError: b2Vec2 = new b2Vec2();\n  public m_angularError: number = 0;\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n  public readonly m_linearMass: b2Mat22 = new b2Mat22();\n  public m_angularMass: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_K: b2Mat22 = new b2Mat22();\n\n  constructor(def: b2IMotorJointDef) {\n    super(def);\n\n    this.m_linearOffset.Copy(b2Maybe(def.linearOffset, b2Vec2.ZERO));\n    this.m_linearImpulse.SetZero();\n    this.m_maxForce = b2Maybe(def.maxForce, 0);\n    this.m_maxTorque = b2Maybe(def.maxTorque, 0);\n    this.m_correctionFactor = b2Maybe(def.correctionFactor, 0.3);\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    const pos: Readonly<b2Vec2> = this.m_bodyA.GetPosition();\n    out.x = pos.x;\n    out.y = pos.y;\n    return out;\n  }\n  public GetAnchorB<T extends XY>(out: T): T {\n    const pos: Readonly<b2Vec2> = this.m_bodyB.GetPosition();\n    out.x = pos.x;\n    out.y = pos.y;\n    return out;\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    // return inv_dt * m_linearImpulse;\n    return b2Vec2.MulSV(inv_dt, this.m_linearImpulse, out);\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return inv_dt * this.m_angularImpulse;\n  }\n\n  public SetLinearOffset(linearOffset: b2Vec2): void {\n    if (!b2Vec2.IsEqualToV(linearOffset, this.m_linearOffset)) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_linearOffset.Copy(linearOffset);\n    }\n  }\n  public GetLinearOffset() {\n    return this.m_linearOffset;\n  }\n\n  public SetAngularOffset(angularOffset: number): void {\n    if (angularOffset !== this.m_angularOffset) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_angularOffset = angularOffset;\n    }\n  }\n  public GetAngularOffset() {\n    return this.m_angularOffset;\n  }\n\n  public SetMaxForce(force: number): void {\n    // DEBUG: b2Assert(b2IsValid(force) && force >= 0);\n    this.m_maxForce = force;\n  }\n\n  public GetMaxForce() {\n    return this.m_maxForce;\n  }\n\n  public SetMaxTorque(torque: number): void {\n    // DEBUG: b2Assert(b2IsValid(torque) && torque >= 0);\n    this.m_maxTorque = torque;\n  }\n\n  public GetMaxTorque() {\n    return this.m_maxTorque;\n  }\n\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // Compute the effective mass matrix.\n    // this.m_rA = b2Mul(qA, m_linearOffset - this.m_localCenterA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, b2Vec2.SubVV(this.m_linearOffset, this.m_localCenterA, b2Vec2.s_t0), this.m_rA);\n    // this.m_rB = b2Mul(qB, -this.m_localCenterB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, b2Vec2.NegV(this.m_localCenterB, b2Vec2.s_t0), this.m_rB);\n\n    // J = [-I -r1_skew I r2_skew]\n    // r_skew = [-ry; rx]\n\n    // Matlab\n    // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\n    //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\n    //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    // Upper 2 by 2 of K for point to point\n    const K: b2Mat22 = this.m_K;\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    // this.m_linearMass = K.GetInverse();\n    K.GetInverse(this.m_linearMass);\n\n    this.m_angularMass = iA + iB;\n    if (this.m_angularMass > 0) {\n      this.m_angularMass = 1 / this.m_angularMass;\n    }\n\n    // this.m_linearError = cB + rB - cA - rA;\n    b2Vec2.SubVV(\n      b2Vec2.AddVV(cB, rB, b2Vec2.s_t0),\n      b2Vec2.AddVV(cA, rA, b2Vec2.s_t1),\n      this.m_linearError);\n    this.m_angularError = aB - aA - this.m_angularOffset;\n\n    if (data.step.warmStarting) {\n      // Scale impulses to support a variable time step.\n      // this.m_linearImpulse *= data.step.dtRatio;\n      this.m_linearImpulse.SelfMul(data.step.dtRatio);\n      this.m_angularImpulse *= data.step.dtRatio;\n\n      // b2Vec2 P(this.m_linearImpulse.x, this.m_linearImpulse.y);\n      const P: b2Vec2 = this.m_linearImpulse;\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * (b2Vec2.CrossVV(rA, P) + this.m_angularImpulse);\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * (b2Vec2.CrossVV(rB, P) + this.m_angularImpulse);\n    } else {\n      this.m_linearImpulse.SetZero();\n      this.m_angularImpulse = 0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA; // vA is a reference\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB; // vB is a reference\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\n  private static SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\n  private static SolveVelocityConstraints_s_oldImpulse_v2 = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    const h: number = data.step.dt;\n    const inv_h: number = data.step.inv_dt;\n\n    // Solve angular friction\n    {\n      const Cdot: number = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n      let impulse: number = -this.m_angularMass * Cdot;\n\n      const oldImpulse: number = this.m_angularImpulse;\n      const maxImpulse: number = h * this.m_maxTorque;\n      this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\n      impulse = this.m_angularImpulse - oldImpulse;\n\n      wA -= iA * impulse;\n      wB += iB * impulse;\n    }\n\n    // Solve linear friction\n    {\n      const rA = this.m_rA;\n      const rB = this.m_rB;\n\n      // b2Vec2 Cdot = vB + b2Vec2.CrossSV(wB, rB) - vA - b2Vec2.CrossSV(wA, rA) + inv_h * this.m_correctionFactor * this.m_linearError;\n      const Cdot_v2 =\n        b2Vec2.AddVV(\n          b2Vec2.SubVV(\n            b2Vec2.AddVV(vB, b2Vec2.CrossSV(wB, rB, b2Vec2.s_t0), b2Vec2.s_t0),\n            b2Vec2.AddVV(vA, b2Vec2.CrossSV(wA, rA, b2Vec2.s_t1), b2Vec2.s_t1), b2Vec2.s_t2),\n          b2Vec2.MulSV(inv_h * this.m_correctionFactor, this.m_linearError, b2Vec2.s_t3),\n          b2MotorJoint.SolveVelocityConstraints_s_Cdot_v2);\n\n      // b2Vec2 impulse = -b2Mul(this.m_linearMass, Cdot);\n      const impulse_v2: b2Vec2 = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2MotorJoint.SolveVelocityConstraints_s_impulse_v2).SelfNeg();\n      // b2Vec2 oldImpulse = this.m_linearImpulse;\n      const oldImpulse_v2 = b2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);\n      // this.m_linearImpulse += impulse;\n      this.m_linearImpulse.SelfAdd(impulse_v2);\n\n      const maxImpulse: number = h * this.m_maxForce;\n\n      if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\n        this.m_linearImpulse.Normalize();\n        // this.m_linearImpulse *= maxImpulse;\n        this.m_linearImpulse.SelfMul(maxImpulse);\n      }\n\n      // impulse = this.m_linearImpulse - oldImpulse;\n      b2Vec2.SubVV(this.m_linearImpulse, oldImpulse_v2, impulse_v2);\n\n      // vA -= mA * impulse;\n      vA.SelfMulSub(mA, impulse_v2);\n      // wA -= iA * b2Vec2.CrossVV(rA, impulse);\n      wA -= iA * b2Vec2.CrossVV(rA, impulse_v2);\n\n      // vB += mB * impulse;\n      vB.SelfMulAdd(mB, impulse_v2);\n      // wB += iB * b2Vec2.CrossVV(rB, impulse);\n      wB += iB * b2Vec2.CrossVV(rB, impulse_v2);\n    }\n\n    // data.velocities[this.m_indexA].v = vA; // vA is a reference\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB; // vB is a reference\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    return true;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    const indexA = this.m_bodyA.m_islandIndex;\n    const indexB = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2MotorJointDef = new b2MotorJointDef();\\n\");\n\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n\n    log(\"  jd.linearOffset.Set(%.15f, %.15f);\\n\", this.m_linearOffset.x, this.m_linearOffset.y);\n    log(\"  jd.angularOffset = %.15f;\\n\", this.m_angularOffset);\n    log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\n    log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\n    log(\"  jd.correctionFactor = %.15f;\\n\", this.m_correctionFactor);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert, b2_epsilon } from \"../common/b2_settings\";\n// DEBUG: import { b2IsValid } from \"../common/b2_math\";\nimport { b2_pi, b2Maybe } from \"../common/b2_common\";\nimport { b2Vec2, b2Mat22, b2Rot, b2Transform, XY } from \"../common/b2_math\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\n\nexport interface b2IMouseJointDef extends b2IJointDef {\n  target?: XY;\n\n  maxForce?: number;\n\n  stiffness?: number;\n\n  damping?: number;\n}\n\n/// Mouse joint definition. This requires a world target point,\n/// tuning parameters, and the time step.\nexport class b2MouseJointDef extends b2JointDef implements b2IMouseJointDef {\n  public readonly target: b2Vec2 = new b2Vec2();\n\n  public maxForce: number = 0;\n\n  public stiffness: number = 5;\n\n  public damping: number = 0.7;\n\n  constructor() {\n    super(b2JointType.e_mouseJoint);\n  }\n}\n\nexport class b2MouseJoint extends b2Joint {\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n  public readonly m_targetA: b2Vec2 = new b2Vec2();\n  public m_stiffness: number = 0;\n  public m_damping: number = 0;\n  public m_beta: number = 0;\n\n  // Solver shared\n  public readonly m_impulse: b2Vec2 = new b2Vec2();\n  public m_maxForce: number = 0;\n  public m_gamma: number = 0;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public m_invMassB: number = 0;\n  public m_invIB: number = 0;\n  public readonly m_mass: b2Mat22 = new b2Mat22();\n  public readonly m_C: b2Vec2 = new b2Vec2();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n  public readonly m_K: b2Mat22 = new b2Mat22();\n\n  constructor(def: b2IMouseJointDef) {\n    super(def);\n\n    this.m_targetA.Copy(b2Maybe(def.target, b2Vec2.ZERO));\n    // DEBUG: b2Assert(this.m_targetA.IsValid());\n    b2Transform.MulTXV(this.m_bodyB.GetTransform(), this.m_targetA, this.m_localAnchorB);\n\n    this.m_maxForce = b2Maybe(def.maxForce, 0);\n    // DEBUG: b2Assert(b2IsValid(this.m_maxForce) && this.m_maxForce >= 0);\n    this.m_impulse.SetZero();\n\n    this.m_stiffness = b2Maybe(def.stiffness, 0);\n    // DEBUG: b2Assert(b2IsValid(this.m_stiffness) && this.m_stiffness >= 0);\n    this.m_damping = b2Maybe(def.damping, 0);\n    // DEBUG: b2Assert(b2IsValid(this.m_damping) && this.m_damping >= 0);\n\n    this.m_beta = 0;\n    this.m_gamma = 0;\n  }\n\n  public SetTarget(target: b2Vec2): void {\n    if (!this.m_bodyB.IsAwake()) {\n      this.m_bodyB.SetAwake(true);\n    }\n    this.m_targetA.Copy(target);\n  }\n\n  public GetTarget() {\n    return this.m_targetA;\n  }\n\n  public SetMaxForce(maxForce: number): void {\n    this.m_maxForce = maxForce;\n  }\n\n  public GetMaxForce() {\n    return this.m_maxForce;\n  }\n\n  public SetStiffness(stiffness: number): void {\n    this.m_stiffness = stiffness;\n  }\n\n  public GetStiffness() {\n    return this.m_stiffness;\n  }\n\n  public SetDamping(damping: number) {\n    this.m_damping = damping;\n  }\n\n  public GetDamping() {\n    return this.m_damping;\n  }\n\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const qB = this.m_qB.SetAngle(aB);\n\n    const mass: number = this.m_bodyB.GetMass();\n\n    // Frequency\n    const omega: number = 2 * b2_pi * this.m_stiffness;\n\n    // Damping coefficient\n    const d: number = 2 * mass * this.m_damping * omega;\n\n    // Spring stiffness\n    const k: number = mass * (omega * omega);\n\n    // magic formulas\n    // gamma has units of inverse mass.\n    // beta has units of inverse time.\n    const h: number = data.step.dt;\n    this.m_gamma = h * (d + h * k);\n    if (this.m_gamma !== 0) {\n      this.m_gamma = 1 / this.m_gamma;\n    }\n    this.m_beta = h * k * this.m_gamma;\n\n    // Compute the effective mass matrix.\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n    // K    = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) * invI2 * skew(r2)]\n    //      = [1/m1+1/m2     0    ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y -r1.x*r1.y]\n    //        [    0     1/m1+1/m2]           [-r1.x*r1.y r1.x*r1.x]           [-r1.x*r1.y r1.x*r1.x]\n    const K = this.m_K;\n    K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;\n    K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;\n\n    K.GetInverse(this.m_mass);\n\n    // m_C = cB + m_rB - m_targetA;\n    this.m_C.x = cB.x + this.m_rB.x - this.m_targetA.x;\n    this.m_C.y = cB.y + this.m_rB.y - this.m_targetA.y;\n    // m_C *= m_beta;\n    this.m_C.SelfMul(this.m_beta);\n\n    // Cheat with some damping\n    wB *= 0.98;\n\n    if (data.step.warmStarting) {\n      this.m_impulse.SelfMul(data.step.dtRatio);\n      // vB += m_invMassB * m_impulse;\n      vB.x += this.m_invMassB * this.m_impulse.x;\n      vB.y += this.m_invMassB * this.m_impulse.y;\n      wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, this.m_impulse);\n    } else {\n      this.m_impulse.SetZero();\n    }\n\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_Cdot = new b2Vec2();\n  private static SolveVelocityConstraints_s_impulse = new b2Vec2();\n  private static SolveVelocityConstraints_s_oldImpulse = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    // Cdot = v + cross(w, r)\n    // b2Vec2 Cdot = vB + b2Cross(wB, m_rB);\n    const Cdot: b2Vec2 = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2MouseJoint.SolveVelocityConstraints_s_Cdot);\n    //  b2Vec2 impulse = b2Mul(m_mass, -(Cdot + m_C + m_gamma * m_impulse));\n    const impulse: b2Vec2 = b2Mat22.MulMV(\n      this.m_mass,\n      b2Vec2.AddVV(\n        Cdot,\n        b2Vec2.AddVV(this.m_C,\n          b2Vec2.MulSV(this.m_gamma, this.m_impulse, b2Vec2.s_t0),\n          b2Vec2.s_t0),\n        b2Vec2.s_t0).SelfNeg(),\n      b2MouseJoint.SolveVelocityConstraints_s_impulse);\n\n    // b2Vec2 oldImpulse = m_impulse;\n    const oldImpulse = b2MouseJoint.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);\n    // m_impulse += impulse;\n    this.m_impulse.SelfAdd(impulse);\n    const maxImpulse: number = data.step.dt * this.m_maxForce;\n    if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\n      this.m_impulse.SelfMul(maxImpulse / this.m_impulse.Length());\n    }\n    // impulse = m_impulse - oldImpulse;\n    b2Vec2.SubVV(this.m_impulse, oldImpulse, impulse);\n\n    // vB += m_invMassB * impulse;\n    vB.SelfMulAdd(this.m_invMassB, impulse);\n    wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, impulse);\n\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    return true;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    out.x = this.m_targetA.x;\n    out.y = this.m_targetA.y;\n    return out;\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    return b2Vec2.MulSV(inv_dt, this.m_impulse, out);\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return 0;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    log(\"Mouse joint dumping is not supported.\\n\");\n  }\n\n  public ShiftOrigin(newOrigin: b2Vec2) {\n    this.m_targetA.SelfSub(newOrigin);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform } from \"../common/b2_math\";\nimport { b2CollidePolygonAndCircle } from \"../collision/b2_collide_circle\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2CircleShape } from \"../collision/b2_circle_shape\";\nimport { b2PolygonShape } from \"../collision/b2_polygon_shape\";\nimport { b2Contact } from \"./b2_contact\";\n\nexport class b2PolygonAndCircleContact extends b2Contact<b2PolygonShape, b2CircleShape> {\n  public static Create(): b2Contact {\n    return new b2PolygonAndCircleContact();\n  }\n\n  public static Destroy(contact: b2Contact): void {\n  }\n\n  public Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void {\n    b2CollidePolygonAndCircle(manifold, this.GetShapeA(), xfA, this.GetShapeB(), xfB);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2Transform } from \"../common/b2_math\";\nimport { b2CollidePolygons } from \"../collision/b2_collide_polygon\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2PolygonShape } from \"../collision/b2_polygon_shape\";\nimport { b2Contact } from \"./b2_contact\";\n\nexport class b2PolygonContact extends b2Contact<b2PolygonShape, b2PolygonShape> {\n  public static Create(): b2Contact {\n    return new b2PolygonContact();\n  }\n\n  public static Destroy(contact: b2Contact): void {\n  }\n\n  public Evaluate(manifold: b2Manifold, xfA: b2Transform, xfB: b2Transform): void {\n    b2CollidePolygons(\n      manifold,\n      this.GetShapeA(), xfA,\n      this.GetShapeB(), xfB);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2_linearSlop, b2_angularSlop, b2Maybe } from \"../common/b2_common\";\nimport { b2Abs, b2Min, b2Max, b2Clamp, b2Vec2, b2Mat22, b2Vec3, b2Mat33, b2Rot, XY, b2Transform } from \"../common/b2_math\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Draw, b2Color } from \"../common/b2_draw\";\n\nexport interface b2IPrismaticJointDef extends b2IJointDef {\n  localAnchorA?: XY;\n\n  localAnchorB?: XY;\n\n  localAxisA?: XY;\n\n  referenceAngle?: number;\n\n  enableLimit?: boolean;\n\n  lowerTranslation?: number;\n\n  upperTranslation?: number;\n\n  enableMotor?: boolean;\n\n  maxMotorForce?: number;\n\n  motorSpeed?: number;\n}\n\n/// Prismatic joint definition. This requires defining a line of\n/// motion using an axis and an anchor point. The definition uses local\n/// anchor points and a local axis so that the initial configuration\n/// can violate the constraint slightly. The joint translation is zero\n/// when the local anchor points coincide in world space. Using local\n/// anchors and a local axis helps when saving and loading a game.\nexport class b2PrismaticJointDef extends b2JointDef implements b2IPrismaticJointDef {\n  public readonly localAnchorA: b2Vec2 = new b2Vec2();\n\n  public readonly localAnchorB: b2Vec2 = new b2Vec2();\n\n  public readonly localAxisA: b2Vec2 = new b2Vec2(1, 0);\n\n  public referenceAngle: number = 0;\n\n  public enableLimit = false;\n\n  public lowerTranslation: number = 0;\n\n  public upperTranslation: number = 0;\n\n  public enableMotor = false;\n\n  public maxMotorForce: number = 0;\n\n  public motorSpeed: number = 0;\n\n  constructor() {\n    super(b2JointType.e_prismaticJoint);\n  }\n\n  public Initialize(bA: b2Body, bB: b2Body, anchor: b2Vec2, axis: b2Vec2): void {\n    this.bodyA = bA;\n    this.bodyB = bB;\n    this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\n    this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\n    this.bodyA.GetLocalVector(axis, this.localAxisA);\n    this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\n  }\n}\n\n// Linear constraint (point-to-line)\n// d = p2 - p1 = x2 + r2 - x1 - r1\n// C = dot(perp, d)\n// Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n//      = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) + dot(cross(r2, perp), v2)\n// J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n//\n// Angular constraint\n// C = a2 - a1 + a_initial\n// Cdot = w2 - w1\n// J = [0 0 -1 0 0 1]\n//\n// K = J * invM * JT\n//\n// J = [-a -s1 a s2]\n//     [0  -1  0  1]\n// a = perp\n// s1 = cross(d + r1, a) = cross(p2 - x1, a)\n// s2 = cross(r2, a) = cross(p2 - x2, a)\n\n// Motor/Limit linear constraint\n// C = dot(ax1, d)\n// Cdot = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) + dot(cross(r2, ax1), v2)\n// J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n// Predictive limit is applied even when the limit is not active.\n// Prevents a constraint speed that can lead to a constraint error in one time step.\n// Want C2 = C1 + h * Cdot >= 0\n// Or:\n// Cdot + C1/h >= 0\n// I do not apply a negative constraint error because that is handled in position correction.\n// So:\n// Cdot + max(C1, 0)/h >= 0\n\n// Block Solver\n// We develop a block solver that includes the angular and linear constraints. This makes the limit stiffer.\n//\n// The Jacobian has 2 rows:\n// J = [-uT -s1 uT s2] // linear\n//     [0   -1   0  1] // angular\n//\n// u = perp\n// s1 = cross(d + r1, u), s2 = cross(r2, u)\n// a1 = cross(d + r1, v), a2 = cross(r2, v)\n\nexport class b2PrismaticJoint extends b2Joint {\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n  public readonly m_localXAxisA: b2Vec2 = new b2Vec2();\n  public readonly m_localYAxisA: b2Vec2 = new b2Vec2();\n  public m_referenceAngle: number = 0;\n  public readonly m_impulse: b2Vec2 = new b2Vec2(0, 0);\n  public m_motorImpulse: number = 0;\n  public m_lowerImpulse: number = 0;\n  public m_upperImpulse: number = 0;\n  public m_lowerTranslation: number = 0;\n  public m_upperTranslation: number = 0;\n  public m_maxMotorForce: number = 0;\n  public m_motorSpeed: number = 0;\n  public m_enableLimit: boolean = false;\n  public m_enableMotor: boolean = false;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n  public readonly m_axis: b2Vec2 = new b2Vec2(0, 0);\n  public readonly m_perp: b2Vec2 = new b2Vec2(0, 0);\n  public m_s1: number = 0;\n  public m_s2: number = 0;\n  public m_a1: number = 0;\n  public m_a2: number = 0;\n  public readonly m_K: b2Mat22 = new b2Mat22();\n  public readonly m_K3: b2Mat33 = new b2Mat33();\n  public readonly m_K2: b2Mat22 = new b2Mat22();\n  public m_translation: number = 0;\n  public m_axialMass: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n\n  constructor(def: b2IPrismaticJointDef) {\n    super(def);\n\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\n    this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, new b2Vec2(1, 0))).SelfNormalize();\n    b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\n    this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\n    this.m_lowerTranslation = b2Maybe(def.lowerTranslation, 0);\n    this.m_upperTranslation = b2Maybe(def.upperTranslation, 0);\n    // b2Assert(this.m_lowerTranslation <= this.m_upperTranslation);\n    this.m_maxMotorForce = b2Maybe(def.maxMotorForce, 0);\n    this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\n    this.m_enableLimit = b2Maybe(def.enableLimit, false);\n    this.m_enableMotor = b2Maybe(def.enableMotor, false);\n  }\n\n  private static InitVelocityConstraints_s_d = new b2Vec2();\n  private static InitVelocityConstraints_s_P = new b2Vec2();\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // Compute the effective masses.\n    // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n    // b2Vec2 d = (cB - cA) + rB - rA;\n    const d: b2Vec2 = b2Vec2.AddVV(\n      b2Vec2.SubVV(cB, cA, b2Vec2.s_t0),\n      b2Vec2.SubVV(rB, rA, b2Vec2.s_t1),\n      b2PrismaticJoint.InitVelocityConstraints_s_d);\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    // Compute motor Jacobian and effective mass.\n    {\n      // m_axis = b2Mul(qA, m_localXAxisA);\n      b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\n      // m_a1 = b2Cross(d + rA, m_axis);\n      this.m_a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_axis);\n      // m_a2 = b2Cross(rB, m_axis);\n      this.m_a2 = b2Vec2.CrossVV(rB, this.m_axis);\n\n      this.m_axialMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n      if (this.m_axialMass > 0) {\n        this.m_axialMass = 1 / this.m_axialMass;\n      }\n    }\n\n    // Prismatic constraint.\n    {\n      // m_perp = b2Mul(qA, m_localYAxisA);\n      b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\n\n      // m_s1 = b2Cross(d + rA, m_perp);\n      this.m_s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_perp);\n      // m_s2 = b2Cross(rB, m_perp);\n      this.m_s2 = b2Vec2.CrossVV(rB, this.m_perp);\n\n      // float32 k11 = mA + mB + iA * m_s1 * m_s1 + iB * m_s2 * m_s2;\n      this.m_K.ex.x = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n      // float32 k12 = iA * m_s1 + iB * m_s2;\n      this.m_K.ex.y = iA * this.m_s1 + iB * this.m_s2;\n      this.m_K.ey.x = this.m_K.ex.y;\n      // float32 k22 = iA + iB;\n      this.m_K.ey.y = iA + iB;\n      if (this.m_K.ey.y === 0) {\n        // For bodies with fixed rotation.\n        this.m_K.ey.y = 1;\n      }\n\n      // m_K.ex.Set(k11, k12);\n      // m_K.ey.Set(k12, k22);\n    }\n\n    // Compute motor and limit terms.\n    if (this.m_enableLimit) {\n      this.m_translation = b2Vec2.DotVV(this.m_axis, d);\n    } else {\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n\n    if (!this.m_enableMotor) {\n      this.m_motorImpulse = 0;\n    }\n\n    if (data.step.warmStarting) {\n      // Account for variable time step.\n      // m_impulse *= data.step.dtRatio;\n      this.m_impulse.SelfMul(data.step.dtRatio);\n      this.m_motorImpulse *= data.step.dtRatio;\n      this.m_lowerImpulse *= data.step.dtRatio;\n      this.m_upperImpulse *= data.step.dtRatio;\n\n      const axialImpulse: number = this.m_motorImpulse + this.m_lowerImpulse - this.m_upperImpulse;\n      // b2Vec2 P = m_impulse.x * m_perp + axialImpulse * m_axis;\n      const P: b2Vec2 = b2Vec2.AddVV(\n        b2Vec2.MulSV(this.m_impulse.x, this.m_perp, b2Vec2.s_t0),\n        b2Vec2.MulSV(axialImpulse, this.m_axis, b2Vec2.s_t1),\n        b2PrismaticJoint.InitVelocityConstraints_s_P);\n      // float LA = m_impulse.x * m_s1 + m_impulse.y + axialImpulse * m_a1;\n      const LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y + axialImpulse * this.m_a1;\n      // float LB = m_impulse.x * m_s2 + m_impulse.y + axialImpulse * m_a2;\n      const LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y + axialImpulse * this.m_a2;\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * LA;\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * LB;\n    } else {\n      this.m_impulse.SetZero();\n      this.m_motorImpulse = 0.0;\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_P = new b2Vec2();\n  // private static SolveVelocityConstraints_s_f2r = new b2Vec2();\n  // private static SolveVelocityConstraints_s_f1 = new b2Vec3();\n  // private static SolveVelocityConstraints_s_df3 = new b2Vec3();\n  private static SolveVelocityConstraints_s_df = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    // Solve linear motor constraint.\n    if (this.m_enableMotor) {\n      // float32 Cdot = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\n      const Cdot: number = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\n      let impulse = this.m_axialMass * (this.m_motorSpeed - Cdot);\n      const oldImpulse = this.m_motorImpulse;\n      const maxImpulse = data.step.dt * this.m_maxMotorForce;\n      this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\n      impulse = this.m_motorImpulse - oldImpulse;\n\n      // b2Vec2 P = impulse * m_axis;\n      const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\n      const LA = impulse * this.m_a1;\n      const LB = impulse * this.m_a2;\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * LA;\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * LB;\n    }\n\n    if (this.m_enableLimit) {\n      // Lower limit\n      {\n        const C: number = this.m_translation - this.m_lowerTranslation;\n        const Cdot: number = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\n        let impulse: number = -this.m_axialMass * (Cdot + b2Max(C, 0.0) * data.step.inv_dt);\n        const oldImpulse: number = this.m_lowerImpulse;\n        this.m_lowerImpulse = b2Max(this.m_lowerImpulse + impulse, 0.0);\n        impulse = this.m_lowerImpulse - oldImpulse;\n\n        // b2Vec2 P = impulse * this.m_axis;\n        const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\n        const LA: number = impulse * this.m_a1;\n        const LB: number = impulse * this.m_a2;\n\n        // vA -= mA * P;\n        vA.SelfMulSub(mA, P);\n        wA -= iA * LA;\n        // vB += mB * P;\n        vB.SelfMulAdd(mB, P);\n        wB += iB * LB;\n      }\n\n      // Upper limit\n      // Note: signs are flipped to keep C positive when the constraint is satisfied.\n      // This also keeps the impulse positive when the limit is active.\n      {\n        const C: number = this.m_upperTranslation - this.m_translation;\n        const Cdot: number = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vA, vB, b2Vec2.s_t0)) + this.m_a1 * wA - this.m_a2 * wB;\n        let impulse: number = -this.m_axialMass * (Cdot + b2Max(C, 0.0) * data.step.inv_dt);\n        const oldImpulse: number = this.m_upperImpulse;\n        this.m_upperImpulse = b2Max(this.m_upperImpulse + impulse, 0.0);\n        impulse = this.m_upperImpulse - oldImpulse;\n\n        // b2Vec2 P = impulse * this.m_axis;\n        const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\n        const LA: number = impulse * this.m_a1;\n        const LB: number = impulse * this.m_a2;\n\n        // vA += mA * P;\n        vA.SelfMulAdd(mA, P);\n        wA += iA * LA;\n        // vB -= mB * P;\n        vB.SelfMulSub(mB, P);\n        wB -= iB * LB;\n      }\n    }\n\n    // Solve the prismatic constraint in block form.\n    {\n      // b2Vec2 Cdot;\n      // Cdot.x = b2Dot(m_perp, vB - vA) + m_s2 * wB - m_s1 * wA;\n      const Cdot_x: number = b2Vec2.DotVV(this.m_perp, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_s2 * wB - this.m_s1 * wA;\n      // Cdot.y = wB - wA;\n      const Cdot_y = wB - wA;\n\n      // b2Vec2 df = m_K.Solve(-Cdot);\n      const df = this.m_K.Solve(-Cdot_x, -Cdot_y, b2PrismaticJoint.SolveVelocityConstraints_s_df);\n      // m_impulse += df;\n      this.m_impulse.SelfAdd(df);\n\n      // b2Vec2 P = df.x * m_perp;\n      const P: b2Vec2 = b2Vec2.MulSV(df.x, this.m_perp, b2PrismaticJoint.SolveVelocityConstraints_s_P);\n      // float32 LA = df.x * m_s1 + df.y;\n      const LA = df.x * this.m_s1 + df.y;\n      // float32 LB = df.x * m_s2 + df.y;\n      const LB = df.x * this.m_s2 + df.y;\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * LA;\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * LB;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  // A velocity based solver computes reaction forces(impulses) using the velocity constraint solver.Under this context,\n  // the position solver is not there to resolve forces.It is only there to cope with integration error.\n  //\n  // Therefore, the pseudo impulses in the position solver do not have any physical meaning.Thus it is okay if they suck.\n  //\n  // We could take the active state from the velocity solver.However, the joint might push past the limit when the velocity\n  // solver indicates the limit is inactive.\n  private static SolvePositionConstraints_s_d = new b2Vec2();\n  private static SolvePositionConstraints_s_impulse = new b2Vec3();\n  private static SolvePositionConstraints_s_impulse1 = new b2Vec2();\n  private static SolvePositionConstraints_s_P = new b2Vec2();\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    let aA: number = data.positions[this.m_indexA].a;\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    let aB: number = data.positions[this.m_indexB].a;\n\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n    // b2Vec2 d = cB + rB - cA - rA;\n    const d: b2Vec2 = b2Vec2.SubVV(\n      b2Vec2.AddVV(cB, rB, b2Vec2.s_t0),\n      b2Vec2.AddVV(cA, rA, b2Vec2.s_t1),\n      b2PrismaticJoint.SolvePositionConstraints_s_d);\n\n    // b2Vec2 axis = b2Mul(qA, m_localXAxisA);\n    const axis: b2Vec2 = b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\n    // float32 a1 = b2Cross(d + rA, axis);\n    const a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), axis);\n    // float32 a2 = b2Cross(rB, axis);\n    const a2 = b2Vec2.CrossVV(rB, axis);\n    // b2Vec2 perp = b2Mul(qA, m_localYAxisA);\n    const perp: b2Vec2 = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\n\n    // float32 s1 = b2Cross(d + rA, perp);\n    const s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), perp);\n    // float32 s2 = b2Cross(rB, perp);\n    const s2 = b2Vec2.CrossVV(rB, perp);\n\n    // b2Vec3 impulse;\n    let impulse = b2PrismaticJoint.SolvePositionConstraints_s_impulse;\n    // b2Vec2 C1;\n    // C1.x = b2Dot(perp, d);\n    const C1_x: number = b2Vec2.DotVV(perp, d);\n    // C1.y = aB - aA - m_referenceAngle;\n    const C1_y = aB - aA - this.m_referenceAngle;\n\n    let linearError = b2Abs(C1_x);\n    const angularError = b2Abs(C1_y);\n\n    let active = false;\n    let C2: number = 0;\n    if (this.m_enableLimit) {\n      // float32 translation = b2Dot(axis, d);\n      const translation: number = b2Vec2.DotVV(axis, d);\n      if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\n        C2 = translation;\n        linearError = b2Max(linearError, b2Abs(translation));\n        active = true;\n      } else if (translation <= this.m_lowerTranslation) {\n        C2 = b2Min(translation - this.m_lowerTranslation, 0.0);\n        linearError = b2Max(linearError, this.m_lowerTranslation - translation);\n        active = true;\n      } else if (translation >= this.m_upperTranslation) {\n        C2 = b2Max(translation - this.m_upperTranslation, 0.0);\n        linearError = b2Max(linearError, translation - this.m_upperTranslation);\n        active = true;\n      }\n    }\n\n    if (active) {\n      // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\n      const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\n      // float32 k12 = iA * s1 + iB * s2;\n      const k12 = iA * s1 + iB * s2;\n      // float32 k13 = iA * s1 * a1 + iB * s2 * a2;\n      const k13 = iA * s1 * a1 + iB * s2 * a2;\n      // float32 k22 = iA + iB;\n      let k22 = iA + iB;\n      if (k22 === 0) {\n        // For fixed rotation\n        k22 = 1;\n      }\n      // float32 k23 = iA * a1 + iB * a2;\n      const k23 = iA * a1 + iB * a2;\n      // float32 k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\n      const k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\n\n      // b2Mat33 K;\n      const K = this.m_K3;\n      // K.ex.Set(k11, k12, k13);\n      K.ex.SetXYZ(k11, k12, k13);\n      // K.ey.Set(k12, k22, k23);\n      K.ey.SetXYZ(k12, k22, k23);\n      // K.ez.Set(k13, k23, k33);\n      K.ez.SetXYZ(k13, k23, k33);\n\n      // b2Vec3 C;\n      // C.x = C1.x;\n      // C.y = C1.y;\n      // C.z = C2;\n\n      // impulse = K.Solve33(-C);\n      impulse = K.Solve33((-C1_x), (-C1_y), (-C2), impulse);\n    } else {\n      // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\n      const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\n      // float32 k12 = iA * s1 + iB * s2;\n      const k12 = iA * s1 + iB * s2;\n      // float32 k22 = iA + iB;\n      let k22 = iA + iB;\n      if (k22 === 0) {\n        k22 = 1;\n      }\n\n      // b2Mat22 K;\n      const K2 = this.m_K2;\n      // K.ex.Set(k11, k12);\n      K2.ex.Set(k11, k12);\n      // K.ey.Set(k12, k22);\n      K2.ey.Set(k12, k22);\n\n      // b2Vec2 impulse1 = K.Solve(-C1);\n      const impulse1 = K2.Solve((-C1_x), (-C1_y), b2PrismaticJoint.SolvePositionConstraints_s_impulse1);\n      impulse.x = impulse1.x;\n      impulse.y = impulse1.y;\n      impulse.z = 0;\n    }\n\n    // b2Vec2 P = impulse.x * perp + impulse.z * axis;\n    const P: b2Vec2 = b2Vec2.AddVV(\n      b2Vec2.MulSV(impulse.x, perp, b2Vec2.s_t0),\n      b2Vec2.MulSV(impulse.z, axis, b2Vec2.s_t1),\n      b2PrismaticJoint.SolvePositionConstraints_s_P);\n    // float32 LA = impulse.x * s1 + impulse.y + impulse.z * a1;\n    const LA = impulse.x * s1 + impulse.y + impulse.z * a1;\n    // float32 LB = impulse.x * s2 + impulse.y + impulse.z * a2;\n    const LB = impulse.x * s2 + impulse.y + impulse.z * a2;\n\n    // cA -= mA * P;\n    cA.SelfMulSub(mA, P);\n    aA -= iA * LA;\n    // cB += mB * P;\n    cB.SelfMulAdd(mB, P);\n    aB += iB * LB;\n\n    // data.positions[this.m_indexA].c = cA;\n    data.positions[this.m_indexA].a = aA;\n    // data.positions[this.m_indexB].c = cB;\n    data.positions[this.m_indexB].a = aB;\n\n    return linearError <= b2_linearSlop && angularError <= b2_angularSlop;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    out.x = inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_lowerImpulse - this.m_upperImpulse) * this.m_axis.x);\n    out.y = inv_dt * (this.m_impulse.y * this.m_perp.y + (this.m_motorImpulse + this.m_lowerImpulse - this.m_upperImpulse) * this.m_axis.y);\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return inv_dt * this.m_impulse.y;\n  }\n\n  public GetLocalAnchorA(): Readonly<b2Vec2> { return this.m_localAnchorA; }\n\n  public GetLocalAnchorB(): Readonly<b2Vec2> { return this.m_localAnchorB; }\n\n  public GetLocalAxisA(): Readonly<b2Vec2> { return this.m_localXAxisA; }\n\n  public GetReferenceAngle() { return this.m_referenceAngle; }\n\n  private static GetJointTranslation_s_pA = new b2Vec2();\n  private static GetJointTranslation_s_pB = new b2Vec2();\n  private static GetJointTranslation_s_d = new b2Vec2();\n  private static GetJointTranslation_s_axis = new b2Vec2();\n  public GetJointTranslation(): number {\n    // b2Vec2 pA = m_bodyA.GetWorldPoint(m_localAnchorA);\n    const pA = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PrismaticJoint.GetJointTranslation_s_pA);\n    // b2Vec2 pB = m_bodyB.GetWorldPoint(m_localAnchorB);\n    const pB = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PrismaticJoint.GetJointTranslation_s_pB);\n    // b2Vec2 d = pB - pA;\n    const d: b2Vec2 = b2Vec2.SubVV(pB, pA, b2PrismaticJoint.GetJointTranslation_s_d);\n    // b2Vec2 axis = m_bodyA.GetWorldVector(m_localXAxisA);\n    const axis = this.m_bodyA.GetWorldVector(this.m_localXAxisA, b2PrismaticJoint.GetJointTranslation_s_axis);\n\n    // float32 translation = b2Dot(d, axis);\n    const translation: number = b2Vec2.DotVV(d, axis);\n    return translation;\n  }\n\n  public GetJointSpeed(): number {\n    const bA: b2Body = this.m_bodyA;\n    const bB: b2Body = this.m_bodyB;\n\n    // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\n    b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\n    const rA: b2Vec2 = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\n    // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\n    b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\n    const rB: b2Vec2 = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\n    // b2Vec2 pA = bA->m_sweep.c + rA;\n    const pA: b2Vec2 = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\n    // b2Vec2 pB = bB->m_sweep.c + rB;\n    const pB: b2Vec2 = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\n    // b2Vec2 d = pB - pA;\n    const d: b2Vec2 = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\n    // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\n    const axis = bA.GetWorldVector(this.m_localXAxisA, this.m_axis);\n\n    const vA = bA.m_linearVelocity;\n    const vB = bB.m_linearVelocity;\n    const wA = bA.m_angularVelocity;\n    const wB = bB.m_angularVelocity;\n\n    // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\n    const speed =\n      b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\n      b2Vec2.DotVV(\n        axis,\n        b2Vec2.SubVV(\n          b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0),\n          b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1),\n          b2Vec2.s_t0));\n    return speed;\n  }\n\n  public IsLimitEnabled() {\n    return this.m_enableLimit;\n  }\n\n  public EnableLimit(flag: boolean) {\n    if (flag !== this.m_enableLimit) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableLimit = flag;\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n  }\n\n  public GetLowerLimit() {\n    return this.m_lowerTranslation;\n  }\n\n  public GetUpperLimit() {\n    return this.m_upperTranslation;\n  }\n\n  public SetLimits(lower: number, upper: number): void {\n    if (lower !== this.m_lowerTranslation || upper !== this.m_upperTranslation) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_lowerTranslation = lower;\n      this.m_upperTranslation = upper;\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n  }\n\n  public IsMotorEnabled(): boolean {\n    return this.m_enableMotor;\n  }\n\n  public EnableMotor(flag: boolean): void {\n    if (flag !== this.m_enableMotor) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableMotor = flag;\n    }\n  }\n\n  public SetMotorSpeed(speed: number): void {\n    if (speed !== this.m_motorSpeed) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_motorSpeed = speed;\n    }\n  }\n\n  public GetMotorSpeed() {\n    return this.m_motorSpeed;\n  }\n\n  public SetMaxMotorForce(force: number): void {\n    if (force !== this.m_maxMotorForce) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_maxMotorForce = force;\n    }\n  }\n\n  public GetMaxMotorForce(): number { return this.m_maxMotorForce; }\n\n  public GetMotorForce(inv_dt: number): number {\n    return inv_dt * this.m_motorImpulse;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    const indexA = this.m_bodyA.m_islandIndex;\n    const indexB = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\n    log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\n    log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\n    log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\n    log(\"  jd.lowerTranslation = %.15f;\\n\", this.m_lowerTranslation);\n    log(\"  jd.upperTranslation = %.15f;\\n\", this.m_upperTranslation);\n    log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\n    log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\n    log(\"  jd.maxMotorForce = %.15f;\\n\", this.m_maxMotorForce);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n\n  private static Draw_s_pA = new b2Vec2();\n  private static Draw_s_pB = new b2Vec2();\n  private static Draw_s_axis = new b2Vec2();\n  private static Draw_s_c1 = new b2Color(0.7, 0.7, 0.7);\n  private static Draw_s_c2 = new b2Color(0.3, 0.9, 0.3);\n  private static Draw_s_c3 = new b2Color(0.9, 0.3, 0.3);\n  private static Draw_s_c4 = new b2Color(0.3, 0.3, 0.9);\n  private static Draw_s_c5 = new b2Color(0.4, 0.4, 0.4);\n  private static Draw_s_lower = new b2Vec2();\n  private static Draw_s_upper = new b2Vec2();\n  private static Draw_s_perp = new b2Vec2();\n  public Draw(draw: b2Draw): void {\n    const xfA: Readonly<b2Transform> = this.m_bodyA.GetTransform();\n    const xfB: Readonly<b2Transform> = this.m_bodyB.GetTransform();\n    const pA = b2Transform.MulXV(xfA, this.m_localAnchorA, b2PrismaticJoint.Draw_s_pA);\n    const pB = b2Transform.MulXV(xfB, this.m_localAnchorB, b2PrismaticJoint.Draw_s_pB);\n\n    // b2Vec2 axis = b2Mul(xfA.q, m_localXAxisA);\n    const axis: b2Vec2 = b2Rot.MulRV(xfA.q, this.m_localXAxisA, b2PrismaticJoint.Draw_s_axis);\n\n    const c1 = b2PrismaticJoint.Draw_s_c1; // b2Color c1(0.7f, 0.7f, 0.7f);\n    const c2 = b2PrismaticJoint.Draw_s_c2; // b2Color c2(0.3f, 0.9f, 0.3f);\n    const c3 = b2PrismaticJoint.Draw_s_c3; // b2Color c3(0.9f, 0.3f, 0.3f);\n    const c4 = b2PrismaticJoint.Draw_s_c4; // b2Color c4(0.3f, 0.3f, 0.9f);\n    const c5 = b2PrismaticJoint.Draw_s_c5; // b2Color c5(0.4f, 0.4f, 0.4f);\n\n    draw.DrawSegment(pA, pB, c5);\n\n    if (this.m_enableLimit) {\n      // b2Vec2 lower = pA + m_lowerTranslation * axis;\n      const lower = b2Vec2.AddVMulSV(pA, this.m_lowerTranslation, axis, b2PrismaticJoint.Draw_s_lower);\n      // b2Vec2 upper = pA + m_upperTranslation * axis;\n      const upper = b2Vec2.AddVMulSV(pA, this.m_upperTranslation, axis, b2PrismaticJoint.Draw_s_upper);\n      // b2Vec2 perp = b2Mul(xfA.q, m_localYAxisA);\n      const perp = b2Rot.MulRV(xfA.q, this.m_localYAxisA, b2PrismaticJoint.Draw_s_perp);\n      draw.DrawSegment(lower, upper, c1);\n      // draw.DrawSegment(lower - 0.5 * perp, lower + 0.5 * perp, c2);\n      draw.DrawSegment(b2Vec2.AddVMulSV(lower, -0.5, perp, b2Vec2.s_t0), b2Vec2.AddVMulSV(lower, 0.5, perp, b2Vec2.s_t1), c2);\n      // draw.DrawSegment(upper - 0.5 * perp, upper + 0.5 * perp, c3);\n      draw.DrawSegment(b2Vec2.AddVMulSV(upper, -0.5, perp, b2Vec2.s_t0), b2Vec2.AddVMulSV(upper, 0.5, perp, b2Vec2.s_t1), c3);\n    } else {\n      // draw.DrawSegment(pA - 1.0 * axis, pA + 1.0 * axis, c1);\n      draw.DrawSegment(b2Vec2.AddVMulSV(pA, -1.0, axis, b2Vec2.s_t0), b2Vec2.AddVMulSV(pA, 1.0, axis, b2Vec2.s_t1), c1);\n    }\n\n    draw.DrawPoint(pA, 5.0, c1);\n    draw.DrawPoint(pB, 5.0, c4);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert, b2_epsilon } from \"../common/b2_settings\";\nimport { b2_linearSlop, b2Maybe } from \"../common/b2_common\";\nimport { b2Abs, b2Vec2, b2Rot, XY } from \"../common/b2_math\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\n\nexport const b2_minPulleyLength: number = 2;\n\nexport interface b2IPulleyJointDef extends b2IJointDef {\n  groundAnchorA?: XY;\n\n  groundAnchorB?: XY;\n\n  localAnchorA?: XY;\n\n  localAnchorB?: XY;\n\n  lengthA?: number;\n\n  lengthB?: number;\n\n  ratio?: number;\n}\n\n/// Pulley joint definition. This requires two ground anchors,\n/// two dynamic body anchor points, and a pulley ratio.\nexport class b2PulleyJointDef extends b2JointDef implements b2IPulleyJointDef {\n  public readonly groundAnchorA: b2Vec2 = new b2Vec2(-1, 1);\n\n  public readonly groundAnchorB: b2Vec2 = new b2Vec2(1, 1);\n\n  public readonly localAnchorA: b2Vec2 = new b2Vec2(-1, 0);\n\n  public readonly localAnchorB: b2Vec2 = new b2Vec2(1, 0);\n\n  public lengthA: number = 0;\n\n  public lengthB: number = 0;\n\n  public ratio: number = 1;\n\n  constructor() {\n    super(b2JointType.e_pulleyJoint);\n    this.collideConnected = true;\n  }\n\n  public Initialize(bA: b2Body, bB: b2Body, groundA: b2Vec2, groundB: b2Vec2, anchorA: b2Vec2, anchorB: b2Vec2, r: number): void {\n    this.bodyA = bA;\n    this.bodyB = bB;\n    this.groundAnchorA.Copy(groundA);\n    this.groundAnchorB.Copy(groundB);\n    this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\n    this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\n    this.lengthA = b2Vec2.DistanceVV(anchorA, groundA);\n    this.lengthB = b2Vec2.DistanceVV(anchorB, groundB);\n    this.ratio = r;\n    // DEBUG: b2Assert(this.ratio > b2_epsilon);\n  }\n}\n\nexport class b2PulleyJoint extends b2Joint {\n  public readonly m_groundAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_groundAnchorB: b2Vec2 = new b2Vec2();\n\n  public m_lengthA: number = 0;\n  public m_lengthB: number = 0;\n\n  // Solver shared\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n\n  public m_constant: number = 0;\n  public m_ratio: number = 0;\n  public m_impulse: number = 0;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_uA: b2Vec2 = new b2Vec2();\n  public readonly m_uB: b2Vec2 = new b2Vec2();\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n  public m_mass: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n\n  constructor(def: b2IPulleyJointDef) {\n    super(def);\n\n    this.m_groundAnchorA.Copy(b2Maybe(def.groundAnchorA, new b2Vec2(-1, 1)));\n    this.m_groundAnchorB.Copy(b2Maybe(def.groundAnchorB, new b2Vec2(1, 0)));\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\n\n    this.m_lengthA = b2Maybe(def.lengthA, 0);\n    this.m_lengthB = b2Maybe(def.lengthB, 0);\n\n    // DEBUG: b2Assert(b2Maybe(def.ratio, 1) !== 0);\n    this.m_ratio = b2Maybe(def.ratio, 1);\n\n    this.m_constant = b2Maybe(def.lengthA, 0) + this.m_ratio * b2Maybe(def.lengthB, 0);\n\n    this.m_impulse = 0;\n  }\n\n  private static InitVelocityConstraints_s_PA = new b2Vec2();\n  private static InitVelocityConstraints_s_PB = new b2Vec2();\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    // b2Rot qA(aA), qB(aB);\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n    // Get the pulley axes.\n    // m_uA = cA + m_rA - m_groundAnchorA;\n    this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\n    // m_uB = cB + m_rB - m_groundAnchorB;\n    this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\n\n    const lengthA: number = this.m_uA.Length();\n    const lengthB: number = this.m_uB.Length();\n\n    if (lengthA > 10 * b2_linearSlop) {\n      this.m_uA.SelfMul(1 / lengthA);\n    } else {\n      this.m_uA.SetZero();\n    }\n\n    if (lengthB > 10 * b2_linearSlop) {\n      this.m_uB.SelfMul(1 / lengthB);\n    } else {\n      this.m_uB.SetZero();\n    }\n\n    // Compute effective mass.\n    const ruA: number = b2Vec2.CrossVV(this.m_rA, this.m_uA);\n    const ruB: number = b2Vec2.CrossVV(this.m_rB, this.m_uB);\n\n    const mA: number = this.m_invMassA + this.m_invIA * ruA * ruA;\n    const mB: number = this.m_invMassB + this.m_invIB * ruB * ruB;\n\n    this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n    if (this.m_mass > 0) {\n      this.m_mass = 1 / this.m_mass;\n    }\n\n    if (data.step.warmStarting) {\n      // Scale impulses to support variable time steps.\n      this.m_impulse *= data.step.dtRatio;\n\n      // Warm starting.\n      // b2Vec2 PA = -(m_impulse) * m_uA;\n      const PA: b2Vec2 = b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\n      // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\n      const PB: b2Vec2 = b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\n\n      // vA += m_invMassA * PA;\n      vA.SelfMulAdd(this.m_invMassA, PA);\n      wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\n      // vB += m_invMassB * PB;\n      vB.SelfMulAdd(this.m_invMassB, PB);\n      wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\n    } else {\n      this.m_impulse = 0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_vpA = new b2Vec2();\n  private static SolveVelocityConstraints_s_vpB = new b2Vec2();\n  private static SolveVelocityConstraints_s_PA = new b2Vec2();\n  private static SolveVelocityConstraints_s_PB = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\n    const vpA: b2Vec2 = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\n    // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\n    const vpB: b2Vec2 = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\n\n    const Cdot: number = -b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Vec2.DotVV(this.m_uB, vpB);\n    const impulse: number = -this.m_mass * Cdot;\n    this.m_impulse += impulse;\n\n    // b2Vec2 PA = -impulse * m_uA;\n    const PA: b2Vec2 = b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\n    // b2Vec2 PB = -m_ratio * impulse * m_uB;\n    const PB: b2Vec2 = b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\n    // vA += m_invMassA * PA;\n    vA.SelfMulAdd(this.m_invMassA, PA);\n    wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\n    // vB += m_invMassB * PB;\n    vB.SelfMulAdd(this.m_invMassB, PB);\n    wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolvePositionConstraints_s_PA = new b2Vec2();\n  private static SolvePositionConstraints_s_PB = new b2Vec2();\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    let aA: number = data.positions[this.m_indexA].a;\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    let aB: number = data.positions[this.m_indexB].a;\n\n    // b2Rot qA(aA), qB(aB);\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n    // Get the pulley axes.\n    // b2Vec2 uA = cA + rA - m_groundAnchorA;\n    const uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\n    // b2Vec2 uB = cB + rB - m_groundAnchorB;\n    const uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\n\n    const lengthA: number = uA.Length();\n    const lengthB: number = uB.Length();\n\n    if (lengthA > 10 * b2_linearSlop) {\n      uA.SelfMul(1 / lengthA);\n    } else {\n      uA.SetZero();\n    }\n\n    if (lengthB > 10 * b2_linearSlop) {\n      uB.SelfMul(1 / lengthB);\n    } else {\n      uB.SetZero();\n    }\n\n    // Compute effective mass.\n    const ruA: number = b2Vec2.CrossVV(rA, uA);\n    const ruB: number = b2Vec2.CrossVV(rB, uB);\n\n    const mA: number = this.m_invMassA + this.m_invIA * ruA * ruA;\n    const mB: number = this.m_invMassB + this.m_invIB * ruB * ruB;\n\n    let mass: number = mA + this.m_ratio * this.m_ratio * mB;\n\n    if (mass > 0) {\n      mass = 1 / mass;\n    }\n\n    const C: number = this.m_constant - lengthA - this.m_ratio * lengthB;\n    const linearError: number = b2Abs(C);\n\n    const impulse: number = -mass * C;\n\n    // b2Vec2 PA = -impulse * uA;\n    const PA: b2Vec2 = b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\n    // b2Vec2 PB = -m_ratio * impulse * uB;\n    const PB: b2Vec2 = b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\n\n    // cA += m_invMassA * PA;\n    cA.SelfMulAdd(this.m_invMassA, PA);\n    aA += this.m_invIA * b2Vec2.CrossVV(rA, PA);\n    // cB += m_invMassB * PB;\n    cB.SelfMulAdd(this.m_invMassB, PB);\n    aB += this.m_invIB * b2Vec2.CrossVV(rB, PB);\n\n    // data.positions[this.m_indexA].c = cA;\n    data.positions[this.m_indexA].a = aA;\n    // data.positions[this.m_indexB].c = cB;\n    data.positions[this.m_indexB].a = aB;\n\n    return linearError < b2_linearSlop;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    // b2Vec2 P = m_impulse * m_uB;\n    // return inv_dt * P;\n    out.x = inv_dt * this.m_impulse * this.m_uB.x;\n    out.y = inv_dt * this.m_impulse * this.m_uB.y;\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return 0;\n  }\n\n  public GetGroundAnchorA() {\n    return this.m_groundAnchorA;\n  }\n\n  public GetGroundAnchorB() {\n    return this.m_groundAnchorB;\n  }\n\n  public GetLengthA() {\n    return this.m_lengthA;\n  }\n\n  public GetLengthB() {\n    return this.m_lengthB;\n  }\n\n  public GetRatio() {\n    return this.m_ratio;\n  }\n\n  private static GetCurrentLengthA_s_p = new b2Vec2();\n  public GetCurrentLengthA() {\n    // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\n    // b2Vec2 s = m_groundAnchorA;\n    // b2Vec2 d = p - s;\n    // return d.Length();\n    const p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\n    const s = this.m_groundAnchorA;\n    return b2Vec2.DistanceVV(p, s);\n  }\n\n  private static GetCurrentLengthB_s_p = new b2Vec2();\n  public GetCurrentLengthB() {\n    // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\n    // b2Vec2 s = m_groundAnchorB;\n    // b2Vec2 d = p - s;\n    // return d.Length();\n    const p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\n    const s = this.m_groundAnchorB;\n    return b2Vec2.DistanceVV(p, s);\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    const indexA = this.m_bodyA.m_islandIndex;\n    const indexB = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\n    log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\n    log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\n    log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\n    log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n\n  public ShiftOrigin(newOrigin: b2Vec2) {\n    this.m_groundAnchorA.SelfSub(newOrigin);\n    this.m_groundAnchorB.SelfSub(newOrigin);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2_linearSlop, b2_angularSlop, b2_maxAngularCorrection, b2Maybe } from \"../common/b2_common\";\nimport { b2Abs, b2Clamp, b2Vec2, b2Mat22, b2Rot, XY, b2Max, b2Transform } from \"../common/b2_math\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Draw, b2Color } from \"../common/b2_draw\";\n\nexport interface b2IRevoluteJointDef extends b2IJointDef {\n  localAnchorA?: XY;\n\n  localAnchorB?: XY;\n\n  referenceAngle?: number;\n\n  enableLimit?: boolean;\n\n  lowerAngle?: number;\n\n  upperAngle?: number;\n\n  enableMotor?: boolean;\n\n  motorSpeed?: number;\n\n  maxMotorTorque?: number;\n}\n\n/// Revolute joint definition. This requires defining an anchor point where the\n/// bodies are joined. The definition uses local anchor points so that the\n/// initial configuration can violate the constraint slightly. You also need to\n/// specify the initial relative setAngle for joint limits. This helps when saving\n/// and loading a game.\n/// The local anchor points are measured from the body's origin\n/// rather than the center of mass because:\n/// 1. you might not know where the center of mass will be.\n/// 2. if you add/remove shapes from a body and recompute the mass,\n///    the joints will be broken.\nexport class b2RevoluteJointDef extends b2JointDef implements b2IRevoluteJointDef {\n  public readonly localAnchorA: b2Vec2 = new b2Vec2(0, 0);\n\n  public readonly localAnchorB: b2Vec2 = new b2Vec2(0, 0);\n\n  public referenceAngle: number = 0;\n\n  public enableLimit = false;\n\n  public lowerAngle: number = 0;\n\n  public upperAngle: number = 0;\n\n  public enableMotor = false;\n\n  public motorSpeed: number = 0;\n\n  public maxMotorTorque: number = 0;\n\n  constructor() {\n    super(b2JointType.e_revoluteJoint);\n  }\n\n  public Initialize(bA: b2Body, bB: b2Body, anchor: XY): void {\n    this.bodyA = bA;\n    this.bodyB = bB;\n    this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\n    this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\n    this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\n  }\n}\n\nexport class b2RevoluteJoint extends b2Joint {\n  // Solver shared\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n  public readonly m_impulse: b2Vec2 = new b2Vec2();\n  public m_motorImpulse: number = 0;\n  public m_lowerImpulse: number = 0;\n  public m_upperImpulse: number = 0;\n  public m_enableMotor: boolean = false;\n  public m_maxMotorTorque: number = 0;\n  public m_motorSpeed: number = 0;\n  public m_enableLimit: boolean = false;\n  public m_referenceAngle: number = 0;\n  public m_lowerAngle: number = 0;\n  public m_upperAngle: number = 0;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n  public readonly m_K: b2Mat22 = new b2Mat22();\n  public m_angle: number = 0;\n  public m_axialMass: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n\n  constructor(def: b2IRevoluteJointDef) {\n    super(def);\n\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\n    this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\n\n    this.m_impulse.SetZero();\n    this.m_motorImpulse = 0;\n\n    this.m_lowerAngle = b2Maybe(def.lowerAngle, 0);\n    this.m_upperAngle = b2Maybe(def.upperAngle, 0);\n    this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\n    this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\n    this.m_enableLimit = b2Maybe(def.enableLimit, false);\n    this.m_enableMotor = b2Maybe(def.enableMotor, false);\n  }\n\n  private static InitVelocityConstraints_s_P = new b2Vec2();\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    // b2Rot qA(aA), qB(aB);\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n    // J = [-I -r1_skew I r2_skew]\n    // r_skew = [-ry; rx]\n\n    // Matlab\n    // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x]\n    //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB]\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    this.m_K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\n    this.m_K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n    this.m_K.ex.y = this.m_K.ey.x;\n    this.m_K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\n\n    this.m_axialMass = iA + iB;\n    let fixedRotation: boolean;\n    if (this.m_axialMass > 0.0) {\n      this.m_axialMass = 1.0 / this.m_axialMass;\n      fixedRotation = false;\n    } else {\n      fixedRotation = true;\n    }\n\n    this.m_angle = aB - aA - this.m_referenceAngle;\n    if (this.m_enableLimit === false || fixedRotation) {\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n\n    if (this.m_enableMotor === false || fixedRotation) {\n      this.m_motorImpulse = 0.0;\n    }\n\n    if (data.step.warmStarting) {\n      // Scale impulses to support a variable time step.\n      this.m_impulse.SelfMul(data.step.dtRatio);\n      this.m_motorImpulse *= data.step.dtRatio;\n      this.m_lowerImpulse *= data.step.dtRatio;\n      this.m_upperImpulse *= data.step.dtRatio;\n\n      const axialImpulse: number = this.m_motorImpulse + this.m_lowerImpulse - this.m_upperImpulse;\n      // b2Vec2 P(m_impulse.x, m_impulse.y);\n      const P: b2Vec2 = b2RevoluteJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + axialImpulse);\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + axialImpulse);\n    } else {\n      this.m_impulse.SetZero();\n      this.m_motorImpulse = 0;\n      this.m_lowerImpulse = 0;\n      this.m_upperImpulse = 0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  // private static SolveVelocityConstraints_s_P: b2Vec2 = new b2Vec2();\n  private static SolveVelocityConstraints_s_Cdot_v2: b2Vec2 = new b2Vec2();\n  // private static SolveVelocityConstraints_s_Cdot1: b2Vec2 = new b2Vec2();\n  // private static SolveVelocityConstraints_s_impulse_v3: b2Vec3 = new b2Vec3();\n  // private static SolveVelocityConstraints_s_reduced_v2: b2Vec2 = new b2Vec2();\n  private static SolveVelocityConstraints_s_impulse_v2: b2Vec2 = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    const fixedRotation: boolean = (iA + iB === 0);\n\n    // Solve motor constraint.\n    if (this.m_enableMotor && !fixedRotation) {\n      const Cdot: number = wB - wA - this.m_motorSpeed;\n      let impulse: number = -this.m_axialMass * Cdot;\n      const oldImpulse: number = this.m_motorImpulse;\n      const maxImpulse: number = data.step.dt * this.m_maxMotorTorque;\n      this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\n      impulse = this.m_motorImpulse - oldImpulse;\n\n      wA -= iA * impulse;\n      wB += iB * impulse;\n    }\n\n    // Solve limit constraint.\n    if (this.m_enableLimit && !fixedRotation) {\n\t\t// Lower limit\n\t\t{\n\t\t\tconst C: number = this.m_angle - this.m_lowerAngle;\n\t\t\tconst Cdot: number = wB - wA;\n\t\t\tlet impulse: number = -this.m_axialMass * (Cdot + b2Max(C, 0.0) * data.step.inv_dt);\n\t\t\tconst oldImpulse: number = this.m_lowerImpulse;\n\t\t\tthis.m_lowerImpulse = b2Max(this.m_lowerImpulse + impulse, 0.0);\n\t\t\timpulse = this.m_lowerImpulse - oldImpulse;\n\n\t\t\twA -= iA * impulse;\n\t\t\twB += iB * impulse;\n\t\t}\n\n\t\t// Upper limit\n\t\t// Note: signs are flipped to keep C positive when the constraint is satisfied.\n\t\t// This also keeps the impulse positive when the limit is active.\n\t\t{\n\t\t\tconst C: number = this.m_upperAngle - this.m_angle;\n\t\t\tconst Cdot: number = wA - wB;\n\t\t\tlet impulse: number = -this.m_axialMass * (Cdot + b2Max(C, 0.0) * data.step.inv_dt);\n\t\t\tconst oldImpulse: number = this.m_upperImpulse;\n\t\t\tthis.m_upperImpulse = b2Max(this.m_upperImpulse + impulse, 0.0);\n\t\t\timpulse = this.m_upperImpulse - oldImpulse;\n\n\t\t\twA += iA * impulse;\n\t\t\twB -= iB * impulse;\n\t\t}\n  }\n\n    // Solve point-to-point constraint\n    {\n      // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\n      const Cdot_v2: b2Vec2 = b2Vec2.SubVV(\n        b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0),\n        b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1),\n        b2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2);\n      // b2Vec2 impulse = m_K.Solve(-Cdot);\n      const impulse_v2: b2Vec2 = this.m_K.Solve(-Cdot_v2.x, -Cdot_v2.y, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2);\n\n      this.m_impulse.x += impulse_v2.x;\n      this.m_impulse.y += impulse_v2.y;\n\n      // vA -= mA * impulse;\n      vA.SelfMulSub(mA, impulse_v2);\n      wA -= iA * b2Vec2.CrossVV(this.m_rA, impulse_v2);\n\n      // vB += mB * impulse;\n      vB.SelfMulAdd(mB, impulse_v2);\n      wB += iB * b2Vec2.CrossVV(this.m_rB, impulse_v2);\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolvePositionConstraints_s_C_v2 = new b2Vec2();\n  private static SolvePositionConstraints_s_impulse = new b2Vec2();\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    let aA: number = data.positions[this.m_indexA].a;\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    let aB: number = data.positions[this.m_indexB].a;\n\n    // b2Rot qA(aA), qB(aB);\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    let angularError: number = 0;\n    let positionError: number = 0;\n\n    const fixedRotation: boolean = (this.m_invIA + this.m_invIB === 0);\n\n    // Solve angular limit constraint.\n    if (this.m_enableLimit && !fixedRotation) {\n      const angle: number = aB - aA - this.m_referenceAngle;\n      let C: number = 0.0;\n\n      if (b2Abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * b2_angularSlop) {\n        // Prevent large angular corrections\n        C = b2Clamp(angle - this.m_lowerAngle, -b2_maxAngularCorrection, b2_maxAngularCorrection);\n      } else if (angle <= this.m_lowerAngle) {\n        // Prevent large angular corrections and allow some slop.\n        C = b2Clamp(angle - this.m_lowerAngle + b2_angularSlop, -b2_maxAngularCorrection, 0.0);\n      } else if (angle >= this.m_upperAngle) {\n        // Prevent large angular corrections and allow some slop.\n        C = b2Clamp(angle - this.m_upperAngle - b2_angularSlop, 0.0, b2_maxAngularCorrection);\n      }\n\n      const limitImpulse: number = -this.m_axialMass * C;\n      aA -= this.m_invIA * limitImpulse;\n      aB += this.m_invIB * limitImpulse;\n      angularError = b2Abs(C);\n    }\n\n    // Solve point-to-point constraint.\n    {\n      qA.SetAngle(aA);\n      qB.SetAngle(aB);\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n      b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n      const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n      b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n      const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n      // b2Vec2 C = cB + rB - cA - rA;\n      const C_v2 =\n        b2Vec2.SubVV(\n          b2Vec2.AddVV(cB, rB, b2Vec2.s_t0),\n          b2Vec2.AddVV(cA, rA, b2Vec2.s_t1),\n          b2RevoluteJoint.SolvePositionConstraints_s_C_v2);\n      // positionError = C.Length();\n      positionError = C_v2.Length();\n\n      const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n      const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n      const K: b2Mat22 = this.m_K;\n      K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n      K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n      K.ey.x = K.ex.y;\n      K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n      // b2Vec2 impulse = -K.Solve(C);\n      const impulse: b2Vec2 = K.Solve(C_v2.x, C_v2.y, b2RevoluteJoint.SolvePositionConstraints_s_impulse).SelfNeg();\n\n      // cA -= mA * impulse;\n      cA.SelfMulSub(mA, impulse);\n      aA -= iA * b2Vec2.CrossVV(rA, impulse);\n\n      // cB += mB * impulse;\n      cB.SelfMulAdd(mB, impulse);\n      aB += iB * b2Vec2.CrossVV(rB, impulse);\n    }\n\n    // data.positions[this.m_indexA].c = cA;\n    data.positions[this.m_indexA].a = aA;\n    // data.positions[this.m_indexB].c = cB;\n    data.positions[this.m_indexB].a = aB;\n\n    return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\n    // return inv_dt * P;\n    out.x = inv_dt * this.m_impulse.x;\n    out.y = inv_dt * this.m_impulse.y;\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return inv_dt * (this.m_lowerImpulse - this.m_upperImpulse);\n  }\n\n  public GetLocalAnchorA(): Readonly<b2Vec2> { return this.m_localAnchorA; }\n\n  public GetLocalAnchorB(): Readonly<b2Vec2> { return this.m_localAnchorB; }\n\n  public GetReferenceAngle(): number { return this.m_referenceAngle; }\n\n  public GetJointAngle(): number {\n    // b2Body* bA = this.m_bodyA;\n    // b2Body* bB = this.m_bodyB;\n    // return bB.this.m_sweep.a - bA.this.m_sweep.a - this.m_referenceAngle;\n    return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\n  }\n\n  public GetJointSpeed(): number {\n    // b2Body* bA = this.m_bodyA;\n    // b2Body* bB = this.m_bodyB;\n    // return bB.this.m_angularVelocity - bA.this.m_angularVelocity;\n    return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\n  }\n\n  public IsMotorEnabled(): boolean {\n    return this.m_enableMotor;\n  }\n\n  public EnableMotor(flag: boolean): void {\n    if (flag !== this.m_enableMotor) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableMotor = flag;\n    }\n  }\n\n  public GetMotorTorque(inv_dt: number): number {\n    return inv_dt * this.m_motorImpulse;\n  }\n\n  public GetMotorSpeed(): number {\n    return this.m_motorSpeed;\n  }\n\n  public SetMaxMotorTorque(torque: number): void {\n    if (torque !== this.m_maxMotorTorque) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_maxMotorTorque = torque;\n    }\n  }\n\n  public GetMaxMotorTorque(): number { return this.m_maxMotorTorque; }\n\n  public IsLimitEnabled(): boolean {\n    return this.m_enableLimit;\n  }\n\n  public EnableLimit(flag: boolean): void {\n    if (flag !== this.m_enableLimit) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableLimit = flag;\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n  }\n\n  public GetLowerLimit(): number {\n    return this.m_lowerAngle;\n  }\n\n  public GetUpperLimit(): number {\n    return this.m_upperAngle;\n  }\n\n  public SetLimits(lower: number, upper: number): void {\n\n    if (lower !== this.m_lowerAngle || upper !== this.m_upperAngle) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n      this.m_lowerAngle = lower;\n      this.m_upperAngle = upper;\n    }\n  }\n\n  public SetMotorSpeed(speed: number): void {\n    if (speed !== this.m_motorSpeed) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_motorSpeed = speed;\n    }\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    const indexA = this.m_bodyA.m_islandIndex;\n    const indexB = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\n    log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\n    log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\n    log(\"  jd.lowerAngle = %.15f;\\n\", this.m_lowerAngle);\n    log(\"  jd.upperAngle = %.15f;\\n\", this.m_upperAngle);\n    log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\n    log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\n    log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n\n  private static Draw_s_pA = new b2Vec2();\n  private static Draw_s_pB = new b2Vec2();\n  private static Draw_s_c1 = new b2Color(0.7, 0.7, 0.7);\n  private static Draw_s_c2 = new b2Color(0.3, 0.9, 0.3);\n  private static Draw_s_c3 = new b2Color(0.9, 0.3, 0.3);\n  private static Draw_s_c4 = new b2Color(0.3, 0.3, 0.9);\n  private static Draw_s_c5 = new b2Color(0.4, 0.4, 0.4);\n  private static Draw_s_color_ = new b2Color(0.5, 0.8, 0.8);\n  private static Draw_s_r = new b2Vec2();\n  private static Draw_s_rlo = new b2Vec2();\n  private static Draw_s_rhi = new b2Vec2();\n  public Draw(draw: b2Draw): void {\n    const xfA: Readonly<b2Transform> = this.m_bodyA.GetTransform();\n    const xfB: Readonly<b2Transform> = this.m_bodyB.GetTransform();\n    const pA = b2Transform.MulXV(xfA, this.m_localAnchorA, b2RevoluteJoint.Draw_s_pA);\n    const pB = b2Transform.MulXV(xfB, this.m_localAnchorB, b2RevoluteJoint.Draw_s_pB);\n\n    const c1 = b2RevoluteJoint.Draw_s_c1; // b2Color c1(0.7f, 0.7f, 0.7f);\n    const c2 = b2RevoluteJoint.Draw_s_c2; // b2Color c2(0.3f, 0.9f, 0.3f);\n    const c3 = b2RevoluteJoint.Draw_s_c3; // b2Color c3(0.9f, 0.3f, 0.3f);\n    const c4 = b2RevoluteJoint.Draw_s_c4; // b2Color c4(0.3f, 0.3f, 0.9f);\n    const c5 = b2RevoluteJoint.Draw_s_c5; // b2Color c5(0.4f, 0.4f, 0.4f);\n\n    draw.DrawPoint(pA, 5.0, c4);\n    draw.DrawPoint(pB, 5.0, c5);\n\n    const aA: number = this.m_bodyA.GetAngle();\n    const aB: number = this.m_bodyB.GetAngle();\n    const angle: number = aB - aA - this.m_referenceAngle;\n\n    const L: number = 0.5;\n\n    // b2Vec2 r = L * b2Vec2(Math.cos(setAngle), Math.sin(setAngle));\n    const r = b2RevoluteJoint.Draw_s_r.Set(L * Math.cos(angle), L * Math.sin(angle));\n    // draw.DrawSegment(pB, pB + r, c1);\n    draw.DrawSegment(pB, b2Vec2.AddVV(pB, r, b2Vec2.s_t0), c1);\n    draw.DrawCircle(pB, L, c1);\n\n    if (this.m_enableLimit) {\n      // b2Vec2 rlo = L * b2Vec2(Math.cos(m_lowerAngle), Math.sin(m_lowerAngle));\n      const rlo = b2RevoluteJoint.Draw_s_rlo.Set(L * Math.cos(this.m_lowerAngle), L * Math.sin(this.m_lowerAngle));\n      // b2Vec2 rhi = L * b2Vec2(Math.cos(m_upperAngle), Math.sin(m_upperAngle));\n      const rhi = b2RevoluteJoint.Draw_s_rhi.Set(L * Math.cos(this.m_upperAngle), L * Math.sin(this.m_upperAngle));\n\n      // draw.DrawSegment(pB, pB + rlo, c2);\n      draw.DrawSegment(pB, b2Vec2.AddVV(pB, rlo, b2Vec2.s_t0), c2);\n      // draw.DrawSegment(pB, pB + rhi, c3);\n      draw.DrawSegment(pB, b2Vec2.AddVV(pB, rhi, b2Vec2.s_t0), c3);\n    }\n\n    const color = b2RevoluteJoint.Draw_s_color_; // b2Color color(0.5f, 0.8f, 0.8f);\n    draw.DrawSegment(xfA.p, pA, color);\n    draw.DrawSegment(pA, pB, color);\n    draw.DrawSegment(xfB.p, pB, color);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2MakeArray } from \"../common/b2_common\";\nimport { b2Vec2 } from \"../common/b2_math\";\n\n/// Profiling data. Times are in milliseconds.\nexport class b2Profile {\n  public step: number = 0;\n  public collide: number = 0;\n  public solve: number = 0;\n  public solveInit: number = 0;\n  public solveVelocity: number = 0;\n  public solvePosition: number = 0;\n  public broadphase: number = 0;\n  public solveTOI: number = 0;\n\n  public Reset() {\n    this.step = 0;\n    this.collide = 0;\n    this.solve = 0;\n    this.solveInit = 0;\n    this.solveVelocity = 0;\n    this.solvePosition = 0;\n    this.broadphase = 0;\n    this.solveTOI = 0;\n    return this;\n  }\n}\n\n/// This is an internal structure.\nexport class b2TimeStep {\n  public dt: number = 0; // time step\n  public inv_dt: number = 0; // inverse time step (0 if dt == 0).\n  public dtRatio: number = 0; // dt * inv_dt0\n  public velocityIterations: number = 0;\n  public positionIterations: number = 0;\n  // #if B2_ENABLE_PARTICLE\n  public particleIterations: number = 0;\n  // #endif\n  public warmStarting: boolean = false;\n\n  public Copy(step: b2TimeStep): b2TimeStep {\n    this.dt = step.dt;\n    this.inv_dt = step.inv_dt;\n    this.dtRatio = step.dtRatio;\n    this.positionIterations = step.positionIterations;\n    this.velocityIterations = step.velocityIterations;\n    // #if B2_ENABLE_PARTICLE\n    this.particleIterations = step.particleIterations;\n    // #endif\n    this.warmStarting = step.warmStarting;\n    return this;\n  }\n}\n\nexport class b2Position {\n  public readonly c: b2Vec2 = new b2Vec2();\n  public a: number = 0;\n\n  public static MakeArray(length: number): b2Position[] {\n    return b2MakeArray(length, (i: number): b2Position => new b2Position());\n  }\n}\n\nexport class b2Velocity {\n  public readonly v: b2Vec2 = new b2Vec2();\n  public w: number = 0;\n\n  public static MakeArray(length: number): b2Velocity[] {\n    return b2MakeArray(length, (i: number): b2Velocity => new b2Velocity());\n  }\n}\n\nexport class b2SolverData {\n  public readonly step: b2TimeStep = new b2TimeStep();\n  public positions!: b2Position[];\n  public velocities!: b2Velocity[];\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2_linearSlop, b2_angularSlop, b2Maybe } from \"../common/b2_common\";\nimport { b2Abs, b2Vec2, b2Vec3, b2Mat33, b2Rot, XY } from \"../common/b2_math\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\n\nexport interface b2IWeldJointDef extends b2IJointDef {\n  localAnchorA?: XY;\n\n  localAnchorB?: XY;\n\n  referenceAngle?: number;\n\n  stiffness?: number;\n\n  damping?: number;\n}\n\n/// Weld joint definition. You need to specify local anchor points\n/// where they are attached and the relative body setAngle. The position\n/// of the anchor points is important for computing the reaction torque.\nexport class b2WeldJointDef extends b2JointDef implements b2IWeldJointDef {\n  public readonly localAnchorA: b2Vec2 = new b2Vec2();\n\n  public readonly localAnchorB: b2Vec2 = new b2Vec2();\n\n  public referenceAngle: number = 0;\n\n  public stiffness: number = 0;\n\n  public damping: number = 0;\n\n  constructor() {\n    super(b2JointType.e_weldJoint);\n  }\n\n  public Initialize(bA: b2Body, bB: b2Body, anchor: b2Vec2): void {\n    this.bodyA = bA;\n    this.bodyB = bB;\n    this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\n    this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\n    this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\n  }\n}\n\nexport class b2WeldJoint extends b2Joint {\n  public m_stiffness: number = 0;\n  public m_damping: number = 0;\n  public m_bias: number = 0;\n\n  // Solver shared\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n  public m_referenceAngle: number = 0;\n  public m_gamma: number = 0;\n  public readonly m_impulse: b2Vec3 = new b2Vec3(0, 0, 0);\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n  public readonly m_mass: b2Mat33 = new b2Mat33();\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n  public readonly m_K: b2Mat33 = new b2Mat33();\n\n  constructor(def: b2IWeldJointDef) {\n    super(def);\n\n    this.m_stiffness = b2Maybe(def.stiffness, 0);\n    this.m_damping = b2Maybe(def.damping, 0);\n\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\n    this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\n    this.m_impulse.SetZero();\n  }\n\n  private static InitVelocityConstraints_s_P = new b2Vec2();\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n    // J = [-I -r1_skew I r2_skew]\n    //     [ 0       -1 0       1]\n    // r_skew = [-ry; rx]\n\n    // Matlab\n    // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\n    //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\n    //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    const K: b2Mat33 = this.m_K;\n    K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\n    K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n    K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n    K.ex.y = K.ey.x;\n    K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\n    K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n    K.ex.z = K.ez.x;\n    K.ey.z = K.ez.y;\n    K.ez.z = iA + iB;\n\n    if (this.m_stiffness > 0) {\n      K.GetInverse22(this.m_mass);\n\n      let invM: number = iA + iB;\n\n      const C: number = aB - aA - this.m_referenceAngle;\n\n      // Damping coefficient\n      const d: number = this.m_damping;\n\n      // Spring stiffness\n      const k: number = this.m_stiffness;\n\n      // magic formulas\n      const h: number = data.step.dt;\n      this.m_gamma = h * (d + h * k);\n      this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\n      this.m_bias = C * h * k * this.m_gamma;\n\n      invM += this.m_gamma;\n      this.m_mass.ez.z = invM !== 0 ? 1 / invM : 0;\n    } else {\n      K.GetSymInverse33(this.m_mass);\n      this.m_gamma = 0;\n      this.m_bias = 0;\n    }\n\n    if (data.step.warmStarting) {\n      // Scale impulses to support a variable time step.\n      this.m_impulse.SelfMul(data.step.dtRatio);\n\n      // b2Vec2 P(m_impulse.x, m_impulse.y);\n      const P: b2Vec2 = b2WeldJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_impulse.z);\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_impulse.z);\n    } else {\n      this.m_impulse.SetZero();\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\n  private static SolveVelocityConstraints_s_impulse1 = new b2Vec2();\n  private static SolveVelocityConstraints_s_impulse = new b2Vec3();\n  private static SolveVelocityConstraints_s_P = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    if (this.m_stiffness > 0) {\n      const Cdot2: number = wB - wA;\n\n      const impulse2: number = -this.m_mass.ez.z * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z);\n      this.m_impulse.z += impulse2;\n\n      wA -= iA * impulse2;\n      wB += iB * impulse2;\n\n      // b2Vec2 Cdot1 = vB + b2Vec2.CrossSV(wB, this.m_rB) - vA - b2Vec2.CrossSV(wA, this.m_rA);\n      const Cdot1: b2Vec2 = b2Vec2.SubVV(\n        b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0),\n        b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1),\n        b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\n\n      // b2Vec2 impulse1 = -b2Mul22(m_mass, Cdot1);\n      const impulse1: b2Vec2 = b2Mat33.MulM33XY(this.m_mass, Cdot1.x, Cdot1.y, b2WeldJoint.SolveVelocityConstraints_s_impulse1).SelfNeg();\n      this.m_impulse.x += impulse1.x;\n      this.m_impulse.y += impulse1.y;\n\n      // b2Vec2 P = impulse1;\n      const P: b2Vec2 = impulse1;\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      // wA -= iA * b2Cross(m_rA, P);\n      wA -= iA * b2Vec2.CrossVV(this.m_rA, P);\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      // wB += iB * b2Cross(m_rB, P);\n      wB += iB * b2Vec2.CrossVV(this.m_rB, P);\n    } else {\n      // b2Vec2 Cdot1 = vB + b2Cross(wB, this.m_rB) - vA - b2Cross(wA, this.m_rA);\n      const Cdot1: b2Vec2 = b2Vec2.SubVV(\n        b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0),\n        b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1),\n        b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\n      const Cdot2: number = wB - wA;\n      // b2Vec3 const Cdot(Cdot1.x, Cdot1.y, Cdot2);\n\n      // b2Vec3 impulse = -b2Mul(m_mass, Cdot);\n      const impulse: b2Vec3 = b2Mat33.MulM33XYZ(this.m_mass, Cdot1.x, Cdot1.y, Cdot2, b2WeldJoint.SolveVelocityConstraints_s_impulse).SelfNeg();\n      this.m_impulse.SelfAdd(impulse);\n\n      // b2Vec2 P(impulse.x, impulse.y);\n      const P: b2Vec2 = b2WeldJoint.SolveVelocityConstraints_s_P.Set(impulse.x, impulse.y);\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolvePositionConstraints_s_C1 = new b2Vec2();\n  private static SolvePositionConstraints_s_P = new b2Vec2();\n  private static SolvePositionConstraints_s_impulse = new b2Vec3();\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    let aA: number = data.positions[this.m_indexA].a;\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    let aB: number = data.positions[this.m_indexB].a;\n\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n\n    let positionError: number, angularError: number;\n\n    const K: b2Mat33 = this.m_K;\n    K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n    K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n    K.ez.x = -rA.y * iA - rB.y * iB;\n    K.ex.y = K.ey.x;\n    K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n    K.ez.y = rA.x * iA + rB.x * iB;\n    K.ex.z = K.ez.x;\n    K.ey.z = K.ez.y;\n    K.ez.z = iA + iB;\n\n    if (this.m_stiffness > 0) {\n      // b2Vec2 C1 =  cB + rB - cA - rA;\n      const C1 =\n        b2Vec2.SubVV(\n          b2Vec2.AddVV(cB, rB, b2Vec2.s_t0),\n          b2Vec2.AddVV(cA, rA, b2Vec2.s_t1),\n          b2WeldJoint.SolvePositionConstraints_s_C1);\n      positionError = C1.Length();\n      angularError = 0;\n\n      // b2Vec2 P = -K.Solve22(C1);\n      const P: b2Vec2 = K.Solve22(C1.x, C1.y, b2WeldJoint.SolvePositionConstraints_s_P).SelfNeg();\n\n      // cA -= mA * P;\n      cA.SelfMulSub(mA, P);\n      aA -= iA * b2Vec2.CrossVV(rA, P);\n\n      // cB += mB * P;\n      cB.SelfMulAdd(mB, P);\n      aB += iB * b2Vec2.CrossVV(rB, P);\n    } else {\n      // b2Vec2 C1 =  cB + rB - cA - rA;\n      const C1 =\n        b2Vec2.SubVV(\n          b2Vec2.AddVV(cB, rB, b2Vec2.s_t0),\n          b2Vec2.AddVV(cA, rA, b2Vec2.s_t1),\n          b2WeldJoint.SolvePositionConstraints_s_C1);\n      const C2: number = aB - aA - this.m_referenceAngle;\n\n      positionError = C1.Length();\n      angularError = b2Abs(C2);\n\n      // b2Vec3 C(C1.x, C1.y, C2);\n\n      // b2Vec3 impulse = -K.Solve33(C);\n      const impulse: b2Vec3 = K.Solve33(C1.x, C1.y, C2, b2WeldJoint.SolvePositionConstraints_s_impulse).SelfNeg();\n\n      // b2Vec2 P(impulse.x, impulse.y);\n      const P: b2Vec2 = b2WeldJoint.SolvePositionConstraints_s_P.Set(impulse.x, impulse.y);\n\n      // cA -= mA * P;\n      cA.SelfMulSub(mA, P);\n      aA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\n\n      // cB += mB * P;\n      cB.SelfMulAdd(mB, P);\n      aB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\n    }\n\n    // data.positions[this.m_indexA].c = cA;\n    data.positions[this.m_indexA].a = aA;\n    // data.positions[this.m_indexB].c = cB;\n    data.positions[this.m_indexB].a = aB;\n\n    return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\n    // return inv_dt * P;\n    out.x = inv_dt * this.m_impulse.x;\n    out.y = inv_dt * this.m_impulse.y;\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return inv_dt * this.m_impulse.z;\n  }\n\n  public GetLocalAnchorA(): Readonly<b2Vec2> { return this.m_localAnchorA; }\n\n  public GetLocalAnchorB(): Readonly<b2Vec2> { return this.m_localAnchorB; }\n\n  public GetReferenceAngle(): number { return this.m_referenceAngle; }\n\n  public SetStiffness(stiffness: number): void { this.m_stiffness = stiffness; }\n  public GetStiffness(): number { return this.m_stiffness; }\n\n  public SetDamping(damping: number) { this.m_damping = damping; }\n  public GetDamping() { return this.m_damping; }\n\n  public Dump(log: (format: string, ...args: any[]) => void) {\n    const indexA = this.m_bodyA.m_islandIndex;\n    const indexB = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2WeldJointDef = new b2WeldJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\n    log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\n    log(\"  jd.stiffness = %.15f;\\n\", this.m_stiffness);\n    log(\"  jd.damping = %.15f;\\n\", this.m_damping);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_linearSlop, b2Maybe } from \"../common/b2_common\";\nimport { b2Abs, b2Clamp, b2Vec2, b2Rot, XY, b2Max, b2Min, b2Transform } from \"../common/b2_math\";\nimport { b2Joint, b2JointDef, b2JointType, b2IJointDef } from \"./b2_joint\";\nimport { b2SolverData } from \"./b2_time_step\";\nimport { b2Body } from \"./b2_body\";\nimport { b2Draw, b2Color } from \"../common/b2_draw\";\n\nexport interface b2IWheelJointDef extends b2IJointDef {\n  /// The local anchor point relative to bodyA's origin.\n  localAnchorA?: XY;\n\n  /// The local anchor point relative to bodyB's origin.\n  localAnchorB?: XY;\n\n  /// The local translation axis in bodyA.\n  localAxisA?: XY;\n\n  /// Enable/disable the joint limit.\n  enableLimit?: boolean;\n\n  /// The lower translation limit, usually in meters.\n  lowerTranslation?: number;\n\n  /// The upper translation limit, usually in meters.\n  upperTranslation?: number;\n\n  /// Enable/disable the joint motor.\n  enableMotor?: boolean;\n\n  /// The maximum motor torque, usually in N-m.\n  maxMotorTorque?: number;\n\n  /// The desired motor speed in radians per second.\n  motorSpeed?: number;\n\n  /// Suspension stiffness. Typically in units N/m.\n  stiffness?: number;\n\n  /// Suspension damping. Typically in units of N*s/m.\n  damping?: number;\n}\n\n/// Wheel joint definition. This requires defining a line of\n/// motion using an axis and an anchor point. The definition uses local\n/// anchor points and a local axis so that the initial configuration\n/// can violate the constraint slightly. The joint translation is zero\n/// when the local anchor points coincide in world space. Using local\n/// anchors and a local axis helps when saving and loading a game.\nexport class b2WheelJointDef extends b2JointDef implements b2IWheelJointDef {\n  public readonly localAnchorA: b2Vec2 = new b2Vec2(0, 0);\n\n  public readonly localAnchorB: b2Vec2 = new b2Vec2(0, 0);\n\n  public readonly localAxisA: b2Vec2 = new b2Vec2(1, 0);\n\n  public enableLimit: boolean = false;\n\n  public lowerTranslation: number = 0;\n\n  public upperTranslation: number = 0;\n\n  public enableMotor = false;\n\n  public maxMotorTorque: number = 0;\n\n  public motorSpeed: number = 0;\n\n  public stiffness: number = 0;\n\n  public damping: number = 0;\n\n  constructor() {\n    super(b2JointType.e_wheelJoint);\n  }\n\n  public Initialize(bA: b2Body, bB: b2Body, anchor: b2Vec2, axis: b2Vec2): void {\n    this.bodyA = bA;\n    this.bodyB = bB;\n    this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\n    this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\n    this.bodyA.GetLocalVector(axis, this.localAxisA);\n  }\n}\n\nexport class b2WheelJoint extends b2Joint {\n  public readonly m_localAnchorA: b2Vec2 = new b2Vec2();\n  public readonly m_localAnchorB: b2Vec2 = new b2Vec2();\n  public readonly m_localXAxisA: b2Vec2 = new b2Vec2();\n  public readonly m_localYAxisA: b2Vec2 = new b2Vec2();\n\n  public m_impulse: number = 0;\n  public m_motorImpulse: number = 0;\n  public m_springImpulse: number = 0;\n\n  public m_lowerImpulse: number = 0;\n  public m_upperImpulse: number = 0;\n  public m_translation: number = 0;\n  public m_lowerTranslation: number = 0;\n  public m_upperTranslation: number = 0;\n\n  public m_maxMotorTorque: number = 0;\n  public m_motorSpeed: number = 0;\n\n  public m_enableLimit = false;\n  public m_enableMotor = false;\n\n  public m_stiffness: number = 0;\n  public m_damping: number = 0;\n\n  // Solver temp\n  public m_indexA: number = 0;\n  public m_indexB: number = 0;\n  public readonly m_localCenterA: b2Vec2 = new b2Vec2();\n  public readonly m_localCenterB: b2Vec2 = new b2Vec2();\n  public m_invMassA: number = 0;\n  public m_invMassB: number = 0;\n  public m_invIA: number = 0;\n  public m_invIB: number = 0;\n\n  public readonly m_ax: b2Vec2 = new b2Vec2();\n  public readonly m_ay: b2Vec2 = new b2Vec2();\n  public m_sAx: number = 0;\n  public m_sBx: number = 0;\n  public m_sAy: number = 0;\n  public m_sBy: number = 0;\n\n  public m_mass: number = 0;\n  public m_motorMass: number = 0;\n  public m_axialMass: number = 0;\n  public m_springMass: number = 0;\n\n  public m_bias: number = 0;\n  public m_gamma: number = 0;\n\n  public readonly m_qA: b2Rot = new b2Rot();\n  public readonly m_qB: b2Rot = new b2Rot();\n  public readonly m_lalcA: b2Vec2 = new b2Vec2();\n  public readonly m_lalcB: b2Vec2 = new b2Vec2();\n  public readonly m_rA: b2Vec2 = new b2Vec2();\n  public readonly m_rB: b2Vec2 = new b2Vec2();\n\n  constructor(def: b2IWheelJointDef) {\n    super(def);\n\n    this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\n    this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\n    this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, b2Vec2.UNITX));\n    b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\n\n    this.m_lowerTranslation = b2Maybe(def.lowerTranslation, 0);\n    this.m_upperTranslation = b2Maybe(def.upperTranslation, 0);\n    this.m_enableLimit = b2Maybe(def.enableLimit, false);\n\n    this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\n    this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\n    this.m_enableMotor = b2Maybe(def.enableMotor, false);\n\n    this.m_ax.SetZero();\n    this.m_ay.SetZero();\n\n    this.m_stiffness = b2Maybe(def.stiffness, 0);\n    this.m_damping = b2Maybe(def.damping, 0);\n  }\n\n  public GetMotorSpeed(): number {\n    return this.m_motorSpeed;\n  }\n\n  public GetMaxMotorTorque(): number {\n    return this.m_maxMotorTorque;\n  }\n\n  public SetSpringFrequencyHz(hz: number): void {\n    this.m_stiffness = hz;\n  }\n\n  public GetSpringFrequencyHz(): number {\n    return this.m_stiffness;\n  }\n\n  public SetSpringDampingRatio(ratio: number): void {\n    this.m_damping = ratio;\n  }\n\n  public GetSpringDampingRatio(): number {\n    return this.m_damping;\n  }\n\n  private static InitVelocityConstraints_s_d = new b2Vec2();\n  private static InitVelocityConstraints_s_P = new b2Vec2();\n  public InitVelocityConstraints(data: b2SolverData): void {\n    this.m_indexA = this.m_bodyA.m_islandIndex;\n    this.m_indexB = this.m_bodyB.m_islandIndex;\n    this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\n    this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\n    this.m_invMassA = this.m_bodyA.m_invMass;\n    this.m_invMassB = this.m_bodyB.m_invMass;\n    this.m_invIA = this.m_bodyA.m_invI;\n    this.m_invIB = this.m_bodyB.m_invI;\n\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    const aA: number = data.positions[this.m_indexA].a;\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    const aB: number = data.positions[this.m_indexB].a;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // Compute the effective masses.\n    // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n    // b2Vec2 d = cB + rB - cA - rA;\n    const d: b2Vec2 = b2Vec2.SubVV(\n      b2Vec2.AddVV(cB, rB, b2Vec2.s_t0),\n      b2Vec2.AddVV(cA, rA, b2Vec2.s_t1),\n      b2WheelJoint.InitVelocityConstraints_s_d);\n\n    // Point to line constraint\n    {\n      // m_ay = b2Mul(qA, m_localYAxisA);\n      b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\n      // m_sAy = b2Cross(d + rA, m_ay);\n      this.m_sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ay);\n      // m_sBy = b2Cross(rB, m_ay);\n      this.m_sBy = b2Vec2.CrossVV(rB, this.m_ay);\n\n      this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy * this.m_sBy;\n\n      if (this.m_mass > 0) {\n        this.m_mass = 1 / this.m_mass;\n      }\n    }\n\n    // Spring constraint\n    b2Rot.MulRV(qA, this.m_localXAxisA, this.m_ax); // m_ax = b2Mul(qA, m_localXAxisA);\n    this.m_sAx = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ax);\n    this.m_sBx = b2Vec2.CrossVV(rB, this.m_ax);\n\n    const invMass: number = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx * this.m_sBx;\n    if (invMass > 0.0) {\n      this.m_axialMass = 1.0 / invMass;\n    } else {\n      this.m_axialMass = 0.0;\n    }\n\n    this.m_springMass = 0;\n    this.m_bias = 0;\n    this.m_gamma = 0;\n\n    if (this.m_stiffness > 0.0 && invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      const C: number = b2Vec2.DotVV(d, this.m_ax);\n\n      // magic formulas\n      const h: number = data.step.dt;\n      this.m_gamma = h * (this.m_damping + h * this.m_stiffness);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * this.m_stiffness * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    } else {\n      this.m_springImpulse = 0.0;\n    }\n\n    if (this.m_enableLimit) {\n      this.m_translation = b2Vec2.DotVV(this.m_ax, d);\n    } else {\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n\n    if (this.m_enableMotor) {\n      this.m_motorMass = iA + iB;\n      if (this.m_motorMass > 0) {\n        this.m_motorMass = 1 / this.m_motorMass;\n      }\n    } else {\n      this.m_motorMass = 0;\n      this.m_motorImpulse = 0;\n    }\n\n    if (data.step.warmStarting) {\n      // Account for variable time step.\n      this.m_impulse *= data.step.dtRatio;\n      this.m_springImpulse *= data.step.dtRatio;\n      this.m_motorImpulse *= data.step.dtRatio;\n\n      const axialImpulse: number = this.m_springImpulse + this.m_lowerImpulse - this.m_upperImpulse;\n      // b2Vec2 P = m_impulse * m_ay + m_springImpulse * m_ax;\n      const P: b2Vec2 = b2Vec2.AddVV(\n        b2Vec2.MulSV(this.m_impulse, this.m_ay, b2Vec2.s_t0),\n        b2Vec2.MulSV(axialImpulse, this.m_ax, b2Vec2.s_t1),\n        b2WheelJoint.InitVelocityConstraints_s_P);\n      // float32 LA = m_impulse * m_sAy + m_springImpulse * m_sAx + m_motorImpulse;\n      const LA: number = this.m_impulse * this.m_sAy + axialImpulse * this.m_sAx + this.m_motorImpulse;\n      // float32 LB = m_impulse * m_sBy + m_springImpulse * m_sBx + m_motorImpulse;\n      const LB: number = this.m_impulse * this.m_sBy + axialImpulse * this.m_sBx + this.m_motorImpulse;\n\n      // vA -= m_invMassA * P;\n      vA.SelfMulSub(this.m_invMassA, P);\n      wA -= this.m_invIA * LA;\n\n      // vB += m_invMassB * P;\n      vB.SelfMulAdd(this.m_invMassB, P);\n      wB += this.m_invIB * LB;\n    } else {\n      this.m_impulse = 0;\n      this.m_springImpulse = 0;\n      this.m_motorImpulse = 0;\n      this.m_lowerImpulse = 0;\n      this.m_upperImpulse = 0;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolveVelocityConstraints_s_P = new b2Vec2();\n  public SolveVelocityConstraints(data: b2SolverData): void {\n    const mA: number = this.m_invMassA, mB: number = this.m_invMassB;\n    const iA: number = this.m_invIA, iB: number = this.m_invIB;\n\n    const vA: b2Vec2 = data.velocities[this.m_indexA].v;\n    let wA: number = data.velocities[this.m_indexA].w;\n    const vB: b2Vec2 = data.velocities[this.m_indexB].v;\n    let wB: number = data.velocities[this.m_indexB].w;\n\n    // Solve spring constraint\n    {\n      const Cdot: number = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBx * wB - this.m_sAx * wA;\n      const impulse: number = -this.m_springMass * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse);\n      this.m_springImpulse += impulse;\n\n      // b2Vec2 P = impulse * m_ax;\n      const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\n      const LA: number = impulse * this.m_sAx;\n      const LB: number = impulse * this.m_sBx;\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * LA;\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * LB;\n    }\n\n    // Solve rotational motor constraint\n    {\n      const Cdot: number = wB - wA - this.m_motorSpeed;\n      let impulse: number = -this.m_motorMass * Cdot;\n\n      const oldImpulse: number = this.m_motorImpulse;\n      const maxImpulse: number = data.step.dt * this.m_maxMotorTorque;\n      this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\n      impulse = this.m_motorImpulse - oldImpulse;\n\n      wA -= iA * impulse;\n      wB += iB * impulse;\n    }\n\n    if (this.m_enableLimit) {\n      // Lower limit\n      {\n        const C: number = this.m_translation - this.m_lowerTranslation;\n        const Cdot: number = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBx * wB - this.m_sAx * wA;\n        let impulse: number = -this.m_axialMass * (Cdot + b2Max(C, 0.0) * data.step.inv_dt);\n        const oldImpulse: number = this.m_lowerImpulse;\n        this.m_lowerImpulse = b2Max(this.m_lowerImpulse + impulse, 0.0);\n        impulse = this.m_lowerImpulse - oldImpulse;\n\n        // b2Vec2 P = impulse * this.m_ax;\n        const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\n        const LA: number = impulse * this.m_sAx;\n        const LB: number = impulse * this.m_sBx;\n\n        // vA -= mA * P;\n        vA.SelfMulSub(mA, P);\n        wA -= iA * LA;\n        // vB += mB * P;\n        vB.SelfMulAdd(mB, P);\n        wB += iB * LB;\n      }\n\n      // Upper limit\n      // Note: signs are flipped to keep C positive when the constraint is satisfied.\n      // This also keeps the impulse positive when the limit is active.\n      {\n        const C: number = this.m_upperTranslation - this.m_translation;\n        const Cdot: number = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vA, vB, b2Vec2.s_t0)) + this.m_sAx * wA - this.m_sBx * wB;\n        let impulse: number = -this.m_axialMass * (Cdot + b2Max(C, 0.0) * data.step.inv_dt);\n        const oldImpulse: number = this.m_upperImpulse;\n        this.m_upperImpulse = b2Max(this.m_upperImpulse + impulse, 0.0);\n        impulse = this.m_upperImpulse - oldImpulse;\n\n        // b2Vec2 P = impulse * this.m_ax;\n        const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\n        const LA: number = impulse * this.m_sAx;\n        const LB: number = impulse * this.m_sBx;\n\n        // vA += mA * P;\n        vA.SelfMulAdd(mA, P);\n        wA += iA * LA;\n        // vB -= mB * P;\n        vB.SelfMulSub(mB, P);\n        wB -= iB * LB;\n      }\n    }\n\n    // Solve point to line constraint\n    {\n      const Cdot: number = b2Vec2.DotVV(this.m_ay, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBy * wB - this.m_sAy * wA;\n      const impulse: number = -this.m_mass * Cdot;\n      this.m_impulse += impulse;\n\n      // b2Vec2 P = impulse * m_ay;\n      const P: b2Vec2 = b2Vec2.MulSV(impulse, this.m_ay, b2WheelJoint.SolveVelocityConstraints_s_P);\n      const LA: number = impulse * this.m_sAy;\n      const LB: number = impulse * this.m_sBy;\n\n      // vA -= mA * P;\n      vA.SelfMulSub(mA, P);\n      wA -= iA * LA;\n\n      // vB += mB * P;\n      vB.SelfMulAdd(mB, P);\n      wB += iB * LB;\n    }\n\n    // data.velocities[this.m_indexA].v = vA;\n    data.velocities[this.m_indexA].w = wA;\n    // data.velocities[this.m_indexB].v = vB;\n    data.velocities[this.m_indexB].w = wB;\n  }\n\n  private static SolvePositionConstraints_s_d = new b2Vec2();\n  private static SolvePositionConstraints_s_P = new b2Vec2();\n  public SolvePositionConstraints(data: b2SolverData): boolean {\n    const cA: b2Vec2 = data.positions[this.m_indexA].c;\n    let aA: number = data.positions[this.m_indexA].a;\n    const cB: b2Vec2 = data.positions[this.m_indexB].c;\n    let aB: number = data.positions[this.m_indexB].a;\n\n    // const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n    // // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n    // b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n    // const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n    // // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n    // b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n    // const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n    // // b2Vec2 d = (cB - cA) + rB - rA;\n    // const d: b2Vec2 = b2Vec2.AddVV(\n    //   b2Vec2.SubVV(cB, cA, b2Vec2.s_t0),\n    //   b2Vec2.SubVV(rB, rA, b2Vec2.s_t1),\n    //   b2WheelJoint.SolvePositionConstraints_s_d);\n\n    // // b2Vec2 ay = b2Mul(qA, m_localYAxisA);\n    // const ay: b2Vec2 = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\n\n    // // float32 sAy = b2Cross(d + rA, ay);\n    // const sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), ay);\n    // // float32 sBy = b2Cross(rB, ay);\n    // const sBy = b2Vec2.CrossVV(rB, ay);\n\n    // // float32 C = b2Dot(d, ay);\n    // const C: number = b2Vec2.DotVV(d, this.m_ay);\n\n    // const k: number = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;\n\n    // let impulse: number;\n    // if (k !== 0) {\n    //   impulse = - C / k;\n    // } else {\n    //   impulse = 0;\n    // }\n\n    // // b2Vec2 P = impulse * ay;\n    // const P: b2Vec2 = b2Vec2.MulSV(impulse, ay, b2WheelJoint.SolvePositionConstraints_s_P);\n    // const LA: number = impulse * sAy;\n    // const LB: number = impulse * sBy;\n\n    // // cA -= m_invMassA * P;\n    // cA.SelfMulSub(this.m_invMassA, P);\n    // aA -= this.m_invIA * LA;\n    // // cB += m_invMassB * P;\n    // cB.SelfMulAdd(this.m_invMassB, P);\n    // aB += this.m_invIB * LB;\n\n    let linearError: number = 0.0;\n\n    if (this.m_enableLimit) {\n      // b2Rot qA(aA), qB(aB);\n      const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n      // b2Vec2 rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\n      // b2Vec2 rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\n      // b2Vec2 d = (cB - cA) + rB - rA;\n\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n      b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n      const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n      b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n      const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n      // b2Vec2 d = (cB - cA) + rB - rA;\n      const d: b2Vec2 = b2Vec2.AddVV(\n        b2Vec2.SubVV(cB, cA, b2Vec2.s_t0),\n        b2Vec2.SubVV(rB, rA, b2Vec2.s_t1),\n        b2WheelJoint.SolvePositionConstraints_s_d);\n\n      // b2Vec2 ax = b2Mul(qA, this.m_localXAxisA);\n      const ax: b2Vec2 = b2Rot.MulRV(qA, this.m_localXAxisA, this.m_ax);\n      // float sAx = b2Cross(d + rA, this.m_ax);\n      const sAx = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ax);\n      // float sBx = b2Cross(rB, this.m_ax);\n      const sBx = b2Vec2.CrossVV(rB, this.m_ax);\n\n      let C: number = 0.0;\n      const translation: number = b2Vec2.DotVV(ax, d);\n      if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2_linearSlop) {\n        C = translation;\n      } else if (translation <= this.m_lowerTranslation) {\n        C = b2Min(translation - this.m_lowerTranslation, 0.0);\n      } else if (translation >= this.m_upperTranslation) {\n        C = b2Max(translation - this.m_upperTranslation, 0.0);\n      }\n\n      if (C !== 0.0) {\n\n        const invMass: number = this.m_invMassA + this.m_invMassB + this.m_invIA * sAx * sAx + this.m_invIB * sBx * sBx;\n        let impulse: number = 0.0;\n        if (invMass !== 0.0) {\n          impulse = -C / invMass;\n        }\n\n        const P: b2Vec2 = b2Vec2.MulSV(impulse, ax, b2WheelJoint.SolvePositionConstraints_s_P);\n        const LA: number = impulse * sAx;\n        const LB: number = impulse * sBx;\n\n        // cA -= m_invMassA * P;\n        cA.SelfMulSub(this.m_invMassA, P);\n        aA -= this.m_invIA * LA;\n        // cB += m_invMassB * P;\n        cB.SelfMulAdd(this.m_invMassB, P);\n        // aB += m_invIB * LB;\n        aB += this.m_invIB * LB;\n\n        linearError = b2Abs(C);\n      }\n    }\n\n    // Solve perpendicular constraint\n    {\n      // b2Rot qA(aA), qB(aB);\n      const qA: b2Rot = this.m_qA.SetAngle(aA), qB: b2Rot = this.m_qB.SetAngle(aB);\n\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n      // b2Vec2 d = (cB - cA) + rB - rA;\n\n      // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\n      b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\n      const rA: b2Vec2 = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\n      // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\n      b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\n      const rB: b2Vec2 = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\n      // b2Vec2 d = (cB - cA) + rB - rA;\n      const d: b2Vec2 = b2Vec2.AddVV(\n        b2Vec2.SubVV(cB, cA, b2Vec2.s_t0),\n        b2Vec2.SubVV(rB, rA, b2Vec2.s_t1),\n        b2WheelJoint.SolvePositionConstraints_s_d);\n\n      // b2Vec2 ay = b2Mul(qA, m_localYAxisA);\n      const ay: b2Vec2 = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\n\n      // float sAy = b2Cross(d + rA, ay);\n      const sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), ay);\n      // float sBy = b2Cross(rB, ay);\n      const sBy = b2Vec2.CrossVV(rB, ay);\n\n      // float C = b2Dot(d, ay);\n      const C: number = b2Vec2.DotVV(d, ay);\n\n      const invMass: number = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;\n\n      let impulse: number = 0.0;\n      if (invMass !== 0.0) {\n        impulse = - C / invMass;\n      }\n\n      // b2Vec2 P = impulse * ay;\n      // const LA: number = impulse * sAy;\n      // const LB: number = impulse * sBy;\n      const P: b2Vec2 = b2Vec2.MulSV(impulse, ay, b2WheelJoint.SolvePositionConstraints_s_P);\n      const LA: number = impulse * sAy;\n      const LB: number = impulse * sBy;\n\n      // cA -= m_invMassA * P;\n      cA.SelfMulSub(this.m_invMassA, P);\n      aA -= this.m_invIA * LA;\n      // cB += m_invMassB * P;\n      cB.SelfMulAdd(this.m_invMassB, P);\n      aB += this.m_invIB * LB;\n\n      linearError = b2Max(linearError, b2Abs(C));\n    }\n\n    // data.positions[this.m_indexA].c = cA;\n    data.positions[this.m_indexA].a = aA;\n    // data.positions[this.m_indexB].c = cB;\n    data.positions[this.m_indexB].a = aB;\n\n    return linearError <= b2_linearSlop;\n  }\n\n  public GetDefinition(def: b2WheelJointDef): b2WheelJointDef {\n    // DEBUG: b2Assert(false); // TODO\n    return def;\n  }\n\n  public GetAnchorA<T extends XY>(out: T): T {\n    return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\n  }\n\n  public GetAnchorB<T extends XY>(out: T): T {\n    return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\n  }\n\n  public GetReactionForce<T extends XY>(inv_dt: number, out: T): T {\n    out.x = inv_dt * (this.m_impulse * this.m_ay.x + (this.m_springImpulse + this.m_lowerImpulse - this.m_upperImpulse) * this.m_ax.x);\n    out.y = inv_dt * (this.m_impulse * this.m_ay.y + (this.m_springImpulse + this.m_lowerImpulse - this.m_upperImpulse) * this.m_ax.y);\n    return out;\n  }\n\n  public GetReactionTorque(inv_dt: number): number {\n    return inv_dt * this.m_motorImpulse;\n  }\n\n  public GetLocalAnchorA(): Readonly<b2Vec2> { return this.m_localAnchorA; }\n\n  public GetLocalAnchorB(): Readonly<b2Vec2> { return this.m_localAnchorB; }\n\n  public GetLocalAxisA(): Readonly<b2Vec2> { return this.m_localXAxisA; }\n\n  public GetJointTranslation(): number {\n    return this.GetPrismaticJointTranslation();\n  }\n\n  public GetJointLinearSpeed(): number {\n    return this.GetPrismaticJointSpeed();\n  }\n\n  public GetJointAngle(): number {\n    return this.GetRevoluteJointAngle();\n  }\n\n  public GetJointAngularSpeed(): number {\n    return this.GetRevoluteJointSpeed();\n  }\n\n  public GetPrismaticJointTranslation(): number {\n    const bA: b2Body = this.m_bodyA;\n    const bB: b2Body = this.m_bodyB;\n\n    const pA: b2Vec2 = bA.GetWorldPoint(this.m_localAnchorA, new b2Vec2());\n    const pB: b2Vec2 = bB.GetWorldPoint(this.m_localAnchorB, new b2Vec2());\n    const d: b2Vec2 = b2Vec2.SubVV(pB, pA, new b2Vec2());\n    const axis: b2Vec2 = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\n\n    const translation: number = b2Vec2.DotVV(d, axis);\n    return translation;\n  }\n\n  public GetPrismaticJointSpeed(): number {\n    const bA: b2Body = this.m_bodyA;\n    const bB: b2Body = this.m_bodyB;\n\n    // b2Vec2 rA = b2Mul(bA.m_xf.q, m_localAnchorA - bA.m_sweep.localCenter);\n    b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\n    const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\n    // b2Vec2 rB = b2Mul(bB.m_xf.q, m_localAnchorB - bB.m_sweep.localCenter);\n    b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\n    const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\n    // b2Vec2 pA = bA.m_sweep.c + rA;\n    const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\n    // b2Vec2 pB = bB.m_sweep.c + rB;\n    const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\n    // b2Vec2 d = pB - pA;\n    const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\n    // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\n    const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\n\n    const vA = bA.m_linearVelocity;\n    const vB = bB.m_linearVelocity;\n    const wA = bA.m_angularVelocity;\n    const wB = bB.m_angularVelocity;\n\n    // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\n    const speed =\n      b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\n      b2Vec2.DotVV(\n        axis,\n        b2Vec2.SubVV(\n          b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0),\n          b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1),\n          b2Vec2.s_t0));\n    return speed;\n  }\n\n  public GetRevoluteJointAngle(): number {\n    // b2Body* bA = this.m_bodyA;\n    // b2Body* bB = this.m_bodyB;\n    // return bB.this.m_sweep.a - bA.this.m_sweep.a;\n    return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;\n  }\n\n  public GetRevoluteJointSpeed(): number {\n    const wA: number = this.m_bodyA.m_angularVelocity;\n    const wB: number = this.m_bodyB.m_angularVelocity;\n    return wB - wA;\n  }\n\n  public IsMotorEnabled(): boolean {\n    return this.m_enableMotor;\n  }\n\n  public EnableMotor(flag: boolean): void {\n    if (flag !== this.m_enableMotor) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableMotor = flag;\n    }\n  }\n\n  public SetMotorSpeed(speed: number): void {\n    if (speed !== this.m_motorSpeed) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_motorSpeed = speed;\n    }\n  }\n\n  public SetMaxMotorTorque(force: number): void {\n    if (force !== this.m_maxMotorTorque) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_maxMotorTorque = force;\n    }\n  }\n\n  public GetMotorTorque(inv_dt: number): number {\n    return inv_dt * this.m_motorImpulse;\n  }\n\n  /// Is the joint limit enabled?\n  public IsLimitEnabled(): boolean {\n    return this.m_enableLimit;\n  }\n\n  /// Enable/disable the joint translation limit.\n  public EnableLimit(flag: boolean): void {\n    if (flag !== this.m_enableLimit) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_enableLimit = flag;\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n  }\n\n  /// Get the lower joint translation limit, usually in meters.\n  public GetLowerLimit(): number {\n    return this.m_lowerTranslation;\n  }\n\n  /// Get the upper joint translation limit, usually in meters.\n  public GetUpperLimit(): number {\n    return this.m_upperTranslation;\n  }\n\n  /// Set the joint translation limits, usually in meters.\n  public SetLimits(lower: number, upper: number): void {\n    // b2Assert(lower <= upper);\n    if (lower !== this.m_lowerTranslation || upper !== this.m_upperTranslation) {\n      this.m_bodyA.SetAwake(true);\n      this.m_bodyB.SetAwake(true);\n      this.m_lowerTranslation = lower;\n      this.m_upperTranslation = upper;\n      this.m_lowerImpulse = 0.0;\n      this.m_upperImpulse = 0.0;\n    }\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    const indexA = this.m_bodyA.m_islandIndex;\n    const indexB = this.m_bodyB.m_islandIndex;\n\n    log(\"  const jd: b2WheelJointDef = new b2WheelJointDef();\\n\");\n    log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\n    log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\n    log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\n    log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\n    log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\n    log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\n    log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\n    log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\n    log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\n    log(\"  jd.stiffness = %.15f;\\n\", this.m_stiffness);\n    log(\"  jd.damping = %.15f;\\n\", this.m_damping);\n    log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\n  }\n\n  ///\n  private static Draw_s_pA = new b2Vec2();\n  private static Draw_s_pB = new b2Vec2();\n  private static Draw_s_axis = new b2Vec2();\n  private static Draw_s_c1 = new b2Color(0.7, 0.7, 0.7);\n  private static Draw_s_c2 = new b2Color(0.3, 0.9, 0.3);\n  private static Draw_s_c3 = new b2Color(0.9, 0.3, 0.3);\n  private static Draw_s_c4 = new b2Color(0.3, 0.3, 0.9);\n  private static Draw_s_c5 = new b2Color(0.4, 0.4, 0.4);\n  private static Draw_s_lower = new b2Vec2();\n  private static Draw_s_upper = new b2Vec2();\n  private static Draw_s_perp = new b2Vec2();\n  public Draw(draw: b2Draw): void {\n    const xfA: Readonly<b2Transform> = this.m_bodyA.GetTransform();\n    const xfB: Readonly<b2Transform> = this.m_bodyB.GetTransform();\n    const pA = b2Transform.MulXV(xfA, this.m_localAnchorA, b2WheelJoint.Draw_s_pA);\n    const pB = b2Transform.MulXV(xfB, this.m_localAnchorB, b2WheelJoint.Draw_s_pB);\n\n    // b2Vec2 axis = b2Mul(xfA.q, m_localXAxisA);\n    const axis: b2Vec2 = b2Rot.MulRV(xfA.q, this.m_localXAxisA, b2WheelJoint.Draw_s_axis);\n\n    const c1 = b2WheelJoint.Draw_s_c1; // b2Color c1(0.7f, 0.7f, 0.7f);\n    const c2 = b2WheelJoint.Draw_s_c2; // b2Color c2(0.3f, 0.9f, 0.3f);\n    const c3 = b2WheelJoint.Draw_s_c3; // b2Color c3(0.9f, 0.3f, 0.3f);\n    const c4 = b2WheelJoint.Draw_s_c4; // b2Color c4(0.3f, 0.3f, 0.9f);\n    const c5 = b2WheelJoint.Draw_s_c5; // b2Color c5(0.4f, 0.4f, 0.4f);\n\n    draw.DrawSegment(pA, pB, c5);\n\n    if (this.m_enableLimit) {\n      // b2Vec2 lower = pA + m_lowerTranslation * axis;\n      const lower = b2Vec2.AddVMulSV(pA, this.m_lowerTranslation, axis, b2WheelJoint.Draw_s_lower);\n      // b2Vec2 upper = pA + m_upperTranslation * axis;\n      const upper = b2Vec2.AddVMulSV(pA, this.m_upperTranslation, axis, b2WheelJoint.Draw_s_upper);\n      // b2Vec2 perp = b2Mul(xfA.q, m_localYAxisA);\n      const perp = b2Rot.MulRV(xfA.q, this.m_localYAxisA, b2WheelJoint.Draw_s_perp);\n      // draw.DrawSegment(lower, upper, c1);\n      draw.DrawSegment(lower, upper, c1);\n      // draw.DrawSegment(lower - 0.5f * perp, lower + 0.5f * perp, c2);\n      draw.DrawSegment(b2Vec2.AddVMulSV(lower, -0.5, perp, b2Vec2.s_t0), b2Vec2.AddVMulSV(lower, 0.5, perp, b2Vec2.s_t1), c2);\n      // draw.DrawSegment(upper - 0.5f * perp, upper + 0.5f * perp, c3);\n      draw.DrawSegment(b2Vec2.AddVMulSV(upper, -0.5, perp, b2Vec2.s_t0), b2Vec2.AddVMulSV(upper, 0.5, perp, b2Vec2.s_t1), c3);\n    } else {\n      // draw.DrawSegment(pA - 1.0f * axis, pA + 1.0f * axis, c1);\n      draw.DrawSegment(b2Vec2.AddVMulSV(pA, -1.0, axis, b2Vec2.s_t0), b2Vec2.AddVMulSV(pA, 1.0, axis, b2Vec2.s_t1), c1);\n    }\n\n    draw.DrawPoint(pA, 5.0, c1);\n    draw.DrawPoint(pB, 5.0, c4);\n  }\n}\n",
    "/*\n* Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_epsilon, b2_maxSubSteps, b2_maxTOIContacts } from \"../common/b2_common\";\nimport { b2Min, b2Vec2, b2Transform, b2Sweep, XY } from \"../common/b2_math\";\nimport { b2Timer } from \"../common/b2_timer\";\nimport { b2Color, b2Draw, b2DrawFlags } from \"../common/b2_draw\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput, b2TestOverlapShape } from \"../collision/b2_collision\";\nimport { b2TreeNode } from \"../collision/b2_dynamic_tree\";\nimport { b2TimeOfImpact, b2TOIInput, b2TOIOutput, b2TOIOutputState } from \"../collision/b2_time_of_impact\";\nimport { b2Shape, b2ShapeType } from \"../collision/b2_shape\";\nimport { b2ChainShape } from \"../collision/b2_chain_shape\";\nimport { b2CircleShape } from \"../collision/b2_circle_shape\";\nimport { b2EdgeShape } from \"../collision/b2_edge_shape\";\nimport { b2PolygonShape } from \"../collision/b2_polygon_shape\";\nimport { b2Contact, b2ContactEdge } from \"./b2_contact\";\nimport { b2Joint, b2IJointDef, b2JointType, b2JointEdge } from \"./b2_joint\";\nimport { b2AreaJoint, b2IAreaJointDef } from \"./b2_area_joint\";\nimport { b2DistanceJoint, b2IDistanceJointDef } from \"./b2_distance_joint\";\nimport { b2FrictionJoint, b2IFrictionJointDef } from \"./b2_friction_joint\";\nimport { b2GearJoint, b2IGearJointDef } from \"./b2_gear_joint\";\nimport { b2MotorJoint, b2IMotorJointDef } from \"./b2_motor_joint\";\nimport { b2MouseJoint, b2IMouseJointDef } from \"./b2_mouse_joint\";\nimport { b2PrismaticJoint, b2IPrismaticJointDef } from \"./b2_prismatic_joint\";\nimport { b2PulleyJoint, b2IPulleyJointDef } from \"./b2_pulley_joint\";\nimport { b2RevoluteJoint, b2IRevoluteJointDef } from \"./b2_revolute_joint\";\nimport { b2WeldJoint, b2IWeldJointDef } from \"./b2_weld_joint\";\nimport { b2WheelJoint, b2IWheelJointDef } from \"./b2_wheel_joint\";\nimport { b2Body, b2IBodyDef, b2BodyType } from \"./b2_body\";\nimport { b2ContactManager } from \"./b2_contact_manager\";\nimport { b2Fixture, b2FixtureProxy } from \"./b2_fixture\";\nimport { b2Island } from \"./b2_island\";\nimport { b2Profile, b2TimeStep } from \"./b2_time_step\";\nimport { b2ContactFilter } from \"./b2_world_callbacks\";\nimport { b2ContactListener } from \"./b2_world_callbacks\";\nimport { b2DestructionListener } from \"./b2_world_callbacks\";\nimport { b2QueryCallback, b2QueryCallbackFunction } from \"./b2_world_callbacks\";\nimport { b2RayCastCallback, b2RayCastCallbackFunction } from \"./b2_world_callbacks\";\n// #if B2_ENABLE_PARTICLE\nimport { b2_maxFloat } from \"../common/b2_settings\";\nimport { b2CalculateParticleIterations } from \"../particle/b2_particle\";\nimport { b2ParticleSystemDef, b2ParticleSystem } from \"../particle/b2_particle_system\";\n// #endif\n// #if B2_ENABLE_CONTROLLER\nimport { b2Controller, b2ControllerEdge } from \"../controllers/b2_controller\";\n// #endif\n\n/// The world class manages all physics entities, dynamic simulation,\n/// and asynchronous queries. The world also contains efficient memory\n/// management facilities.\nexport class b2World {\n  public readonly m_contactManager: b2ContactManager = new b2ContactManager();\n\n  public m_bodyList: b2Body | null = null;\n  public m_jointList: b2Joint | null = null;\n\n  // #if B2_ENABLE_PARTICLE\n  public m_particleSystemList: b2ParticleSystem | null = null;\n  // #endif\n\n  public m_bodyCount: number = 0;\n  public m_jointCount: number = 0;\n\n  public readonly m_gravity: b2Vec2 = new b2Vec2();\n  public m_allowSleep: boolean = true;\n\n  public m_destructionListener: b2DestructionListener | null = null;\n  public m_debugDraw: b2Draw | null = null;\n\n  // This is used to compute the time step ratio to\n  // support a variable time step.\n  public m_inv_dt0: number = 0;\n\n  public m_newContacts: boolean = false;\n  public m_locked: boolean = false;\n  public m_clearForces: boolean = true;\n\n  // These are for debugging the solver.\n  public m_warmStarting: boolean = true;\n  public m_continuousPhysics: boolean = true;\n  public m_subStepping: boolean = false;\n\n  public m_stepComplete: boolean = true;\n\n  public readonly m_profile: b2Profile = new b2Profile();\n\n  public readonly m_island: b2Island = new b2Island();\n\n  public readonly s_stack: Array<b2Body | null> = [];\n\n  // #if B2_ENABLE_CONTROLLER\n  public m_controllerList: b2Controller | null = null;\n  public m_controllerCount: number = 0;\n  // #endif\n\n  /// Construct a world object.\n  /// @param gravity the world gravity vector.\n  constructor(gravity: XY) {\n    this.m_gravity.Copy(gravity);\n  }\n\n  /// Register a destruction listener. The listener is owned by you and must\n  /// remain in scope.\n  public SetDestructionListener(listener: b2DestructionListener | null): void {\n    this.m_destructionListener = listener;\n  }\n\n  /// Register a contact filter to provide specific control over collision.\n  /// Otherwise the default filter is used (b2_defaultFilter). The listener is\n  /// owned by you and must remain in scope.\n  public SetContactFilter(filter: b2ContactFilter): void {\n    this.m_contactManager.m_contactFilter = filter;\n  }\n\n  /// Register a contact event listener. The listener is owned by you and must\n  /// remain in scope.\n  public SetContactListener(listener: b2ContactListener): void {\n    this.m_contactManager.m_contactListener = listener;\n  }\n\n  /// Register a routine for debug drawing. The debug draw functions are called\n  /// inside with b2World::DebugDraw method. The debug draw object is owned\n  /// by you and must remain in scope.\n  public SetDebugDraw(debugDraw: b2Draw | null): void {\n    this.m_debugDraw = debugDraw;\n  }\n\n  /// Create a rigid body given a definition. No reference to the definition\n  /// is retained.\n  /// @warning This function is locked during callbacks.\n  public CreateBody(def: b2IBodyDef = {}): b2Body {\n    if (this.IsLocked()) { throw new Error(); }\n\n    const b: b2Body = new b2Body(def, this);\n\n    // Add to world doubly linked list.\n    b.m_prev = null;\n    b.m_next = this.m_bodyList;\n    if (this.m_bodyList) {\n      this.m_bodyList.m_prev = b;\n    }\n    this.m_bodyList = b;\n    ++this.m_bodyCount;\n\n    return b;\n  }\n\n  /// Destroy a rigid body given a definition. No reference to the definition\n  /// is retained. This function is locked during callbacks.\n  /// @warning This automatically deletes all associated shapes and joints.\n  /// @warning This function is locked during callbacks.\n  public DestroyBody(b: b2Body): void {\n    // DEBUG: b2Assert(this.m_bodyCount > 0);\n    if (this.IsLocked()) { throw new Error(); }\n\n    // Delete the attached joints.\n    let je: b2JointEdge | null = b.m_jointList;\n    while (je) {\n      const je0: b2JointEdge = je;\n      je = je.next;\n\n      if (this.m_destructionListener) {\n        this.m_destructionListener.SayGoodbyeJoint(je0.joint);\n      }\n\n      this.DestroyJoint(je0.joint);\n\n      b.m_jointList = je;\n    }\n    b.m_jointList = null;\n\n    // #if B2_ENABLE_CONTROLLER\n    // @see b2Controller list\n    let coe: b2ControllerEdge | null = b.m_controllerList;\n    while (coe) {\n      const coe0: b2ControllerEdge = coe;\n      coe = coe.nextController;\n      coe0.controller.RemoveBody(b);\n    }\n    // #endif\n\n    // Delete the attached contacts.\n    let ce: b2ContactEdge | null = b.m_contactList;\n    while (ce) {\n      const ce0: b2ContactEdge = ce;\n      ce = ce.next;\n      this.m_contactManager.Destroy(ce0.contact);\n    }\n    b.m_contactList = null;\n\n    // Delete the attached fixtures. This destroys broad-phase proxies.\n    let f: b2Fixture | null = b.m_fixtureList;\n    while (f) {\n      const f0: b2Fixture = f;\n      f = f.m_next;\n\n      if (this.m_destructionListener) {\n        this.m_destructionListener.SayGoodbyeFixture(f0);\n      }\n\n      f0.DestroyProxies();\n      f0.Reset();\n\n      b.m_fixtureList = f;\n      b.m_fixtureCount -= 1;\n    }\n    b.m_fixtureList = null;\n    b.m_fixtureCount = 0;\n\n    // Remove world body list.\n    if (b.m_prev) {\n      b.m_prev.m_next = b.m_next;\n    }\n\n    if (b.m_next) {\n      b.m_next.m_prev = b.m_prev;\n    }\n\n    if (b === this.m_bodyList) {\n      this.m_bodyList = b.m_next;\n    }\n\n    --this.m_bodyCount;\n  }\n\n  private static _Joint_Create(def: b2IJointDef): b2Joint {\n    switch (def.type) {\n      case b2JointType.e_distanceJoint: return new b2DistanceJoint(def as b2IDistanceJointDef);\n      case b2JointType.e_mouseJoint: return new b2MouseJoint(def as b2IMouseJointDef);\n      case b2JointType.e_prismaticJoint: return new b2PrismaticJoint(def as b2IPrismaticJointDef);\n      case b2JointType.e_revoluteJoint: return new b2RevoluteJoint(def as b2IRevoluteJointDef);\n      case b2JointType.e_pulleyJoint: return new b2PulleyJoint(def as b2IPulleyJointDef);\n      case b2JointType.e_gearJoint: return new b2GearJoint(def as b2IGearJointDef);\n      case b2JointType.e_wheelJoint: return new b2WheelJoint(def as b2IWheelJointDef);\n      case b2JointType.e_weldJoint: return new b2WeldJoint(def as b2IWeldJointDef);\n      case b2JointType.e_frictionJoint: return new b2FrictionJoint(def as b2IFrictionJointDef);\n      case b2JointType.e_motorJoint: return new b2MotorJoint(def as b2IMotorJointDef);\n      case b2JointType.e_areaJoint: return new b2AreaJoint(def as b2IAreaJointDef);\n    }\n    throw new Error();\n  }\n\n  private static _Joint_Destroy(joint: b2Joint): void {\n  }\n\n  /// Create a joint to constrain bodies together. No reference to the definition\n  /// is retained. This may cause the connected bodies to cease colliding.\n  /// @warning This function is locked during callbacks.\n  public CreateJoint(def: b2IAreaJointDef): b2AreaJoint;\n  public CreateJoint(def: b2IDistanceJointDef): b2DistanceJoint;\n  public CreateJoint(def: b2IFrictionJointDef): b2FrictionJoint;\n  public CreateJoint(def: b2IGearJointDef): b2GearJoint;\n  public CreateJoint(def: b2IMotorJointDef): b2MotorJoint;\n  public CreateJoint(def: b2IMouseJointDef): b2MouseJoint;\n  public CreateJoint(def: b2IPrismaticJointDef): b2PrismaticJoint;\n  public CreateJoint(def: b2IPulleyJointDef): b2PulleyJoint;\n  public CreateJoint(def: b2IRevoluteJointDef): b2RevoluteJoint;\n  public CreateJoint(def: b2IWeldJointDef): b2WeldJoint;\n  public CreateJoint(def: b2IWheelJointDef): b2WheelJoint;\n  public CreateJoint(def: b2IJointDef): b2Joint {\n    if (this.IsLocked()) { throw new Error(); }\n\n    const j: b2Joint = b2World._Joint_Create(def);\n\n    // Connect to the world list.\n    j.m_prev = null;\n    j.m_next = this.m_jointList;\n    if (this.m_jointList) {\n      this.m_jointList.m_prev = j;\n    }\n    this.m_jointList = j;\n    ++this.m_jointCount;\n\n    // Connect to the bodies' doubly linked lists.\n    // j.m_edgeA.other = j.m_bodyB; // done in b2Joint constructor\n    j.m_edgeA.prev = null;\n    j.m_edgeA.next = j.m_bodyA.m_jointList;\n    if (j.m_bodyA.m_jointList) { j.m_bodyA.m_jointList.prev = j.m_edgeA; }\n    j.m_bodyA.m_jointList = j.m_edgeA;\n\n    // j.m_edgeB.other = j.m_bodyA; // done in b2Joint constructor\n    j.m_edgeB.prev = null;\n    j.m_edgeB.next = j.m_bodyB.m_jointList;\n    if (j.m_bodyB.m_jointList) { j.m_bodyB.m_jointList.prev = j.m_edgeB; }\n    j.m_bodyB.m_jointList = j.m_edgeB;\n\n    const bodyA: b2Body = j.m_bodyA;\n    const bodyB: b2Body = j.m_bodyB;\n    const collideConnected: boolean = j.m_collideConnected;\n\n    // If the joint prevents collisions, then flag any contacts for filtering.\n    if (!collideConnected) {\n      let edge: b2ContactEdge | null = bodyB.GetContactList();\n      while (edge) {\n        if (edge.other === bodyA) {\n          // Flag the contact for filtering at the next time step (where either\n          // body is awake).\n          edge.contact.FlagForFiltering();\n        }\n\n        edge = edge.next;\n      }\n    }\n\n    // Note: creating a joint doesn't wake the bodies.\n\n    return j;\n  }\n\n  /// Destroy a joint. This may cause the connected bodies to begin colliding.\n  /// @warning This function is locked during callbacks.\n  public DestroyJoint(j: b2Joint): void {\n    if (this.IsLocked()) { throw new Error(); }\n\n    // Remove from the doubly linked list.\n    if (j.m_prev) {\n      j.m_prev.m_next = j.m_next;\n    }\n\n    if (j.m_next) {\n      j.m_next.m_prev = j.m_prev;\n    }\n\n    if (j === this.m_jointList) {\n      this.m_jointList = j.m_next;\n    }\n\n    // Disconnect from island graph.\n    const bodyA: b2Body = j.m_bodyA;\n    const bodyB: b2Body = j.m_bodyB;\n    const collideConnected: boolean = j.m_collideConnected;\n\n    // Wake up connected bodies.\n    bodyA.SetAwake(true);\n    bodyB.SetAwake(true);\n\n    // Remove from body 1.\n    if (j.m_edgeA.prev) {\n      j.m_edgeA.prev.next = j.m_edgeA.next;\n    }\n\n    if (j.m_edgeA.next) {\n      j.m_edgeA.next.prev = j.m_edgeA.prev;\n    }\n\n    if (j.m_edgeA === bodyA.m_jointList) {\n      bodyA.m_jointList = j.m_edgeA.next;\n    }\n\n    j.m_edgeA.Reset();\n\n    // Remove from body 2\n    if (j.m_edgeB.prev) {\n      j.m_edgeB.prev.next = j.m_edgeB.next;\n    }\n\n    if (j.m_edgeB.next) {\n      j.m_edgeB.next.prev = j.m_edgeB.prev;\n    }\n\n    if (j.m_edgeB === bodyB.m_jointList) {\n      bodyB.m_jointList = j.m_edgeB.next;\n    }\n\n    j.m_edgeB.Reset();\n\n    b2World._Joint_Destroy(j);\n\n    // DEBUG: b2Assert(this.m_jointCount > 0);\n    --this.m_jointCount;\n\n    // If the joint prevents collisions, then flag any contacts for filtering.\n    if (!collideConnected) {\n      let edge: b2ContactEdge | null = bodyB.GetContactList();\n      while (edge) {\n        if (edge.other === bodyA) {\n          // Flag the contact for filtering at the next time step (where either\n          // body is awake).\n          edge.contact.FlagForFiltering();\n        }\n\n        edge = edge.next;\n      }\n    }\n  }\n\n  // #if B2_ENABLE_PARTICLE\n\n  public CreateParticleSystem(def: b2ParticleSystemDef): b2ParticleSystem {\n    if (this.IsLocked()) { throw new Error(); }\n\n    const p = new b2ParticleSystem(def, this);\n\n    // Add to world doubly linked list.\n    p.m_prev = null;\n    p.m_next = this.m_particleSystemList;\n    if (this.m_particleSystemList) {\n      this.m_particleSystemList.m_prev = p;\n    }\n    this.m_particleSystemList = p;\n\n    return p;\n  }\n\n  public DestroyParticleSystem(p: b2ParticleSystem): void {\n    if (this.IsLocked()) { throw new Error(); }\n\n    // Remove world particleSystem list.\n    if (p.m_prev) {\n      p.m_prev.m_next = p.m_next;\n    }\n\n    if (p.m_next) {\n      p.m_next.m_prev = p.m_prev;\n    }\n\n    if (p === this.m_particleSystemList) {\n      this.m_particleSystemList = p.m_next;\n    }\n  }\n\n  public CalculateReasonableParticleIterations(timeStep: number): number {\n    if (this.m_particleSystemList === null) {\n      return 1;\n    }\n\n    function GetSmallestRadius(world: b2World): number {\n      let smallestRadius = b2_maxFloat;\n      for (let system = world.GetParticleSystemList(); system !== null; system = system.m_next) {\n        smallestRadius = b2Min(smallestRadius, system.GetRadius());\n      }\n      return smallestRadius;\n    }\n\n    // Use the smallest radius, since that represents the worst-case.\n    return b2CalculateParticleIterations(this.m_gravity.Length(), GetSmallestRadius(this), timeStep);\n  }\n\n  // #endif\n\n  /// Take a time step. This performs collision detection, integration,\n  /// and constraint solution.\n  /// @param timeStep the amount of time to simulate, this should not vary.\n  /// @param velocityIterations for the velocity constraint solver.\n  /// @param positionIterations for the position constraint solver.\n  private static Step_s_step = new b2TimeStep();\n  private static Step_s_stepTimer = new b2Timer();\n  private static Step_s_timer = new b2Timer();\n  // #if B2_ENABLE_PARTICLE\n  public Step(dt: number, velocityIterations: number, positionIterations: number, particleIterations: number = this.CalculateReasonableParticleIterations(dt)): void {\n    // #else\n    // public Step(dt: number, velocityIterations: number, positionIterations: number): void {\n    // #endif\n    const stepTimer: b2Timer = b2World.Step_s_stepTimer.Reset();\n\n    // If new fixtures were added, we need to find the new contacts.\n    if (this.m_newContacts) {\n      this.m_contactManager.FindNewContacts();\n      this.m_newContacts = false;\n    }\n\n    this.m_locked = true;\n\n    const step: b2TimeStep = b2World.Step_s_step;\n    step.dt = dt;\n    step.velocityIterations = velocityIterations;\n    step.positionIterations = positionIterations;\n    // #if B2_ENABLE_PARTICLE\n    step.particleIterations = particleIterations;\n    // #endif\n    if (dt > 0) {\n      step.inv_dt = 1 / dt;\n    } else {\n      step.inv_dt = 0;\n    }\n\n    step.dtRatio = this.m_inv_dt0 * dt;\n\n    step.warmStarting = this.m_warmStarting;\n\n    // Update contacts. This is where some contacts are destroyed.\n    const timer: b2Timer = b2World.Step_s_timer.Reset();\n    this.m_contactManager.Collide();\n    this.m_profile.collide = timer.GetMilliseconds();\n\n    // Integrate velocities, solve velocity constraints, and integrate positions.\n    if (this.m_stepComplete && step.dt > 0) {\n      const timer: b2Timer = b2World.Step_s_timer.Reset();\n      // #if B2_ENABLE_PARTICLE\n      for (let p = this.m_particleSystemList; p; p = p.m_next) {\n        p.Solve(step); // Particle Simulation\n      }\n      // #endif\n      this.Solve(step);\n      this.m_profile.solve = timer.GetMilliseconds();\n    }\n\n    // Handle TOI events.\n    if (this.m_continuousPhysics && step.dt > 0) {\n      const timer: b2Timer = b2World.Step_s_timer.Reset();\n      this.SolveTOI(step);\n      this.m_profile.solveTOI = timer.GetMilliseconds();\n    }\n\n    if (step.dt > 0) {\n      this.m_inv_dt0 = step.inv_dt;\n    }\n\n    if (this.m_clearForces) {\n      this.ClearForces();\n    }\n\n    this.m_locked = false;\n\n    this.m_profile.step = stepTimer.GetMilliseconds();\n  }\n\n  /// Manually clear the force buffer on all bodies. By default, forces are cleared automatically\n  /// after each call to Step. The default behavior is modified by calling SetAutoClearForces.\n  /// The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain\n  /// a fixed sized time step under a variable frame-rate.\n  /// When you perform sub-stepping you will disable auto clearing of forces and instead call\n  /// ClearForces after all sub-steps are complete in one pass of your game loop.\n  /// @see SetAutoClearForces\n  public ClearForces(): void {\n    for (let body = this.m_bodyList; body; body = body.m_next) {\n      body.m_force.SetZero();\n      body.m_torque = 0;\n    }\n  }\n\n  // #if B2_ENABLE_PARTICLE\n\n  public DrawParticleSystem(system: b2ParticleSystem): void {\n    if (this.m_debugDraw === null) {\n      return;\n    }\n    const particleCount = system.GetParticleCount();\n    if (particleCount) {\n      const radius = system.GetRadius();\n      const positionBuffer = system.GetPositionBuffer();\n      if (system.m_colorBuffer.data) {\n        const colorBuffer = system.GetColorBuffer();\n        this.m_debugDraw.DrawParticles(positionBuffer, radius, colorBuffer, particleCount);\n      } else {\n        this.m_debugDraw.DrawParticles(positionBuffer, radius, null, particleCount);\n      }\n    }\n  }\n\n  // #endif\n\n  /// Call this to draw shapes and other debug draw data.\n  private static DebugDraw_s_color = new b2Color(0, 0, 0);\n  private static DebugDraw_s_vs = b2Vec2.MakeArray(4);\n  private static DebugDraw_s_xf = new b2Transform();\n  public DebugDraw(): void {\n    if (this.m_debugDraw === null) {\n      return;\n    }\n\n    const flags: number = this.m_debugDraw.GetFlags();\n    const color: b2Color = b2World.DebugDraw_s_color.SetRGB(0, 0, 0);\n\n    if (flags & b2DrawFlags.e_shapeBit) {\n      for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n        const xf: b2Transform = b.m_xf;\n\n        this.m_debugDraw.PushTransform(xf);\n\n        for (let f: b2Fixture | null = b.GetFixtureList(); f; f = f.m_next) {\n          if (b.GetType() === b2BodyType.b2_dynamicBody && b.m_mass === 0.0) {\n            // Bad body\n            this.DrawShape(f, new b2Color(1.0, 0.0, 0.0));\n          } else if (!b.IsEnabled()) {\n            color.SetRGB(0.5, 0.5, 0.3);\n            this.DrawShape(f, color);\n          } else if (b.GetType() === b2BodyType.b2_staticBody) {\n            color.SetRGB(0.5, 0.9, 0.5);\n            this.DrawShape(f, color);\n          } else if (b.GetType() === b2BodyType.b2_kinematicBody) {\n            color.SetRGB(0.5, 0.5, 0.9);\n            this.DrawShape(f, color);\n          } else if (!b.IsAwake()) {\n            color.SetRGB(0.6, 0.6, 0.6);\n            this.DrawShape(f, color);\n          } else {\n            color.SetRGB(0.9, 0.7, 0.7);\n            this.DrawShape(f, color);\n          }\n        }\n\n        this.m_debugDraw.PopTransform(xf);\n      }\n    }\n\n    // #if B2_ENABLE_PARTICLE\n    if (flags & b2DrawFlags.e_particleBit) {\n      for (let p = this.m_particleSystemList; p; p = p.m_next) {\n        this.DrawParticleSystem(p);\n      }\n    }\n    // #endif\n\n    if (flags & b2DrawFlags.e_jointBit) {\n      for (let j: b2Joint | null = this.m_jointList; j; j = j.m_next) {\n        j.Draw(this.m_debugDraw);\n      }\n    }\n\n    if (flags & b2DrawFlags.e_pairBit) {\n      color.SetRGB(0.3, 0.9, 0.9);\n      for (let contact = this.m_contactManager.m_contactList; contact; contact = contact.m_next) {\n        const fixtureA = contact.GetFixtureA();\n        const fixtureB = contact.GetFixtureB();\n        const indexA = contact.GetChildIndexA();\n        const indexB = contact.GetChildIndexB();\n        const cA = fixtureA.GetAABB(indexA).GetCenter();\n        const cB = fixtureB.GetAABB(indexB).GetCenter();\n\n        this.m_debugDraw.DrawSegment(cA, cB, color);\n      }\n    }\n\n    if (flags & b2DrawFlags.e_aabbBit) {\n      color.SetRGB(0.9, 0.3, 0.9);\n      const vs: b2Vec2[] = b2World.DebugDraw_s_vs;\n\n      for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n        if (!b.IsEnabled()) {\n          continue;\n        }\n\n        for (let f: b2Fixture | null = b.GetFixtureList(); f; f = f.m_next) {\n          for (let i: number = 0; i < f.m_proxyCount; ++i) {\n            const proxy: b2FixtureProxy = f.m_proxies[i];\n\n            const aabb: b2AABB = proxy.treeNode.aabb;\n            vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\n            vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\n            vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\n            vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\n\n            this.m_debugDraw.DrawPolygon(vs, 4, color);\n          }\n        }\n      }\n    }\n\n    if (flags & b2DrawFlags.e_centerOfMassBit) {\n      for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n        const xf: b2Transform = b2World.DebugDraw_s_xf;\n        xf.q.Copy(b.m_xf.q);\n        xf.p.Copy(b.GetWorldCenter());\n        this.m_debugDraw.DrawTransform(xf);\n      }\n    }\n\n    // #if B2_ENABLE_CONTROLLER\n    // @see b2Controller list\n    if (flags & b2DrawFlags.e_controllerBit) {\n      for (let c = this.m_controllerList; c; c = c.m_next) {\n        c.Draw(this.m_debugDraw);\n      }\n    }\n    // #endif\n  }\n\n  /// Query the world for all fixtures that potentially overlap the\n  /// provided AABB.\n  /// @param callback a user implemented callback class.\n  /// @param aabb the query box.\n  public QueryAABB(callback: b2QueryCallback, aabb: b2AABB): void;\n  public QueryAABB(aabb: b2AABB, fn: b2QueryCallbackFunction): void;\n  public QueryAABB(...args: any[]): void {\n    if (args[0] instanceof b2QueryCallback) {\n      this._QueryAABB(args[0], args[1]);\n    } else {\n      this._QueryAABB(null, args[0], args[1]);\n    }\n  }\n  private _QueryAABB(callback: b2QueryCallback | null, aabb: b2AABB, fn?: b2QueryCallbackFunction): void {\n    this.m_contactManager.m_broadPhase.Query(aabb, (proxy: b2TreeNode<b2FixtureProxy>): boolean => {\n      const fixture_proxy: b2FixtureProxy = proxy.userData;\n      // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\n      const fixture: b2Fixture = fixture_proxy.fixture;\n      if (callback) {\n        return callback.ReportFixture(fixture);\n      } else if (fn) {\n        return fn(fixture);\n      }\n      return true;\n    });\n    // #if B2_ENABLE_PARTICLE\n    if (callback instanceof b2QueryCallback) {\n      for (let p = this.m_particleSystemList; p; p = p.m_next) {\n        if (callback.ShouldQueryParticleSystem(p)) {\n          p.QueryAABB(callback, aabb);\n        }\n      }\n    }\n    // #endif\n  }\n\n  public QueryAllAABB(aabb: b2AABB, out: b2Fixture[] = []): b2Fixture[] {\n    this.QueryAABB(aabb, (fixture: b2Fixture): boolean => { out.push(fixture); return true; });\n    return out;\n  }\n\n  /// Query the world for all fixtures that potentially overlap the\n  /// provided point.\n  /// @param callback a user implemented callback class.\n  /// @param point the query point.\n  public QueryPointAABB(callback: b2QueryCallback, point: XY): void;\n  public QueryPointAABB(point: XY, fn: b2QueryCallbackFunction): void;\n  public QueryPointAABB(...args: any[]): void {\n    if (args[0] instanceof b2QueryCallback) {\n      this._QueryPointAABB(args[0], args[1]);\n    } else {\n      this._QueryPointAABB(null, args[0], args[1]);\n    }\n  }\n  private _QueryPointAABB(callback: b2QueryCallback | null, point: XY, fn?: b2QueryCallbackFunction): void {\n    this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy: b2TreeNode<b2FixtureProxy>): boolean => {\n      const fixture_proxy: b2FixtureProxy = proxy.userData;\n      // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\n      const fixture: b2Fixture = fixture_proxy.fixture;\n      if (callback) {\n        return callback.ReportFixture(fixture);\n      } else if (fn) {\n        return fn(fixture);\n      }\n      return true;\n    });\n    // #if B2_ENABLE_PARTICLE\n    if (callback instanceof b2QueryCallback) {\n      for (let p = this.m_particleSystemList; p; p = p.m_next) {\n        if (callback.ShouldQueryParticleSystem(p)) {\n          p.QueryPointAABB(callback, point);\n        }\n      }\n    }\n    // #endif\n  }\n\n  public QueryAllPointAABB(point: XY, out: b2Fixture[] = []): b2Fixture[] {\n    this.QueryPointAABB(point, (fixture: b2Fixture): boolean => { out.push(fixture); return true; });\n    return out;\n  }\n\n  public QueryFixtureShape(callback: b2QueryCallback, shape: b2Shape, index: number, transform: b2Transform): void;\n  public QueryFixtureShape(shape: b2Shape, index: number, transform: b2Transform, fn: b2QueryCallbackFunction): void;\n  public QueryFixtureShape(...args: any[]): void {\n    if (args[0] instanceof b2QueryCallback) {\n      this._QueryFixtureShape(args[0], args[1], args[2], args[3]);\n    } else {\n      this._QueryFixtureShape(null, args[0], args[1], args[2], args[3]);\n    }\n  }\n  private static QueryFixtureShape_s_aabb = new b2AABB();\n  private _QueryFixtureShape(callback: b2QueryCallback | null, shape: b2Shape, index: number, transform: b2Transform, fn?: b2QueryCallbackFunction): void {\n    const aabb: b2AABB = b2World.QueryFixtureShape_s_aabb;\n    shape.ComputeAABB(aabb, transform, index);\n    this.m_contactManager.m_broadPhase.Query(aabb, (proxy: b2TreeNode<b2FixtureProxy>): boolean => {\n      const fixture_proxy: b2FixtureProxy = proxy.userData;\n      // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\n      const fixture: b2Fixture = fixture_proxy.fixture;\n      if (b2TestOverlapShape(shape, index, fixture.GetShape(), fixture_proxy.childIndex, transform, fixture.GetBody().GetTransform())) {\n        if (callback) {\n          return callback.ReportFixture(fixture);\n        } else if (fn) {\n          return fn(fixture);\n        }\n      }\n      return true;\n    });\n    // #if B2_ENABLE_PARTICLE\n    if (callback instanceof b2QueryCallback) {\n      for (let p = this.m_particleSystemList; p; p = p.m_next) {\n        if (callback.ShouldQueryParticleSystem(p)) {\n          p.QueryAABB(callback, aabb);\n        }\n      }\n    }\n    // #endif\n  }\n\n  public QueryAllFixtureShape(shape: b2Shape, index: number, transform: b2Transform, out: b2Fixture[] = []): b2Fixture[] {\n    this.QueryFixtureShape(shape, index, transform, (fixture: b2Fixture): boolean => { out.push(fixture); return true; });\n    return out;\n  }\n\n  public QueryFixturePoint(callback: b2QueryCallback, point: XY): void;\n  public QueryFixturePoint(point: XY, fn: b2QueryCallbackFunction): void;\n  public QueryFixturePoint(...args: any[]): void {\n    if (args[0] instanceof b2QueryCallback) {\n      this._QueryFixturePoint(args[0], args[1]);\n    } else {\n      this._QueryFixturePoint(null, args[0], args[1]);\n    }\n  }\n  private _QueryFixturePoint(callback: b2QueryCallback | null, point: XY, fn?: b2QueryCallbackFunction): void {\n    this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy: b2TreeNode<b2FixtureProxy>): boolean => {\n      const fixture_proxy: b2FixtureProxy = proxy.userData;\n      // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\n      const fixture: b2Fixture = fixture_proxy.fixture;\n      if (fixture.TestPoint(point)) {\n        if (callback) {\n          return callback.ReportFixture(fixture);\n        } else if (fn) {\n          return fn(fixture);\n        }\n      }\n      return true;\n    });\n    // #if B2_ENABLE_PARTICLE\n    if (callback) {\n      for (let p = this.m_particleSystemList; p; p = p.m_next) {\n        if (callback.ShouldQueryParticleSystem(p)) {\n          p.QueryPointAABB(callback, point);\n        }\n      }\n    }\n    // #endif\n  }\n\n  public QueryAllFixturePoint(point: XY, out: b2Fixture[] = []): b2Fixture[] {\n    this.QueryFixturePoint(point, (fixture: b2Fixture): boolean => { out.push(fixture); return true; });\n    return out;\n  }\n\n  /// Ray-cast the world for all fixtures in the path of the ray. Your callback\n  /// controls whether you get the closest point, any point, or n-points.\n  /// The ray-cast ignores shapes that contain the starting point.\n  /// @param callback a user implemented callback class.\n  /// @param point1 the ray starting point\n  /// @param point2 the ray ending point\n  public RayCast(callback: b2RayCastCallback, point1: XY, point2: XY): void;\n  public RayCast(point1: XY, point2: XY, fn: b2RayCastCallbackFunction): void;\n  public RayCast(...args: any[]): void {\n    if (args[0] instanceof b2RayCastCallback) {\n      this._RayCast(args[0], args[1], args[2]);\n    } else {\n      this._RayCast(null, args[0], args[1], args[2]);\n    }\n  }\n  private static RayCast_s_input = new b2RayCastInput();\n  private static RayCast_s_output = new b2RayCastOutput();\n  private static RayCast_s_point = new b2Vec2();\n  private _RayCast(callback: b2RayCastCallback | null, point1: XY, point2: XY, fn?: b2RayCastCallbackFunction): void {\n    const input: b2RayCastInput = b2World.RayCast_s_input;\n    input.maxFraction = 1;\n    input.p1.Copy(point1);\n    input.p2.Copy(point2);\n    this.m_contactManager.m_broadPhase.RayCast(input, (input: b2RayCastInput, proxy: b2TreeNode<b2FixtureProxy>): number => {\n      const fixture_proxy: b2FixtureProxy = proxy.userData;\n      // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\n      const fixture: b2Fixture = fixture_proxy.fixture;\n      const index: number = fixture_proxy.childIndex;\n      const output: b2RayCastOutput = b2World.RayCast_s_output;\n      const hit: boolean = fixture.RayCast(output, input, index);\n      if (hit) {\n        const fraction: number = output.fraction;\n        const point: b2Vec2 = b2World.RayCast_s_point;\n        point.Set((1 - fraction) * point1.x + fraction * point2.x, (1 - fraction) * point1.y + fraction * point2.y);\n        if (callback) {\n          return callback.ReportFixture(fixture, point, output.normal, fraction);\n        } else if (fn) {\n          return fn(fixture, point, output.normal, fraction);\n        }\n      }\n      return input.maxFraction;\n    });\n    // #if B2_ENABLE_PARTICLE\n    if (callback) {\n      for (let p = this.m_particleSystemList; p; p = p.m_next) {\n        if (callback.ShouldQueryParticleSystem(p)) {\n          p.RayCast(callback, point1, point2);\n        }\n      }\n    }\n    // #endif\n  }\n\n  public RayCastOne(point1: XY, point2: XY): b2Fixture | null {\n    let result: b2Fixture | null = null;\n    let min_fraction: number = 1;\n    this.RayCast(point1, point2, (fixture: b2Fixture, point: b2Vec2, normal: b2Vec2, fraction: number): number => {\n      if (fraction < min_fraction) {\n        min_fraction = fraction;\n        result = fixture;\n      }\n      return min_fraction;\n    });\n    return result;\n  }\n\n  public RayCastAll(point1: XY, point2: XY, out: b2Fixture[] = []): b2Fixture[] {\n    this.RayCast(point1, point2, (fixture: b2Fixture, point: b2Vec2, normal: b2Vec2, fraction: number): number => {\n      out.push(fixture);\n      return 1;\n    });\n    return out;\n  }\n\n  /// Get the world body list. With the returned body, use b2Body::GetNext to get\n  /// the next body in the world list. A NULL body indicates the end of the list.\n  /// @return the head of the world body list.\n  public GetBodyList(): b2Body | null {\n    return this.m_bodyList;\n  }\n\n  /// Get the world joint list. With the returned joint, use b2Joint::GetNext to get\n  /// the next joint in the world list. A NULL joint indicates the end of the list.\n  /// @return the head of the world joint list.\n  public GetJointList(): b2Joint | null {\n    return this.m_jointList;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  public GetParticleSystemList(): b2ParticleSystem | null {\n    return this.m_particleSystemList;\n  }\n  // #endif\n\n  /// Get the world contact list. With the returned contact, use b2Contact::GetNext to get\n  /// the next contact in the world list. A NULL contact indicates the end of the list.\n  /// @return the head of the world contact list.\n  /// @warning contacts are created and destroyed in the middle of a time step.\n  /// Use b2ContactListener to avoid missing contacts.\n  public GetContactList(): b2Contact | null {\n    return this.m_contactManager.m_contactList;\n  }\n\n  /// Enable/disable sleep.\n  public SetAllowSleeping(flag: boolean): void {\n    if (flag === this.m_allowSleep) {\n      return;\n    }\n\n    this.m_allowSleep = flag;\n    if (!this.m_allowSleep) {\n      for (let b = this.m_bodyList; b; b = b.m_next) {\n        b.SetAwake(true);\n      }\n    }\n  }\n\n  public GetAllowSleeping(): boolean {\n    return this.m_allowSleep;\n  }\n\n  /// Enable/disable warm starting. For testing.\n  public SetWarmStarting(flag: boolean): void {\n    this.m_warmStarting = flag;\n  }\n\n  public GetWarmStarting(): boolean {\n    return this.m_warmStarting;\n  }\n\n  /// Enable/disable continuous physics. For testing.\n  public SetContinuousPhysics(flag: boolean): void {\n    this.m_continuousPhysics = flag;\n  }\n\n  public GetContinuousPhysics(): boolean {\n    return this.m_continuousPhysics;\n  }\n\n  /// Enable/disable single stepped continuous physics. For testing.\n  public SetSubStepping(flag: boolean): void {\n    this.m_subStepping = flag;\n  }\n\n  public GetSubStepping(): boolean {\n    return this.m_subStepping;\n  }\n\n  /// Get the number of broad-phase proxies.\n  public GetProxyCount(): number {\n    return this.m_contactManager.m_broadPhase.GetProxyCount();\n  }\n\n  /// Get the number of bodies.\n  public GetBodyCount(): number {\n    return this.m_bodyCount;\n  }\n\n  /// Get the number of joints.\n  public GetJointCount(): number {\n    return this.m_jointCount;\n  }\n\n  /// Get the number of contacts (each may have 0 or more contact points).\n  public GetContactCount(): number {\n    return this.m_contactManager.m_contactCount;\n  }\n\n  /// Get the height of the dynamic tree.\n  public GetTreeHeight(): number {\n    return this.m_contactManager.m_broadPhase.GetTreeHeight();\n  }\n\n  /// Get the balance of the dynamic tree.\n  public GetTreeBalance(): number {\n    return this.m_contactManager.m_broadPhase.GetTreeBalance();\n  }\n\n  /// Get the quality metric of the dynamic tree. The smaller the better.\n  /// The minimum is 1.\n  public GetTreeQuality(): number {\n    return this.m_contactManager.m_broadPhase.GetTreeQuality();\n  }\n\n  /// Change the global gravity vector.\n  public SetGravity(gravity: XY, wake: boolean = true) {\n    if (!b2Vec2.IsEqualToV(this.m_gravity, gravity)) {\n      this.m_gravity.Copy(gravity);\n\n      if (wake) {\n        for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n          b.SetAwake(true);\n        }\n      }\n    }\n  }\n\n  /// Get the global gravity vector.\n  public GetGravity(): Readonly<b2Vec2> {\n    return this.m_gravity;\n  }\n\n  /// Is the world locked (in the middle of a time step).\n  public IsLocked(): boolean {\n    return this.m_locked;\n  }\n\n  /// Set flag to control automatic clearing of forces after each time step.\n  public SetAutoClearForces(flag: boolean): void {\n    this.m_clearForces = flag;\n  }\n\n  /// Get the flag that controls automatic clearing of forces after each time step.\n  public GetAutoClearForces(): boolean {\n    return this.m_clearForces;\n  }\n\n  /// Shift the world origin. Useful for large worlds.\n  /// The body shift formula is: position -= newOrigin\n  /// @param newOrigin the new origin with respect to the old origin\n  public ShiftOrigin(newOrigin: XY): void {\n    if (this.IsLocked()) { throw new Error(); }\n\n    for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n      b.m_xf.p.SelfSub(newOrigin);\n      b.m_sweep.c0.SelfSub(newOrigin);\n      b.m_sweep.c.SelfSub(newOrigin);\n    }\n\n    for (let j: b2Joint | null = this.m_jointList; j; j = j.m_next) {\n      j.ShiftOrigin(newOrigin);\n    }\n\n    this.m_contactManager.m_broadPhase.ShiftOrigin(newOrigin);\n  }\n\n  /// Get the contact manager for testing.\n  public GetContactManager(): b2ContactManager {\n    return this.m_contactManager;\n  }\n\n  /// Get the current profile.\n  public GetProfile(): b2Profile {\n    return this.m_profile;\n  }\n\n  /// Dump the world into the log file.\n  /// @warning this should be called outside of a time step.\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    if (this.m_locked) {\n      return;\n    }\n\n    // b2OpenDump(\"box2d_dump.inl\");\n\n    log(\"const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\\n\", this.m_gravity.x, this.m_gravity.y);\n    log(\"this.m_world.SetGravity(g);\\n\");\n\n    log(\"const bodies: b2Body[] = [];\\n\");\n    log(\"const joints: b2Joint[] = [];\\n\");\n    let i: number = 0;\n    for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n      b.m_islandIndex = i;\n      b.Dump(log);\n      ++i;\n    }\n\n    i = 0;\n    for (let j: b2Joint | null = this.m_jointList; j; j = j.m_next) {\n      j.m_index = i;\n      ++i;\n    }\n\n    // First pass on joints, skip gear joints.\n    for (let j: b2Joint | null = this.m_jointList; j; j = j.m_next) {\n      if (j.m_type === b2JointType.e_gearJoint) {\n        continue;\n      }\n\n      log(\"{\\n\");\n      j.Dump(log);\n      log(\"}\\n\");\n    }\n\n    // Second pass on joints, only gear joints.\n    for (let j: b2Joint | null = this.m_jointList; j; j = j.m_next) {\n      if (j.m_type !== b2JointType.e_gearJoint) {\n        continue;\n      }\n\n      log(\"{\\n\");\n      j.Dump(log);\n      log(\"}\\n\");\n    }\n\n    // b2CloseDump();\n  }\n\n  public DrawShape(fixture: b2Fixture, color: b2Color): void {\n    if (this.m_debugDraw === null) {\n      return;\n    }\n    const shape: b2Shape = fixture.GetShape();\n\n    switch (shape.m_type) {\n      case b2ShapeType.e_circleShape: {\n        const circle: b2CircleShape = shape as b2CircleShape;\n        const center: b2Vec2 = circle.m_p;\n        const radius: number = circle.m_radius;\n        const axis: b2Vec2 = b2Vec2.UNITX;\n        this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\n        break;\n      }\n\n      case b2ShapeType.e_edgeShape: {\n        const edge: b2EdgeShape = shape as b2EdgeShape;\n        const v1: b2Vec2 = edge.m_vertex1;\n        const v2: b2Vec2 = edge.m_vertex2;\n        this.m_debugDraw.DrawSegment(v1, v2, color);\n\n        if (edge.m_oneSided === false) {\n          this.m_debugDraw.DrawPoint(v1, 4.0, color);\n          this.m_debugDraw.DrawPoint(v2, 4.0, color);\n        }\n        break;\n      }\n\n      case b2ShapeType.e_chainShape: {\n        const chain: b2ChainShape = shape as b2ChainShape;\n        const count: number = chain.m_count;\n        const vertices: b2Vec2[] = chain.m_vertices;\n        let v1: b2Vec2 = vertices[0];\n        for (let i: number = 1; i < count; ++i) {\n          const v2: b2Vec2 = vertices[i];\n          this.m_debugDraw.DrawSegment(v1, v2, color);\n          v1 = v2;\n        }\n\n        break;\n      }\n\n      case b2ShapeType.e_polygonShape: {\n        const poly: b2PolygonShape = shape as b2PolygonShape;\n        const vertexCount: number = poly.m_count;\n        const vertices: b2Vec2[] = poly.m_vertices;\n        this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\n        break;\n      }\n    }\n  }\n\n  public Solve(step: b2TimeStep): void {\n    // #if B2_ENABLE_PARTICLE\n    // update previous transforms\n    for (let b = this.m_bodyList; b; b = b.m_next) {\n      b.m_xf0.Copy(b.m_xf);\n    }\n    // #endif\n\n    // #if B2_ENABLE_CONTROLLER\n    // @see b2Controller list\n    for (let controller = this.m_controllerList; controller; controller = controller.m_next) {\n      controller.Step(step);\n    }\n    // #endif\n\n    this.m_profile.solveInit = 0;\n    this.m_profile.solveVelocity = 0;\n    this.m_profile.solvePosition = 0;\n\n    // Size the island for the worst case.\n    const island: b2Island = this.m_island;\n    island.Initialize(this.m_bodyCount,\n      this.m_contactManager.m_contactCount,\n      this.m_jointCount,\n      this.m_contactManager.m_contactListener);\n\n    // Clear all the island flags.\n    for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n    }\n    for (let c: b2Contact | null = this.m_contactManager.m_contactList; c; c = c.m_next) {\n      c.m_islandFlag = false;\n    }\n    for (let j: b2Joint | null = this.m_jointList; j; j = j.m_next) {\n      j.m_islandFlag = false;\n    }\n\n    // Build and simulate all awake islands.\n    // DEBUG: const stackSize: number = this.m_bodyCount;\n    const stack: Array<b2Body | null> = this.s_stack;\n    for (let seed: b2Body | null = this.m_bodyList; seed; seed = seed.m_next) {\n      if (seed.m_islandFlag) {\n        continue;\n      }\n\n      if (!seed.IsAwake() || !seed.IsEnabled()) {\n        continue;\n      }\n\n      // The seed can be dynamic or kinematic.\n      if (seed.GetType() === b2BodyType.b2_staticBody) {\n        continue;\n      }\n\n      // Reset island and stack.\n      island.Clear();\n      let stackCount: number = 0;\n      stack[stackCount++] = seed;\n      seed.m_islandFlag = true;\n\n      // Perform a depth first search (DFS) on the constraint graph.\n      while (stackCount > 0) {\n        // Grab the next body off the stack and add it to the island.\n        const b: b2Body | null = stack[--stackCount];\n        if (!b) { throw new Error(); }\n        // DEBUG: b2Assert(b.IsEnabled());\n        island.AddBody(b);\n\n        // To keep islands as small as possible, we don't\n        // propagate islands across static bodies.\n        if (b.GetType() === b2BodyType.b2_staticBody) {\n          continue;\n        }\n\n        // Make sure the body is awake. (without resetting sleep timer).\n        b.m_awakeFlag = true;\n\n        // Search all contacts connected to this body.\n        for (let ce: b2ContactEdge | null = b.m_contactList; ce; ce = ce.next) {\n          const contact: b2Contact = ce.contact;\n\n          // Has this contact already been added to an island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Is this contact solid and touching?\n          if (!contact.IsEnabled() || !contact.IsTouching()) {\n            continue;\n          }\n\n          // Skip sensors.\n          const sensorA: boolean = contact.m_fixtureA.m_isSensor;\n          const sensorB: boolean = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          island.AddContact(contact);\n          contact.m_islandFlag = true;\n\n          const other: b2Body = ce.other;\n\n          // Was the other body already added to this island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // DEBUG: b2Assert(stackCount < stackSize);\n          stack[stackCount++] = other;\n          other.m_islandFlag = true;\n        }\n\n        // Search all joints connect to this body.\n        for (let je: b2JointEdge | null = b.m_jointList; je; je = je.next) {\n          if (je.joint.m_islandFlag) {\n            continue;\n          }\n\n          const other: b2Body = je.other;\n\n          // Don't simulate joints connected to disabled bodies.\n          if (!other.IsEnabled()) {\n            continue;\n          }\n\n          island.AddJoint(je.joint);\n          je.joint.m_islandFlag = true;\n\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // DEBUG: b2Assert(stackCount < stackSize);\n          stack[stackCount++] = other;\n          other.m_islandFlag = true;\n        }\n      }\n\n      const profile: b2Profile = new b2Profile();\n      island.Solve(profile, step, this.m_gravity, this.m_allowSleep);\n      this.m_profile.solveInit += profile.solveInit;\n      this.m_profile.solveVelocity += profile.solveVelocity;\n      this.m_profile.solvePosition += profile.solvePosition;\n\n      // Post solve cleanup.\n      for (let i: number = 0; i < island.m_bodyCount; ++i) {\n        // Allow static bodies to participate in other islands.\n        const b: b2Body = island.m_bodies[i];\n        if (b.GetType() === b2BodyType.b2_staticBody) {\n          b.m_islandFlag = false;\n        }\n      }\n    }\n\n    for (let i: number = 0; i < stack.length; ++i) {\n      if (!stack[i]) { break; }\n      stack[i] = null;\n    }\n\n    const timer: b2Timer = new b2Timer();\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (let b = this.m_bodyList; b; b = b.m_next) {\n      // If a body was not in an island then it did not move.\n      if (!b.m_islandFlag) {\n        continue;\n      }\n\n      if (b.GetType() === b2BodyType.b2_staticBody) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.SynchronizeFixtures();\n    }\n\n    // Look for new contacts.\n    this.m_contactManager.FindNewContacts();\n    this.m_profile.broadphase = timer.GetMilliseconds();\n  }\n\n  private static SolveTOI_s_subStep = new b2TimeStep();\n  private static SolveTOI_s_backup = new b2Sweep();\n  private static SolveTOI_s_backup1 = new b2Sweep();\n  private static SolveTOI_s_backup2 = new b2Sweep();\n  private static SolveTOI_s_toi_input = new b2TOIInput();\n  private static SolveTOI_s_toi_output = new b2TOIOutput();\n  public SolveTOI(step: b2TimeStep): void {\n    const island: b2Island = this.m_island;\n    island.Initialize(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, this.m_contactManager.m_contactListener);\n\n    if (this.m_stepComplete) {\n      for (let b: b2Body | null = this.m_bodyList; b; b = b.m_next) {\n        b.m_islandFlag = false;\n        b.m_sweep.alpha0 = 0;\n      }\n\n      for (let c: b2Contact | null = this.m_contactManager.m_contactList; c; c = c.m_next) {\n        // Invalidate TOI\n        c.m_toiFlag = false;\n        c.m_islandFlag = false;\n        c.m_toiCount = 0;\n        c.m_toi = 1;\n      }\n    }\n\n    // Find TOI events and solve them.\n    for (; ;) {\n      // Find the first TOI.\n      let minContact: b2Contact | null = null;\n      let minAlpha: number = 1;\n\n      for (let c: b2Contact | null = this.m_contactManager.m_contactList; c; c = c.m_next) {\n        // Is this contact disabled?\n        if (!c.IsEnabled()) {\n          continue;\n        }\n\n        // Prevent excessive sub-stepping.\n        if (c.m_toiCount > b2_maxSubSteps) {\n          continue;\n        }\n\n        let alpha: number = 1;\n        if (c.m_toiFlag) {\n          // This contact has a valid cached TOI.\n          alpha = c.m_toi;\n        } else {\n          const fA: b2Fixture = c.GetFixtureA();\n          const fB: b2Fixture = c.GetFixtureB();\n\n          // Is there a sensor?\n          if (fA.IsSensor() || fB.IsSensor()) {\n            continue;\n          }\n\n          const bA: b2Body = fA.GetBody();\n          const bB: b2Body = fB.GetBody();\n\n          const typeA: b2BodyType = bA.m_type;\n          const typeB: b2BodyType = bB.m_type;\n          // DEBUG: b2Assert(typeA !== b2BodyType.b2_staticBody || typeB !== b2BodyType.b2_staticBody);\n\n          const activeA: boolean = bA.IsAwake() && typeA !== b2BodyType.b2_staticBody;\n          const activeB: boolean = bB.IsAwake() && typeB !== b2BodyType.b2_staticBody;\n\n          // Is at least one body active (awake and dynamic or kinematic)?\n          if (!activeA && !activeB) {\n            continue;\n          }\n\n          const collideA: boolean = bA.IsBullet() || typeA !== b2BodyType.b2_dynamicBody;\n          const collideB: boolean = bB.IsBullet() || typeB !== b2BodyType.b2_dynamicBody;\n\n          // Are these two non-bullet dynamic bodies?\n          if (!collideA && !collideB) {\n            continue;\n          }\n\n          // Compute the TOI for this contact.\n          // Put the sweeps onto the same time interval.\n          let alpha0: number = bA.m_sweep.alpha0;\n\n          if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n            alpha0 = bB.m_sweep.alpha0;\n            bA.m_sweep.Advance(alpha0);\n          } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n            alpha0 = bA.m_sweep.alpha0;\n            bB.m_sweep.Advance(alpha0);\n          }\n\n          // DEBUG: b2Assert(alpha0 < 1);\n\n          const indexA: number = c.GetChildIndexA();\n          const indexB: number = c.GetChildIndexB();\n\n          // Compute the time of impact in interval [0, minTOI]\n          const input: b2TOIInput = b2World.SolveTOI_s_toi_input;\n          input.proxyA.SetShape(fA.GetShape(), indexA);\n          input.proxyB.SetShape(fB.GetShape(), indexB);\n          input.sweepA.Copy(bA.m_sweep);\n          input.sweepB.Copy(bB.m_sweep);\n          input.tMax = 1;\n\n          const output: b2TOIOutput = b2World.SolveTOI_s_toi_output;\n          b2TimeOfImpact(output, input);\n\n          // Beta is the fraction of the remaining portion of the .\n          const beta: number = output.t;\n          if (output.state === b2TOIOutputState.e_touching) {\n            alpha = b2Min(alpha0 + (1 - alpha0) * beta, 1);\n          } else {\n            alpha = 1;\n          }\n\n          c.m_toi = alpha;\n          c.m_toiFlag = true;\n        }\n\n        if (alpha < minAlpha) {\n          // This is the minimum TOI found so far.\n          minContact = c;\n          minAlpha = alpha;\n        }\n      }\n\n      if (minContact === null || 1 - 10 * b2_epsilon < minAlpha) {\n        // No more TOI events. Done!\n        this.m_stepComplete = true;\n        break;\n      }\n\n      // Advance the bodies to the TOI.\n      const fA: b2Fixture = minContact.GetFixtureA();\n      const fB: b2Fixture = minContact.GetFixtureB();\n      const bA: b2Body = fA.GetBody();\n      const bB: b2Body = fB.GetBody();\n\n      const backup1: b2Sweep = b2World.SolveTOI_s_backup1.Copy(bA.m_sweep);\n      const backup2: b2Sweep = b2World.SolveTOI_s_backup2.Copy(bB.m_sweep);\n\n      bA.Advance(minAlpha);\n      bB.Advance(minAlpha);\n\n      // The TOI contact likely has some new contact points.\n      minContact.Update(this.m_contactManager.m_contactListener);\n      minContact.m_toiFlag = false;\n      ++minContact.m_toiCount;\n\n      // Is the contact solid?\n      if (!minContact.IsEnabled() || !minContact.IsTouching()) {\n        // Restore the sweeps.\n        minContact.SetEnabled(false);\n        bA.m_sweep.Copy(backup1);\n        bB.m_sweep.Copy(backup2);\n        bA.SynchronizeTransform();\n        bB.SynchronizeTransform();\n        continue;\n      }\n\n      bA.SetAwake(true);\n      bB.SetAwake(true);\n\n      // Build the island\n      island.Clear();\n      island.AddBody(bA);\n      island.AddBody(bB);\n      island.AddContact(minContact);\n\n      bA.m_islandFlag = true;\n      bB.m_islandFlag = true;\n      minContact.m_islandFlag = true;\n\n      // Get contacts on bodyA and bodyB.\n      // const bodies: b2Body[] = [bA, bB];\n      for (let i: number = 0; i < 2; ++i) {\n        const body: b2Body = (i === 0) ? (bA) : (bB); // bodies[i];\n        if (body.m_type === b2BodyType.b2_dynamicBody) {\n          for (let ce: b2ContactEdge | null = body.m_contactList; ce; ce = ce.next) {\n            if (island.m_bodyCount === island.m_bodyCapacity) {\n              break;\n            }\n\n            if (island.m_contactCount === island.m_contactCapacity) {\n              break;\n            }\n\n            const contact: b2Contact = ce.contact;\n\n            // Has this contact already been added to the island?\n            if (contact.m_islandFlag) {\n              continue;\n            }\n\n            // Only add static, kinematic, or bullet bodies.\n            const other: b2Body = ce.other;\n            if (other.m_type === b2BodyType.b2_dynamicBody &&\n              !body.IsBullet() && !other.IsBullet()) {\n              continue;\n            }\n\n            // Skip sensors.\n            const sensorA: boolean = contact.m_fixtureA.m_isSensor;\n            const sensorB: boolean = contact.m_fixtureB.m_isSensor;\n            if (sensorA || sensorB) {\n              continue;\n            }\n\n            // Tentatively advance the body to the TOI.\n            const backup: b2Sweep = b2World.SolveTOI_s_backup.Copy(other.m_sweep);\n            if (!other.m_islandFlag) {\n              other.Advance(minAlpha);\n            }\n\n            // Update the contact points\n            contact.Update(this.m_contactManager.m_contactListener);\n\n            // Was the contact disabled by the user?\n            if (!contact.IsEnabled()) {\n              other.m_sweep.Copy(backup);\n              other.SynchronizeTransform();\n              continue;\n            }\n\n            // Are there contact points?\n            if (!contact.IsTouching()) {\n              other.m_sweep.Copy(backup);\n              other.SynchronizeTransform();\n              continue;\n            }\n\n            // Add the contact to the island\n            contact.m_islandFlag = true;\n            island.AddContact(contact);\n\n            // Has the other body already been added to the island?\n            if (other.m_islandFlag) {\n              continue;\n            }\n\n            // Add the other body to the island.\n            other.m_islandFlag = true;\n\n            if (other.m_type !== b2BodyType.b2_staticBody) {\n              other.SetAwake(true);\n            }\n\n            island.AddBody(other);\n          }\n        }\n      }\n\n      const subStep: b2TimeStep = b2World.SolveTOI_s_subStep;\n      subStep.dt = (1 - minAlpha) * step.dt;\n      subStep.inv_dt = 1 / subStep.dt;\n      subStep.dtRatio = 1;\n      subStep.positionIterations = 20;\n      subStep.velocityIterations = step.velocityIterations;\n      // #if B2_ENABLE_PARTICLE\n      subStep.particleIterations = step.particleIterations;\n      // #endif\n      subStep.warmStarting = false;\n      island.SolveTOI(subStep, bA.m_islandIndex, bB.m_islandIndex);\n\n      // Reset island flags and synchronize broad-phase proxies.\n      for (let i: number = 0; i < island.m_bodyCount; ++i) {\n        const body: b2Body = island.m_bodies[i];\n        body.m_islandFlag = false;\n\n        if (body.m_type !== b2BodyType.b2_dynamicBody) {\n          continue;\n        }\n\n        body.SynchronizeFixtures();\n\n        // Invalidate all contact TOIs on this displaced body.\n        for (let ce: b2ContactEdge | null = body.m_contactList; ce; ce = ce.next) {\n          ce.contact.m_toiFlag = false;\n          ce.contact.m_islandFlag = false;\n        }\n      }\n\n      // Commit fixture proxy movements to the broad-phase so that new contacts are created.\n      // Also, some contacts can be destroyed.\n      this.m_contactManager.FindNewContacts();\n\n      if (this.m_subStepping) {\n        this.m_stepComplete = false;\n        break;\n      }\n    }\n  }\n\n  // #if B2_ENABLE_CONTROLLER\n  public AddController(controller: b2Controller): b2Controller {\n    // b2Assert(controller.m_world === null, \"Controller can only be a member of one world\");\n    // controller.m_world = this;\n    controller.m_next = this.m_controllerList;\n    controller.m_prev = null;\n    if (this.m_controllerList) {\n      this.m_controllerList.m_prev = controller;\n    }\n    this.m_controllerList = controller;\n    ++this.m_controllerCount;\n    return controller;\n  }\n\n  public RemoveController(controller: b2Controller): b2Controller {\n    // b2Assert(controller.m_world === this, \"Controller is not a member of this world\");\n    if (controller.m_prev) {\n      controller.m_prev.m_next = controller.m_next;\n    }\n    if (controller.m_next) {\n      controller.m_next.m_prev = controller.m_prev;\n    }\n    if (this.m_controllerList === controller) {\n      this.m_controllerList = controller.m_next;\n    }\n    --this.m_controllerCount;\n    controller.m_prev = null;\n    controller.m_next = null;\n    // delete controller.m_world; // = null;\n    return controller;\n  }\n  // #endif\n}\n",
    "/*\n* Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport { b2_maxManifoldPoints, b2MakeNumberArray } from \"../common/b2_settings\";\nimport { b2Vec2 } from \"../common/b2_math\";\nimport { b2Manifold } from \"../collision/b2_collision\";\nimport { b2Contact } from \"./b2_contact\";\nimport { b2Body, b2BodyType } from \"./b2_body\";\nimport { b2Joint } from \"./b2_joint\";\nimport { b2Fixture, b2Filter } from \"./b2_fixture\";\n// #if B2_ENABLE_PARTICLE\nimport { b2ParticleGroup } from \"../particle/b2_particle_group\";\nimport { b2ParticleSystem, b2ParticleContact, b2ParticleBodyContact } from \"../particle/b2_particle_system\";\n// #endif\n\n/// Joints and fixtures are destroyed when their associated\n/// body is destroyed. Implement this listener so that you\n/// may nullify references to these joints and shapes.\nexport class b2DestructionListener {\n  /// Called when any joint is about to be destroyed due\n  /// to the destruction of one of its attached bodies.\n  public SayGoodbyeJoint(joint: b2Joint): void {}\n\n  /// Called when any fixture is about to be destroyed due\n  /// to the destruction of its parent body.\n  public SayGoodbyeFixture(fixture: b2Fixture): void {}\n\n  // #if B2_ENABLE_PARTICLE\n  /// Called when any particle group is about to be destroyed.\n  public SayGoodbyeParticleGroup(group: b2ParticleGroup): void {}\n\n  /// Called when a particle is about to be destroyed.\n  /// The index can be used in conjunction with\n  /// b2ParticleSystem::GetUserDataBuffer() or\n  /// b2ParticleSystem::GetParticleHandleFromIndex() to determine which\n  /// particle has been destroyed.\n  public SayGoodbyeParticle(system: b2ParticleSystem, index: number): void {}\n  // #endif\n}\n\n/// Implement this class to provide collision filtering. In other words, you can implement\n/// this class if you want finer control over contact creation.\nexport class b2ContactFilter {\n  /// Return true if contact calculations should be performed between these two shapes.\n  /// @warning for performance reasons this is only called when the AABBs begin to overlap.\n  public ShouldCollide(fixtureA: b2Fixture, fixtureB: b2Fixture): boolean {\n    const bodyA: b2Body = fixtureA.GetBody();\n    const bodyB: b2Body = fixtureB.GetBody();\n\n    // At least one body should be dynamic or kinematic.\n    if (bodyB.GetType() === b2BodyType.b2_staticBody && bodyA.GetType() === b2BodyType.b2_staticBody) {\n      return false;\n    }\n\n    // Does a joint prevent collision?\n    if (!bodyB.ShouldCollideConnected(bodyA)) {\n      return false;\n    }\n\n    const filter1: b2Filter = fixtureA.GetFilterData();\n    const filter2: b2Filter = fixtureB.GetFilterData();\n\n    if (filter1.groupIndex === filter2.groupIndex && filter1.groupIndex !== 0) {\n      return (filter1.groupIndex > 0);\n    }\n\n    const collide: boolean = (((filter1.maskBits & filter2.categoryBits) !== 0) && ((filter1.categoryBits & filter2.maskBits) !== 0));\n    return collide;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  public ShouldCollideFixtureParticle(fixture: b2Fixture, system: b2ParticleSystem, index: number): boolean {\n    return true;\n  }\n\n  public ShouldCollideParticleParticle(system: b2ParticleSystem, indexA: number, indexB: number): boolean {\n    return true;\n  }\n  // #endif\n\n  public static readonly b2_defaultFilter: b2ContactFilter = new b2ContactFilter();\n}\n\n/// Contact impulses for reporting. Impulses are used instead of forces because\n/// sub-step forces may approach infinity for rigid body collisions. These\n/// match up one-to-one with the contact points in b2Manifold.\nexport class b2ContactImpulse {\n  public normalImpulses: number[] = b2MakeNumberArray(b2_maxManifoldPoints);\n  public tangentImpulses: number[] = b2MakeNumberArray(b2_maxManifoldPoints);\n  public count: number = 0;\n}\n\n/// Implement this class to get contact information. You can use these results for\n/// things like sounds and game logic. You can also get contact results by\n/// traversing the contact lists after the time step. However, you might miss\n/// some contacts because continuous physics leads to sub-stepping.\n/// Additionally you may receive multiple callbacks for the same contact in a\n/// single time step.\n/// You should strive to make your callbacks efficient because there may be\n/// many callbacks per time step.\n/// @warning You cannot create/destroy Box2D entities inside these callbacks.\nexport class b2ContactListener {\n  /// Called when two fixtures begin to touch.\n  public BeginContact(contact: b2Contact): void {}\n\n  /// Called when two fixtures cease to touch.\n  public EndContact(contact: b2Contact): void {}\n\n  // #if B2_ENABLE_PARTICLE\n  public BeginContactFixtureParticle(system: b2ParticleSystem, contact: b2ParticleBodyContact): void {}\n  public EndContactFixtureParticle(system: b2ParticleSystem, contact: b2ParticleBodyContact): void {}\n  public BeginContactParticleParticle(system: b2ParticleSystem, contact: b2ParticleContact): void {}\n  public EndContactParticleParticle(system: b2ParticleSystem, contact: b2ParticleContact): void {}\n  // #endif\n\n  /// This is called after a contact is updated. This allows you to inspect a\n  /// contact before it goes to the solver. If you are careful, you can modify the\n  /// contact manifold (e.g. disable contact).\n  /// A copy of the old manifold is provided so that you can detect changes.\n  /// Note: this is called only for awake bodies.\n  /// Note: this is called even when the number of contact points is zero.\n  /// Note: this is not called for sensors.\n  /// Note: if you set the number of contact points to zero, you will not\n  /// get an EndContact callback. However, you may get a BeginContact callback\n  /// the next step.\n  public PreSolve(contact: b2Contact, oldManifold: b2Manifold): void {}\n\n  /// This lets you inspect a contact after the solver is finished. This is useful\n  /// for inspecting impulses.\n  /// Note: the contact manifold does not include time of impact impulses, which can be\n  /// arbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\n  /// in a separate data structure.\n  /// Note: this is only called for contacts that are touching, solid, and awake.\n  public PostSolve(contact: b2Contact, impulse: b2ContactImpulse): void {}\n\n  public static readonly b2_defaultListener: b2ContactListener = new b2ContactListener();\n}\n\n/// Callback class for AABB queries.\n/// See b2World::Query\nexport class b2QueryCallback {\n  /// Called for each fixture found in the query AABB.\n  /// @return false to terminate the query.\n  public ReportFixture(fixture: b2Fixture): boolean {\n    return true;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  public ReportParticle(system: b2ParticleSystem, index: number): boolean {\n    return false;\n  }\n  public ShouldQueryParticleSystem(system: b2ParticleSystem): boolean {\n    return true;\n  }\n  // #endif\n}\n\nexport type b2QueryCallbackFunction = (fixture: b2Fixture) => boolean;\n\n/// Callback class for ray casts.\n/// See b2World::RayCast\nexport class b2RayCastCallback {\n  /// Called for each fixture found in the query. You control how the ray cast\n  /// proceeds by returning a float:\n  /// return -1: ignore this fixture and continue\n  /// return 0: terminate the ray cast\n  /// return fraction: clip the ray to this point\n  /// return 1: don't clip the ray and continue\n  /// @param fixture the fixture hit by the ray\n  /// @param point the point of initial intersection\n  /// @param normal the normal vector at the point of intersection\n  /// @return -1 to filter, 0 to terminate, fraction to clip the ray for\n  /// closest hit, 1 to continue\n  public ReportFixture(fixture: b2Fixture, point: b2Vec2, normal: b2Vec2, fraction: number): number {\n    return fraction;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  public ReportParticle(system: b2ParticleSystem, index: number, point: b2Vec2, normal: b2Vec2, fraction: number): number {\n    return 0;\n  }\n  public ShouldQueryParticleSystem(system: b2ParticleSystem): boolean {\n    return true;\n  }\n  // #endif\n}\n\nexport type b2RayCastCallbackFunction = (fixture: b2Fixture, point: b2Vec2, normal: b2Vec2, fraction: number) => number;\n",
    "export { /*class*/ b2BlockAllocator as BlockAllocator } from \"./common/b2_block_allocator\";\nexport { /*abstract class*/ b2Draw as Draw } from \"./common/b2_draw\";\nexport { /*class*/ b2Color as Color } from \"./common/b2_draw\";\nexport { /*enum*/ b2DrawFlags as DrawFlags } from \"./common/b2_draw\";\nexport { /*interface*/ RGB as RGB } from \"./common/b2_draw\";\nexport { /*interface*/ RGBA as RGBA } from \"./common/b2_draw\";\nexport { /*class*/ b2GrowableStack as GrowableStack } from \"./common/b2_growable_stack\";\nexport { /*class*/ b2Mat22 as Mat22 } from \"./common/b2_math\";\nexport { /*class*/ b2Mat33 as Mat33 } from \"./common/b2_math\";\nexport { /*class*/ b2Rot as Rot } from \"./common/b2_math\";\nexport { /*class*/ b2Sweep as Sweep } from \"./common/b2_math\";\nexport { /*class*/ b2Transform as Transform } from \"./common/b2_math\";\nexport { /*class*/ b2Vec2 as Vec2 } from \"./common/b2_math\";\nexport { /*class*/ b2Vec3 as Vec3 } from \"./common/b2_math\";\nexport { /*const*/ b2_pi_over_180 as _pi_over_180 } from \"./common/b2_math\";\nexport { /*const*/ b2_180_over_pi as _180_over_pi } from \"./common/b2_math\";\nexport { /*const*/ b2_two_pi as two_pi } from \"./common/b2_math\";\nexport { /*const*/ b2Abs as Abs } from \"./common/b2_math\";\nexport { /*const*/ b2Acos as Acos } from \"./common/b2_math\";\nexport { /*const*/ b2Asin as Asin } from \"./common/b2_math\";\nexport { /*const*/ b2Atan2 as Atan2 } from \"./common/b2_math\";\nexport { /*const*/ b2Cos as Cos } from \"./common/b2_math\";\nexport { /*const*/ b2IsValid as IsValid } from \"./common/b2_math\";\nexport { /*const*/ b2Pow as Pow } from \"./common/b2_math\";\nexport { /*const*/ b2Sin as Sin } from \"./common/b2_math\";\nexport { /*const*/ b2Sqrt as Sqrt } from \"./common/b2_math\";\nexport { /*const*/ b2Vec2_zero as Vec2_zero } from \"./common/b2_math\";\nexport { /*function*/ b2Clamp as Clamp } from \"./common/b2_math\";\nexport { /*function*/ b2DegToRad as DegToRad } from \"./common/b2_math\";\nexport { /*function*/ b2InvSqrt as InvSqrt } from \"./common/b2_math\";\nexport { /*function*/ b2IsPowerOfTwo as IsPowerOfTwo } from \"./common/b2_math\";\nexport { /*function*/ b2Max as Max } from \"./common/b2_math\";\nexport { /*function*/ b2Min as Min } from \"./common/b2_math\";\nexport { /*function*/ b2NextPowerOfTwo as NextPowerOfTwo } from \"./common/b2_math\";\nexport { /*function*/ b2RadToDeg as RadToDeg } from \"./common/b2_math\";\nexport { /*function*/ b2Random as Random } from \"./common/b2_math\";\nexport { /*function*/ b2RandomRange as RandomRange } from \"./common/b2_math\";\nexport { /*function*/ b2Sq as Sq } from \"./common/b2_math\";\nexport { /*function*/ b2Swap as Swap } from \"./common/b2_math\";\nexport { /*interface*/ XY as XY } from \"./common/b2_math\";\nexport { /*interface*/ XYZ as XYZ } from \"./common/b2_math\";\nexport { /*class*/ b2Version as Version } from \"./common/b2_settings\";\nexport { /*const*/ b2_aabbExtension as aabbExtension } from \"./common/b2_settings\";\nexport { /*const*/ b2_aabbMultiplier as aabbMultiplier } from \"./common/b2_settings\";\nexport { /*const*/ b2_angularSleepTolerance as angularSleepTolerance } from \"./common/b2_settings\";\nexport { /*const*/ b2_angularSlop as angularSlop } from \"./common/b2_settings\";\nexport { /*const*/ b2_barrierCollisionTime as barrierCollisionTime } from \"./common/b2_settings\";\nexport { /*const*/ b2_baumgarte as baumgarte } from \"./common/b2_settings\";\nexport { /*const*/ b2_branch as branch } from \"./common/b2_settings\";\nexport { /*const*/ b2_commit as commit } from \"./common/b2_settings\";\nexport { /*const*/ b2_epsilon as epsilon } from \"./common/b2_settings\";\nexport { /*const*/ b2_epsilon_sq as epsilon_sq } from \"./common/b2_settings\";\nexport { /*const*/ b2_invalidParticleIndex as invalidParticleIndex } from \"./common/b2_settings\";\nexport { /*const*/ b2_lengthUnitsPerMeter as lengthUnitsPerMeter } from \"./common/b2_settings\";\nexport { /*const*/ b2_linearSleepTolerance as linearSleepTolerance } from \"./common/b2_settings\";\nexport { /*const*/ b2_linearSlop as linearSlop } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxAngularCorrection as maxAngularCorrection } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxFloat as maxFloat } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxLinearCorrection as maxLinearCorrection } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxManifoldPoints as maxManifoldPoints } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxParticleForce as maxParticleForce } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxParticleIndex as maxParticleIndex } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxParticlePressure as maxParticlePressure } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxPolygonVertices as maxPolygonVertices } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxRotation as maxRotation } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxRotationSquared as maxRotationSquared } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxSubSteps as maxSubSteps } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxTOIContacts as maxTOIContacts } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxTranslation as maxTranslation } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxTranslationSquared as maxTranslationSquared } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxTriadDistance as maxTriadDistance } from \"./common/b2_settings\";\nexport { /*const*/ b2_maxTriadDistanceSquared as maxTriadDistanceSquared } from \"./common/b2_settings\";\nexport { /*const*/ b2_minParticleSystemBufferCapacity as minParticleSystemBufferCapacity } from \"./common/b2_settings\";\nexport { /*const*/ b2_minParticleWeight as minParticleWeight } from \"./common/b2_settings\";\nexport { /*const*/ b2_particleStride as particleStride } from \"./common/b2_settings\";\nexport { /*const*/ b2_pi as pi } from \"./common/b2_settings\";\nexport { /*const*/ b2_polygonRadius as polygonRadius } from \"./common/b2_settings\";\nexport { /*const*/ b2_timeToSleep as timeToSleep } from \"./common/b2_settings\";\nexport { /*const*/ b2_toiBaumgarte as toiBaumgarte } from \"./common/b2_settings\";\nexport { /*const*/ b2_version as version } from \"./common/b2_settings\";\nexport { /*function*/ b2Alloc as Alloc } from \"./common/b2_settings\";\nexport { /*function*/ b2Assert as Assert } from \"./common/b2_settings\";\nexport { /*function*/ b2Free as Free } from \"./common/b2_settings\";\nexport { /*function*/ b2Log as Log } from \"./common/b2_settings\";\nexport { /*function*/ b2MakeArray as MakeArray } from \"./common/b2_settings\";\nexport { /*function*/ b2MakeNullArray as MakeNullArray } from \"./common/b2_settings\";\nexport { /*function*/ b2MakeNumberArray as MakeNumberArray } from \"./common/b2_settings\";\nexport { /*function*/ b2Maybe as Maybe } from \"./common/b2_settings\";\nexport { /*function*/ b2ParseInt as ParseInt } from \"./common/b2_settings\";\nexport { /*function*/ b2ParseUInt as ParseUInt } from \"./common/b2_settings\";\nexport { /*class*/ b2StackAllocator as StackAllocator } from \"./common/b2_stack_allocator\";\nexport { /*class*/ b2Counter as Counter } from \"./common/b2_timer\";\nexport { /*class*/ b2Timer as Timer } from \"./common/b2_timer\";\n\nexport { /*class*/ b2BroadPhase as BroadPhase } from \"./collision/b2_broad_phase\";\nexport { /*class*/ b2Pair as Pair } from \"./collision/b2_broad_phase\";\nexport { /*class*/ b2ChainShape as ChainShape } from \"./collision/b2_chain_shape\";\nexport { /*class*/ b2CircleShape as CircleShape } from \"./collision/b2_circle_shape\";\nexport { /*function*/ b2CollideCircles as CollideCircles } from \"./collision/b2_collide_circle\";\nexport { /*function*/ b2CollidePolygonAndCircle as CollidePolygonAndCircle } from \"./collision/b2_collide_circle\";\nexport { /*function*/ b2CollideEdgeAndCircle as CollideEdgeAndCircle } from \"./collision/b2_collide_edge\";\nexport { /*function*/ b2CollideEdgeAndPolygon as CollideEdgeAndPolygon } from \"./collision/b2_collide_edge\";\nexport { /*function*/ b2CollidePolygons as CollidePolygons } from \"./collision/b2_collide_polygon\";\nexport { /*class*/ b2AABB as AABB } from \"./collision/b2_collision\";\nexport { /*class*/ b2ClipVertex as ClipVertex } from \"./collision/b2_collision\";\nexport { /*class*/ b2ContactFeature as ContactFeature } from \"./collision/b2_collision\";\nexport { /*class*/ b2ContactID as ContactID } from \"./collision/b2_collision\";\nexport { /*class*/ b2Manifold as Manifold } from \"./collision/b2_collision\";\nexport { /*class*/ b2ManifoldPoint as ManifoldPoint } from \"./collision/b2_collision\";\nexport { /*class*/ b2RayCastInput as RayCastInput } from \"./collision/b2_collision\";\nexport { /*class*/ b2RayCastOutput as RayCastOutput } from \"./collision/b2_collision\";\nexport { /*class*/ b2WorldManifold as WorldManifold } from \"./collision/b2_collision\";\nexport { /*enum*/ b2ContactFeatureType as ContactFeatureType } from \"./collision/b2_collision\";\nexport { /*enum*/ b2ManifoldType as ManifoldType } from \"./collision/b2_collision\";\nexport { /*enum*/ b2PointState as PointState } from \"./collision/b2_collision\";\nexport { /*function*/ b2ClipSegmentToLine as ClipSegmentToLine } from \"./collision/b2_collision\";\nexport { /*function*/ b2GetPointStates as GetPointStates } from \"./collision/b2_collision\";\nexport { /*function*/ b2TestOverlapAABB as TestOverlapAABB } from \"./collision/b2_collision\";\nexport { /*function*/ b2TestOverlapShape as TestOverlapShape } from \"./collision/b2_collision\";\nexport { /*class*/ b2DistanceInput as DistanceInput } from \"./collision/b2_distance\";\nexport { /*class*/ b2DistanceOutput as DistanceOutput } from \"./collision/b2_distance\";\nexport { /*class*/ b2DistanceProxy as DistanceProxy } from \"./collision/b2_distance\";\nexport { /*class*/ b2ShapeCastInput as ShapeCastInput } from \"./collision/b2_distance\";\nexport { /*class*/ b2ShapeCastOutput as ShapeCastOutput } from \"./collision/b2_distance\";\nexport { /*class*/ b2Simplex as Simplex } from \"./collision/b2_distance\";\nexport { /*class*/ b2SimplexCache as SimplexCache } from \"./collision/b2_distance\";\nexport { /*class*/ b2SimplexVertex as SimplexVertex } from \"./collision/b2_distance\";\nexport { /*function*/ b2Distance as Distance } from \"./collision/b2_distance\";\nexport { /*function*/ b2_gjk_reset as gjk_reset } from \"./collision/b2_distance\";\nexport { /*function*/ b2ShapeCast as ShapeCast } from \"./collision/b2_distance\";\nexport { /*let*/ b2_gjkCalls as gjkCalls } from \"./collision/b2_distance\";\nexport { /*let*/ b2_gjkIters as gjkIters } from \"./collision/b2_distance\";\nexport { /*let*/ b2_gjkMaxIters as gjkMaxIters } from \"./collision/b2_distance\";\nexport { /*class*/ b2DynamicTree as DynamicTree } from \"./collision/b2_dynamic_tree\";\nexport { /*class*/ b2TreeNode as TreeNode } from \"./collision/b2_dynamic_tree\";\nexport { /*class*/ b2EdgeShape as EdgeShape } from \"./collision/b2_edge_shape\";\nexport { /*class*/ b2PolygonShape as PolygonShape } from \"./collision/b2_polygon_shape\";\nexport { /*abstract class*/ b2Shape as Shape } from \"./collision/b2_shape\";\nexport { /*class*/ b2MassData as MassData } from \"./collision/b2_shape\";\nexport { /*enum*/ b2ShapeType as ShapeType } from \"./collision/b2_shape\";\nexport { /*class*/ b2SeparationFunction as SeparationFunction } from \"./collision/b2_time_of_impact\";\nexport { /*class*/ b2TOIInput as TOIInput } from \"./collision/b2_time_of_impact\";\nexport { /*class*/ b2TOIOutput as TOIOutput } from \"./collision/b2_time_of_impact\";\nexport { /*enum*/ b2SeparationFunctionType as SeparationFunctionType } from \"./collision/b2_time_of_impact\";\nexport { /*enum*/ b2TOIOutputState as TOIOutputState } from \"./collision/b2_time_of_impact\";\nexport { /*function*/ b2TimeOfImpact as TimeOfImpact } from \"./collision/b2_time_of_impact\";\nexport { /*function*/ b2_toi_reset as toi_reset } from \"./collision/b2_time_of_impact\";\nexport { /*let*/ b2_toiCalls as toiCalls } from \"./collision/b2_time_of_impact\";\nexport { /*let*/ b2_toiIters as toiIters } from \"./collision/b2_time_of_impact\";\nexport { /*let*/ b2_toiMaxIters as toiMaxIters } from \"./collision/b2_time_of_impact\";\nexport { /*let*/ b2_toiMaxRootIters as toiMaxRootIters } from \"./collision/b2_time_of_impact\";\nexport { /*let*/ b2_toiMaxTime as toiMaxTime } from \"./collision/b2_time_of_impact\";\nexport { /*let*/ b2_toiRootIters as toiRootIters } from \"./collision/b2_time_of_impact\";\nexport { /*let*/ b2_toiTime as toiTime } from \"./collision/b2_time_of_impact\";\n\nexport { /*interface*/ b2IAreaJointDef as IAreaJointDef } from \"./dynamics/b2_area_joint\";\nexport { /*class*/ b2AreaJointDef as AreaJointDef } from \"./dynamics/b2_area_joint\";\nexport { /*class*/ b2AreaJoint as AreaJoint } from \"./dynamics/b2_area_joint\";\nexport { /*class*/ b2Body as Body } from \"./dynamics/b2_body\";\nexport { /*interface*/ b2IBodyDef as IBodyDef } from \"./dynamics/b2_body\";\nexport { /*class*/ b2BodyDef as BodyDef } from \"./dynamics/b2_body\";\nexport { /*enum*/ b2BodyType as BodyType } from \"./dynamics/b2_body\";\nimport { b2BodyType } from \"./dynamics/b2_body\";\nexport const staticBody = b2BodyType.b2_staticBody;\nexport const kinematicBody = b2BodyType.b2_kinematicBody;\nexport const dynamicBody = b2BodyType.b2_dynamicBody;\nexport { /*class*/ b2ChainAndCircleContact as ChainAndCircleContact } from \"./dynamics/b2_chain_circle_contact\";\nexport { /*class*/ b2ChainAndPolygonContact as ChainAndPolygonContact } from \"./dynamics/b2_chain_polygon_contact\";\nexport { /*class*/ b2CircleContact as CircleContact } from \"./dynamics/b2_circle_contact\";\nexport { /*class*/ b2ContactFactory as ContactFactory } from \"./dynamics/b2_contact_factory\";\nexport { /*class*/ b2ContactRegister as ContactRegister } from \"./dynamics/b2_contact_factory\";\nexport { /*class*/ b2ContactManager as ContactManager } from \"./dynamics/b2_contact_manager\";\nexport { /*class*/ b2ContactPositionConstraint as ContactPositionConstraint } from \"./dynamics/b2_contact_solver\";\nexport { /*class*/ b2ContactSolver as ContactSolver } from \"./dynamics/b2_contact_solver\";\nexport { /*class*/ b2ContactSolverDef as ContactSolverDef } from \"./dynamics/b2_contact_solver\";\nexport { /*class*/ b2ContactVelocityConstraint as ContactVelocityConstraint } from \"./dynamics/b2_contact_solver\";\nexport { /*class*/ b2PositionSolverManifold as PositionSolverManifold } from \"./dynamics/b2_contact_solver\";\nexport { /*class*/ b2VelocityConstraintPoint as VelocityConstraintPoint } from \"./dynamics/b2_contact_solver\";\nexport { /*let*/ g_blockSolve as blockSolve } from \"./dynamics/b2_contact_solver\";\nexport { /*function*/ get_g_blockSolve as get_g_blockSolve } from \"./dynamics/b2_contact_solver\";\nexport { /*function*/ set_g_blockSolve as set_g_blockSolve } from \"./dynamics/b2_contact_solver\";\nexport { /*abstract class*/ b2Contact as Contact } from \"./dynamics/b2_contact\";\nexport { /*class*/ b2ContactEdge as ContactEdge } from \"./dynamics/b2_contact\";\nexport { /*function*/ b2MixFriction as MixFriction } from \"./dynamics/b2_contact\";\nexport { /*function*/ b2MixRestitution as MixRestitution } from \"./dynamics/b2_contact\";\nexport { /*function*/ b2MixRestitutionThreshold as MixRestitutionThreshold } from \"./dynamics/b2_contact\";\nexport { /*interface*/ b2IDistanceJointDef as IDistanceJointDef } from \"./dynamics/b2_distance_joint\";\nexport { /*class*/ b2DistanceJointDef as DistanceJointDef } from \"./dynamics/b2_distance_joint\";\nexport { /*class*/ b2DistanceJoint as DistanceJoint } from \"./dynamics/b2_distance_joint\";\nexport { /*class*/ b2EdgeAndCircleContact as EdgeAndCircleContact } from \"./dynamics/b2_edge_circle_contact\";\nexport { /*class*/ b2EdgeAndPolygonContact as EdgeAndPolygonContact } from \"./dynamics/b2_edge_polygon_contact\";\nexport { /*interface*/ b2IFilter as IFilter } from \"./dynamics/b2_fixture\";\nexport { /*class*/ b2Filter as Filter } from \"./dynamics/b2_fixture\";\nexport { /*class*/ b2Fixture as Fixture } from \"./dynamics/b2_fixture\";\nexport { /*interface*/ b2IFixtureDef as IFixtureDef } from \"./dynamics/b2_fixture\";\nexport { /*class*/ b2FixtureDef as FixtureDef } from \"./dynamics/b2_fixture\";\nexport { /*class*/ b2FixtureProxy as FixtureProxy } from \"./dynamics/b2_fixture\";\nexport { /*interface*/ b2IFrictionJointDef as IFrictionJointDef } from \"./dynamics/b2_friction_joint\";\nexport { /*class*/ b2FrictionJointDef as FrictionJointDef } from \"./dynamics/b2_friction_joint\";\nexport { /*class*/ b2FrictionJoint as FrictionJoint } from \"./dynamics/b2_friction_joint\";\nexport { /*interface*/ b2IGearJointDef as IGearJointDef } from \"./dynamics/b2_gear_joint\";\nexport { /*class*/ b2GearJointDef as GearJointDef } from \"./dynamics/b2_gear_joint\";\nexport { /*class*/ b2GearJoint as GearJoint } from \"./dynamics/b2_gear_joint\";\nexport { /*class*/ b2Island as Island } from \"./dynamics/b2_island\";\nexport { /*interface*/ b2IJointDef as IJointDef } from \"./dynamics/b2_joint\";\nexport { /*abstract class*/ b2JointDef as JointDef } from \"./dynamics/b2_joint\";\nexport { /*abstract class*/ b2Joint as Joint } from \"./dynamics/b2_joint\";\nexport { /*class*/ b2Jacobian as Jacobian } from \"./dynamics/b2_joint\";\nexport { /*class*/ b2JointEdge as JointEdge } from \"./dynamics/b2_joint\";\nexport { /*enum*/ b2JointType as JointType } from \"./dynamics/b2_joint\";\nexport { /*function*/ b2AngularStiffness as AngularStiffness } from \"./dynamics/b2_joint\";\nexport { /*function*/ b2LinearStiffness as LinearStiffness } from \"./dynamics/b2_joint\";\nexport { /*interface*/ b2IMotorJointDef as IMotorJointDef } from \"./dynamics/b2_motor_joint\";\nexport { /*class*/ b2MotorJointDef as MotorJointDef } from \"./dynamics/b2_motor_joint\";\nexport { /*class*/ b2MotorJoint as MotorJoint } from \"./dynamics/b2_motor_joint\";\nexport { /*interface*/ b2IMouseJointDef as IMouseJointDef } from \"./dynamics/b2_mouse_joint\";\nexport { /*class*/ b2MouseJointDef as MouseJointDef } from \"./dynamics/b2_mouse_joint\";\nexport { /*class*/ b2MouseJoint as MouseJoint } from \"./dynamics/b2_mouse_joint\";\nexport { /*class*/ b2PolygonAndCircleContact as PolygonAndCircleContact } from \"./dynamics/b2_polygon_circle_contact\";\nexport { /*class*/ b2PolygonContact as PolygonContact } from \"./dynamics/b2_polygon_contact\";\nexport { /*interface*/ b2IPrismaticJointDef as IPrismaticJointDef } from \"./dynamics/b2_prismatic_joint\";\nexport { /*class*/ b2PrismaticJointDef as PrismaticJointDef } from \"./dynamics/b2_prismatic_joint\";\nexport { /*class*/ b2PrismaticJoint as PrismaticJoint } from \"./dynamics/b2_prismatic_joint\";\nexport { /*interface*/ b2IPulleyJointDef as IPulleyJointDef } from \"./dynamics/b2_pulley_joint\";\nexport { /*class*/ b2PulleyJointDef as PulleyJointDef } from \"./dynamics/b2_pulley_joint\";\nexport { /*class*/ b2PulleyJoint as PulleyJoint } from \"./dynamics/b2_pulley_joint\";\nexport { /*const*/ b2_minPulleyLength as minPulleyLength } from \"./dynamics/b2_pulley_joint\";\nexport { /*interface*/ b2IRevoluteJointDef as IRevoluteJointDef } from \"./dynamics/b2_revolute_joint\";\nexport { /*class*/ b2RevoluteJointDef as RevoluteJointDef } from \"./dynamics/b2_revolute_joint\";\nexport { /*class*/ b2RevoluteJoint as RevoluteJoint } from \"./dynamics/b2_revolute_joint\";\nexport { /*class*/ b2Position as Position } from \"./dynamics/b2_time_step\";\nexport { /*class*/ b2Profile as Profile } from \"./dynamics/b2_time_step\";\nexport { /*class*/ b2SolverData as SolverData } from \"./dynamics/b2_time_step\";\nexport { /*class*/ b2TimeStep as TimeStep } from \"./dynamics/b2_time_step\";\nexport { /*class*/ b2Velocity as Velocity } from \"./dynamics/b2_time_step\";\nexport { /*interface*/ b2IWeldJointDef as IWeldJointDef } from \"./dynamics/b2_weld_joint\";\nexport { /*class*/ b2WeldJointDef as WeldJointDef } from \"./dynamics/b2_weld_joint\";\nexport { /*class*/ b2WeldJoint as WeldJoint } from \"./dynamics/b2_weld_joint\";\nexport { /*interface*/ b2IWheelJointDef as IWheelJointDef } from \"./dynamics/b2_wheel_joint\";\nexport { /*class*/ b2WheelJointDef as WheelJointDef } from \"./dynamics/b2_wheel_joint\";\nexport { /*class*/ b2WheelJoint as WheelJoint } from \"./dynamics/b2_wheel_joint\";\nexport { /*class*/ b2ContactFilter as ContactFilter } from \"./dynamics/b2_world_callbacks\";\nexport { /*class*/ b2ContactImpulse as ContactImpulse } from \"./dynamics/b2_world_callbacks\";\nexport { /*class*/ b2ContactListener as ContactListener } from \"./dynamics/b2_world_callbacks\";\nexport { /*class*/ b2DestructionListener as DestructionListener } from \"./dynamics/b2_world_callbacks\";\nexport { /*class*/ b2QueryCallback as QueryCallback } from \"./dynamics/b2_world_callbacks\";\nexport { /*class*/ b2RayCastCallback as RayCastCallback } from \"./dynamics/b2_world_callbacks\";\nexport { /*type*/ b2QueryCallbackFunction as QueryCallbackFunction } from \"./dynamics/b2_world_callbacks\";\nexport { /*type*/ b2RayCastCallbackFunction as RayCastCallbackFunction } from \"./dynamics/b2_world_callbacks\";\nexport { /*class*/ b2World as World } from \"./dynamics/b2_world\";\n\nexport { /*class*/ b2RopeDef as RopeDef } from \"./rope/b2_rope\";\nexport { /*class*/ b2Rope as Rope } from \"./rope/b2_rope\";\nexport { /*class*/ b2RopeTuning as RopeTuning } from \"./rope/b2_rope\";\nexport { /*enum*/ b2BendingModel as BendingModel } from \"./rope/b2_rope\";\nimport { b2BendingModel } from \"./rope/b2_rope\";\nexport const springAngleBendingModel = b2BendingModel.b2_springAngleBendingModel;\nexport const pbdAngleBendingModel = b2BendingModel.b2_pbdAngleBendingModel;\nexport const xpbdAngleBendingModel = b2BendingModel.b2_xpbdAngleBendingModel;\nexport const pbdDistanceBendingModel = b2BendingModel.b2_pbdDistanceBendingModel;\nexport const pbdHeightBendingModel = b2BendingModel.b2_pbdHeightBendingModel;\nexport const pbdTriangleBendingModel = b2BendingModel.b2_pbdTriangleBendingModel;\nexport { /*enum*/ b2StretchingModel as StretchingModel } from \"./rope/b2_rope\";\nimport { b2StretchingModel } from \"./rope/b2_rope\";\nexport const pbdStretchingModel = b2StretchingModel.b2_pbdStretchingModel;\nexport const xpbdStretchingModel = b2StretchingModel.b2_xpbdStretchingModel;\n\nexport { /*class*/ b2BuoyancyController as BuoyancyController } from \"./controllers/b2_buoyancy_controller\";\nexport { /*class*/ b2ConstantAccelController as ConstantAccelController } from \"./controllers/b2_constant_accel_controller\";\nexport { /*class*/ b2ConstantForceController as ConstantForceController } from \"./controllers/b2_constant_force_controller\";\nexport { /*abstract class*/ b2Controller as Controller } from \"./controllers/b2_controller\";\nexport { /*class*/ b2ControllerEdge as ControllerEdge } from \"./controllers/b2_controller\";\nexport { /*class*/ b2GravityController as GravityController } from \"./controllers/b2_gravity_controller\";\nexport { /*class*/ b2TensorDampingController as TensorDampingController } from \"./controllers/b2_tensor_damping_controller\";\n\nexport { /*class*/ b2ParticleGroup as ParticleGroup } from \"./particle/b2_particle_group\";\nexport { /*interface*/ b2IParticleGroupDef as IParticleGroupDef } from \"./particle/b2_particle_group\";\nexport { /*class*/ b2ParticleGroupDef as ParticleGroupDef } from \"./particle/b2_particle_group\";\nexport { /*enum*/ b2ParticleGroupFlag as ParticleGroupFlag } from \"./particle/b2_particle_group\";\nexport { /*class*/ b2FixtureParticleQueryCallback as FixtureParticleQueryCallback } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2GrowableBuffer as GrowableBuffer } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleBodyContact as ParticleBodyContact } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleContact as ParticleContact } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticlePair as ParticlePair } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticlePairSet as ParticlePairSet } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem as ParticleSystem } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_CompositeShape as ParticleSystem_CompositeShape } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_ConnectionFilter as ParticleSystem_ConnectionFilter } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystemDef as ParticleSystemDef } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_DestroyParticlesInShapeCallback as ParticleSystem_DestroyParticlesInShapeCallback } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_FixedSetAllocator as ParticleSystem_FixedSetAllocator } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_FixtureParticle as ParticleSystem_FixtureParticle } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_FixtureParticleSet as ParticleSystem_FixtureParticleSet } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_InsideBoundsEnumerator as ParticleSystem_InsideBoundsEnumerator } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_JoinParticleGroupsFilter as ParticleSystem_JoinParticleGroupsFilter } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_ParticleListNode as ParticleSystem_ParticleListNode } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_ParticlePair as ParticleSystem_ParticlePair } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_Proxy as ParticleSystem_Proxy } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_ReactiveFilter as ParticleSystem_ReactiveFilter } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_SolveCollisionCallback as ParticleSystem_SolveCollisionCallback } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_UpdateBodyContactsCallback as ParticleSystem_UpdateBodyContactsCallback } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleSystem_UserOverridableBuffer as ParticleSystem_UserOverridableBuffer } from \"./particle/b2_particle_system\";\nexport { /*class*/ b2ParticleTriad as ParticleTriad } from \"./particle/b2_particle_system\";\nexport { /*type*/ b2ParticleIndex as ParticleIndex } from \"./particle/b2_particle_system\";\nexport { /*interface*/ b2IParticleDef as IParticleDef } from \"./particle/b2_particle\";\nexport { /*class*/ b2ParticleDef as ParticleDef } from \"./particle/b2_particle\";\nexport { /*class*/ b2ParticleHandle as ParticleHandle } from \"./particle/b2_particle\";\nexport { /*enum*/ b2ParticleFlag as ParticleFlag } from \"./particle/b2_particle\";\nexport { /*function*/ b2CalculateParticleIterations as CalculateParticleIterations } from \"./particle/b2_particle\";\nexport { /*class*/ b2StackQueue as StackQueue } from \"./particle/b2_stack_queue\";\nexport { /*class*/ b2VoronoiDiagram as VoronoiDiagram } from \"./particle/b2_voronoi_diagram\";\nexport { /*class*/ b2VoronoiDiagram_Generator as VoronoiDiagram_Generator } from \"./particle/b2_voronoi_diagram\";\nexport { /*class*/ b2VoronoiDiagram_Task as VoronoiDiagram_Task } from \"./particle/b2_voronoi_diagram\";\nexport { /*type*/ b2VoronoiDiagram_NodeCallback as VoronoiDiagram_NodeCallback } from \"./particle/b2_voronoi_diagram\";\n",
    "/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport { b2_invalidParticleIndex } from \"../common/b2_common\";\nimport { b2Clamp, b2Vec2, XY } from \"../common/b2_math\";\nimport { b2Color, RGBA } from \"../common/b2_draw\";\nimport { b2ParticleGroup } from \"./b2_particle_group\";\n\n/**\n * The particle type. Can be combined with the | operator.\n */\nexport enum b2ParticleFlag {\n  /// Water particle.\n  b2_waterParticle = 0,\n  /// Removed after next simulation step.\n  b2_zombieParticle = 1 << 1,\n  /// Zero velocity.\n  b2_wallParticle = 1 << 2,\n  /// With restitution from stretching.\n  b2_springParticle = 1 << 3,\n  /// With restitution from deformation.\n  b2_elasticParticle = 1 << 4,\n  /// With viscosity.\n  b2_viscousParticle = 1 << 5,\n  /// Without isotropic pressure.\n  b2_powderParticle = 1 << 6,\n  /// With surface tension.\n  b2_tensileParticle = 1 << 7,\n  /// Mix color between contacting particles.\n  b2_colorMixingParticle = 1 << 8,\n  /// Call b2DestructionListener on destruction.\n  b2_destructionListenerParticle = 1 << 9,\n  /// Prevents other particles from leaking.\n  b2_barrierParticle = 1 << 10,\n  /// Less compressibility.\n  b2_staticPressureParticle = 1 << 11,\n  /// Makes pairs or triads with other particles.\n  b2_reactiveParticle = 1 << 12,\n  /// With high repulsive force.\n  b2_repulsiveParticle = 1 << 13,\n  /// Call b2ContactListener when this particle is about to interact with\n  /// a rigid body or stops interacting with a rigid body.\n  /// This results in an expensive operation compared to using\n  /// b2_fixtureContactFilterParticle to detect collisions between\n  /// particles.\n  b2_fixtureContactListenerParticle = 1 << 14,\n  /// Call b2ContactListener when this particle is about to interact with\n  /// another particle or stops interacting with another particle.\n  /// This results in an expensive operation compared to using\n  /// b2_particleContactFilterParticle to detect collisions between\n  /// particles.\n  b2_particleContactListenerParticle = 1 << 15,\n  /// Call b2ContactFilter when this particle interacts with rigid bodies.\n  b2_fixtureContactFilterParticle = 1 << 16,\n  /// Call b2ContactFilter when this particle interacts with other\n  /// particles.\n  b2_particleContactFilterParticle = 1 << 17,\n}\n\nexport interface b2IParticleDef {\n  flags?: b2ParticleFlag;\n  position?: XY;\n  velocity?: XY;\n  color?: RGBA;\n  lifetime?: number;\n  userData?: any;\n  group?: b2ParticleGroup | null;\n}\n\nexport class b2ParticleDef implements b2IParticleDef {\n  public flags: b2ParticleFlag = 0;\n  public readonly position: b2Vec2 = new b2Vec2();\n  public readonly velocity: b2Vec2 = new b2Vec2();\n  public readonly color: b2Color = new b2Color(0, 0, 0, 0);\n  public lifetime: number = 0.0;\n  public userData: any = null;\n  public group: b2ParticleGroup | null = null;\n}\n\nexport function b2CalculateParticleIterations(gravity: number, radius: number, timeStep: number): number {\n  // In some situations you may want more particle iterations than this,\n  // but to avoid excessive cycle cost, don't recommend more than this.\n  const B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS = 8;\n  const B2_RADIUS_THRESHOLD = 0.01;\n  const iterations = Math.ceil(Math.sqrt(gravity / (B2_RADIUS_THRESHOLD * radius)) * timeStep);\n  return b2Clamp(iterations, 1, B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS);\n}\n\nexport class b2ParticleHandle {\n  public m_index: number = b2_invalidParticleIndex;\n  public GetIndex(): number { return this.m_index; }\n  public SetIndex(index: number): void { this.m_index = index; }\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2Vec2, b2Transform, XY } from \"../common/b2_math\";\nimport { b2Color, RGBA } from \"../common/b2_draw\";\nimport { b2Shape } from \"../collision/b2_shape\";\nimport { b2ParticleFlag } from \"./b2_particle\";\nimport { b2ParticleSystem } from \"./b2_particle_system\";\n\nexport enum b2ParticleGroupFlag {\n  /// Prevents overlapping or leaking.\n  b2_solidParticleGroup = 1 << 0,\n  /// Keeps its shape.\n  b2_rigidParticleGroup = 1 << 1,\n  /// Won't be destroyed if it gets empty.\n  b2_particleGroupCanBeEmpty = 1 << 2,\n  /// Will be destroyed on next simulation step.\n  b2_particleGroupWillBeDestroyed = 1 << 3,\n  /// Updates depth data on next simulation step.\n  b2_particleGroupNeedsUpdateDepth = 1 << 4,\n\n  b2_particleGroupInternalMask = b2_particleGroupWillBeDestroyed | b2_particleGroupNeedsUpdateDepth,\n}\n\nexport interface b2IParticleGroupDef {\n  flags?: b2ParticleFlag;\n  groupFlags?: b2ParticleGroupFlag;\n  position?: XY;\n  angle?: number;\n  linearVelocity?: XY;\n  angularVelocity?: number;\n  color?: RGBA;\n  strength?: number;\n  shape?: b2Shape;\n  shapes?: b2Shape[];\n  shapeCount?: number;\n  stride?: number;\n  particleCount?: number;\n  positionData?: XY[];\n  lifetime?: number;\n  userData?: any;\n  group?: b2ParticleGroup | null;\n}\n\nexport class b2ParticleGroupDef implements b2IParticleGroupDef {\n  public flags: b2ParticleFlag = 0;\n  public groupFlags: b2ParticleGroupFlag = 0;\n  public readonly position: b2Vec2 = new b2Vec2();\n  public angle: number = 0.0;\n  public readonly linearVelocity: b2Vec2 = new b2Vec2();\n  public angularVelocity: number = 0.0;\n  public readonly color: b2Color = new b2Color();\n  public strength: number = 1.0;\n  public shape?: b2Shape;\n  public shapes?: b2Shape[];\n  public shapeCount: number = 0;\n  public stride: number = 0;\n  public particleCount: number = 0;\n  public positionData?: b2Vec2[];\n  public lifetime: number = 0;\n  public userData: any = null;\n  public group: b2ParticleGroup | null = null;\n}\n\nexport class b2ParticleGroup {\n\n  public readonly m_system: b2ParticleSystem;\n  public m_firstIndex: number = 0;\n  public m_lastIndex: number = 0;\n  public m_groupFlags: b2ParticleGroupFlag = 0;\n  public m_strength: number = 1.0;\n  public m_prev: b2ParticleGroup | null = null;\n  public m_next: b2ParticleGroup | null = null;\n  public m_timestamp: number = -1;\n  public m_mass: number = 0.0;\n  public m_inertia: number = 0.0;\n  public readonly m_center: b2Vec2 = new b2Vec2();\n  public readonly m_linearVelocity: b2Vec2 = new b2Vec2();\n  public m_angularVelocity: number = 0.0;\n  public readonly m_transform: b2Transform = new b2Transform();\n  ///m_transform.SetIdentity();\n  public m_userData: any = null;\n\n  constructor(system: b2ParticleSystem) {\n    this.m_system = system;\n  }\n\n  public GetNext(): b2ParticleGroup | null {\n    return this.m_next;\n  }\n\n  public GetParticleSystem(): b2ParticleSystem {\n    return this.m_system;\n  }\n\n  public GetParticleCount(): number {\n    return this.m_lastIndex - this.m_firstIndex;\n  }\n\n  public GetBufferIndex(): number {\n    return this.m_firstIndex;\n  }\n\n  public ContainsParticle(index: number): boolean {\n    return this.m_firstIndex <= index && index < this.m_lastIndex;\n  }\n\n  public GetAllParticleFlags(): b2ParticleFlag {\n    if (!this.m_system.m_flagsBuffer.data) { throw new Error(); }\n    let flags = 0;\n    for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\n      flags |= this.m_system.m_flagsBuffer.data[i];\n    }\n    return flags;\n  }\n\n  public GetGroupFlags(): b2ParticleGroupFlag {\n    return this.m_groupFlags;\n  }\n\n  public SetGroupFlags(flags: number): void {\n    // DEBUG: b2Assert((flags & b2ParticleGroupFlag.b2_particleGroupInternalMask) === 0);\n    flags |= this.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupInternalMask;\n    this.m_system.SetGroupFlags(this, flags);\n  }\n\n  public GetMass(): number {\n    this.UpdateStatistics();\n    return this.m_mass;\n  }\n\n  public GetInertia(): number {\n    this.UpdateStatistics();\n    return this.m_inertia;\n  }\n\n  public GetCenter(): Readonly<b2Vec2> {\n    this.UpdateStatistics();\n    return this.m_center;\n  }\n\n  public GetLinearVelocity(): Readonly<b2Vec2> {\n    this.UpdateStatistics();\n    return this.m_linearVelocity;\n  }\n\n  public GetAngularVelocity(): number {\n    this.UpdateStatistics();\n    return this.m_angularVelocity;\n  }\n\n  public GetTransform(): Readonly<b2Transform> {\n    return this.m_transform;\n  }\n\n  public GetPosition(): Readonly<b2Vec2> {\n    return this.m_transform.p;\n  }\n\n  public GetAngle(): number {\n    return this.m_transform.q.GetAngle();\n  }\n\n  public GetLinearVelocityFromWorldPoint<T extends XY>(worldPoint: XY, out: T): T {\n    const s_t0 = b2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0;\n    this.UpdateStatistics();\n    ///  return m_linearVelocity + b2Cross(m_angularVelocity, worldPoint - m_center);\n    return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_center, s_t0), out);\n  }\n  public static readonly GetLinearVelocityFromWorldPoint_s_t0 = new b2Vec2();\n\n  public GetUserData(): void {\n    return this.m_userData;\n  }\n\n  public SetUserData(data: any): void {\n    this.m_userData = data;\n  }\n\n  public ApplyForce(force: XY): void {\n    this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, force);\n  }\n\n  public ApplyLinearImpulse(impulse: XY): void {\n    this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, impulse);\n  }\n\n  public DestroyParticles(callDestructionListener: boolean): void {\n    if (this.m_system.m_world.IsLocked()) { throw new Error(); }\n\n    for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\n      this.m_system.DestroyParticle(i, callDestructionListener);\n    }\n  }\n\n  public UpdateStatistics(): void {\n    if (!this.m_system.m_positionBuffer.data) { throw new Error(); }\n    if (!this.m_system.m_velocityBuffer.data) { throw new Error(); }\n    const p = new b2Vec2();\n    const v = new b2Vec2();\n    if (this.m_timestamp !== this.m_system.m_timestamp) {\n      const m = this.m_system.GetParticleMass();\n      ///  this.m_mass = 0;\n      this.m_mass = m * (this.m_lastIndex - this.m_firstIndex);\n      this.m_center.SetZero();\n      this.m_linearVelocity.SetZero();\n      for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\n        ///  this.m_mass += m;\n        ///  this.m_center += m * this.m_system.m_positionBuffer.data[i];\n        this.m_center.SelfMulAdd(m, this.m_system.m_positionBuffer.data[i]);\n        ///  this.m_linearVelocity += m * this.m_system.m_velocityBuffer.data[i];\n        this.m_linearVelocity.SelfMulAdd(m, this.m_system.m_velocityBuffer.data[i]);\n      }\n      if (this.m_mass > 0) {\n        const inv_mass = 1 / this.m_mass;\n        ///this.m_center *= 1 / this.m_mass;\n        this.m_center.SelfMul(inv_mass);\n        ///this.m_linearVelocity *= 1 / this.m_mass;\n        this.m_linearVelocity.SelfMul(inv_mass);\n      }\n      this.m_inertia = 0;\n      this.m_angularVelocity = 0;\n      for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\n        ///b2Vec2 p = this.m_system.m_positionBuffer.data[i] - this.m_center;\n        b2Vec2.SubVV(this.m_system.m_positionBuffer.data[i], this.m_center, p);\n        ///b2Vec2 v = this.m_system.m_velocityBuffer.data[i] - this.m_linearVelocity;\n        b2Vec2.SubVV(this.m_system.m_velocityBuffer.data[i], this.m_linearVelocity, v);\n        this.m_inertia += m * b2Vec2.DotVV(p, p);\n        this.m_angularVelocity += m * b2Vec2.CrossVV(p, v);\n      }\n      if (this.m_inertia > 0) {\n        this.m_angularVelocity *= 1 / this.m_inertia;\n      }\n      this.m_timestamp = this.m_system.m_timestamp;\n    }\n  }\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\n// DEBUG: import { b2Assert, b2_maxParticleIndex } from \"../common/b2_settings\";\nimport { b2_linearSlop, b2_maxFloat, b2_invalidParticleIndex, b2_minParticleSystemBufferCapacity, b2_maxTriadDistanceSquared, b2_barrierCollisionTime, b2MakeArray, b2Maybe } from \"../common/b2_settings\";\nimport { b2_maxParticlePressure, b2_minParticleWeight, b2_maxParticleForce, b2_particleStride } from \"../common/b2_common\";\nimport { b2Min, b2Max, b2Abs, b2Clamp, b2Sqrt, b2InvSqrt, b2Vec2, b2TypedVec2, b2Rot, b2Transform, XY } from \"../common/b2_math\";\nimport { b2Color, b2TypedColor } from \"../common/b2_draw\";\nimport { b2AABB, b2RayCastInput, b2RayCastOutput } from \"../collision/b2_collision\";\nimport { b2ShapeType, b2Shape, b2MassData } from \"../collision/b2_shape\";\nimport { b2EdgeShape } from \"../collision/b2_edge_shape\";\nimport { b2ChainShape } from \"../collision/b2_chain_shape\";\nimport { b2TimeStep } from \"../dynamics/b2_time_step\";\nimport { b2Fixture } from \"../dynamics/b2_fixture\";\nimport { b2Body } from \"../dynamics/b2_body\";\nimport { b2World } from \"../dynamics/b2_world\";\nimport { b2ContactFilter, b2ContactListener, b2QueryCallback, b2RayCastCallback } from \"../dynamics/b2_world_callbacks\";\nimport { b2ParticleFlag, b2ParticleDef, b2ParticleHandle, b2IParticleDef } from \"./b2_particle\";\nimport { b2ParticleGroupFlag, b2ParticleGroupDef, b2ParticleGroup, b2IParticleGroupDef } from \"./b2_particle_group\";\nimport { b2VoronoiDiagram } from \"./b2_voronoi_diagram\";\nimport { b2DistanceProxy } from \"../collision/b2_distance\";\n\nfunction std_iter_swap<T>(array: T[], a: number, b: number): void {\n  const tmp: T = array[a];\n  array[a] = array[b];\n  array[b] = tmp;\n}\n\nfunction default_compare<T>(a: T, b: T): boolean { return a < b; }\n\nfunction std_sort<T>(array: T[], first: number = 0, len: number = array.length - first, cmp: (a: T, b: T) => boolean = default_compare): T[] {\n  let left = first;\n  const stack: number[] = [];\n  let pos = 0;\n\n  for (; ; ) { /* outer loop */\n    for (; left + 1 < len; len++) { /* sort left to len-1 */\n      const pivot = array[left + Math.floor(Math.random() * (len - left))]; /* pick random pivot */\n      stack[pos++] = len; /* sort right part later */\n      for (let right = left - 1; ; ) { /* inner loop: partitioning */\n        while (cmp(array[++right], pivot)) {} /* look for greater element */\n        while (cmp(pivot, array[--len])) {} /* look for smaller element */\n        if (right >= len) {\n          break;\n        } /* partition point found? */\n        std_iter_swap(array, right, len); /* the only swap */\n      } /* partitioned, continue left part */\n    }\n    if (pos === 0) {\n      break;\n    } /* stack empty? */\n    left = len; /* left to right is sorted */\n    len = stack[--pos]; /* get next range to sort */\n  }\n\n  return array;\n}\n\nfunction std_stable_sort<T>(array: T[], first: number = 0, len: number = array.length - first, cmp: (a: T, b: T) => boolean = default_compare): T[] {\n  return std_sort(array, first, len, cmp);\n}\n\nfunction std_remove_if<T>(array: T[], predicate: (value: T) => boolean, length: number = array.length) {\n  let l = 0;\n\n  for (let c = 0; c < length; ++c) {\n    // if we can be collapsed, keep l where it is.\n    if (predicate(array[c])) {\n      continue;\n    }\n\n    // this node can't be collapsed; push it back as far as we can.\n    if (c === l) {\n      ++l;\n      continue; // quick exit if we're already in the right spot\n    }\n\n    // array[l++] = array[c];\n    std_iter_swap(array, l++, c);\n  }\n\n  return l;\n}\n\nfunction std_lower_bound<A, B>(array: A[], first: number, last: number, val: B, cmp: (a: A, b: B) => boolean): number {\n  let count = last - first;\n  while (count > 0) {\n    const step = Math.floor(count / 2);\n    let it = first + step;\n\n    if (cmp(array[it], val)) {\n      first = ++it;\n      count -= step + 1;\n    } else {\n      count = step;\n    }\n  }\n  return first;\n}\n\nfunction std_upper_bound<A, B>(array: B[], first: number, last: number, val: A, cmp: (a: A, b: B) => boolean): number {\n  let count = last - first;\n  while (count > 0) {\n    const step = Math.floor(count / 2);\n    let it = first + step;\n\n    if (!cmp(val, array[it])) {\n      first = ++it;\n      count -= step + 1;\n    } else {\n      count = step;\n    }\n  }\n  return first;\n}\n\nfunction std_rotate<T>(array: T[], first: number, n_first: number, last: number): void {\n  let next = n_first;\n  while (first !== next) {\n    std_iter_swap(array, first++, next++);\n    if (next === last) {\n      next = n_first;\n    } else if (first === n_first) {\n      n_first = next;\n         }\n  }\n}\n\nfunction std_unique<T>(array: T[], first: number, last: number, cmp: (a: T, b: T) => boolean): number {\n  if (first === last) {\n    return last;\n  }\n  let result = first;\n  while (++first !== last) {\n    if (!cmp(array[result], array[first])) {\n      ///array[++result] = array[first];\n      std_iter_swap(array, ++result, first);\n    }\n  }\n  return ++result;\n}\n\nexport class b2GrowableBuffer<T> {\n  public data: T[] = [];\n  public count: number = 0;\n  public capacity: number = 0;\n  public allocator: () => T;\n\n  constructor(allocator: () => T) {\n    this.allocator = allocator;\n  }\n\n  public Append(): number {\n    if (this.count >= this.capacity) {\n      this.Grow();\n    }\n    return this.count++;\n  }\n\n  public Reserve(newCapacity: number): void {\n    if (this.capacity >= newCapacity) {\n      return;\n    }\n\n    // DEBUG: b2Assert(this.capacity === this.data.length);\n    for (let i = this.capacity; i < newCapacity; ++i) {\n      this.data[i] = this.allocator();\n    }\n    this.capacity = newCapacity;\n  }\n\n  public Grow(): void {\n    // Double the capacity.\n    const newCapacity = this.capacity ? 2 * this.capacity : b2_minParticleSystemBufferCapacity;\n    // DEBUG: b2Assert(newCapacity > this.capacity);\n    this.Reserve(newCapacity);\n  }\n\n  public Free(): void {\n    if (this.data.length === 0) {\n      return;\n    }\n\n    this.data = [];\n    this.capacity = 0;\n    this.count = 0;\n  }\n\n  public Shorten(newEnd: number): void {\n    // DEBUG: b2Assert(false);\n  }\n\n  public Data(): T[] {\n    return this.data;\n  }\n\n  public GetCount(): number {\n    return this.count;\n  }\n\n  public SetCount(newCount: number): void {\n    // DEBUG: b2Assert(0 <= newCount && newCount <= this.capacity);\n    this.count = newCount;\n  }\n\n  public GetCapacity(): number {\n    return this.capacity;\n  }\n\n  public RemoveIf(pred: (t: T) => boolean): void {\n    // DEBUG: let count = 0;\n    // DEBUG: for (let i = 0; i < this.count; ++i) {\n    // DEBUG:   if (!pred(this.data[i])) {\n    // DEBUG:     count++;\n    // DEBUG:   }\n    // DEBUG: }\n\n    this.count = std_remove_if(this.data, pred, this.count);\n\n    // DEBUG: b2Assert(count === this.count);\n  }\n\n  public Unique(pred: (a: T, b: T) => boolean): void {\n    this.count = std_unique(this.data, 0, this.count, pred);\n  }\n}\n\nexport type b2ParticleIndex = number;\n\nexport class b2FixtureParticleQueryCallback extends b2QueryCallback {\n  public m_system: b2ParticleSystem;\n  constructor(system: b2ParticleSystem) {\n    super();\n    this.m_system = system;\n  }\n  public ShouldQueryParticleSystem(system: b2ParticleSystem): boolean {\n    // Skip reporting particles.\n    return false;\n  }\n  public ReportFixture(fixture: b2Fixture): boolean {\n    if (fixture.IsSensor()) {\n      return true;\n    }\n    const shape = fixture.GetShape();\n    const childCount = shape.GetChildCount();\n    for (let childIndex = 0; childIndex < childCount; childIndex++) {\n      const aabb = fixture.GetAABB(childIndex);\n      const enumerator = this.m_system.GetInsideBoundsEnumerator(aabb);\n      let index: number;\n      while ((index = enumerator.GetNext()) >= 0) {\n        this.ReportFixtureAndParticle(fixture, childIndex, index);\n      }\n    }\n    return true;\n  }\n  public ReportParticle(system: b2ParticleSystem, index: number): boolean {\n    return false;\n  }\n  public ReportFixtureAndParticle(fixture: b2Fixture, childIndex: number, index: number): void {\n    // DEBUG: b2Assert(false); // pure virtual\n  }\n}\n\nexport class b2ParticleContact {\n  public indexA: number = 0;\n  public indexB: number = 0;\n  public weight: number = 0;\n  public normal: b2Vec2 = new b2Vec2();\n  public flags: b2ParticleFlag = 0;\n\n  public SetIndices(a: number, b: number): void {\n    // DEBUG: b2Assert(a <= b2_maxParticleIndex && b <= b2_maxParticleIndex);\n    this.indexA = a;\n    this.indexB = b;\n  }\n\n  public SetWeight(w: number): void {\n    this.weight = w;\n  }\n\n  public SetNormal(n: b2Vec2): void {\n    this.normal.Copy(n);\n  }\n\n  public SetFlags(f: b2ParticleFlag): void {\n    this.flags = f;\n  }\n\n  public GetIndexA(): number {\n    return this.indexA;\n  }\n\n  public GetIndexB(): number {\n    return this.indexB;\n  }\n\n  public GetWeight(): number {\n    return this.weight;\n  }\n\n  public GetNormal(): b2Vec2 {\n    return this.normal;\n  }\n\n  public GetFlags(): b2ParticleFlag {\n    return this.flags;\n  }\n\n  public IsEqual(rhs: b2ParticleContact): boolean {\n    return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && this.weight === rhs.weight && this.normal.x === rhs.normal.x && this.normal.y === rhs.normal.y;\n  }\n\n  public IsNotEqual(rhs: b2ParticleContact): boolean {\n    return !this.IsEqual(rhs);\n  }\n\n  public ApproximatelyEqual(rhs: b2ParticleContact): boolean {\n    const MAX_WEIGHT_DIFF = 0.01; // Weight 0 ~ 1, so about 1%\n    const MAX_NORMAL_DIFF_SQ = 0.01 * 0.01; // Normal length = 1, so 1%\n    return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && b2Abs(this.weight - rhs.weight) < MAX_WEIGHT_DIFF && b2Vec2.DistanceSquaredVV(this.normal, rhs.normal) < MAX_NORMAL_DIFF_SQ;\n  }\n}\n\nexport class b2ParticleBodyContact {\n  public index: number = 0; // Index of the particle making contact.\n  public body!: b2Body; // The body making contact.\n  public fixture!: b2Fixture; // The specific fixture making contact\n  public weight: number = 0.0; // Weight of the contact. A value between 0.0f and 1.0f.\n  public normal: b2Vec2 = new b2Vec2(); // The normalized direction from the particle to the body.\n  public mass: number = 0.0; // The effective mass used in calculating force.\n}\n\nexport class b2ParticlePair {\n  public indexA: number = 0; // Indices of the respective particles making pair.\n  public indexB: number = 0;\n  public flags: b2ParticleFlag = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\n  public strength: number = 0.0; // The strength of cohesion among the particles.\n  public distance: number = 0.0; // The initial distance of the particles.\n}\n\nexport class b2ParticleTriad {\n  public indexA: number = 0; // Indices of the respective particles making triad.\n  public indexB: number = 0;\n  public indexC: number = 0;\n  public flags: b2ParticleFlag = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\n  public strength: number = 0.0; // The strength of cohesion among the particles.\n  public pa: b2Vec2 = new b2Vec2(0.0, 0.0); // Values used for calculation.\n  public pb: b2Vec2 = new b2Vec2(0.0, 0.0);\n  public pc: b2Vec2 = new b2Vec2(0.0, 0.0);\n  public ka: number = 0.0;\n  public kb: number = 0.0;\n  public kc: number = 0.0;\n  public s: number = 0.0;\n}\n\nexport class b2ParticleSystemDef {\n  // Initialize physical coefficients to the maximum values that\n  // maintain numerical stability.\n\n  /**\n   * Enable strict Particle/Body contact check.\n   * See SetStrictContactCheck for details.\n   */\n  public strictContactCheck: boolean = false;\n\n  /**\n   * Set the particle density.\n   * See SetDensity for details.\n   */\n  public density: number = 1.0;\n\n  /**\n   * Change the particle gravity scale. Adjusts the effect of the\n   * global gravity vector on particles. Default value is 1.0f.\n   */\n  public gravityScale: number = 1.0;\n\n  /**\n   * Particles behave as circles with this radius. In Box2D units.\n   */\n  public radius: number = 1.0;\n\n  /**\n   * Set the maximum number of particles.\n   * By default, there is no maximum. The particle buffers can\n   * continue to grow while b2World's block allocator still has\n   * memory.\n   * See SetMaxParticleCount for details.\n   */\n  public maxCount: number = 0;\n\n  /**\n   * Increases pressure in response to compression\n   * Smaller values allow more compression\n   */\n  public pressureStrength: number = 0.005;\n\n  /**\n   * Reduces velocity along the collision normal\n   * Smaller value reduces less\n   */\n  public dampingStrength: number = 1.0;\n\n  /**\n   * Restores shape of elastic particle groups\n   * Larger values increase elastic particle velocity\n   */\n  public elasticStrength: number = 0.25;\n\n  /**\n   * Restores length of spring particle groups\n   * Larger values increase spring particle velocity\n   */\n  public springStrength: number = 0.25;\n\n  /**\n   * Reduces relative velocity of viscous particles\n   * Larger values slow down viscous particles more\n   */\n  public viscousStrength: number = 0.25;\n\n  /**\n   * Produces pressure on tensile particles\n   * 0~0.2. Larger values increase the amount of surface tension.\n   */\n  public surfaceTensionPressureStrength: number = 0.2;\n\n  /**\n   * Smoothes outline of tensile particles\n   * 0~0.2. Larger values result in rounder, smoother,\n   * water-drop-like clusters of particles.\n   */\n  public surfaceTensionNormalStrength: number = 0.2;\n\n  /**\n   * Produces additional pressure on repulsive particles\n   * Larger values repulse more\n   * Negative values mean attraction. The range where particles\n   * behave stably is about -0.2 to 2.0.\n   */\n  public repulsiveStrength: number = 1.0;\n\n  /**\n   * Produces repulsion between powder particles\n   * Larger values repulse more\n   */\n  public powderStrength: number = 0.5;\n\n  /**\n   * Pushes particles out of solid particle group\n   * Larger values repulse more\n   */\n  public ejectionStrength: number = 0.5;\n\n  /**\n   * Produces static pressure\n   * Larger values increase the pressure on neighboring partilces\n   * For a description of static pressure, see\n   * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\n   */\n  public staticPressureStrength: number = 0.2;\n\n  /**\n   * Reduces instability in static pressure calculation\n   * Larger values make stabilize static pressure with fewer\n   * iterations\n   */\n  public staticPressureRelaxation: number = 0.2;\n\n  /**\n   * Computes static pressure more precisely\n   * See SetStaticPressureIterations for details\n   */\n  public staticPressureIterations: number = 8;\n\n  /**\n   * Determines how fast colors are mixed\n   * 1.0f ==> mixed immediately\n   * 0.5f ==> mixed half way each simulation step (see\n   * b2World::Step())\n   */\n  public colorMixingStrength: number = 0.5;\n\n  /**\n   * Whether to destroy particles by age when no more particles\n   * can be created.  See #b2ParticleSystem::SetDestructionByAge()\n   * for more information.\n   */\n  public destroyByAge: boolean = true;\n\n  /**\n   * Granularity of particle lifetimes in seconds.  By default\n   * this is set to (1.0f / 60.0f) seconds.  b2ParticleSystem uses\n   * a 32-bit signed value to track particle lifetimes so the\n   * maximum lifetime of a particle is (2^32 - 1) / (1.0f /\n   * lifetimeGranularity) seconds. With the value set to 1/60 the\n   * maximum lifetime or age of a particle is 2.27 years.\n   */\n  public lifetimeGranularity: number = 1.0 / 60.0;\n\n  public Copy(def: b2ParticleSystemDef): b2ParticleSystemDef {\n    this.strictContactCheck = def.strictContactCheck;\n    this.density = def.density;\n    this.gravityScale = def.gravityScale;\n    this.radius = def.radius;\n    this.maxCount = def.maxCount;\n    this.pressureStrength = def.pressureStrength;\n    this.dampingStrength = def.dampingStrength;\n    this.elasticStrength = def.elasticStrength;\n    this.springStrength = def.springStrength;\n    this.viscousStrength = def.viscousStrength;\n    this.surfaceTensionPressureStrength = def.surfaceTensionPressureStrength;\n    this.surfaceTensionNormalStrength = def.surfaceTensionNormalStrength;\n    this.repulsiveStrength = def.repulsiveStrength;\n    this.powderStrength = def.powderStrength;\n    this.ejectionStrength = def.ejectionStrength;\n    this.staticPressureStrength = def.staticPressureStrength;\n    this.staticPressureRelaxation = def.staticPressureRelaxation;\n    this.staticPressureIterations = def.staticPressureIterations;\n    this.colorMixingStrength = def.colorMixingStrength;\n    this.destroyByAge = def.destroyByAge;\n    this.lifetimeGranularity = def.lifetimeGranularity;\n    return this;\n  }\n\n  public Clone(): b2ParticleSystemDef {\n    return new b2ParticleSystemDef().Copy(this);\n  }\n}\n\nexport class b2ParticleSystem {\n  public m_paused: boolean = false;\n  public m_timestamp: number = 0;\n  public m_allParticleFlags: b2ParticleFlag = 0;\n  public m_needsUpdateAllParticleFlags: boolean = false;\n  public m_allGroupFlags: b2ParticleGroupFlag = 0;\n  public m_needsUpdateAllGroupFlags: boolean = false;\n  public m_hasForce: boolean = false;\n  public m_iterationIndex: number = 0;\n  public m_inverseDensity: number = 0.0;\n  public m_particleDiameter: number = 0.0;\n  public m_inverseDiameter: number = 0.0;\n  public m_squaredDiameter: number = 0.0;\n  public m_count: number = 0;\n  public m_internalAllocatedCapacity: number = 0;\n  /**\n   * Allocator for b2ParticleHandle instances.\n   */\n  ///m_handleAllocator: any = null;\n  /**\n   * Maps particle indicies to handles.\n   */\n  public m_handleIndexBuffer: b2ParticleSystem_UserOverridableBuffer<b2ParticleHandle | null> = new b2ParticleSystem_UserOverridableBuffer<b2ParticleHandle | null>();\n  public m_flagsBuffer: b2ParticleSystem_UserOverridableBuffer<b2ParticleFlag> = new b2ParticleSystem_UserOverridableBuffer<b2ParticleFlag>();\n  public m_positionBuffer: b2ParticleSystem_UserOverridableBuffer<b2Vec2> = new b2ParticleSystem_UserOverridableBuffer<b2Vec2>();\n  public m_velocityBuffer: b2ParticleSystem_UserOverridableBuffer<b2Vec2> = new b2ParticleSystem_UserOverridableBuffer<b2Vec2>();\n  public m_forceBuffer: b2Vec2[] = [];\n  /**\n   * this.m_weightBuffer is populated in ComputeWeight and used in\n   * ComputeDepth(), SolveStaticPressure() and SolvePressure().\n   */\n  public m_weightBuffer: number[] = [];\n  /**\n   * When any particles have the flag b2_staticPressureParticle,\n   * this.m_staticPressureBuffer is first allocated and used in\n   * SolveStaticPressure() and SolvePressure().  It will be\n   * reallocated on subsequent CreateParticle() calls.\n   */\n  public m_staticPressureBuffer: number[] = [];\n  /**\n   * this.m_accumulationBuffer is used in many functions as a temporary\n   * buffer for scalar values.\n   */\n  public m_accumulationBuffer: number[] = [];\n  /**\n   * When any particles have the flag b2_tensileParticle,\n   * this.m_accumulation2Buffer is first allocated and used in\n   * SolveTensile() as a temporary buffer for vector values.  It\n   * will be reallocated on subsequent CreateParticle() calls.\n   */\n  public m_accumulation2Buffer: b2Vec2[] = [];\n  /**\n   * When any particle groups have the flag b2_solidParticleGroup,\n   * this.m_depthBuffer is first allocated and populated in\n   * ComputeDepth() and used in SolveSolid(). It will be\n   * reallocated on subsequent CreateParticle() calls.\n   */\n  public m_depthBuffer: number[] = [];\n  public m_colorBuffer: b2ParticleSystem_UserOverridableBuffer<b2Color> = new b2ParticleSystem_UserOverridableBuffer<b2Color>();\n  public m_groupBuffer: Array<b2ParticleGroup | null> = [];\n  public m_userDataBuffer: b2ParticleSystem_UserOverridableBuffer<any> = new b2ParticleSystem_UserOverridableBuffer();\n  /**\n   * Stuck particle detection parameters and record keeping\n   */\n  public m_stuckThreshold: number = 0;\n  public m_lastBodyContactStepBuffer: b2ParticleSystem_UserOverridableBuffer<number> = new b2ParticleSystem_UserOverridableBuffer<number>();\n  public m_bodyContactCountBuffer: b2ParticleSystem_UserOverridableBuffer<number> = new b2ParticleSystem_UserOverridableBuffer<number>();\n  public m_consecutiveContactStepsBuffer: b2ParticleSystem_UserOverridableBuffer<number> = new b2ParticleSystem_UserOverridableBuffer<number>();\n  public m_stuckParticleBuffer: b2GrowableBuffer<number> = new b2GrowableBuffer<number>(() => 0);\n  public m_proxyBuffer: b2GrowableBuffer<b2ParticleSystem_Proxy> = new b2GrowableBuffer<b2ParticleSystem_Proxy>(() => new b2ParticleSystem_Proxy());\n  public m_contactBuffer: b2GrowableBuffer<b2ParticleContact> = new b2GrowableBuffer<b2ParticleContact>(() => new b2ParticleContact());\n  public m_bodyContactBuffer: b2GrowableBuffer<b2ParticleBodyContact> = new b2GrowableBuffer<b2ParticleBodyContact>(() => new b2ParticleBodyContact());\n  public m_pairBuffer: b2GrowableBuffer<b2ParticlePair> = new b2GrowableBuffer<b2ParticlePair>(() => new b2ParticlePair());\n  public m_triadBuffer: b2GrowableBuffer<b2ParticleTriad> = new b2GrowableBuffer<b2ParticleTriad>(() => new b2ParticleTriad());\n  /**\n   * Time each particle should be destroyed relative to the last\n   * time this.m_timeElapsed was initialized.  Each unit of time\n   * corresponds to b2ParticleSystemDef::lifetimeGranularity\n   * seconds.\n   */\n  public m_expirationTimeBuffer: b2ParticleSystem_UserOverridableBuffer<number> = new b2ParticleSystem_UserOverridableBuffer<number>();\n  /**\n   * List of particle indices sorted by expiration time.\n   */\n  public m_indexByExpirationTimeBuffer: b2ParticleSystem_UserOverridableBuffer<number> = new b2ParticleSystem_UserOverridableBuffer<number>();\n  /**\n   * Time elapsed in 32:32 fixed point.  Each non-fractional unit\n   * of time corresponds to\n   * b2ParticleSystemDef::lifetimeGranularity seconds.\n   */\n  public m_timeElapsed: number = 0;\n  /**\n   * Whether the expiration time buffer has been modified and\n   * needs to be resorted.\n   */\n  public m_expirationTimeBufferRequiresSorting: boolean = false;\n  public m_groupCount: number = 0;\n  public m_groupList: b2ParticleGroup | null = null;\n  public m_def: b2ParticleSystemDef = new b2ParticleSystemDef();\n  public m_world: b2World;\n  public m_prev: b2ParticleSystem | null = null;\n  public m_next: b2ParticleSystem | null = null;\n\n  public static readonly xTruncBits: number = 12;\n  public static readonly yTruncBits: number = 12;\n  public static readonly tagBits: number = 8 * 4; // 8u * sizeof(uint32);\n  public static readonly yOffset: number = 1 << (b2ParticleSystem.yTruncBits - 1);\n  public static readonly yShift: number = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits;\n  public static readonly xShift: number = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits - b2ParticleSystem.xTruncBits;\n  public static readonly xScale: number = 1 << b2ParticleSystem.xShift;\n  public static readonly xOffset: number = b2ParticleSystem.xScale * (1 << (b2ParticleSystem.xTruncBits - 1));\n  public static readonly yMask: number = ((1 << b2ParticleSystem.yTruncBits) - 1) << b2ParticleSystem.yShift;\n  public static readonly xMask: number = ~b2ParticleSystem.yMask;\n\n  public static computeTag(x: number, y: number): number {\n    ///return ((uint32)(y + yOffset) << yShift) + (uint32)(xScale * x + xOffset);\n    return ((((y + b2ParticleSystem.yOffset) >>> 0) << b2ParticleSystem.yShift) + ((b2ParticleSystem.xScale * x + b2ParticleSystem.xOffset) >>> 0)) >>> 0;\n  }\n\n  public static computeRelativeTag(tag: number, x: number, y: number): number {\n    ///return tag + (y << yShift) + (x << xShift);\n    return (tag + (y << b2ParticleSystem.yShift) + (x << b2ParticleSystem.xShift)) >>> 0;\n  }\n\n  constructor(def: b2ParticleSystemDef, world: b2World) {\n    this.SetStrictContactCheck(def.strictContactCheck);\n    this.SetDensity(def.density);\n    this.SetGravityScale(def.gravityScale);\n    this.SetRadius(def.radius);\n    this.SetMaxParticleCount(def.maxCount);\n    // DEBUG: b2Assert(def.lifetimeGranularity > 0.0);\n    this.m_def = def.Clone();\n    this.m_world = world;\n    this.SetDestructionByAge(this.m_def.destroyByAge);\n  }\n\n  public Drop(): void {\n    while (this.m_groupList) {\n      this.DestroyParticleGroup(this.m_groupList);\n    }\n\n    this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);\n    this.FreeUserOverridableBuffer(this.m_flagsBuffer);\n    this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);\n    this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);\n    this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);\n    this.FreeUserOverridableBuffer(this.m_positionBuffer);\n    this.FreeUserOverridableBuffer(this.m_velocityBuffer);\n    this.FreeUserOverridableBuffer(this.m_colorBuffer);\n    this.FreeUserOverridableBuffer(this.m_userDataBuffer);\n    this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);\n    this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);\n    this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);\n    this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);\n    this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);\n    this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);\n    this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);\n    this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);\n    this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);\n  }\n\n  /**\n   * Create a particle whose properties have been defined.\n   *\n   * No reference to the definition is retained.\n   *\n   * A simulation step must occur before it's possible to interact\n   * with a newly created particle.  For example,\n   * DestroyParticleInShape() will not destroy a particle until\n   * b2World::Step() has been called.\n   *\n   * warning: This function is locked during callbacks.\n   */\n  public CreateParticle(def: b2IParticleDef): number {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    if (this.m_count >= this.m_internalAllocatedCapacity) {\n      // Double the particle capacity.\n      const capacity = this.m_count ? 2 * this.m_count : b2_minParticleSystemBufferCapacity;\n      this.ReallocateInternalAllocatedBuffers(capacity);\n    }\n    if (this.m_count >= this.m_internalAllocatedCapacity) {\n      // If the oldest particle should be destroyed...\n      if (this.m_def.destroyByAge) {\n        this.DestroyOldestParticle(0, false);\n        // Need to destroy this particle *now* so that it's possible to\n        // create a new particle.\n        this.SolveZombie();\n      } else {\n        return b2_invalidParticleIndex;\n      }\n    }\n    const index = this.m_count++;\n    this.m_flagsBuffer.data[index] = 0;\n    if (this.m_lastBodyContactStepBuffer.data) {\n      this.m_lastBodyContactStepBuffer.data[index] = 0;\n    }\n    if (this.m_bodyContactCountBuffer.data) {\n      this.m_bodyContactCountBuffer.data[index] = 0;\n    }\n    if (this.m_consecutiveContactStepsBuffer.data) {\n      this.m_consecutiveContactStepsBuffer.data[index] = 0;\n    }\n    this.m_positionBuffer.data[index] = (this.m_positionBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.position, b2Vec2.ZERO));\n    this.m_velocityBuffer.data[index] = (this.m_velocityBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.velocity, b2Vec2.ZERO));\n    this.m_weightBuffer[index] = 0;\n    this.m_forceBuffer[index] = (this.m_forceBuffer[index] || new b2Vec2()).SetZero();\n    if (this.m_staticPressureBuffer) {\n      this.m_staticPressureBuffer[index] = 0;\n    }\n    if (this.m_depthBuffer) {\n      this.m_depthBuffer[index] = 0;\n    }\n    const color: b2Color = new b2Color().Copy(b2Maybe(def.color, b2Color.ZERO));\n    if (this.m_colorBuffer.data || !color.IsZero()) {\n      this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\n      this.m_colorBuffer.data[index] = (this.m_colorBuffer.data[index] || new b2Color()).Copy(color);\n    }\n    if (this.m_userDataBuffer.data || def.userData) {\n      this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\n      this.m_userDataBuffer.data[index] = def.userData;\n    }\n    if (this.m_handleIndexBuffer.data) {\n      this.m_handleIndexBuffer.data[index] = null;\n    }\n    ///Proxy& proxy = m_proxyBuffer.Append();\n    const proxy = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()];\n\n    // If particle lifetimes are enabled or the lifetime is set in the particle\n    // definition, initialize the lifetime.\n    const lifetime = b2Maybe(def.lifetime, 0.0);\n    const finiteLifetime = lifetime > 0.0;\n    if (this.m_expirationTimeBuffer.data || finiteLifetime) {\n      this.SetParticleLifetime(index, finiteLifetime ? lifetime :\n        this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));\n      // Add a reference to the newly added particle to the end of the\n      // queue.\n      this.m_indexByExpirationTimeBuffer.data[index] = index;\n    }\n\n    proxy.index = index;\n    const group = b2Maybe(def.group, null);\n    this.m_groupBuffer[index] = group;\n    if (group) {\n      if (group.m_firstIndex < group.m_lastIndex) {\n        // Move particles in the group just before the new particle.\n        this.RotateBuffer(group.m_firstIndex, group.m_lastIndex, index);\n        // DEBUG: b2Assert(group.m_lastIndex === index);\n        // Update the index range of the group to contain the new particle.\n        group.m_lastIndex = index + 1;\n      } else {\n        // If the group is empty, reset the index range to contain only the\n        // new particle.\n        group.m_firstIndex = index;\n        group.m_lastIndex = index + 1;\n      }\n    }\n    this.SetParticleFlags(index, b2Maybe(def.flags, 0));\n    return index;\n  }\n\n  /**\n   * Retrieve a handle to the particle at the specified index.\n   *\n   * Please see #b2ParticleHandle for why you might want a handle.\n   */\n  public GetParticleHandleFromIndex(index: number): b2ParticleHandle {\n    // DEBUG: b2Assert(index >= 0 && index < this.GetParticleCount() && index !== b2_invalidParticleIndex);\n    this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);\n    let handle = this.m_handleIndexBuffer.data[index];\n    if (handle) {\n      return handle;\n    }\n    // Create a handle.\n    ///handle = m_handleAllocator.Allocate();\n    handle = new b2ParticleHandle();\n    // DEBUG: b2Assert(handle !== null);\n    handle.SetIndex(index);\n    this.m_handleIndexBuffer.data[index] = handle;\n    return handle;\n  }\n\n  /**\n   * Destroy a particle.\n   *\n   * The particle is removed after the next simulation step (see\n   * b2World::Step()).\n   *\n   * @param index Index of the particle to destroy.\n   * @param callDestructionListener Whether to call the\n   *      destruction listener just before the particle is\n   *      destroyed.\n   */\n  public DestroyParticle(index: number, callDestructionListener: boolean = false): void {\n    let flags = b2ParticleFlag.b2_zombieParticle;\n    if (callDestructionListener) {\n      flags |= b2ParticleFlag.b2_destructionListenerParticle;\n    }\n    this.SetParticleFlags(index, this.m_flagsBuffer.data[index] | flags);\n  }\n\n  /**\n   * Destroy the Nth oldest particle in the system.\n   *\n   * The particle is removed after the next b2World::Step().\n   *\n   * @param index Index of the Nth oldest particle to\n   *      destroy, 0 will destroy the oldest particle in the\n   *      system, 1 will destroy the next oldest particle etc.\n   * @param callDestructionListener Whether to call the\n   *      destruction listener just before the particle is\n   *      destroyed.\n   */\n  public DestroyOldestParticle(index: number, callDestructionListener: boolean = false): void {\n    const particleCount = this.GetParticleCount();\n    // DEBUG: b2Assert(index >= 0 && index < particleCount);\n    // Make sure particle lifetime tracking is enabled.\n    // DEBUG: b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\n    // Destroy the oldest particle (preferring to destroy finite\n    // lifetime particles first) to free a slot in the buffer.\n    const oldestFiniteLifetimeParticle =\n      this.m_indexByExpirationTimeBuffer.data[particleCount - (index + 1)];\n    const oldestInfiniteLifetimeParticle =\n      this.m_indexByExpirationTimeBuffer.data[index];\n    this.DestroyParticle(\n      this.m_expirationTimeBuffer.data[oldestFiniteLifetimeParticle] > 0.0 ?\n      oldestFiniteLifetimeParticle : oldestInfiniteLifetimeParticle,\n      callDestructionListener);\n  }\n\n  /**\n   * Destroy particles inside a shape.\n   *\n   * warning: This function is locked during callbacks.\n   *\n   * In addition, this function immediately destroys particles in\n   * the shape in constrast to DestroyParticle() which defers the\n   * destruction until the next simulation step.\n   *\n   * @return Number of particles destroyed.\n   * @param shape Shape which encloses particles\n   *      that should be destroyed.\n   * @param xf Transform applied to the shape.\n   * @param callDestructionListener Whether to call the\n   *      world b2DestructionListener for each particle\n   *      destroyed.\n   */\n  public DestroyParticlesInShape(shape: b2Shape, xf: b2Transform, callDestructionListener: boolean = false): number {\n    const s_aabb = b2ParticleSystem.DestroyParticlesInShape_s_aabb;\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    const callback = new b2ParticleSystem_DestroyParticlesInShapeCallback(this, shape, xf, callDestructionListener);\n\n    const aabb = s_aabb;\n    shape.ComputeAABB(aabb, xf, 0);\n    this.m_world.QueryAABB(callback, aabb);\n    return callback.Destroyed();\n  }\n  public static readonly DestroyParticlesInShape_s_aabb = new b2AABB();\n\n  /**\n   * Create a particle group whose properties have been defined.\n   *\n   * No reference to the definition is retained.\n   *\n   * warning: This function is locked during callbacks.\n   */\n  public CreateParticleGroup(groupDef: b2IParticleGroupDef): b2ParticleGroup {\n    const s_transform = b2ParticleSystem.CreateParticleGroup_s_transform;\n\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    const transform = s_transform;\n    transform.SetPositionAngle(b2Maybe(groupDef.position, b2Vec2.ZERO), b2Maybe(groupDef.angle, 0));\n    const firstIndex = this.m_count;\n    if (groupDef.shape) {\n      this.CreateParticlesWithShapeForGroup(groupDef.shape, groupDef, transform);\n    }\n    if (groupDef.shapes) {\n      this.CreateParticlesWithShapesForGroup(groupDef.shapes, b2Maybe(groupDef.shapeCount, groupDef.shapes.length), groupDef, transform);\n    }\n    if (groupDef.positionData) {\n      const count = b2Maybe(groupDef.particleCount, groupDef.positionData.length);\n      for (let i = 0; i < count; i++) {\n        const p = groupDef.positionData[i];\n        this.CreateParticleForGroup(groupDef, transform, p);\n      }\n    }\n    const lastIndex = this.m_count;\n\n    let group = new b2ParticleGroup(this);\n    group.m_firstIndex = firstIndex;\n    group.m_lastIndex = lastIndex;\n    group.m_strength = b2Maybe(groupDef.strength, 1);\n    group.m_userData = groupDef.userData;\n    group.m_transform.Copy(transform);\n    group.m_prev = null;\n    group.m_next = this.m_groupList;\n    if (this.m_groupList) {\n      this.m_groupList.m_prev = group;\n    }\n    this.m_groupList = group;\n    ++this.m_groupCount;\n    for (let i = firstIndex; i < lastIndex; i++) {\n      this.m_groupBuffer[i] = group;\n    }\n    this.SetGroupFlags(group, b2Maybe(groupDef.groupFlags, 0));\n\n    // Create pairs and triads between particles in the group.\n    const filter = new b2ParticleSystem_ConnectionFilter();\n    this.UpdateContacts(true);\n    this.UpdatePairsAndTriads(firstIndex, lastIndex, filter);\n\n    if (groupDef.group) {\n      this.JoinParticleGroups(groupDef.group, group);\n      group = groupDef.group;\n    }\n\n    return group;\n  }\n  public static readonly CreateParticleGroup_s_transform = new b2Transform();\n\n  /**\n   * Join two particle groups.\n   *\n   * warning: This function is locked during callbacks.\n   *\n   * @param groupA the first group. Expands to encompass the second group.\n   * @param groupB the second group. It is destroyed.\n   */\n  public JoinParticleGroups(groupA: b2ParticleGroup, groupB: b2ParticleGroup): void {\n    if (this.m_world.IsLocked()) { throw new Error(); }\n\n    // DEBUG: b2Assert(groupA !== groupB);\n    this.RotateBuffer(groupB.m_firstIndex, groupB.m_lastIndex, this.m_count);\n    // DEBUG: b2Assert(groupB.m_lastIndex === this.m_count);\n    this.RotateBuffer(groupA.m_firstIndex, groupA.m_lastIndex, groupB.m_firstIndex);\n    // DEBUG: b2Assert(groupA.m_lastIndex === groupB.m_firstIndex);\n\n    // Create pairs and triads connecting groupA and groupB.\n    const filter = new b2ParticleSystem_JoinParticleGroupsFilter(groupB.m_firstIndex);\n    this.UpdateContacts(true);\n    this.UpdatePairsAndTriads(groupA.m_firstIndex, groupB.m_lastIndex, filter);\n\n    for (let i = groupB.m_firstIndex; i < groupB.m_lastIndex; i++) {\n      this.m_groupBuffer[i] = groupA;\n    }\n    const groupFlags = groupA.m_groupFlags | groupB.m_groupFlags;\n    this.SetGroupFlags(groupA, groupFlags);\n    groupA.m_lastIndex = groupB.m_lastIndex;\n    groupB.m_firstIndex = groupB.m_lastIndex;\n    this.DestroyParticleGroup(groupB);\n  }\n\n  /**\n   * Split particle group into multiple disconnected groups.\n   *\n   * warning: This function is locked during callbacks.\n   *\n   * @param group the group to be split.\n   */\n  public SplitParticleGroup(group: b2ParticleGroup): void {\n    this.UpdateContacts(true);\n    const particleCount = group.GetParticleCount();\n    // We create several linked lists. Each list represents a set of connected particles.\n    const nodeBuffer: b2ParticleSystem_ParticleListNode[] = b2MakeArray(particleCount, (index: number) => new b2ParticleSystem_ParticleListNode());\n    b2ParticleSystem.InitializeParticleLists(group, nodeBuffer);\n    this.MergeParticleListsInContact(group, nodeBuffer);\n    const survivingList = b2ParticleSystem.FindLongestParticleList(group, nodeBuffer);\n    this.MergeZombieParticleListNodes(group, nodeBuffer, survivingList);\n    this.CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList);\n    this.UpdatePairsAndTriadsWithParticleList(group, nodeBuffer);\n  }\n\n  /**\n   * Get the world particle group list. With the returned group,\n   * use b2ParticleGroup::GetNext to get the next group in the\n   * world list.\n   *\n   * A null group indicates the end of the list.\n   *\n   * @return the head of the world particle group list.\n   */\n  public GetParticleGroupList(): b2ParticleGroup | null {\n    return this.m_groupList;\n  }\n\n  /**\n   * Get the number of particle groups.\n   */\n  public GetParticleGroupCount(): number {\n    return this.m_groupCount;\n  }\n\n  /**\n   * Get the number of particles.\n   */\n  public GetParticleCount(): number {\n    return this.m_count;\n  }\n\n  /**\n   * Get the maximum number of particles.\n   */\n  public GetMaxParticleCount(): number {\n    return this.m_def.maxCount;\n  }\n\n  /**\n   * Set the maximum number of particles.\n   *\n   * A value of 0 means there is no maximum. The particle buffers\n   * can continue to grow while b2World's block allocator still\n   * has memory.\n   *\n   * Note: If you try to CreateParticle() with more than this\n   * count, b2_invalidParticleIndex is returned unless\n   * SetDestructionByAge() is used to enable the destruction of\n   * the oldest particles in the system.\n   */\n  public SetMaxParticleCount(count: number): void {\n    // DEBUG: b2Assert(this.m_count <= count);\n    this.m_def.maxCount = count;\n  }\n\n  /**\n   * Get all existing particle flags.\n   */\n  public GetAllParticleFlags(): b2ParticleFlag {\n    return this.m_allParticleFlags;\n  }\n\n  /**\n   * Get all existing particle group flags.\n   */\n  public GetAllGroupFlags(): b2ParticleGroupFlag {\n    return this.m_allGroupFlags;\n  }\n\n  /**\n   * Pause or unpause the particle system. When paused,\n   * b2World::Step() skips over this particle system. All\n   * b2ParticleSystem function calls still work.\n   *\n   * @param paused paused is true to pause, false to un-pause.\n   */\n  public SetPaused(paused: boolean): void {\n    this.m_paused = paused;\n  }\n\n  /**\n   * Initially, true, then, the last value passed into\n   * SetPaused().\n   *\n   * @return true if the particle system is being updated in b2World::Step().\n   */\n  public GetPaused(): boolean {\n    return this.m_paused;\n  }\n\n  /**\n   * Change the particle density.\n   *\n   * Particle density affects the mass of the particles, which in\n   * turn affects how the particles interact with b2Bodies. Note\n   * that the density does not affect how the particles interact\n   * with each other.\n   */\n  public SetDensity(density: number): void {\n    this.m_def.density = density;\n    this.m_inverseDensity = 1 / this.m_def.density;\n  }\n\n  /**\n   * Get the particle density.\n   */\n  public GetDensity(): number {\n    return this.m_def.density;\n  }\n\n  /**\n   * Change the particle gravity scale. Adjusts the effect of the\n   * global gravity vector on particles.\n   */\n  public SetGravityScale(gravityScale: number): void {\n    this.m_def.gravityScale = gravityScale;\n  }\n\n  /**\n   * Get the particle gravity scale.\n   */\n  public GetGravityScale(): number {\n    return this.m_def.gravityScale;\n  }\n\n  /**\n   * Damping is used to reduce the velocity of particles. The\n   * damping parameter can be larger than 1.0f but the damping\n   * effect becomes sensitive to the time step when the damping\n   * parameter is large.\n   */\n  public SetDamping(damping: number): void {\n    this.m_def.dampingStrength = damping;\n  }\n\n  /**\n   * Get damping for particles\n   */\n  public GetDamping(): number {\n    return this.m_def.dampingStrength;\n  }\n\n  /**\n   * Change the number of iterations when calculating the static\n   * pressure of particles. By default, 8 iterations. You can\n   * reduce the number of iterations down to 1 in some situations,\n   * but this may cause instabilities when many particles come\n   * together. If you see particles popping away from each other\n   * like popcorn, you may have to increase the number of\n   * iterations.\n   *\n   * For a description of static pressure, see\n   * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\n   */\n  public SetStaticPressureIterations(iterations: number): void {\n    this.m_def.staticPressureIterations = iterations;\n  }\n\n  /**\n   * Get the number of iterations for static pressure of\n   * particles.\n   */\n  public GetStaticPressureIterations(): number {\n    return this.m_def.staticPressureIterations;\n  }\n\n  /**\n   * Change the particle radius.\n   *\n   * You should set this only once, on world start.\n   * If you change the radius during execution, existing particles\n   * may explode, shrink, or behave unexpectedly.\n   */\n  public SetRadius(radius: number): void {\n    this.m_particleDiameter = 2 * radius;\n    this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;\n    this.m_inverseDiameter = 1 / this.m_particleDiameter;\n  }\n\n  /**\n   * Get the particle radius.\n   */\n  public GetRadius(): number {\n    return this.m_particleDiameter / 2;\n  }\n\n  /**\n   * Get the position of each particle\n   *\n   * Array is length GetParticleCount()\n   *\n   * @return the pointer to the head of the particle positions array.\n   */\n  public GetPositionBuffer(): b2Vec2[] {\n    return this.m_positionBuffer.data;\n  }\n\n  /**\n   * Get the velocity of each particle\n   *\n   * Array is length GetParticleCount()\n   *\n   * @return the pointer to the head of the particle velocities array.\n   */\n  public GetVelocityBuffer(): b2Vec2[] {\n    return this.m_velocityBuffer.data;\n  }\n\n  /**\n   * Get the color of each particle\n   *\n   * Array is length GetParticleCount()\n   *\n   * @return the pointer to the head of the particle colors array.\n   */\n  public GetColorBuffer(): b2Color[] {\n    this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\n    return this.m_colorBuffer.data;\n  }\n\n  /**\n   * Get the particle-group of each particle.\n   *\n   * Array is length GetParticleCount()\n   *\n   * @return the pointer to the head of the particle group array.\n   */\n  public GetGroupBuffer(): Array<b2ParticleGroup | null> {\n    return this.m_groupBuffer;\n  }\n\n  /**\n   * Get the weight of each particle\n   *\n   * Array is length GetParticleCount()\n   *\n   * @return the pointer to the head of the particle positions array.\n   */\n  public GetWeightBuffer(): number[] {\n    return this.m_weightBuffer;\n  }\n\n  /**\n   * Get the user-specified data of each particle.\n   *\n   * Array is length GetParticleCount()\n   *\n   * @return the pointer to the head of the particle user-data array.\n   */\n  public GetUserDataBuffer<T>(): T[] {\n    this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\n    return this.m_userDataBuffer.data;\n  }\n\n  /**\n   * Get the flags for each particle. See the b2ParticleFlag enum.\n   *\n   * Array is length GetParticleCount()\n   *\n   * @return the pointer to the head of the particle-flags array.\n   */\n  public GetFlagsBuffer(): b2ParticleFlag[] {\n    return this.m_flagsBuffer.data;\n  }\n\n  /**\n   * Set flags for a particle. See the b2ParticleFlag enum.\n   */\n  public SetParticleFlags(index: number, newFlags: b2ParticleFlag): void {\n    const oldFlags = this.m_flagsBuffer.data[index];\n    if (oldFlags & ~newFlags) {\n      // If any flags might be removed\n      this.m_needsUpdateAllParticleFlags = true;\n    }\n    if (~this.m_allParticleFlags & newFlags) {\n      // If any flags were added\n      if (newFlags & b2ParticleFlag.b2_tensileParticle) {\n        this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer);\n      }\n      if (newFlags & b2ParticleFlag.b2_colorMixingParticle) {\n        this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\n      }\n      this.m_allParticleFlags |= newFlags;\n    }\n    this.m_flagsBuffer.data[index] = newFlags;\n  }\n\n  /**\n   * Get flags for a particle. See the b2ParticleFlag enum.\n   */\n  public GetParticleFlags(index: number): b2ParticleFlag {\n    return this.m_flagsBuffer.data[index];\n  }\n\n  /**\n   * Set an external buffer for particle data.\n   *\n   * Normally, the b2World's block allocator is used for particle\n   * data. However, sometimes you may have an OpenGL or Java\n   * buffer for particle data. To avoid data duplication, you may\n   * supply this external buffer.\n   *\n   * Note that, when b2World's block allocator is used, the\n   * particle data buffers can grow as required. However, when\n   * external buffers are used, the maximum number of particles is\n   * clamped to the size of the smallest external buffer.\n   *\n   * @param buffer a pointer to a block of memory.\n   * @param capacity the number of values in the block.\n   */\n  public SetFlagsBuffer(buffer: b2ParticleFlag[]): void {\n    this.SetUserOverridableBuffer(this.m_flagsBuffer, buffer);\n  }\n\n  public SetPositionBuffer(buffer: b2Vec2[] | Float32Array): void {\n    if (buffer instanceof Float32Array) {\n      if (buffer.length % 2 !== 0) { throw new Error(); }\n      const count: number = buffer.length / 2;\n      const array: b2TypedVec2[] = new Array(count);\n      for (let i = 0; i < count; ++i) {\n        array[i] = new b2TypedVec2(buffer.subarray(i * 2, i * 2 + 2));\n      }\n      buffer = array;\n    }\n    this.SetUserOverridableBuffer(this.m_positionBuffer, buffer);\n  }\n\n  public SetVelocityBuffer(buffer: b2TypedVec2[] | Float32Array): void {\n    if (buffer instanceof Float32Array) {\n      if (buffer.length % 2 !== 0) { throw new Error(); }\n      const count: number = buffer.length / 2;\n      const array: b2TypedVec2[] = new Array(count);\n      for (let i = 0; i < count; ++i) {\n        array[i] = new b2TypedVec2(buffer.subarray(i * 2, i * 2 + 2));\n      }\n      buffer = array;\n    }\n    this.SetUserOverridableBuffer(this.m_velocityBuffer, buffer);\n  }\n\n  public SetColorBuffer(buffer: b2Color[] | Float32Array): void {\n    if (buffer instanceof Float32Array) {\n      if (buffer.length % 4 !== 0) { throw new Error(); }\n      const count: number = buffer.length / 4;\n      const array: b2Color[] = new Array(count);\n      for (let i = 0; i < count; ++i) {\n        array[i] = new b2TypedColor(buffer.subarray(i * 4, i * 4 + 4));\n      }\n      buffer = array;\n    }\n    this.SetUserOverridableBuffer(this.m_colorBuffer, buffer);\n  }\n\n  public SetUserDataBuffer<T>(buffer: T[]): void {\n    this.SetUserOverridableBuffer(this.m_userDataBuffer, buffer);\n  }\n\n  /**\n   * Get contacts between particles\n   * Contact data can be used for many reasons, for example to\n   * trigger rendering or audio effects.\n   */\n  public GetContacts(): b2ParticleContact[] {\n    return this.m_contactBuffer.data;\n  }\n\n  public GetContactCount(): number {\n    return this.m_contactBuffer.count;\n  }\n\n  /**\n   * Get contacts between particles and bodies\n   *\n   * Contact data can be used for many reasons, for example to\n   * trigger rendering or audio effects.\n   */\n  public GetBodyContacts(): b2ParticleBodyContact[] {\n    return this.m_bodyContactBuffer.data;\n  }\n\n  public GetBodyContactCount(): number {\n    return this.m_bodyContactBuffer.count;\n  }\n\n  /**\n   * Get array of particle pairs. The particles in a pair:\n   *   (1) are contacting,\n   *   (2) are in the same particle group,\n   *   (3) are part of a rigid particle group, or are spring, elastic,\n   *       or wall particles.\n   *   (4) have at least one particle that is a spring or barrier\n   *       particle (i.e. one of the types in k_pairFlags),\n   *   (5) have at least one particle that returns true for\n   *       ConnectionFilter::IsNecessary,\n   *   (6) are not zombie particles.\n   *\n   * Essentially, this is an array of spring or barrier particles\n   * that are interacting. The array is sorted by b2ParticlePair's\n   * indexA, and then indexB. There are no duplicate entries.\n   */\n  public GetPairs(): b2ParticlePair[] {\n    return this.m_pairBuffer.data;\n  }\n\n  public GetPairCount(): number {\n    return this.m_pairBuffer.count;\n  }\n\n  /**\n   * Get array of particle triads. The particles in a triad:\n   *   (1) are in the same particle group,\n   *   (2) are in a Voronoi triangle together,\n   *   (3) are within b2_maxTriadDistance particle diameters of each\n   *       other,\n   *   (4) return true for ConnectionFilter::ShouldCreateTriad\n   *   (5) have at least one particle of type elastic (i.e. one of the\n   *       types in k_triadFlags),\n   *   (6) are part of a rigid particle group, or are spring, elastic,\n   *       or wall particles.\n   *   (7) are not zombie particles.\n   *\n   * Essentially, this is an array of elastic particles that are\n   * interacting. The array is sorted by b2ParticleTriad's indexA,\n   * then indexB, then indexC. There are no duplicate entries.\n   */\n  public GetTriads(): b2ParticleTriad[] {\n    return this.m_triadBuffer.data;\n  }\n\n  public GetTriadCount(): number {\n    return this.m_triadBuffer.count;\n  }\n\n  /**\n   * Set an optional threshold for the maximum number of\n   * consecutive particle iterations that a particle may contact\n   * multiple bodies before it is considered a candidate for being\n   * \"stuck\". Setting to zero or less disables.\n   */\n  public SetStuckThreshold(steps: number): void {\n    this.m_stuckThreshold = steps;\n\n    if (steps > 0) {\n      this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);\n      this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);\n      this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);\n    }\n  }\n\n  /**\n   * Get potentially stuck particles from the last step; the user\n   * must decide if they are stuck or not, and if so, delete or\n   * move them\n   */\n  public GetStuckCandidates(): number[] {\n    ///return m_stuckParticleBuffer.Data();\n    return this.m_stuckParticleBuffer.Data();\n  }\n\n  /**\n   * Get the number of stuck particle candidates from the last\n   * step.\n   */\n  public GetStuckCandidateCount(): number {\n    ///return m_stuckParticleBuffer.GetCount();\n    return this.m_stuckParticleBuffer.GetCount();\n  }\n\n  /**\n   * Compute the kinetic energy that can be lost by damping force\n   */\n  public ComputeCollisionEnergy(): number {\n    const s_v = b2ParticleSystem.ComputeCollisionEnergy_s_v;\n    const vel_data = this.m_velocityBuffer.data;\n    let sum_v2 = 0;\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      const n = contact.normal;\n      ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\n      const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\n      const vn = b2Vec2.DotVV(v, n);\n      if (vn < 0) {\n        sum_v2 += vn * vn;\n      }\n    }\n    return 0.5 * this.GetParticleMass() * sum_v2;\n  }\n  public static readonly ComputeCollisionEnergy_s_v = new b2Vec2();\n\n  /**\n   * Set strict Particle/Body contact check.\n   *\n   * This is an option that will help ensure correct behavior if\n   * there are corners in the world model where Particle/Body\n   * contact is ambiguous. This option scales at n*log(n) of the\n   * number of Particle/Body contacts, so it is best to only\n   * enable if it is necessary for your geometry. Enable if you\n   * see strange particle behavior around b2Body intersections.\n   */\n  public SetStrictContactCheck(enabled: boolean): void {\n    this.m_def.strictContactCheck = enabled;\n  }\n\n  /**\n   * Get the status of the strict contact check.\n   */\n  public GetStrictContactCheck(): boolean {\n    return this.m_def.strictContactCheck;\n  }\n\n  /**\n   * Set the lifetime (in seconds) of a particle relative to the\n   * current time.  A lifetime of less than or equal to 0.0f\n   * results in the particle living forever until it's manually\n   * destroyed by the application.\n   */\n  public SetParticleLifetime(index: number, lifetime: number): void {\n    // DEBUG: b2Assert(this.ValidateParticleIndex(index));\n    const initializeExpirationTimes = this.m_indexByExpirationTimeBuffer.data === null;\n    this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\n    this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\n\n    // Initialize the inverse mapping buffer.\n    if (initializeExpirationTimes) {\n      const particleCount = this.GetParticleCount();\n      for (let i = 0; i < particleCount; ++i) {\n        this.m_indexByExpirationTimeBuffer.data[i] = i;\n      }\n    }\n    ///const int32 quantizedLifetime = (int32)(lifetime / m_def.lifetimeGranularity);\n    const quantizedLifetime = lifetime / this.m_def.lifetimeGranularity;\n    // Use a negative lifetime so that it's possible to track which\n    // of the infinite lifetime particles are older.\n    const newExpirationTime = quantizedLifetime > 0.0 ? this.GetQuantizedTimeElapsed() + quantizedLifetime : quantizedLifetime;\n    if (newExpirationTime !== this.m_expirationTimeBuffer.data[index]) {\n      this.m_expirationTimeBuffer.data[index] = newExpirationTime;\n      this.m_expirationTimeBufferRequiresSorting = true;\n    }\n  }\n\n  /**\n   * Get the lifetime (in seconds) of a particle relative to the\n   * current time.  A value > 0.0f is returned if the particle is\n   * scheduled to be destroyed in the future, values <= 0.0f\n   * indicate the particle has an infinite lifetime.\n   */\n  public GetParticleLifetime(index: number): number {\n    // DEBUG: b2Assert(this.ValidateParticleIndex(index));\n    return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[index]);\n  }\n\n  /**\n   * Enable / disable destruction of particles in CreateParticle()\n   * when no more particles can be created due to a prior call to\n   * SetMaxParticleCount().  When this is enabled, the oldest\n   * particle is destroyed in CreateParticle() favoring the\n   * destruction of particles with a finite lifetime over\n   * particles with infinite lifetimes. This feature is enabled by\n   * default when particle lifetimes are tracked.  Explicitly\n   * enabling this feature using this function enables particle\n   * lifetime tracking.\n   */\n  public SetDestructionByAge(enable: boolean): void {\n    if (enable) {\n      this.GetExpirationTimeBuffer();\n    }\n    this.m_def.destroyByAge = enable;\n  }\n\n  /**\n   * Get whether the oldest particle will be destroyed in\n   * CreateParticle() when the maximum number of particles are\n   * present in the system.\n   */\n  public GetDestructionByAge(): boolean {\n    return this.m_def.destroyByAge;\n  }\n\n  /**\n   * Get the array of particle expiration times indexed by\n   * particle index.\n   *\n   * GetParticleCount() items are in the returned array.\n   */\n  public GetExpirationTimeBuffer(): number[] {\n    this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\n    return this.m_expirationTimeBuffer.data;\n  }\n\n  /**\n   * Convert a expiration time value in returned by\n   * GetExpirationTimeBuffer() to a time in seconds relative to\n   * the current simulation time.\n   */\n  public ExpirationTimeToLifetime(expirationTime: number): number {\n    return (expirationTime > 0 ?\n      expirationTime - this.GetQuantizedTimeElapsed() :\n      expirationTime) * this.m_def.lifetimeGranularity;\n  }\n\n  /**\n   * Get the array of particle indices ordered by reverse\n   * lifetime. The oldest particle indexes are at the end of the\n   * array with the newest at the start.  Particles with infinite\n   * lifetimes (i.e expiration times less than or equal to 0) are\n   * placed at the start of the array.\n   * ExpirationTimeToLifetime(GetExpirationTimeBuffer()[index]) is\n   * equivalent to GetParticleLifetime(index).\n   *\n   * GetParticleCount() items are in the returned array.\n   */\n  public GetIndexByExpirationTimeBuffer(): number[] {\n    // If particles are present, initialize / reinitialize the lifetime buffer.\n    if (this.GetParticleCount()) {\n      this.SetParticleLifetime(0, this.GetParticleLifetime(0));\n    } else {\n      this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\n    }\n    return this.m_indexByExpirationTimeBuffer.data;\n  }\n\n  /**\n   * Apply an impulse to one particle. This immediately modifies\n   * the velocity. Similar to b2Body::ApplyLinearImpulse.\n   *\n   * @param index the particle that will be modified.\n   * @param impulse impulse the world impulse vector, usually in N-seconds or kg-m/s.\n   */\n  public ParticleApplyLinearImpulse(index: number, impulse: XY): void {\n    this.ApplyLinearImpulse(index, index + 1, impulse);\n  }\n\n  /**\n   * Apply an impulse to all particles between 'firstIndex' and\n   * 'lastIndex'. This immediately modifies the velocity. Note\n   * that the impulse is applied to the total mass of all\n   * particles. So, calling ParticleApplyLinearImpulse(0, impulse)\n   * and ParticleApplyLinearImpulse(1, impulse) will impart twice\n   * as much velocity as calling just ApplyLinearImpulse(0, 1,\n   * impulse).\n   *\n   * @param firstIndex the first particle to be modified.\n   * @param lastIndex the last particle to be modified.\n   * @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\n   */\n  public ApplyLinearImpulse(firstIndex: number, lastIndex: number, impulse: XY): void {\n    const vel_data = this.m_velocityBuffer.data;\n    const numParticles = (lastIndex - firstIndex);\n    const totalMass = numParticles * this.GetParticleMass();\n    ///const b2Vec2 velocityDelta = impulse / totalMass;\n    const velocityDelta = new b2Vec2().Copy(impulse).SelfMul(1 / totalMass);\n    for (let i = firstIndex; i < lastIndex; i++) {\n      ///m_velocityBuffer.data[i] += velocityDelta;\n      vel_data[i].SelfAdd(velocityDelta);\n    }\n  }\n\n  public static IsSignificantForce(force: XY): boolean {\n    return force.x !== 0 || force.y !== 0;\n  }\n\n  /**\n   * Apply a force to the center of a particle.\n   *\n   * @param index the particle that will be modified.\n   * @param force the world force vector, usually in Newtons (N).\n   */\n  public ParticleApplyForce(index: number, force: XY): void {\n    if (b2ParticleSystem.IsSignificantForce(force) &&\n      this.ForceCanBeApplied(this.m_flagsBuffer.data[index])) {\n      this.PrepareForceBuffer();\n      ///m_forceBuffer[index] += force;\n      this.m_forceBuffer[index].SelfAdd(force);\n    }\n  }\n\n  /**\n   * Distribute a force across several particles. The particles\n   * must not be wall particles. Note that the force is\n   * distributed across all the particles, so calling this\n   * function for indices 0..N is not the same as calling\n   * ParticleApplyForce(i, force) for i in 0..N.\n   *\n   * @param firstIndex the first particle to be modified.\n   * @param lastIndex the last particle to be modified.\n   * @param force the world force vector, usually in Newtons (N).\n   */\n  public ApplyForce(firstIndex: number, lastIndex: number, force: XY): void {\n    // Ensure we're not trying to apply force to particles that can't move,\n    // such as wall particles.\n    // DEBUG: let flags = 0;\n    // DEBUG: for (let i = firstIndex; i < lastIndex; i++) {\n    // DEBUG:   flags |= this.m_flagsBuffer.data[i];\n    // DEBUG: }\n    // DEBUG: b2Assert(this.ForceCanBeApplied(flags));\n\n    // Early out if force does nothing (optimization).\n    ///const b2Vec2 distributedForce = force / (float32)(lastIndex - firstIndex);\n    const distributedForce =  new b2Vec2().Copy(force).SelfMul(1 / (lastIndex - firstIndex));\n    if (b2ParticleSystem.IsSignificantForce(distributedForce)) {\n      this.PrepareForceBuffer();\n\n      // Distribute the force over all the particles.\n      for (let i = firstIndex; i < lastIndex; i++) {\n        ///m_forceBuffer[i] += distributedForce;\n        this.m_forceBuffer[i].SelfAdd(distributedForce);\n      }\n    }\n  }\n\n  /**\n   * Get the next particle-system in the world's particle-system\n   * list.\n   */\n  public GetNext(): b2ParticleSystem | null {\n    return this.m_next;\n  }\n\n  /**\n   * Query the particle system for all particles that potentially\n   * overlap the provided AABB.\n   * b2QueryCallback::ShouldQueryParticleSystem is ignored.\n   *\n   * @param callback a user implemented callback class.\n   * @param aabb the query box.\n   */\n  public QueryAABB(callback: b2QueryCallback, aabb: b2AABB): void {\n    if (this.m_proxyBuffer.count === 0) {\n      return;\n    }\n    const beginProxy = 0;\n    const endProxy = this.m_proxyBuffer.count;\n    const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy,\n      b2ParticleSystem.computeTag(\n        this.m_inverseDiameter * aabb.lowerBound.x,\n        this.m_inverseDiameter * aabb.lowerBound.y),\n      b2ParticleSystem_Proxy.CompareProxyTag);\n    const lastProxy = std_upper_bound(this.m_proxyBuffer.data, firstProxy, endProxy,\n      b2ParticleSystem.computeTag(\n        this.m_inverseDiameter * aabb.upperBound.x,\n        this.m_inverseDiameter * aabb.upperBound.y),\n      b2ParticleSystem_Proxy.CompareTagProxy);\n    const pos_data = this.m_positionBuffer.data;\n    for (let k = firstProxy; k < lastProxy; ++k) {\n      const proxy = this.m_proxyBuffer.data[k];\n      const i = proxy.index;\n      const p = pos_data[i];\n      if (aabb.lowerBound.x < p.x && p.x < aabb.upperBound.x &&\n        aabb.lowerBound.y < p.y && p.y < aabb.upperBound.y) {\n        if (!callback.ReportParticle(this, i)) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Query the particle system for all particles that potentially\n   * overlap the provided shape's AABB. Calls QueryAABB\n   * internally. b2QueryCallback::ShouldQueryParticleSystem is\n   * ignored.\n   *\n   * @param callback a user implemented callback class.\n   * @param shape the query shape\n   * @param xf the transform of the AABB\n   * @param childIndex\n   */\n  public QueryShapeAABB(callback: b2QueryCallback, shape: b2Shape, xf: b2Transform, childIndex: number = 0): void {\n    const s_aabb = b2ParticleSystem.QueryShapeAABB_s_aabb;\n    const aabb = s_aabb;\n    shape.ComputeAABB(aabb, xf, childIndex);\n    this.QueryAABB(callback, aabb);\n  }\n  public static readonly QueryShapeAABB_s_aabb = new b2AABB();\n\n  public QueryPointAABB(callback: b2QueryCallback, point: XY, slop: number = b2_linearSlop): void {\n    const s_aabb = b2ParticleSystem.QueryPointAABB_s_aabb;\n    const aabb = s_aabb;\n    aabb.lowerBound.Set(point.x - slop, point.y - slop);\n    aabb.upperBound.Set(point.x + slop, point.y + slop);\n    this.QueryAABB(callback, aabb);\n  }\n  public static readonly QueryPointAABB_s_aabb = new b2AABB();\n\n  /**\n   * Ray-cast the particle system for all particles in the path of\n   * the ray. Your callback controls whether you get the closest\n   * point, any point, or n-points. The ray-cast ignores particles\n   * that contain the starting point.\n   * b2RayCastCallback::ShouldQueryParticleSystem is ignored.\n   *\n   * @param callback a user implemented callback class.\n   * @param point1 the ray starting point\n   * @param point2 the ray ending point\n   */\n  public RayCast(callback: b2RayCastCallback, point1: XY, point2: XY): void {\n    const s_aabb = b2ParticleSystem.RayCast_s_aabb;\n    const s_p = b2ParticleSystem.RayCast_s_p;\n    const s_v = b2ParticleSystem.RayCast_s_v;\n    const s_n = b2ParticleSystem.RayCast_s_n;\n    const s_point = b2ParticleSystem.RayCast_s_point;\n    if (this.m_proxyBuffer.count === 0) {\n      return;\n    }\n    const pos_data = this.m_positionBuffer.data;\n    const aabb = s_aabb;\n    b2Vec2.MinV(point1, point2, aabb.lowerBound);\n    b2Vec2.MaxV(point1, point2, aabb.upperBound);\n    let fraction = 1;\n    // solving the following equation:\n    // ((1-t)*point1+t*point2-position)^2=diameter^2\n    // where t is a potential fraction\n    ///b2Vec2 v = point2 - point1;\n    const v = b2Vec2.SubVV(point2, point1, s_v);\n    const v2 = b2Vec2.DotVV(v, v);\n    const enumerator = this.GetInsideBoundsEnumerator(aabb);\n\n    let i: number;\n    while ((i = enumerator.GetNext()) >= 0) {\n      ///b2Vec2 p = point1 - m_positionBuffer.data[i];\n      const p = b2Vec2.SubVV(point1, pos_data[i], s_p);\n      const pv = b2Vec2.DotVV(p, v);\n      const p2 = b2Vec2.DotVV(p, p);\n      const determinant = pv * pv - v2 * (p2 - this.m_squaredDiameter);\n      if (determinant >= 0) {\n        const sqrtDeterminant = b2Sqrt(determinant);\n        // find a solution between 0 and fraction\n        let t = (-pv - sqrtDeterminant) / v2;\n        if (t > fraction) {\n          continue;\n        }\n        if (t < 0) {\n          t = (-pv + sqrtDeterminant) / v2;\n          if (t < 0 || t > fraction) {\n            continue;\n          }\n        }\n        ///b2Vec2 n = p + t * v;\n        const n = b2Vec2.AddVMulSV(p, t, v, s_n);\n        n.Normalize();\n        ///float32 f = callback.ReportParticle(this, i, point1 + t * v, n, t);\n        const f = callback.ReportParticle(this, i, b2Vec2.AddVMulSV(point1, t, v, s_point), n, t);\n        fraction = b2Min(fraction, f);\n        if (fraction <= 0) {\n          break;\n        }\n      }\n    }\n  }\n  public static readonly RayCast_s_aabb = new b2AABB();\n  public static readonly RayCast_s_p = new b2Vec2();\n  public static readonly RayCast_s_v = new b2Vec2();\n  public static readonly RayCast_s_n = new b2Vec2();\n  public static readonly RayCast_s_point = new b2Vec2();\n\n  /**\n   * Compute the axis-aligned bounding box for all particles\n   * contained within this particle system.\n   * @param aabb Returns the axis-aligned bounding box of the system.\n   */\n  public ComputeAABB(aabb: b2AABB): void {\n    const particleCount = this.GetParticleCount();\n    // DEBUG: b2Assert(aabb !== null);\n    aabb.lowerBound.x = +b2_maxFloat;\n    aabb.lowerBound.y = +b2_maxFloat;\n    aabb.upperBound.x = -b2_maxFloat;\n    aabb.upperBound.y = -b2_maxFloat;\n\n    const pos_data = this.m_positionBuffer.data;\n    for (let i = 0; i < particleCount; i++) {\n      const p = pos_data[i];\n      b2Vec2.MinV(aabb.lowerBound, p, aabb.lowerBound);\n      b2Vec2.MaxV(aabb.upperBound, p, aabb.upperBound);\n    }\n    aabb.lowerBound.x -= this.m_particleDiameter;\n    aabb.lowerBound.y -= this.m_particleDiameter;\n    aabb.upperBound.x += this.m_particleDiameter;\n    aabb.upperBound.y += this.m_particleDiameter;\n  }\n\n  /**\n   * All particle types that require creating pairs\n   */\n  public static readonly k_pairFlags: number = b2ParticleFlag.b2_springParticle;\n\n  /**\n   * All particle types that require creating triads\n   */\n  public static readonly k_triadFlags = b2ParticleFlag.b2_elasticParticle;\n\n  /**\n   * All particle types that do not produce dynamic pressure\n   */\n  public static readonly k_noPressureFlags = b2ParticleFlag.b2_powderParticle | b2ParticleFlag.b2_tensileParticle;\n\n  /**\n   * All particle types that apply extra damping force with bodies\n   */\n  public static readonly k_extraDampingFlags = b2ParticleFlag.b2_staticPressureParticle;\n\n  public static readonly k_barrierWallFlags = b2ParticleFlag.b2_barrierParticle | b2ParticleFlag.b2_wallParticle;\n\n  public FreeBuffer<T>(b: T[] | null, capacity: number): void {\n    if (b === null) {\n      return;\n    }\n    b.length = 0;\n  }\n\n  public FreeUserOverridableBuffer<T>(b: b2ParticleSystem_UserOverridableBuffer<T>): void {\n    if (b.userSuppliedCapacity === 0) {\n      this.FreeBuffer(b.data, this.m_internalAllocatedCapacity);\n    }\n  }\n\n  /**\n   * Reallocate a buffer\n   */\n  public ReallocateBuffer3<T>(oldBuffer: T[] | null, oldCapacity: number, newCapacity: number): T[] {\n    // b2Assert(newCapacity > oldCapacity);\n    if (newCapacity <= oldCapacity) { throw new Error(); }\n    const newBuffer = (oldBuffer) ? oldBuffer.slice() : [];\n    newBuffer.length = newCapacity;\n    return newBuffer;\n  }\n\n  /**\n   * Reallocate a buffer\n   */\n  public ReallocateBuffer5<T>(buffer: T[] | null, userSuppliedCapacity: number, oldCapacity: number, newCapacity: number, deferred: boolean): T[] {\n    // b2Assert(newCapacity > oldCapacity);\n    if (newCapacity <= oldCapacity) { throw new Error(); }\n    // A 'deferred' buffer is reallocated only if it is not NULL.\n    // If 'userSuppliedCapacity' is not zero, buffer is user supplied and must\n    // be kept.\n    // b2Assert(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity);\n    if (!(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity)) { throw new Error(); }\n    if ((!deferred || buffer) && !userSuppliedCapacity) {\n      buffer = this.ReallocateBuffer3(buffer, oldCapacity, newCapacity);\n    }\n    return buffer as any; // TODO: fix this\n  }\n\n  /**\n   * Reallocate a buffer\n   */\n  public ReallocateBuffer4<T>(buffer: b2ParticleSystem_UserOverridableBuffer<any>, oldCapacity: number, newCapacity: number, deferred: boolean): T[] {\n    // DEBUG: b2Assert(newCapacity > oldCapacity);\n    return this.ReallocateBuffer5(buffer.data, buffer.userSuppliedCapacity, oldCapacity, newCapacity, deferred);\n  }\n\n  public RequestBuffer<T>(buffer: T[] | null): T[] {\n    if (!buffer) {\n      if (this.m_internalAllocatedCapacity === 0) {\n        this.ReallocateInternalAllocatedBuffers(b2_minParticleSystemBufferCapacity);\n      }\n\n      buffer = [];\n      buffer.length = this.m_internalAllocatedCapacity;\n    }\n    return buffer;\n  }\n\n  /**\n   * Reallocate the handle / index map and schedule the allocation\n   * of a new pool for handle allocation.\n   */\n  public ReallocateHandleBuffers(newCapacity: number): void {\n    // DEBUG: b2Assert(newCapacity > this.m_internalAllocatedCapacity);\n    // Reallocate a new handle / index map buffer, copying old handle pointers\n    // is fine since they're kept around.\n    this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, newCapacity, true);\n    // Set the size of the next handle allocation.\n    ///this.m_handleAllocator.SetItemsPerSlab(newCapacity - this.m_internalAllocatedCapacity);\n  }\n\n  public ReallocateInternalAllocatedBuffers(capacity: number): void {\n    function LimitCapacity(capacity: number, maxCount: number): number {\n      return maxCount && capacity > maxCount ? maxCount : capacity;\n    }\n\n    // Don't increase capacity beyond the smallest user-supplied buffer size.\n    capacity = LimitCapacity(capacity, this.m_def.maxCount);\n    capacity = LimitCapacity(capacity, this.m_flagsBuffer.userSuppliedCapacity);\n    capacity = LimitCapacity(capacity, this.m_positionBuffer.userSuppliedCapacity);\n    capacity = LimitCapacity(capacity, this.m_velocityBuffer.userSuppliedCapacity);\n    capacity = LimitCapacity(capacity, this.m_colorBuffer.userSuppliedCapacity);\n    capacity = LimitCapacity(capacity, this.m_userDataBuffer.userSuppliedCapacity);\n    if (this.m_internalAllocatedCapacity < capacity) {\n      this.ReallocateHandleBuffers(capacity);\n      this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, capacity, false);\n\n      // Conditionally defer these as they are optional if the feature is\n      // not enabled.\n      const stuck = this.m_stuckThreshold > 0;\n      this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\n      this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\n      this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\n      this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, capacity, false);\n      this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, capacity, false);\n      this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\n      this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\n      this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\n      this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\n      this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, capacity, true);\n      this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\n      this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, capacity, true);\n      this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\n      this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, capacity, true);\n      this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, true);\n      this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, false);\n      this.m_internalAllocatedCapacity = capacity;\n    }\n  }\n\n  public CreateParticleForGroup(groupDef: b2IParticleGroupDef, xf: b2Transform, p: XY): void {\n    const particleDef = new b2ParticleDef();\n    particleDef.flags = b2Maybe(groupDef.flags, 0);\n    ///particleDef.position = b2Mul(xf, p);\n    b2Transform.MulXV(xf, p, particleDef.position);\n    ///particleDef.velocity =\n    ///  groupDef.linearVelocity +\n    ///  b2Cross(groupDef.angularVelocity,\n    ///      particleDef.position - groupDef.position);\n    b2Vec2.AddVV(\n      b2Maybe(groupDef.linearVelocity, b2Vec2.ZERO),\n      b2Vec2.CrossSV(\n        b2Maybe(groupDef.angularVelocity, 0),\n        b2Vec2.SubVV(\n          particleDef.position,\n          b2Maybe(groupDef.position, b2Vec2.ZERO),\n          b2Vec2.s_t0,\n        ),\n        b2Vec2.s_t0,\n      ),\n      particleDef.velocity,\n    );\n    particleDef.color.Copy(b2Maybe(groupDef.color, b2Color.ZERO));\n    particleDef.lifetime = b2Maybe(groupDef.lifetime, 0);\n    particleDef.userData = groupDef.userData;\n    this.CreateParticle(particleDef);\n  }\n\n  public CreateParticlesStrokeShapeForGroup(shape: b2Shape, groupDef: b2IParticleGroupDef, xf: b2Transform): void {\n    const s_edge = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge;\n    const s_d = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d;\n    const s_p = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p;\n    let stride = b2Maybe(groupDef.stride, 0);\n    if (stride === 0) {\n      stride = this.GetParticleStride();\n    }\n    let positionOnEdge = 0;\n    const childCount = shape.GetChildCount();\n    for (let childIndex = 0; childIndex < childCount; childIndex++) {\n      let edge: b2EdgeShape | null = null;\n      if (shape.GetType() === b2ShapeType.e_edgeShape) {\n        edge = shape as b2EdgeShape;\n      } else {\n        // DEBUG: b2Assert(shape.GetType() === b2ShapeType.e_chainShape);\n        edge = s_edge;\n        (shape as b2ChainShape).GetChildEdge(edge, childIndex);\n      }\n      const d = b2Vec2.SubVV(edge.m_vertex2, edge.m_vertex1, s_d);\n      const edgeLength = d.Length();\n\n      while (positionOnEdge < edgeLength) {\n        ///b2Vec2 p = edge.m_vertex1 + positionOnEdge / edgeLength * d;\n        const p = b2Vec2.AddVMulSV(edge.m_vertex1, positionOnEdge / edgeLength, d, s_p);\n        this.CreateParticleForGroup(groupDef, xf, p);\n        positionOnEdge += stride;\n      }\n      positionOnEdge -= edgeLength;\n    }\n  }\n  public static readonly CreateParticlesStrokeShapeForGroup_s_edge = new b2EdgeShape();\n  public static readonly CreateParticlesStrokeShapeForGroup_s_d = new b2Vec2();\n  public static readonly CreateParticlesStrokeShapeForGroup_s_p = new b2Vec2();\n\n  public CreateParticlesFillShapeForGroup(shape: b2Shape, groupDef: b2IParticleGroupDef, xf: b2Transform): void {\n    const s_aabb = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb;\n    const s_p = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_p;\n    let stride = b2Maybe(groupDef.stride, 0);\n    if (stride === 0) {\n      stride = this.GetParticleStride();\n    }\n    ///b2Transform identity;\n    /// identity.SetIdentity();\n    const identity = b2Transform.IDENTITY;\n    const aabb = s_aabb;\n    // DEBUG: b2Assert(shape.GetChildCount() === 1);\n    shape.ComputeAABB(aabb, identity, 0);\n    for (let y = Math.floor(aabb.lowerBound.y / stride) * stride; y < aabb.upperBound.y; y += stride) {\n      for (let x = Math.floor(aabb.lowerBound.x / stride) * stride; x < aabb.upperBound.x; x += stride) {\n        const p = s_p.Set(x, y);\n        if (shape.TestPoint(identity, p)) {\n          this.CreateParticleForGroup(groupDef, xf, p);\n        }\n      }\n    }\n  }\n  public static readonly CreateParticlesFillShapeForGroup_s_aabb = new b2AABB();\n  public static readonly CreateParticlesFillShapeForGroup_s_p = new b2Vec2();\n\n  public CreateParticlesWithShapeForGroup(shape: b2Shape, groupDef: b2IParticleGroupDef, xf: b2Transform): void {\n    switch (shape.GetType()) {\n      case b2ShapeType.e_edgeShape:\n      case b2ShapeType.e_chainShape:\n        this.CreateParticlesStrokeShapeForGroup(shape, groupDef, xf);\n        break;\n      case b2ShapeType.e_polygonShape:\n      case b2ShapeType.e_circleShape:\n        this.CreateParticlesFillShapeForGroup(shape, groupDef, xf);\n        break;\n      default:\n        // DEBUG: b2Assert(false);\n        break;\n    }\n  }\n\n  public CreateParticlesWithShapesForGroup(shapes: b2Shape[], shapeCount: number, groupDef: b2IParticleGroupDef, xf: b2Transform): void {\n    const compositeShape = new b2ParticleSystem_CompositeShape(shapes, shapeCount);\n    this.CreateParticlesFillShapeForGroup(compositeShape, groupDef, xf);\n  }\n\n  public CloneParticle(oldIndex: number, group: b2ParticleGroup): number {\n    const def = new b2ParticleDef();\n    def.flags = this.m_flagsBuffer.data[oldIndex];\n    def.position.Copy(this.m_positionBuffer.data[oldIndex]);\n    def.velocity.Copy(this.m_velocityBuffer.data[oldIndex]);\n    if (this.m_colorBuffer.data) {\n      def.color.Copy(this.m_colorBuffer.data[oldIndex]);\n    }\n    if (this.m_userDataBuffer.data) {\n      def.userData = this.m_userDataBuffer.data[oldIndex];\n    }\n    def.group = group;\n    const newIndex = this.CreateParticle(def);\n    if (this.m_handleIndexBuffer.data) {\n      const handle = this.m_handleIndexBuffer.data[oldIndex];\n      if (handle) { handle.SetIndex(newIndex); }\n      this.m_handleIndexBuffer.data[newIndex] = handle;\n      this.m_handleIndexBuffer.data[oldIndex] = null;\n    }\n    if (this.m_lastBodyContactStepBuffer.data) {\n      this.m_lastBodyContactStepBuffer.data[newIndex] =\n        this.m_lastBodyContactStepBuffer.data[oldIndex];\n    }\n    if (this.m_bodyContactCountBuffer.data) {\n      this.m_bodyContactCountBuffer.data[newIndex] =\n        this.m_bodyContactCountBuffer.data[oldIndex];\n    }\n    if (this.m_consecutiveContactStepsBuffer.data) {\n      this.m_consecutiveContactStepsBuffer.data[newIndex] =\n        this.m_consecutiveContactStepsBuffer.data[oldIndex];\n    }\n    if (this.m_hasForce) {\n      this.m_forceBuffer[newIndex].Copy(this.m_forceBuffer[oldIndex]);\n    }\n    if (this.m_staticPressureBuffer) {\n      this.m_staticPressureBuffer[newIndex] = this.m_staticPressureBuffer[oldIndex];\n    }\n    if (this.m_depthBuffer) {\n      this.m_depthBuffer[newIndex] = this.m_depthBuffer[oldIndex];\n    }\n    if (this.m_expirationTimeBuffer.data) {\n      this.m_expirationTimeBuffer.data[newIndex] =\n        this.m_expirationTimeBuffer.data[oldIndex];\n    }\n    return newIndex;\n  }\n\n  public DestroyParticlesInGroup(group: b2ParticleGroup, callDestructionListener: boolean = false): void {\n    for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\n      this.DestroyParticle(i, callDestructionListener);\n    }\n  }\n\n  public DestroyParticleGroup(group: b2ParticleGroup): void {\n    // DEBUG: b2Assert(this.m_groupCount > 0);\n    // DEBUG: b2Assert(group !== null);\n\n    if (this.m_world.m_destructionListener) {\n      this.m_world.m_destructionListener.SayGoodbyeParticleGroup(group);\n    }\n\n    this.SetGroupFlags(group, 0);\n    for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\n      this.m_groupBuffer[i] = null;\n    }\n\n    if (group.m_prev) {\n      group.m_prev.m_next = group.m_next;\n    }\n    if (group.m_next) {\n      group.m_next.m_prev = group.m_prev;\n    }\n    if (group === this.m_groupList) {\n      this.m_groupList = group.m_next;\n    }\n\n    --this.m_groupCount;\n  }\n\n  public static ParticleCanBeConnected(flags: b2ParticleFlag, group: b2ParticleGroup | null): boolean {\n    return ((flags & (b2ParticleFlag.b2_wallParticle | b2ParticleFlag.b2_springParticle | b2ParticleFlag.b2_elasticParticle)) !== 0) ||\n      ((group !== null) && ((group.GetGroupFlags() & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0));\n  }\n\n  public UpdatePairsAndTriads(firstIndex: number, lastIndex: number, filter: b2ParticleSystem_ConnectionFilter): void {\n    const s_dab = b2ParticleSystem.UpdatePairsAndTriads_s_dab;\n    const s_dbc = b2ParticleSystem.UpdatePairsAndTriads_s_dbc;\n    const s_dca = b2ParticleSystem.UpdatePairsAndTriads_s_dca;\n    const pos_data = this.m_positionBuffer.data;\n    // Create pairs or triads.\n    // All particles in each pair/triad should satisfy the following:\n    // * firstIndex <= index < lastIndex\n    // * don't have b2_zombieParticle\n    // * ParticleCanBeConnected returns true\n    // * ShouldCreatePair/ShouldCreateTriad returns true\n    // Any particles in each pair/triad should satisfy the following:\n    // * filter.IsNeeded returns true\n    // * have one of k_pairFlags/k_triadsFlags\n    // DEBUG: b2Assert(firstIndex <= lastIndex);\n    let particleFlags = 0;\n    for (let i = firstIndex; i < lastIndex; i++) {\n      particleFlags |= this.m_flagsBuffer.data[i];\n    }\n    if (particleFlags & b2ParticleSystem.k_pairFlags) {\n      for (let k = 0; k < this.m_contactBuffer.count; k++) {\n        const contact = this.m_contactBuffer.data[k];\n        const a = contact.indexA;\n        const b = contact.indexB;\n        const af = this.m_flagsBuffer.data[a];\n        const bf = this.m_flagsBuffer.data[b];\n        const groupA = this.m_groupBuffer[a];\n        const groupB = this.m_groupBuffer[b];\n        if (a >= firstIndex && a < lastIndex &&\n          b >= firstIndex && b < lastIndex &&\n          !((af | bf) & b2ParticleFlag.b2_zombieParticle) &&\n          ((af | bf) & b2ParticleSystem.k_pairFlags) &&\n          (filter.IsNecessary(a) || filter.IsNecessary(b)) &&\n          b2ParticleSystem.ParticleCanBeConnected(af, groupA) &&\n          b2ParticleSystem.ParticleCanBeConnected(bf, groupB) &&\n          filter.ShouldCreatePair(a, b)) {\n          ///b2ParticlePair& pair = m_pairBuffer.Append();\n          const pair = this.m_pairBuffer.data[this.m_pairBuffer.Append()];\n          pair.indexA = a;\n          pair.indexB = b;\n          pair.flags = contact.flags;\n          pair.strength = b2Min(\n            groupA ? groupA.m_strength : 1,\n            groupB ? groupB.m_strength : 1);\n          ///pair.distance = b2Distance(pos_data[a], pos_data[b]); // TODO: this was wrong!\n          pair.distance = b2Vec2.DistanceVV(pos_data[a], pos_data[b]);\n        }\n        ///std::stable_sort(m_pairBuffer.Begin(), m_pairBuffer.End(), ComparePairIndices);\n        std_stable_sort(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, b2ParticleSystem.ComparePairIndices);\n        ///m_pairBuffer.Unique(MatchPairIndices);\n        this.m_pairBuffer.Unique(b2ParticleSystem.MatchPairIndices);\n      }\n    }\n    if (particleFlags & b2ParticleSystem.k_triadFlags) {\n      const diagram = new b2VoronoiDiagram(lastIndex - firstIndex);\n      ///let necessary_count = 0;\n      for (let i = firstIndex; i < lastIndex; i++) {\n        const flags = this.m_flagsBuffer.data[i];\n        const group = this.m_groupBuffer[i];\n        if (!(flags & b2ParticleFlag.b2_zombieParticle) &&\n          b2ParticleSystem.ParticleCanBeConnected(flags, group)) {\n          ///if (filter.IsNecessary(i)) {\n          ///++necessary_count;\n          ///}\n          diagram.AddGenerator(pos_data[i], i, filter.IsNecessary(i));\n        }\n      }\n      ///if (necessary_count === 0) {\n      /////debugger;\n      ///for (let i = firstIndex; i < lastIndex; i++) {\n      ///  filter.IsNecessary(i);\n      ///}\n      ///}\n      const stride = this.GetParticleStride();\n      diagram.Generate(stride / 2, stride * 2);\n      const system = this;\n      const callback = /*UpdateTriadsCallback*/(a: number, b: number, c: number): void => {\n        const af = system.m_flagsBuffer.data[a];\n        const bf = system.m_flagsBuffer.data[b];\n        const cf = system.m_flagsBuffer.data[c];\n        if (((af | bf | cf) & b2ParticleSystem.k_triadFlags) &&\n          filter.ShouldCreateTriad(a, b, c)) {\n          const pa = pos_data[a];\n          const pb = pos_data[b];\n          const pc = pos_data[c];\n          const dab = b2Vec2.SubVV(pa, pb, s_dab);\n          const dbc = b2Vec2.SubVV(pb, pc, s_dbc);\n          const dca = b2Vec2.SubVV(pc, pa, s_dca);\n          const maxDistanceSquared = b2_maxTriadDistanceSquared * system.m_squaredDiameter;\n          if (b2Vec2.DotVV(dab, dab) > maxDistanceSquared ||\n            b2Vec2.DotVV(dbc, dbc) > maxDistanceSquared ||\n            b2Vec2.DotVV(dca, dca) > maxDistanceSquared) {\n            return;\n          }\n          const groupA = system.m_groupBuffer[a];\n          const groupB = system.m_groupBuffer[b];\n          const groupC = system.m_groupBuffer[c];\n          ///b2ParticleTriad& triad = m_system.m_triadBuffer.Append();\n          const triad = system.m_triadBuffer.data[system.m_triadBuffer.Append()];\n          triad.indexA = a;\n          triad.indexB = b;\n          triad.indexC = c;\n          triad.flags = af | bf | cf;\n          triad.strength = b2Min(b2Min(\n              groupA ? groupA.m_strength : 1,\n              groupB ? groupB.m_strength : 1),\n            groupC ? groupC.m_strength : 1);\n          ///let midPoint = b2Vec2.MulSV(1.0 / 3.0, b2Vec2.AddVV(pa, b2Vec2.AddVV(pb, pc, new b2Vec2()), new b2Vec2()), new b2Vec2());\n          const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\n          const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\n          ///triad.pa = b2Vec2.SubVV(pa, midPoint, new b2Vec2());\n          triad.pa.x = pa.x - midPoint_x;\n          triad.pa.y = pa.y - midPoint_y;\n          ///triad.pb = b2Vec2.SubVV(pb, midPoint, new b2Vec2());\n          triad.pb.x = pb.x - midPoint_x;\n          triad.pb.y = pb.y - midPoint_y;\n          ///triad.pc = b2Vec2.SubVV(pc, midPoint, new b2Vec2());\n          triad.pc.x = pc.x - midPoint_x;\n          triad.pc.y = pc.y - midPoint_y;\n          triad.ka = -b2Vec2.DotVV(dca, dab);\n          triad.kb = -b2Vec2.DotVV(dab, dbc);\n          triad.kc = -b2Vec2.DotVV(dbc, dca);\n          triad.s = b2Vec2.CrossVV(pa, pb) + b2Vec2.CrossVV(pb, pc) + b2Vec2.CrossVV(pc, pa);\n        }\n      };\n      diagram.GetNodes(callback);\n      ///std::stable_sort(m_triadBuffer.Begin(), m_triadBuffer.End(), CompareTriadIndices);\n      std_stable_sort(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, b2ParticleSystem.CompareTriadIndices);\n      ///m_triadBuffer.Unique(MatchTriadIndices);\n      this.m_triadBuffer.Unique(b2ParticleSystem.MatchTriadIndices);\n    }\n  }\n  private static UpdatePairsAndTriads_s_dab = new b2Vec2();\n  private static UpdatePairsAndTriads_s_dbc = new b2Vec2();\n  private static UpdatePairsAndTriads_s_dca = new b2Vec2();\n\n  public UpdatePairsAndTriadsWithReactiveParticles(): void {\n    const filter = new b2ParticleSystem_ReactiveFilter(this.m_flagsBuffer);\n    this.UpdatePairsAndTriads(0, this.m_count, filter);\n\n    for (let i = 0; i < this.m_count; i++) {\n      this.m_flagsBuffer.data[i] &= ~b2ParticleFlag.b2_reactiveParticle;\n    }\n    this.m_allParticleFlags &= ~b2ParticleFlag.b2_reactiveParticle;\n  }\n\n  public static ComparePairIndices(a: b2ParticlePair, b: b2ParticlePair): boolean {\n    const diffA = a.indexA - b.indexA;\n    if (diffA !== 0) { return diffA < 0; }\n    return a.indexB < b.indexB;\n  }\n\n  public static MatchPairIndices(a: b2ParticlePair, b: b2ParticlePair): boolean {\n    return a.indexA === b.indexA && a.indexB === b.indexB;\n  }\n\n  public static CompareTriadIndices(a: b2ParticleTriad, b: b2ParticleTriad): boolean {\n    const diffA = a.indexA - b.indexA;\n    if (diffA !== 0) { return diffA < 0; }\n    const diffB = a.indexB - b.indexB;\n    if (diffB !== 0) { return diffB < 0; }\n    return a.indexC < b.indexC;\n  }\n\n  public static MatchTriadIndices(a: b2ParticleTriad, b: b2ParticleTriad): boolean {\n    return a.indexA === b.indexA && a.indexB === b.indexB && a.indexC === b.indexC;\n  }\n\n  public static InitializeParticleLists(group: b2ParticleGroup, nodeBuffer: b2ParticleSystem_ParticleListNode[]): void {\n    const bufferIndex = group.GetBufferIndex();\n    const particleCount = group.GetParticleCount();\n    for (let i = 0; i < particleCount; i++) {\n      const node: b2ParticleSystem_ParticleListNode = nodeBuffer[i];\n      node.list = node;\n      node.next = null;\n      node.count = 1;\n      node.index = i + bufferIndex;\n    }\n  }\n\n  public MergeParticleListsInContact(group: b2ParticleGroup, nodeBuffer: b2ParticleSystem_ParticleListNode[]): void {\n    const bufferIndex = group.GetBufferIndex();\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      /*const b2ParticleContact&*/\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      if (!group.ContainsParticle(a) || !group.ContainsParticle(b)) {\n        continue;\n      }\n      let listA: b2ParticleSystem_ParticleListNode = nodeBuffer[a - bufferIndex].list;\n      let listB: b2ParticleSystem_ParticleListNode = nodeBuffer[b - bufferIndex].list;\n      if (listA === listB) {\n        continue;\n      }\n      // To minimize the cost of insertion, make sure listA is longer than\n      // listB.\n      if (listA.count < listB.count) {\n        const _tmp = listA;\n        listA = listB;\n        listB = _tmp; ///b2Swap(listA, listB);\n      }\n      // DEBUG: b2Assert(listA.count >= listB.count);\n      b2ParticleSystem.MergeParticleLists(listA, listB);\n    }\n  }\n\n  public static MergeParticleLists(listA: b2ParticleSystem_ParticleListNode, listB: b2ParticleSystem_ParticleListNode): void {\n    // Insert listB between index 0 and 1 of listA\n    // Example:\n    //     listA => a1 => a2 => a3 => null\n    //     listB => b1 => b2 => null\n    // to\n    //     listA => listB => b1 => b2 => a1 => a2 => a3 => null\n    // DEBUG: b2Assert(listA !== listB);\n    for (let b: b2ParticleSystem_ParticleListNode = listB; ; ) {\n      b.list = listA;\n      const nextB: b2ParticleSystem_ParticleListNode | null = b.next;\n      if (nextB) {\n        b = nextB;\n      } else {\n        b.next = listA.next;\n        break;\n      }\n    }\n    listA.next = listB;\n    listA.count += listB.count;\n    listB.count = 0;\n  }\n\n  public static FindLongestParticleList(group: b2ParticleGroup, nodeBuffer: b2ParticleSystem_ParticleListNode[]): b2ParticleSystem_ParticleListNode {\n    const particleCount = group.GetParticleCount();\n    let result: b2ParticleSystem_ParticleListNode = nodeBuffer[0];\n    for (let i = 0; i < particleCount; i++) {\n      const node: b2ParticleSystem_ParticleListNode = nodeBuffer[i];\n      if (result.count < node.count) {\n        result = node;\n      }\n    }\n    return result;\n  }\n\n  public MergeZombieParticleListNodes(group: b2ParticleGroup, nodeBuffer: b2ParticleSystem_ParticleListNode[], survivingList: b2ParticleSystem_ParticleListNode): void {\n    const particleCount = group.GetParticleCount();\n    for (let i = 0; i < particleCount; i++) {\n      const node: b2ParticleSystem_ParticleListNode = nodeBuffer[i];\n      if (node !== survivingList &&\n        (this.m_flagsBuffer.data[node.index] & b2ParticleFlag.b2_zombieParticle)) {\n        b2ParticleSystem.MergeParticleListAndNode(survivingList, node);\n      }\n    }\n  }\n\n  public static MergeParticleListAndNode(list: b2ParticleSystem_ParticleListNode, node: b2ParticleSystem_ParticleListNode): void {\n    // Insert node between index 0 and 1 of list\n    // Example:\n    //     list => a1 => a2 => a3 => null\n    //     node => null\n    // to\n    //     list => node => a1 => a2 => a3 => null\n    // DEBUG: b2Assert(node !== list);\n    // DEBUG: b2Assert(node.list === node);\n    // DEBUG: b2Assert(node.count === 1);\n    node.list = list;\n    node.next = list.next;\n    list.next = node;\n    list.count++;\n    node.count = 0;\n  }\n\n  public CreateParticleGroupsFromParticleList(group: b2ParticleGroup, nodeBuffer: b2ParticleSystem_ParticleListNode[], survivingList: b2ParticleSystem_ParticleListNode): void {\n    const particleCount = group.GetParticleCount();\n    const def = new b2ParticleGroupDef();\n    def.groupFlags = group.GetGroupFlags();\n    def.userData = group.GetUserData();\n    for (let i = 0; i < particleCount; i++) {\n      const list: b2ParticleSystem_ParticleListNode = nodeBuffer[i];\n      if (!list.count || list === survivingList) {\n        continue;\n      }\n      // DEBUG: b2Assert(list.list === list);\n      const newGroup: b2ParticleGroup = this.CreateParticleGroup(def);\n      for (let node: b2ParticleSystem_ParticleListNode | null = list; node; node = node.next) {\n        const oldIndex = node.index;\n        // DEBUG: const flags = this.m_flagsBuffer.data[oldIndex];\n        // DEBUG: b2Assert(!(flags & b2ParticleFlag.b2_zombieParticle));\n        const newIndex = this.CloneParticle(oldIndex, newGroup);\n        this.m_flagsBuffer.data[oldIndex] |= b2ParticleFlag.b2_zombieParticle;\n        node.index = newIndex;\n      }\n    }\n  }\n\n  public UpdatePairsAndTriadsWithParticleList(group: b2ParticleGroup, nodeBuffer: b2ParticleSystem_ParticleListNode[]): void {\n    const bufferIndex = group.GetBufferIndex();\n    // Update indices in pairs and triads. If an index belongs to the group,\n    // replace it with the corresponding value in nodeBuffer.\n    // Note that nodeBuffer is allocated only for the group and the index should\n    // be shifted by bufferIndex.\n    for (let k = 0; k < this.m_pairBuffer.count; k++) {\n      const pair = this.m_pairBuffer.data[k];\n      const a = pair.indexA;\n      const b = pair.indexB;\n      if (group.ContainsParticle(a)) {\n        pair.indexA = nodeBuffer[a - bufferIndex].index;\n      }\n      if (group.ContainsParticle(b)) {\n        pair.indexB = nodeBuffer[b - bufferIndex].index;\n      }\n    }\n    for (let k = 0; k < this.m_triadBuffer.count; k++) {\n      const triad = this.m_triadBuffer.data[k];\n      const a = triad.indexA;\n      const b = triad.indexB;\n      const c = triad.indexC;\n      if (group.ContainsParticle(a)) {\n        triad.indexA = nodeBuffer[a - bufferIndex].index;\n      }\n      if (group.ContainsParticle(b)) {\n        triad.indexB = nodeBuffer[b - bufferIndex].index;\n      }\n      if (group.ContainsParticle(c)) {\n        triad.indexC = nodeBuffer[c - bufferIndex].index;\n      }\n    }\n  }\n\n  public ComputeDepth(): void {\n    const contactGroups: b2ParticleContact[] = []; // TODO: static\n    let contactGroupsCount = 0;\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      const groupA = this.m_groupBuffer[a];\n      const groupB = this.m_groupBuffer[b];\n      if (groupA && groupA === groupB &&\n        (groupA.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth)) {\n        contactGroups[contactGroupsCount++] = contact;\n      }\n    }\n    const groupsToUpdate: b2ParticleGroup[] = []; // TODO: static\n    let groupsToUpdateCount = 0;\n    for (let group = this.m_groupList; group; group = group.GetNext()) {\n      if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\n        groupsToUpdate[groupsToUpdateCount++] = group;\n        this.SetGroupFlags(group,\n          group.m_groupFlags &\n          ~b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\n          this.m_accumulationBuffer[i] = 0;\n        }\n      }\n    }\n    // Compute sum of weight of contacts except between different groups.\n    for (let k = 0; k < contactGroupsCount; k++) {\n      const contact = contactGroups[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      const w = contact.weight;\n      this.m_accumulationBuffer[a] += w;\n      this.m_accumulationBuffer[b] += w;\n    }\n\n    // DEBUG: b2Assert(this.m_depthBuffer !== null);\n    for (let i = 0; i < groupsToUpdateCount; i++) {\n      const group = groupsToUpdate[i];\n      for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\n        const w = this.m_accumulationBuffer[i];\n        this.m_depthBuffer[i] = w < 0.8 ? 0 : b2_maxFloat;\n      }\n    }\n    // The number of iterations is equal to particle number from the deepest\n    // particle to the nearest surface particle, and in general it is smaller\n    // than sqrt of total particle number.\n    ///int32 iterationCount = (int32)b2Sqrt((float)m_count);\n    const iterationCount = b2Sqrt(this.m_count) >> 0;\n    for (let t = 0; t < iterationCount; t++) {\n      let updated = false;\n      for (let k = 0; k < contactGroupsCount; k++) {\n        const contact = contactGroups[k];\n        const a = contact.indexA;\n        const b = contact.indexB;\n        const r = 1 - contact.weight;\n        ///float32& ap0 = m_depthBuffer[a];\n        const ap0 = this.m_depthBuffer[a];\n        ///float32& bp0 = m_depthBuffer[b];\n        const bp0 = this.m_depthBuffer[b];\n        const ap1 = bp0 + r;\n        const bp1 = ap0 + r;\n        if (ap0 > ap1) {\n          ///ap0 = ap1;\n          this.m_depthBuffer[a] = ap1;\n          updated = true;\n        }\n        if (bp0 > bp1) {\n          ///bp0 = bp1;\n          this.m_depthBuffer[b] = bp1;\n          updated = true;\n        }\n      }\n      if (!updated) {\n        break;\n      }\n    }\n    for (let i = 0; i < groupsToUpdateCount; i++) {\n      const group = groupsToUpdate[i];\n      for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\n        if (this.m_depthBuffer[i] < b2_maxFloat) {\n          this.m_depthBuffer[i] *= this.m_particleDiameter;\n        } else {\n          this.m_depthBuffer[i] = 0;\n        }\n      }\n    }\n  }\n\n  public GetInsideBoundsEnumerator(aabb: Readonly<b2AABB>): b2ParticleSystem_InsideBoundsEnumerator {\n    const lowerTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x - 1,\n      this.m_inverseDiameter * aabb.lowerBound.y - 1);\n    const upperTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x + 1,\n      this.m_inverseDiameter * aabb.upperBound.y + 1);\n    ///const Proxy* beginProxy = m_proxyBuffer.Begin();\n    const beginProxy = 0;\n    ///const Proxy* endProxy = m_proxyBuffer.End();\n    const endProxy = this.m_proxyBuffer.count;\n    ///const Proxy* firstProxy = std::lower_bound(beginProxy, endProxy, lowerTag);\n    const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, lowerTag, b2ParticleSystem_Proxy.CompareProxyTag);\n    ///const Proxy* lastProxy = std::upper_bound(firstProxy, endProxy, upperTag);\n    const lastProxy = std_upper_bound(this.m_proxyBuffer.data, beginProxy, endProxy, upperTag, b2ParticleSystem_Proxy.CompareTagProxy);\n\n    // DEBUG: b2Assert(beginProxy <= firstProxy);\n    // DEBUG: b2Assert(firstProxy <= lastProxy);\n    // DEBUG: b2Assert(lastProxy <= endProxy);\n\n    return new b2ParticleSystem_InsideBoundsEnumerator(this, lowerTag, upperTag, firstProxy, lastProxy);\n  }\n\n  public UpdateAllParticleFlags(): void {\n    this.m_allParticleFlags = 0;\n    for (let i = 0; i < this.m_count; i++) {\n      this.m_allParticleFlags |= this.m_flagsBuffer.data[i];\n    }\n    this.m_needsUpdateAllParticleFlags = false;\n  }\n\n  public UpdateAllGroupFlags(): void {\n    this.m_allGroupFlags = 0;\n    for (let group = this.m_groupList; group; group = group.GetNext()) {\n      this.m_allGroupFlags |= group.m_groupFlags;\n    }\n    this.m_needsUpdateAllGroupFlags = false;\n  }\n\n  public AddContact(a: number, b: number, contacts: b2GrowableBuffer<b2ParticleContact>): void {\n    // DEBUG: b2Assert(contacts === this.m_contactBuffer);\n    const flags_data = this.m_flagsBuffer.data;\n    const pos_data = this.m_positionBuffer.data;\n    ///b2Vec2 d = m_positionBuffer.data[b] - m_positionBuffer.data[a];\n    const d = b2Vec2.SubVV(pos_data[b], pos_data[a], b2ParticleSystem.AddContact_s_d);\n    const distBtParticlesSq = b2Vec2.DotVV(d, d);\n    if (0 < distBtParticlesSq && distBtParticlesSq < this.m_squaredDiameter) {\n      const invD = b2InvSqrt(distBtParticlesSq);\n      ///b2ParticleContact& contact = contacts.Append();\n      const contact = this.m_contactBuffer.data[this.m_contactBuffer.Append()];\n      contact.indexA = a;\n      contact.indexB = b;\n      contact.flags = flags_data[a] | flags_data[b];\n      contact.weight = 1 - distBtParticlesSq * invD * this.m_inverseDiameter;\n      contact.normal.x = invD * d.x;\n      contact.normal.y = invD * d.y;\n    }\n  }\n  public static readonly AddContact_s_d = new b2Vec2();\n\n  public FindContacts_Reference(contacts: b2GrowableBuffer<b2ParticleContact>): void {\n    // DEBUG: b2Assert(contacts === this.m_contactBuffer);\n    const beginProxy = 0;\n    const endProxy = this.m_proxyBuffer.count;\n\n    this.m_contactBuffer.count = 0;\n    for (let a = beginProxy, c = beginProxy; a < endProxy; a++) {\n      const rightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 0);\n      for (let b = a + 1; b < endProxy; b++) {\n        if (rightTag < this.m_proxyBuffer.data[b].tag) { break; }\n        this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\n      }\n      const bottomLeftTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, -1, 1);\n      for (; c < endProxy; c++) {\n        if (bottomLeftTag <= this.m_proxyBuffer.data[c].tag) { break; }\n      }\n      const bottomRightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 1);\n      for (let b = c; b < endProxy; b++) {\n        if (bottomRightTag < this.m_proxyBuffer.data[b].tag) { break; }\n        this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\n      }\n    }\n  }\n\n  ///void ReorderForFindContact(FindContactInput* reordered, int alignedCount) const;\n  ///void GatherChecksOneParticle(const uint32 bound, const int startIndex, const int particleIndex, int* nextUncheckedIndex, b2GrowableBuffer<FindContactCheck>& checks) const;\n  ///void GatherChecks(b2GrowableBuffer<FindContactCheck>& checks) const;\n  ///void FindContacts_Simd(b2GrowableBuffer<b2ParticleContact>& contacts) const;\n\n  public FindContacts(contacts: b2GrowableBuffer<b2ParticleContact>): void {\n    this.FindContacts_Reference(contacts);\n  }\n\n  ///static void UpdateProxyTags(const uint32* const tags, b2GrowableBuffer<Proxy>& proxies);\n  ///static bool ProxyBufferHasIndex(int32 index, const Proxy* const a, int count);\n  ///static int NumProxiesWithSameTag(const Proxy* const a, const Proxy* const b, int count);\n  ///static bool AreProxyBuffersTheSame(const b2GrowableBuffer<Proxy>& a, const b2GrowableBuffer<Proxy>& b);\n\n  public UpdateProxies_Reference(proxies: b2GrowableBuffer<b2ParticleSystem_Proxy>): void {\n    // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\n    const pos_data = this.m_positionBuffer.data;\n    const inv_diam = this.m_inverseDiameter;\n    for (let k = 0; k < this.m_proxyBuffer.count; ++k) {\n      const proxy = this.m_proxyBuffer.data[k];\n      const i = proxy.index;\n      const p = pos_data[i];\n      proxy.tag = b2ParticleSystem.computeTag(inv_diam * p.x, inv_diam * p.y);\n    }\n  }\n\n  ///void UpdateProxies_Simd(b2GrowableBuffer<Proxy>& proxies) const;\n\n  public UpdateProxies(proxies: b2GrowableBuffer<b2ParticleSystem_Proxy>): void {\n    this.UpdateProxies_Reference(proxies);\n  }\n\n  public SortProxies(proxies: b2GrowableBuffer<b2ParticleSystem_Proxy>): void {\n    // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\n\n    ///std::sort(proxies.Begin(), proxies.End());\n    std_sort(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, b2ParticleSystem_Proxy.CompareProxyProxy);\n  }\n\n  public FilterContacts(contacts: b2GrowableBuffer<b2ParticleContact>): void {\n    // Optionally filter the contact.\n    const contactFilter = this.GetParticleContactFilter();\n    if (contactFilter === null) {\n      return;\n    }\n\n    /// contacts.RemoveIf(b2ParticleContactRemovePredicate(this, contactFilter));\n    // DEBUG: b2Assert(contacts === this.m_contactBuffer);\n    const system = this;\n    const predicate = (contact: b2ParticleContact): boolean => {\n      return ((contact.flags & b2ParticleFlag.b2_particleContactFilterParticle) !== 0) && !contactFilter.ShouldCollideParticleParticle(system, contact.indexA, contact.indexB);\n    };\n    this.m_contactBuffer.RemoveIf(predicate);\n  }\n\n  public NotifyContactListenerPreContact(particlePairs: b2ParticlePairSet): void {\n    const contactListener = this.GetParticleContactListener();\n    if (contactListener === null) {\n      return;\n    }\n\n    ///particlePairs.Initialize(m_contactBuffer.Begin(), m_contactBuffer.GetCount(), GetFlagsBuffer());\n    particlePairs.Initialize(this.m_contactBuffer, this.m_flagsBuffer);\n\n    throw new Error(); // TODO: notify\n  }\n\n  public NotifyContactListenerPostContact(particlePairs: b2ParticlePairSet): void {\n    const contactListener = this.GetParticleContactListener();\n    if (contactListener === null) {\n      return;\n    }\n\n    // Loop through all new contacts, reporting any new ones, and\n    // \"invalidating\" the ones that still exist.\n    ///const b2ParticleContact* const endContact = m_contactBuffer.End();\n    ///for (b2ParticleContact* contact = m_contactBuffer.Begin(); contact < endContact; ++contact)\n    for (let k = 0; k < this.m_contactBuffer.count; ++k) {\n      const contact = this.m_contactBuffer.data[k];\n      ///ParticlePair pair;\n      ///pair.first = contact.GetIndexA();\n      ///pair.second = contact.GetIndexB();\n      ///const int32 itemIndex = particlePairs.Find(pair);\n      const itemIndex = -1; // TODO\n      if (itemIndex >= 0) {\n        // Already touching, ignore this contact.\n        particlePairs.Invalidate(itemIndex);\n      } else {\n        // Just started touching, inform the listener.\n        contactListener.BeginContactParticleParticle(this, contact);\n      }\n    }\n\n    // Report particles that are no longer touching.\n    // That is, any pairs that were not invalidated above.\n    ///const int32 pairCount = particlePairs.GetCount();\n    ///const ParticlePair* const pairs = particlePairs.GetBuffer();\n    ///const int8* const valid = particlePairs.GetValidBuffer();\n    ///for (int32 i = 0; i < pairCount; ++i)\n    ///{\n    ///  if (valid[i])\n    ///  {\n    ///    contactListener.EndContactParticleParticle(this, pairs[i].first, pairs[i].second);\n    ///  }\n    ///}\n\n    throw new Error(); // TODO: notify\n  }\n\n  public static b2ParticleContactIsZombie(contact: b2ParticleContact): boolean {\n    return (contact.flags & b2ParticleFlag.b2_zombieParticle) === b2ParticleFlag.b2_zombieParticle;\n  }\n\n  public UpdateContacts(exceptZombie: boolean): void {\n    this.UpdateProxies(this.m_proxyBuffer);\n    this.SortProxies(this.m_proxyBuffer);\n\n    const particlePairs = new b2ParticlePairSet(); // TODO: static\n    this.NotifyContactListenerPreContact(particlePairs);\n\n    this.FindContacts(this.m_contactBuffer);\n    this.FilterContacts(this.m_contactBuffer);\n\n    this.NotifyContactListenerPostContact(particlePairs);\n\n    if (exceptZombie) {\n      this.m_contactBuffer.RemoveIf(b2ParticleSystem.b2ParticleContactIsZombie);\n    }\n  }\n\n  public NotifyBodyContactListenerPreContact(fixtureSet: b2ParticleSystem_FixtureParticleSet): void {\n    const contactListener = this.GetFixtureContactListener();\n    if (contactListener === null) {\n      return;\n    }\n\n    ///fixtureSet.Initialize(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.GetCount(), GetFlagsBuffer());\n    fixtureSet.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);\n\n    throw new Error(); // TODO: notify\n  }\n\n  public NotifyBodyContactListenerPostContact(fixtureSet: b2ParticleSystem_FixtureParticleSet): void {\n    const contactListener = this.GetFixtureContactListener();\n    if (contactListener === null) {\n      return;\n    }\n\n    // Loop through all new contacts, reporting any new ones, and\n    // \"invalidating\" the ones that still exist.\n    ///for (b2ParticleBodyContact* contact = m_bodyContactBuffer.Begin(); contact !== m_bodyContactBuffer.End(); ++contact)\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      // DEBUG: b2Assert(contact !== null);\n      ///FixtureParticle fixtureParticleToFind;\n      ///fixtureParticleToFind.first = contact.fixture;\n      ///fixtureParticleToFind.second = contact.index;\n      ///const int32 index = fixtureSet.Find(fixtureParticleToFind);\n      const index = -1; // TODO\n      if (index >= 0) {\n        // Already touching remove this from the set.\n        fixtureSet.Invalidate(index);\n      } else {\n        // Just started touching, report it!\n        contactListener.BeginContactFixtureParticle(this, contact);\n      }\n    }\n\n    // If the contact listener is enabled, report all fixtures that are no\n    // longer in contact with particles.\n    ///const FixtureParticle* const fixtureParticles = fixtureSet.GetBuffer();\n    ///const int8* const fixtureParticlesValid = fixtureSet.GetValidBuffer();\n    ///const int32 fixtureParticleCount = fixtureSet.GetCount();\n    ///for (int32 i = 0; i < fixtureParticleCount; ++i)\n    ///{\n    ///  if (fixtureParticlesValid[i])\n    ///  {\n    ///    const FixtureParticle* const fixtureParticle = &fixtureParticles[i];\n    ///    contactListener.EndContactFixtureParticle(fixtureParticle.first, this, fixtureParticle.second);\n    ///  }\n    ///}\n\n    throw new Error(); // TODO: notify\n  }\n\n  public UpdateBodyContacts(): void {\n    const s_aabb = b2ParticleSystem.UpdateBodyContacts_s_aabb;\n\n    // If the particle contact listener is enabled, generate a set of\n    // fixture / particle contacts.\n    const fixtureSet = new b2ParticleSystem_FixtureParticleSet(); // TODO: static\n    this.NotifyBodyContactListenerPreContact(fixtureSet);\n\n    if (this.m_stuckThreshold > 0) {\n      const particleCount = this.GetParticleCount();\n      for (let i = 0; i < particleCount; i++) {\n        // Detect stuck particles, see comment in\n        // b2ParticleSystem::DetectStuckParticle()\n        this.m_bodyContactCountBuffer.data[i] = 0;\n        if (this.m_timestamp > (this.m_lastBodyContactStepBuffer.data[i] + 1)) {\n          this.m_consecutiveContactStepsBuffer.data[i] = 0;\n        }\n      }\n    }\n    this.m_bodyContactBuffer.SetCount(0);\n    this.m_stuckParticleBuffer.SetCount(0);\n\n    const aabb = s_aabb;\n    this.ComputeAABB(aabb);\n\n    if (this.UpdateBodyContacts_callback === null) {\n      this.UpdateBodyContacts_callback = new b2ParticleSystem_UpdateBodyContactsCallback(this);\n    }\n    const callback = this.UpdateBodyContacts_callback;\n    callback.m_contactFilter = this.GetFixtureContactFilter();\n    this.m_world.QueryAABB(callback, aabb);\n\n    if (this.m_def.strictContactCheck) {\n      this.RemoveSpuriousBodyContacts();\n    }\n\n    this.NotifyBodyContactListenerPostContact(fixtureSet);\n  }\n  public static readonly UpdateBodyContacts_s_aabb = new b2AABB();\n  public UpdateBodyContacts_callback: b2ParticleSystem_UpdateBodyContactsCallback | null = null;\n\n  public Solve(step: b2TimeStep): void {\n    const s_subStep = b2ParticleSystem.Solve_s_subStep;\n    if (this.m_count === 0) {\n      return;\n    }\n    // If particle lifetimes are enabled, destroy particles that are too old.\n    if (this.m_expirationTimeBuffer.data) {\n      this.SolveLifetimes(step);\n    }\n    if (this.m_allParticleFlags & b2ParticleFlag.b2_zombieParticle) {\n      this.SolveZombie();\n    }\n    if (this.m_needsUpdateAllParticleFlags) {\n      this.UpdateAllParticleFlags();\n    }\n    if (this.m_needsUpdateAllGroupFlags) {\n      this.UpdateAllGroupFlags();\n    }\n    if (this.m_paused) {\n      return;\n    }\n    for (this.m_iterationIndex = 0; this.m_iterationIndex < step.particleIterations; this.m_iterationIndex++) {\n      ++this.m_timestamp;\n      const subStep = s_subStep.Copy(step);\n      subStep.dt /= step.particleIterations;\n      subStep.inv_dt *= step.particleIterations;\n      this.UpdateContacts(false);\n      this.UpdateBodyContacts();\n      this.ComputeWeight();\n      if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\n        this.ComputeDepth();\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_reactiveParticle) {\n        this.UpdatePairsAndTriadsWithReactiveParticles();\n      }\n      if (this.m_hasForce) {\n        this.SolveForce(subStep);\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_viscousParticle) {\n        this.SolveViscous();\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_repulsiveParticle) {\n        this.SolveRepulsive(subStep);\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_powderParticle) {\n        this.SolvePowder(subStep);\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_tensileParticle) {\n        this.SolveTensile(subStep);\n      }\n      if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\n        this.SolveSolid(subStep);\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_colorMixingParticle) {\n        this.SolveColorMixing();\n      }\n      this.SolveGravity(subStep);\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\n        this.SolveStaticPressure(subStep);\n      }\n      this.SolvePressure(subStep);\n      this.SolveDamping(subStep);\n      if (this.m_allParticleFlags & b2ParticleSystem.k_extraDampingFlags) {\n        this.SolveExtraDamping();\n      }\n      // SolveElastic and SolveSpring refer the current velocities for\n      // numerical stability, they should be called as late as possible.\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_elasticParticle) {\n        this.SolveElastic(subStep);\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_springParticle) {\n        this.SolveSpring(subStep);\n      }\n      this.LimitVelocity(subStep);\n      if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\n        this.SolveRigidDamping();\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_barrierParticle) {\n        this.SolveBarrier(subStep);\n      }\n      // SolveCollision, SolveRigid and SolveWall should be called after\n      // other force functions because they may require particles to have\n      // specific velocities.\n      this.SolveCollision(subStep);\n      if (this.m_allGroupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\n        this.SolveRigid(subStep);\n      }\n      if (this.m_allParticleFlags & b2ParticleFlag.b2_wallParticle) {\n        this.SolveWall();\n      }\n      // The particle positions can be updated only at the end of substep.\n      for (let i = 0; i < this.m_count; i++) {\n        ///m_positionBuffer.data[i] += subStep.dt * m_velocityBuffer.data[i];\n        this.m_positionBuffer.data[i].SelfMulAdd(subStep.dt, this.m_velocityBuffer.data[i]);\n      }\n    }\n  }\n  public static readonly Solve_s_subStep = new b2TimeStep();\n\n  public SolveCollision(step: b2TimeStep): void {\n    const s_aabb = b2ParticleSystem.SolveCollision_s_aabb;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n\n    // This function detects particles which are crossing boundary of bodies\n    // and modifies velocities of them so that they will move just in front of\n    // boundary. This function function also applies the reaction force to\n    // bodies as precisely as the numerical stability is kept.\n    const aabb = s_aabb;\n    aabb.lowerBound.x = +b2_maxFloat;\n    aabb.lowerBound.y = +b2_maxFloat;\n    aabb.upperBound.x = -b2_maxFloat;\n    aabb.upperBound.y = -b2_maxFloat;\n    for (let i = 0; i < this.m_count; i++) {\n      const v = vel_data[i];\n      const p1 = pos_data[i];\n      ///let p2 = p1 + step.dt * v;\n      const p2_x = p1.x + step.dt * v.x;\n      const p2_y = p1.y + step.dt * v.y;\n      ///aabb.lowerBound = b2Min(aabb.lowerBound, b2Min(p1, p2));\n      aabb.lowerBound.x = b2Min(aabb.lowerBound.x, b2Min(p1.x, p2_x));\n      aabb.lowerBound.y = b2Min(aabb.lowerBound.y, b2Min(p1.y, p2_y));\n      ///aabb.upperBound = b2Max(aabb.upperBound, b2Max(p1, p2));\n      aabb.upperBound.x = b2Max(aabb.upperBound.x, b2Max(p1.x, p2_x));\n      aabb.upperBound.y = b2Max(aabb.upperBound.y, b2Max(p1.y, p2_y));\n    }\n    if (this.SolveCollision_callback === null) {\n      this.SolveCollision_callback = new b2ParticleSystem_SolveCollisionCallback(this, step);\n    }\n    const callback = this.SolveCollision_callback;\n    callback.m_step = step;\n    this.m_world.QueryAABB(callback, aabb);\n  }\n  public static readonly SolveCollision_s_aabb = new b2AABB();\n  public SolveCollision_callback: b2ParticleSystem_SolveCollisionCallback | null = null;\n\n  public LimitVelocity(step: b2TimeStep): void {\n    const vel_data = this.m_velocityBuffer.data;\n    const criticalVelocitySquared = this.GetCriticalVelocitySquared(step);\n    for (let i = 0; i < this.m_count; i++) {\n      const v = vel_data[i];\n      const v2 = b2Vec2.DotVV(v, v);\n      if (v2 > criticalVelocitySquared) {\n        ///v *= b2Sqrt(criticalVelocitySquared / v2);\n        v.SelfMul(b2Sqrt(criticalVelocitySquared / v2));\n      }\n    }\n  }\n\n  public SolveGravity(step: b2TimeStep): void {\n    const s_gravity = b2ParticleSystem.SolveGravity_s_gravity;\n    const vel_data = this.m_velocityBuffer.data;\n    ///b2Vec2 gravity = step.dt * m_def.gravityScale * m_world.GetGravity();\n    const gravity = b2Vec2.MulSV(step.dt * this.m_def.gravityScale, this.m_world.GetGravity(), s_gravity);\n    for (let i = 0; i < this.m_count; i++) {\n      vel_data[i].SelfAdd(gravity);\n    }\n  }\n  public static readonly SolveGravity_s_gravity = new b2Vec2();\n\n  public SolveBarrier(step: b2TimeStep): void {\n    const s_aabb = b2ParticleSystem.SolveBarrier_s_aabb;\n    const s_va = b2ParticleSystem.SolveBarrier_s_va;\n    const s_vb = b2ParticleSystem.SolveBarrier_s_vb;\n    const s_pba = b2ParticleSystem.SolveBarrier_s_pba;\n    const s_vba = b2ParticleSystem.SolveBarrier_s_vba;\n    const s_vc = b2ParticleSystem.SolveBarrier_s_vc;\n    const s_pca = b2ParticleSystem.SolveBarrier_s_pca;\n    const s_vca = b2ParticleSystem.SolveBarrier_s_vca;\n    const s_qba = b2ParticleSystem.SolveBarrier_s_qba;\n    const s_qca = b2ParticleSystem.SolveBarrier_s_qca;\n    const s_dv = b2ParticleSystem.SolveBarrier_s_dv;\n    const s_f = b2ParticleSystem.SolveBarrier_s_f;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    // If a particle is passing between paired barrier particles,\n    // its velocity will be decelerated to avoid passing.\n    for (let i = 0; i < this.m_count; i++) {\n      const flags = this.m_flagsBuffer.data[i];\n      ///if ((flags & b2ParticleSystem.k_barrierWallFlags) === b2ParticleSystem.k_barrierWallFlags)\n      if ((flags & b2ParticleSystem.k_barrierWallFlags) !== 0) {\n        vel_data[i].SetZero();\n      }\n    }\n    const tmax = b2_barrierCollisionTime * step.dt;\n    const mass = this.GetParticleMass();\n    for (let k = 0; k < this.m_pairBuffer.count; k++) {\n      const pair = this.m_pairBuffer.data[k];\n      if (pair.flags & b2ParticleFlag.b2_barrierParticle) {\n        const a = pair.indexA;\n        const b = pair.indexB;\n        const pa = pos_data[a];\n        const pb = pos_data[b];\n        /// b2AABB aabb;\n        const aabb = s_aabb;\n        ///aabb.lowerBound = b2Min(pa, pb);\n        b2Vec2.MinV(pa, pb, aabb.lowerBound);\n        ///aabb.upperBound = b2Max(pa, pb);\n        b2Vec2.MaxV(pa, pb, aabb.upperBound);\n        const aGroup = this.m_groupBuffer[a];\n        const bGroup = this.m_groupBuffer[b];\n        ///b2Vec2 va = GetLinearVelocity(aGroup, a, pa);\n        const va = this.GetLinearVelocity(aGroup, a, pa, s_va);\n        ///b2Vec2 vb = GetLinearVelocity(bGroup, b, pb);\n        const vb = this.GetLinearVelocity(bGroup, b, pb, s_vb);\n        ///b2Vec2 pba = pb - pa;\n        const pba = b2Vec2.SubVV(pb, pa, s_pba);\n        ///b2Vec2 vba = vb - va;\n        const vba = b2Vec2.SubVV(vb, va, s_vba);\n        ///InsideBoundsEnumerator enumerator = GetInsideBoundsEnumerator(aabb);\n        const enumerator = this.GetInsideBoundsEnumerator(aabb);\n        let c: number;\n        while ((c = enumerator.GetNext()) >= 0) {\n          const pc = pos_data[c];\n          const cGroup = this.m_groupBuffer[c];\n          if (aGroup !== cGroup && bGroup !== cGroup) {\n            ///b2Vec2 vc = GetLinearVelocity(cGroup, c, pc);\n            const vc = this.GetLinearVelocity(cGroup, c, pc, s_vc);\n            // Solve the equation below:\n            //   (1-s)*(pa+t*va)+s*(pb+t*vb) = pc+t*vc\n            // which expresses that the particle c will pass a line\n            // connecting the particles a and b at the time of t.\n            // if s is between 0 and 1, c will pass between a and b.\n            ///b2Vec2 pca = pc - pa;\n            const pca = b2Vec2.SubVV(pc, pa, s_pca);\n            ///b2Vec2 vca = vc - va;\n            const vca = b2Vec2.SubVV(vc, va, s_vca);\n            const e2 = b2Vec2.CrossVV(vba, vca);\n            const e1 = b2Vec2.CrossVV(pba, vca) - b2Vec2.CrossVV(pca, vba);\n            const e0 = b2Vec2.CrossVV(pba, pca);\n            let s: number, t: number;\n            ///b2Vec2 qba, qca;\n            const qba = s_qba,\n              qca = s_qca;\n            if (e2 === 0) {\n              if (e1 === 0) { continue; }\n              t = -e0 / e1;\n              if (!(t >= 0 && t < tmax)) { continue; }\n              ///qba = pba + t * vba;\n              b2Vec2.AddVMulSV(pba, t, vba, qba);\n              ///qca = pca + t * vca;\n              b2Vec2.AddVMulSV(pca, t, vca, qca);\n              s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\n              if (!(s >= 0 && s <= 1)) { continue; }\n            } else {\n              const det = e1 * e1 - 4 * e0 * e2;\n              if (det < 0) { continue; }\n              const sqrtDet = b2Sqrt(det);\n              let t1 = (-e1 - sqrtDet) / (2 * e2);\n              let t2 = (-e1 + sqrtDet) / (2 * e2);\n              ///if (t1 > t2) b2Swap(t1, t2);\n              if (t1 > t2) {\n                const tmp = t1;\n                t1 = t2;\n                t2 = tmp;\n              }\n              t = t1;\n              ///qba = pba + t * vba;\n              b2Vec2.AddVMulSV(pba, t, vba, qba);\n              ///qca = pca + t * vca;\n              b2Vec2.AddVMulSV(pca, t, vca, qca);\n              ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\n              s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\n              if (!(t >= 0 && t < tmax && s >= 0 && s <= 1)) {\n                t = t2;\n                if (!(t >= 0 && t < tmax)) { continue; }\n                ///qba = pba + t * vba;\n                b2Vec2.AddVMulSV(pba, t, vba, qba);\n                ///qca = pca + t * vca;\n                b2Vec2.AddVMulSV(pca, t, vca, qca);\n                ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\n                s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\n                if (!(s >= 0 && s <= 1)) { continue; }\n              }\n            }\n            // Apply a force to particle c so that it will have the\n            // interpolated velocity at the collision point on line ab.\n            ///b2Vec2 dv = va + s * vba - vc;\n            const dv = s_dv;\n            dv.x = va.x + s * vba.x - vc.x;\n            dv.y = va.y + s * vba.y - vc.y;\n            ///b2Vec2 f = GetParticleMass() * dv;\n            const f = b2Vec2.MulSV(mass, dv, s_f);\n            if (cGroup && this.IsRigidGroup(cGroup)) {\n              // If c belongs to a rigid group, the force will be\n              // distributed in the group.\n              const mass = cGroup.GetMass();\n              const inertia = cGroup.GetInertia();\n              if (mass > 0) {\n                ///cGroup.m_linearVelocity += 1 / mass * f;\n                cGroup.m_linearVelocity.SelfMulAdd(1 / mass, f);\n              }\n              if (inertia > 0) {\n                ///cGroup.m_angularVelocity += b2Cross(pc - cGroup.GetCenter(), f) / inertia;\n                cGroup.m_angularVelocity += b2Vec2.CrossVV(\n                  b2Vec2.SubVV(pc, cGroup.GetCenter(), b2Vec2.s_t0),\n                  f) / inertia;\n              }\n            } else {\n              ///m_velocityBuffer.data[c] += dv;\n              vel_data[c].SelfAdd(dv);\n            }\n            // Apply a reversed force to particle c after particle\n            // movement so that momentum will be preserved.\n            ///ParticleApplyForce(c, -step.inv_dt * f);\n            this.ParticleApplyForce(c, f.SelfMul(-step.inv_dt));\n          }\n        }\n      }\n    }\n  }\n  public static readonly SolveBarrier_s_aabb = new b2AABB();\n  public static readonly SolveBarrier_s_va = new b2Vec2();\n  public static readonly SolveBarrier_s_vb = new b2Vec2();\n  public static readonly SolveBarrier_s_pba = new b2Vec2();\n  public static readonly SolveBarrier_s_vba = new b2Vec2();\n  public static readonly SolveBarrier_s_vc = new b2Vec2();\n  public static readonly SolveBarrier_s_pca = new b2Vec2();\n  public static readonly SolveBarrier_s_vca = new b2Vec2();\n  public static readonly SolveBarrier_s_qba = new b2Vec2();\n  public static readonly SolveBarrier_s_qca = new b2Vec2();\n  public static readonly SolveBarrier_s_dv = new b2Vec2();\n  public static readonly SolveBarrier_s_f = new b2Vec2();\n\n  public SolveStaticPressure(step: b2TimeStep): void {\n    this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);\n    const criticalPressure = this.GetCriticalPressure(step);\n    const pressurePerWeight = this.m_def.staticPressureStrength * criticalPressure;\n    const maxPressure = b2_maxParticlePressure * criticalPressure;\n    const relaxation = this.m_def.staticPressureRelaxation;\n    /// Compute pressure satisfying the modified Poisson equation:\n    ///   Sum_for_j((p_i - p_j) * w_ij) + relaxation * p_i =\n    ///   pressurePerWeight * (w_i - b2_minParticleWeight)\n    /// by iterating the calculation:\n    ///   p_i = (Sum_for_j(p_j * w_ij) + pressurePerWeight *\n    ///         (w_i - b2_minParticleWeight)) / (w_i + relaxation)\n    /// where\n    ///   p_i and p_j are static pressure of particle i and j\n    ///   w_ij is contact weight between particle i and j\n    ///   w_i is sum of contact weight of particle i\n    for (let t = 0; t < this.m_def.staticPressureIterations; t++) {\n      ///memset(m_accumulationBuffer, 0, sizeof(*m_accumulationBuffer) * m_count);\n      for (let i = 0; i < this.m_count; i++) {\n        this.m_accumulationBuffer[i] = 0;\n      }\n      for (let k = 0; k < this.m_contactBuffer.count; k++) {\n        const contact = this.m_contactBuffer.data[k];\n        if (contact.flags & b2ParticleFlag.b2_staticPressureParticle) {\n          const a = contact.indexA;\n          const b = contact.indexB;\n          const w = contact.weight;\n          this.m_accumulationBuffer[a] += w * this.m_staticPressureBuffer[b]; // a <- b\n          this.m_accumulationBuffer[b] += w * this.m_staticPressureBuffer[a]; // b <- a\n        }\n      }\n      for (let i = 0; i < this.m_count; i++) {\n        const w = this.m_weightBuffer[i];\n        if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\n          const wh = this.m_accumulationBuffer[i];\n          const h =\n            (wh + pressurePerWeight * (w - b2_minParticleWeight)) /\n            (w + relaxation);\n          this.m_staticPressureBuffer[i] = b2Clamp(h, 0.0, maxPressure);\n        } else {\n          this.m_staticPressureBuffer[i] = 0;\n        }\n      }\n    }\n  }\n\n  public ComputeWeight(): void {\n    // calculates the sum of contact-weights for each particle\n    // that means dimensionless density\n    ///memset(m_weightBuffer, 0, sizeof(*m_weightBuffer) * m_count);\n    for (let k = 0; k < this.m_count; k++) {\n      this.m_weightBuffer[k] = 0;\n    }\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      const a = contact.index;\n      const w = contact.weight;\n      this.m_weightBuffer[a] += w;\n    }\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      const w = contact.weight;\n      this.m_weightBuffer[a] += w;\n      this.m_weightBuffer[b] += w;\n    }\n  }\n\n  public SolvePressure(step: b2TimeStep): void {\n    const s_f = b2ParticleSystem.SolvePressure_s_f;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    // calculates pressure as a linear function of density\n    const criticalPressure = this.GetCriticalPressure(step);\n    const pressurePerWeight = this.m_def.pressureStrength * criticalPressure;\n    const maxPressure = b2_maxParticlePressure * criticalPressure;\n    for (let i = 0; i < this.m_count; i++) {\n      const w = this.m_weightBuffer[i];\n      const h = pressurePerWeight * b2Max(0.0, w - b2_minParticleWeight);\n      this.m_accumulationBuffer[i] = b2Min(h, maxPressure);\n    }\n    // ignores particles which have their own repulsive force\n    if (this.m_allParticleFlags & b2ParticleSystem.k_noPressureFlags) {\n      for (let i = 0; i < this.m_count; i++) {\n        if (this.m_flagsBuffer.data[i] & b2ParticleSystem.k_noPressureFlags) {\n          this.m_accumulationBuffer[i] = 0;\n        }\n      }\n    }\n    // static pressure\n    if (this.m_allParticleFlags & b2ParticleFlag.b2_staticPressureParticle) {\n      // DEBUG: b2Assert(this.m_staticPressureBuffer !== null);\n      for (let i = 0; i < this.m_count; i++) {\n        if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_staticPressureParticle) {\n          this.m_accumulationBuffer[i] += this.m_staticPressureBuffer[i];\n        }\n      }\n    }\n    // applies pressure between each particles in contact\n    const velocityPerPressure = step.dt / (this.m_def.density * this.m_particleDiameter);\n    const inv_mass = this.GetParticleInvMass();\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      const a = contact.index;\n      const b = contact.body;\n      const w = contact.weight;\n      const m = contact.mass;\n      const n = contact.normal;\n      const p = pos_data[a];\n      const h = this.m_accumulationBuffer[a] + pressurePerWeight * w;\n      ///b2Vec2 f = velocityPerPressure * w * m * h * n;\n      const f = b2Vec2.MulSV(velocityPerPressure * w * m * h, n, s_f);\n      ///m_velocityBuffer.data[a] -= GetParticleInvMass() * f;\n      vel_data[a].SelfMulSub(inv_mass, f);\n      b.ApplyLinearImpulse(f, p, true);\n    }\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      const w = contact.weight;\n      const n = contact.normal;\n      const h = this.m_accumulationBuffer[a] + this.m_accumulationBuffer[b];\n      ///b2Vec2 f = velocityPerPressure * w * h * n;\n      const f = b2Vec2.MulSV(velocityPerPressure * w * h, n, s_f);\n      ///m_velocityBuffer.data[a] -= f;\n      vel_data[a].SelfSub(f);\n      ///m_velocityBuffer.data[b] += f;\n      vel_data[b].SelfAdd(f);\n    }\n  }\n  public static readonly SolvePressure_s_f = new b2Vec2();\n\n  public SolveDamping(step: b2TimeStep): void {\n    const s_v = b2ParticleSystem.SolveDamping_s_v;\n    const s_f = b2ParticleSystem.SolveDamping_s_f;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    // reduces normal velocity of each contact\n    const linearDamping = this.m_def.dampingStrength;\n    const quadraticDamping = 1 / this.GetCriticalVelocity(step);\n    const inv_mass = this.GetParticleInvMass();\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      const a = contact.index;\n      const b = contact.body;\n      const w = contact.weight;\n      const m = contact.mass;\n      const n = contact.normal;\n      const p = pos_data[a];\n      ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\n      const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\n      const vn = b2Vec2.DotVV(v, n);\n      if (vn < 0) {\n        const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\n        ///b2Vec2 f = damping * m * vn * n;\n        const f = b2Vec2.MulSV(damping * m * vn, n, s_f);\n        ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\n        vel_data[a].SelfMulAdd(inv_mass, f);\n        ///b.ApplyLinearImpulse(-f, p, true);\n        b.ApplyLinearImpulse(f.SelfNeg(), p, true);\n      }\n    }\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      const w = contact.weight;\n      const n = contact.normal;\n      ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\n      const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\n      const vn = b2Vec2.DotVV(v, n);\n      if (vn < 0) {\n        ///float32 damping = b2Max(linearDamping * w, b2Min(- quadraticDamping * vn, 0.5f));\n        const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\n        ///b2Vec2 f = damping * vn * n;\n        const f = b2Vec2.MulSV(damping * vn, n, s_f);\n        ///this.m_velocityBuffer.data[a] += f;\n        vel_data[a].SelfAdd(f);\n        ///this.m_velocityBuffer.data[b] -= f;\n        vel_data[b].SelfSub(f);\n      }\n    }\n  }\n  public static readonly SolveDamping_s_v = new b2Vec2();\n  public static readonly SolveDamping_s_f = new b2Vec2();\n\n  public SolveRigidDamping(): void {\n    const s_t0 = b2ParticleSystem.SolveRigidDamping_s_t0;\n    const s_t1 = b2ParticleSystem.SolveRigidDamping_s_t1;\n    const s_p = b2ParticleSystem.SolveRigidDamping_s_p;\n    const s_v = b2ParticleSystem.SolveRigidDamping_s_v;\n    const invMassA = [0.0],\n      invInertiaA = [0.0],\n      tangentDistanceA = [0.0]; // TODO: static\n    const invMassB = [0.0],\n      invInertiaB = [0.0],\n      tangentDistanceB = [0.0]; // TODO: static\n    // Apply impulse to rigid particle groups colliding with other objects\n    // to reduce relative velocity at the colliding point.\n    const pos_data = this.m_positionBuffer.data;\n    const damping = this.m_def.dampingStrength;\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      const a = contact.index;\n      const aGroup = this.m_groupBuffer[a];\n      if (aGroup && this.IsRigidGroup(aGroup)) {\n        const b = contact.body;\n        const n = contact.normal;\n        const w = contact.weight;\n        const p = pos_data[a];\n        ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - aGroup.GetLinearVelocityFromWorldPoint(p);\n        const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, s_t0), aGroup.GetLinearVelocityFromWorldPoint(p, s_t1), s_v);\n        const vn = b2Vec2.DotVV(v, n);\n        if (vn < 0) {\n          // The group's average velocity at particle position 'p' is pushing\n          // the particle into the body.\n          ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, true, aGroup, a, p, n);\n          this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, p, n);\n          // Calculate b.m_I from public functions of b2Body.\n          ///this.InitDampingParameter(&invMassB, &invInertiaB, &tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\n          this.InitDampingParameter(invMassB, invInertiaB, tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\n          ///float32 f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\n          const f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\n          ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, f, n);\n          this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], true, aGroup, a, f, n);\n          ///b.ApplyLinearImpulse(-f * n, p, true);\n          b.ApplyLinearImpulse(b2Vec2.MulSV(-f, n, b2Vec2.s_t0), p, true);\n        }\n      }\n    }\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      const n = contact.normal;\n      const w = contact.weight;\n      const aGroup = this.m_groupBuffer[a];\n      const bGroup = this.m_groupBuffer[b];\n      const aRigid = this.IsRigidGroup(aGroup);\n      const bRigid = this.IsRigidGroup(bGroup);\n      if (aGroup !== bGroup && (aRigid || bRigid)) {\n        ///b2Vec2 p = 0.5f * (this.m_positionBuffer.data[a] + this.m_positionBuffer.data[b]);\n        const p = b2Vec2.MidVV(pos_data[a], pos_data[b], s_p);\n        ///b2Vec2 v = GetLinearVelocity(bGroup, b, p) - GetLinearVelocity(aGroup, a, p);\n        const v = b2Vec2.SubVV(this.GetLinearVelocity(bGroup, b, p, s_t0), this.GetLinearVelocity(aGroup, a, p, s_t1), s_v);\n        const vn = b2Vec2.DotVV(v, n);\n        if (vn < 0) {\n          ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, aRigid, aGroup, a, p, n);\n          this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, p, n);\n          ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassB, &invInertiaB, &tangentDistanceB, bRigid, bGroup, b, p, n);\n          this.InitDampingParameterWithRigidGroupOrParticle(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, p, n);\n          ///float32 f = damping * w * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\n          const f = damping * w * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\n          ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, f, n);\n          this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], aRigid, aGroup, a, f, n);\n          ///this.ApplyDamping(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, -f, n);\n          this.ApplyDamping(invMassB[0], invInertiaB[0], tangentDistanceB[0], bRigid, bGroup, b, -f, n);\n        }\n      }\n    }\n  }\n  public static readonly SolveRigidDamping_s_t0 = new b2Vec2();\n  public static readonly SolveRigidDamping_s_t1 = new b2Vec2();\n  public static readonly SolveRigidDamping_s_p = new b2Vec2();\n  public static readonly SolveRigidDamping_s_v = new b2Vec2();\n\n  public SolveExtraDamping(): void {\n    const s_v = b2ParticleSystem.SolveExtraDamping_s_v;\n    const s_f = b2ParticleSystem.SolveExtraDamping_s_f;\n    const vel_data = this.m_velocityBuffer.data;\n    // Applies additional damping force between bodies and particles which can\n    // produce strong repulsive force. Applying damping force multiple times\n    // is effective in suppressing vibration.\n    const pos_data = this.m_positionBuffer.data;\n    const inv_mass = this.GetParticleInvMass();\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      const a = contact.index;\n      if (this.m_flagsBuffer.data[a] & b2ParticleSystem.k_extraDampingFlags) {\n        const b = contact.body;\n        const m = contact.mass;\n        const n = contact.normal;\n        const p = pos_data[a];\n        ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\n        const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\n        ///float32 vn = b2Dot(v, n);\n        const vn = b2Vec2.DotVV(v, n);\n        if (vn < 0) {\n          ///b2Vec2 f = 0.5f * m * vn * n;\n          const f = b2Vec2.MulSV(0.5 * m * vn, n, s_f);\n          ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\n          vel_data[a].SelfMulAdd(inv_mass, f);\n          ///b.ApplyLinearImpulse(-f, p, true);\n          b.ApplyLinearImpulse(f.SelfNeg(), p, true);\n        }\n      }\n    }\n  }\n  public static readonly SolveExtraDamping_s_v = new b2Vec2();\n  public static readonly SolveExtraDamping_s_f = new b2Vec2();\n\n  public SolveWall(): void {\n    const vel_data = this.m_velocityBuffer.data;\n    for (let i = 0; i < this.m_count; i++) {\n      if (this.m_flagsBuffer.data[i] & b2ParticleFlag.b2_wallParticle) {\n        vel_data[i].SetZero();\n      }\n    }\n  }\n\n  public SolveRigid(step: b2TimeStep): void {\n    const s_position = b2ParticleSystem.SolveRigid_s_position;\n    const s_rotation = b2ParticleSystem.SolveRigid_s_rotation;\n    const s_transform = b2ParticleSystem.SolveRigid_s_transform;\n    const s_velocityTransform = b2ParticleSystem.SolveRigid_s_velocityTransform;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    for (let group = this.m_groupList; group; group = group.GetNext()) {\n      if (group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) {\n        group.UpdateStatistics();\n        ///b2Rot rotation(step.dt * group.m_angularVelocity);\n        const rotation = s_rotation;\n        rotation.SetAngle(step.dt * group.m_angularVelocity);\n        ///b2Transform transform(group.m_center + step.dt * group.m_linearVelocity - b2Mul(rotation, group.m_center), rotation);\n        const position = b2Vec2.AddVV(\n          group.m_center,\n          b2Vec2.SubVV(\n            b2Vec2.MulSV(step.dt, group.m_linearVelocity, b2Vec2.s_t0),\n            b2Rot.MulRV(rotation, group.m_center, b2Vec2.s_t1),\n            b2Vec2.s_t0),\n          s_position);\n        const transform = s_transform;\n        transform.SetPositionRotation(position, rotation);\n        ///group.m_transform = b2Mul(transform, group.m_transform);\n        b2Transform.MulXX(transform, group.m_transform, group.m_transform);\n        const velocityTransform = s_velocityTransform;\n        velocityTransform.p.x = step.inv_dt * transform.p.x;\n        velocityTransform.p.y = step.inv_dt * transform.p.y;\n        velocityTransform.q.s = step.inv_dt * transform.q.s;\n        velocityTransform.q.c = step.inv_dt * (transform.q.c - 1);\n        for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\n          ///m_velocityBuffer.data[i] = b2Mul(velocityTransform, m_positionBuffer.data[i]);\n          b2Transform.MulXV(velocityTransform, pos_data[i], vel_data[i]);\n        }\n      }\n    }\n  }\n  public static readonly SolveRigid_s_position = new b2Vec2();\n  public static readonly SolveRigid_s_rotation = new b2Rot();\n  public static readonly SolveRigid_s_transform = new b2Transform();\n  public static readonly SolveRigid_s_velocityTransform = new b2Transform();\n\n  public SolveElastic(step: b2TimeStep): void {\n    const s_pa = b2ParticleSystem.SolveElastic_s_pa;\n    const s_pb = b2ParticleSystem.SolveElastic_s_pb;\n    const s_pc = b2ParticleSystem.SolveElastic_s_pc;\n    const s_r = b2ParticleSystem.SolveElastic_s_r;\n    const s_t0 = b2ParticleSystem.SolveElastic_s_t0;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    const elasticStrength = step.inv_dt * this.m_def.elasticStrength;\n    for (let k = 0; k < this.m_triadBuffer.count; k++) {\n      const triad = this.m_triadBuffer.data[k];\n      if (triad.flags & b2ParticleFlag.b2_elasticParticle) {\n        const a = triad.indexA;\n        const b = triad.indexB;\n        const c = triad.indexC;\n        const oa = triad.pa;\n        const ob = triad.pb;\n        const oc = triad.pc;\n        ///b2Vec2 pa = m_positionBuffer.data[a];\n        const pa = s_pa.Copy(pos_data[a]);\n        ///b2Vec2 pb = m_positionBuffer.data[b];\n        const pb = s_pb.Copy(pos_data[b]);\n        ///b2Vec2 pc = m_positionBuffer.data[c];\n        const pc = s_pc.Copy(pos_data[c]);\n        const va = vel_data[a];\n        const vb = vel_data[b];\n        const vc = vel_data[c];\n        ///pa += step.dt * va;\n        pa.SelfMulAdd(step.dt, va);\n        ///pb += step.dt * vb;\n        pb.SelfMulAdd(step.dt, vb);\n        ///pc += step.dt * vc;\n        pc.SelfMulAdd(step.dt, vc);\n        ///b2Vec2 midPoint = (float32) 1 / 3 * (pa + pb + pc);\n        const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\n        const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\n        ///pa -= midPoint;\n        pa.x -= midPoint_x;\n        pa.y -= midPoint_y;\n        ///pb -= midPoint;\n        pb.x -= midPoint_x;\n        pb.y -= midPoint_y;\n        ///pc -= midPoint;\n        pc.x -= midPoint_x;\n        pc.y -= midPoint_y;\n        ///b2Rot r;\n        const r = s_r;\n        r.s = b2Vec2.CrossVV(oa, pa) + b2Vec2.CrossVV(ob, pb) + b2Vec2.CrossVV(oc, pc);\n        r.c = b2Vec2.DotVV(oa, pa) + b2Vec2.DotVV(ob, pb) + b2Vec2.DotVV(oc, pc);\n        const r2 = r.s * r.s + r.c * r.c;\n        let invR = b2InvSqrt(r2);\n        if (!isFinite(invR)) {\n          invR = 1.98177537e+019;\n        }\n        r.s *= invR;\n        r.c *= invR;\n        ///r.setAngle = Math.atan2(r.s, r.c); // TODO: optimize\n        const strength = elasticStrength * triad.strength;\n        ///va += strength * (b2Mul(r, oa) - pa);\n        b2Rot.MulRV(r, oa, s_t0);\n        b2Vec2.SubVV(s_t0, pa, s_t0);\n        b2Vec2.MulSV(strength, s_t0, s_t0);\n        va.SelfAdd(s_t0);\n        ///vb += strength * (b2Mul(r, ob) - pb);\n        b2Rot.MulRV(r, ob, s_t0);\n        b2Vec2.SubVV(s_t0, pb, s_t0);\n        b2Vec2.MulSV(strength, s_t0, s_t0);\n        vb.SelfAdd(s_t0);\n        ///vc += strength * (b2Mul(r, oc) - pc);\n        b2Rot.MulRV(r, oc, s_t0);\n        b2Vec2.SubVV(s_t0, pc, s_t0);\n        b2Vec2.MulSV(strength, s_t0, s_t0);\n        vc.SelfAdd(s_t0);\n      }\n    }\n  }\n  public static readonly SolveElastic_s_pa = new b2Vec2();\n  public static readonly SolveElastic_s_pb = new b2Vec2();\n  public static readonly SolveElastic_s_pc = new b2Vec2();\n  public static readonly SolveElastic_s_r = new b2Rot();\n  public static readonly SolveElastic_s_t0 = new b2Vec2();\n\n  public SolveSpring(step: b2TimeStep): void {\n    const s_pa = b2ParticleSystem.SolveSpring_s_pa;\n    const s_pb = b2ParticleSystem.SolveSpring_s_pb;\n    const s_d = b2ParticleSystem.SolveSpring_s_d;\n    const s_f = b2ParticleSystem.SolveSpring_s_f;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    const springStrength = step.inv_dt * this.m_def.springStrength;\n    for (let k = 0; k < this.m_pairBuffer.count; k++) {\n      const pair = this.m_pairBuffer.data[k];\n      if (pair.flags & b2ParticleFlag.b2_springParticle) {\n        ///int32 a = pair.indexA;\n        const a = pair.indexA;\n        ///int32 b = pair.indexB;\n        const b = pair.indexB;\n        ///b2Vec2 pa = m_positionBuffer.data[a];\n        const pa = s_pa.Copy(pos_data[a]);\n        ///b2Vec2 pb = m_positionBuffer.data[b];\n        const pb = s_pb.Copy(pos_data[b]);\n        ///b2Vec2& va = m_velocityBuffer.data[a];\n        const va = vel_data[a];\n        ///b2Vec2& vb = m_velocityBuffer.data[b];\n        const vb = vel_data[b];\n        ///pa += step.dt * va;\n        pa.SelfMulAdd(step.dt, va);\n        ///pb += step.dt * vb;\n        pb.SelfMulAdd(step.dt, vb);\n        ///b2Vec2 d = pb - pa;\n        const d = b2Vec2.SubVV(pb, pa, s_d);\n        ///float32 r0 = pair.distance;\n        const r0 = pair.distance;\n        ///float32 r1 = d.Length();\n        const r1 = d.Length();\n        ///float32 strength = springStrength * pair.strength;\n        const strength = springStrength * pair.strength;\n        ///b2Vec2 f = strength * (r0 - r1) / r1 * d;\n        const f = b2Vec2.MulSV(strength * (r0 - r1) / r1, d, s_f);\n        ///va -= f;\n        va.SelfSub(f);\n        ///vb += f;\n        vb.SelfAdd(f);\n      }\n    }\n  }\n  public static readonly SolveSpring_s_pa = new b2Vec2();\n  public static readonly SolveSpring_s_pb = new b2Vec2();\n  public static readonly SolveSpring_s_d = new b2Vec2();\n  public static readonly SolveSpring_s_f = new b2Vec2();\n\n  public SolveTensile(step: b2TimeStep): void {\n    const s_weightedNormal = b2ParticleSystem.SolveTensile_s_weightedNormal;\n    const s_s = b2ParticleSystem.SolveTensile_s_s;\n    const s_f = b2ParticleSystem.SolveTensile_s_f;\n    const vel_data = this.m_velocityBuffer.data;\n    // DEBUG: b2Assert(this.m_accumulation2Buffer !== null);\n    for (let i = 0; i < this.m_count; i++) {\n      this.m_accumulation2Buffer[i] = new b2Vec2();\n      this.m_accumulation2Buffer[i].SetZero();\n    }\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\n        const a = contact.indexA;\n        const b = contact.indexB;\n        const w = contact.weight;\n        const n = contact.normal;\n        ///b2Vec2 weightedNormal = (1 - w) * w * n;\n        const weightedNormal = b2Vec2.MulSV((1 - w) * w, n, s_weightedNormal);\n        ///m_accumulation2Buffer[a] -= weightedNormal;\n        this.m_accumulation2Buffer[a].SelfSub(weightedNormal);\n        ///m_accumulation2Buffer[b] += weightedNormal;\n        this.m_accumulation2Buffer[b].SelfAdd(weightedNormal);\n      }\n    }\n    const criticalVelocity = this.GetCriticalVelocity(step);\n    const pressureStrength = this.m_def.surfaceTensionPressureStrength * criticalVelocity;\n    const normalStrength = this.m_def.surfaceTensionNormalStrength * criticalVelocity;\n    const maxVelocityVariation = b2_maxParticleForce * criticalVelocity;\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      if (contact.flags & b2ParticleFlag.b2_tensileParticle) {\n        const a = contact.indexA;\n        const b = contact.indexB;\n        const w = contact.weight;\n        const n = contact.normal;\n        const h = this.m_weightBuffer[a] + this.m_weightBuffer[b];\n        ///b2Vec2 s = m_accumulation2Buffer[b] - m_accumulation2Buffer[a];\n        const s = b2Vec2.SubVV(this.m_accumulation2Buffer[b], this.m_accumulation2Buffer[a], s_s);\n        const fn = b2Min(\n          pressureStrength * (h - 2) + normalStrength * b2Vec2.DotVV(s, n),\n          maxVelocityVariation) * w;\n        ///b2Vec2 f = fn * n;\n        const f = b2Vec2.MulSV(fn, n, s_f);\n        ///m_velocityBuffer.data[a] -= f;\n        vel_data[a].SelfSub(f);\n        ///m_velocityBuffer.data[b] += f;\n        vel_data[b].SelfAdd(f);\n      }\n    }\n  }\n  public static readonly SolveTensile_s_weightedNormal = new b2Vec2();\n  public static readonly SolveTensile_s_s = new b2Vec2();\n  public static readonly SolveTensile_s_f = new b2Vec2();\n\n  public SolveViscous(): void {\n    const s_v = b2ParticleSystem.SolveViscous_s_v;\n    const s_f = b2ParticleSystem.SolveViscous_s_f;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    const viscousStrength = this.m_def.viscousStrength;\n    const inv_mass = this.GetParticleInvMass();\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      const a = contact.index;\n      if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_viscousParticle) {\n        const b = contact.body;\n        const w = contact.weight;\n        const m = contact.mass;\n        const p = pos_data[a];\n        ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\n        const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\n        ///b2Vec2 f = viscousStrength * m * w * v;\n        const f = b2Vec2.MulSV(viscousStrength * m * w, v, s_f);\n        ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\n        vel_data[a].SelfMulAdd(inv_mass, f);\n        ///b.ApplyLinearImpulse(-f, p, true);\n        b.ApplyLinearImpulse(f.SelfNeg(), p, true);\n      }\n    }\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      if (contact.flags & b2ParticleFlag.b2_viscousParticle) {\n        const a = contact.indexA;\n        const b = contact.indexB;\n        const w = contact.weight;\n        ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\n        const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\n        ///b2Vec2 f = viscousStrength * w * v;\n        const f = b2Vec2.MulSV(viscousStrength * w, v, s_f);\n        ///m_velocityBuffer.data[a] += f;\n        vel_data[a].SelfAdd(f);\n        ///m_velocityBuffer.data[b] -= f;\n        vel_data[b].SelfSub(f);\n      }\n    }\n  }\n  public static readonly SolveViscous_s_v = new b2Vec2();\n  public static readonly SolveViscous_s_f = new b2Vec2();\n\n  public SolveRepulsive(step: b2TimeStep): void {\n    const s_f = b2ParticleSystem.SolveRepulsive_s_f;\n    const vel_data = this.m_velocityBuffer.data;\n    const repulsiveStrength = this.m_def.repulsiveStrength * this.GetCriticalVelocity(step);\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      if (contact.flags & b2ParticleFlag.b2_repulsiveParticle) {\n        const a = contact.indexA;\n        const b = contact.indexB;\n        if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\n          const w = contact.weight;\n          const n = contact.normal;\n          ///b2Vec2 f = repulsiveStrength * w * n;\n          const f = b2Vec2.MulSV(repulsiveStrength * w, n, s_f);\n          ///m_velocityBuffer.data[a] -= f;\n          vel_data[a].SelfSub(f);\n          ///m_velocityBuffer.data[b] += f;\n          vel_data[b].SelfAdd(f);\n        }\n      }\n    }\n  }\n  public static readonly SolveRepulsive_s_f = new b2Vec2();\n\n  public SolvePowder(step: b2TimeStep): void {\n    const s_f = b2ParticleSystem.SolvePowder_s_f;\n    const pos_data = this.m_positionBuffer.data;\n    const vel_data = this.m_velocityBuffer.data;\n    const powderStrength = this.m_def.powderStrength * this.GetCriticalVelocity(step);\n    const minWeight = 1.0 - b2_particleStride;\n    const inv_mass = this.GetParticleInvMass();\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      const a = contact.index;\n      if (this.m_flagsBuffer.data[a] & b2ParticleFlag.b2_powderParticle) {\n        const w = contact.weight;\n        if (w > minWeight) {\n          const b = contact.body;\n          const m = contact.mass;\n          const p = pos_data[a];\n          const n = contact.normal;\n          const f = b2Vec2.MulSV(powderStrength * m * (w - minWeight), n, s_f);\n          vel_data[a].SelfMulSub(inv_mass, f);\n          b.ApplyLinearImpulse(f, p, true);\n        }\n      }\n    }\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      if (contact.flags & b2ParticleFlag.b2_powderParticle) {\n        const w = contact.weight;\n        if (w > minWeight) {\n          const a = contact.indexA;\n          const b = contact.indexB;\n          const n = contact.normal;\n          const f = b2Vec2.MulSV(powderStrength * (w - minWeight), n, s_f);\n          vel_data[a].SelfSub(f);\n          vel_data[b].SelfAdd(f);\n        }\n      }\n    }\n  }\n  public static readonly SolvePowder_s_f = new b2Vec2();\n\n  public SolveSolid(step: b2TimeStep): void {\n    const s_f = b2ParticleSystem.SolveSolid_s_f;\n    const vel_data = this.m_velocityBuffer.data;\n    // applies extra repulsive force from solid particle groups\n    this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\n    const ejectionStrength = step.inv_dt * this.m_def.ejectionStrength;\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      const a = contact.indexA;\n      const b = contact.indexB;\n      if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\n        const w = contact.weight;\n        const n = contact.normal;\n        const h = this.m_depthBuffer[a] + this.m_depthBuffer[b];\n        const f = b2Vec2.MulSV(ejectionStrength * h * w, n, s_f);\n        vel_data[a].SelfSub(f);\n        vel_data[b].SelfAdd(f);\n      }\n    }\n  }\n  public static readonly SolveSolid_s_f = new b2Vec2();\n\n  public SolveForce(step: b2TimeStep): void {\n    const vel_data = this.m_velocityBuffer.data;\n    const velocityPerForce = step.dt * this.GetParticleInvMass();\n    for (let i = 0; i < this.m_count; i++) {\n      ///m_velocityBuffer.data[i] += velocityPerForce * m_forceBuffer[i];\n      vel_data[i].SelfMulAdd(velocityPerForce, this.m_forceBuffer[i]);\n    }\n    this.m_hasForce = false;\n  }\n\n  public SolveColorMixing(): void {\n    // mixes color between contacting particles\n    const colorMixing = 0.5 * this.m_def.colorMixingStrength;\n    if (colorMixing) {\n      for (let k = 0; k < this.m_contactBuffer.count; k++) {\n        const contact = this.m_contactBuffer.data[k];\n        const a = contact.indexA;\n        const b = contact.indexB;\n        if (this.m_flagsBuffer.data[a] & this.m_flagsBuffer.data[b] &\n          b2ParticleFlag.b2_colorMixingParticle) {\n          const colorA = this.m_colorBuffer.data[a];\n          const colorB = this.m_colorBuffer.data[b];\n          // Use the static method to ensure certain compilers inline\n          // this correctly.\n          b2Color.MixColors(colorA, colorB, colorMixing);\n        }\n      }\n    }\n  }\n\n  public SolveZombie(): void {\n    // removes particles with zombie flag\n    let newCount = 0;\n    const newIndices: number[] = []; // TODO: static\n    for (let i = 0; i < this.m_count; i++) {\n      newIndices[i] = b2_invalidParticleIndex;\n    }\n    // DEBUG: b2Assert(newIndices.length === this.m_count);\n    let allParticleFlags = 0;\n    for (let i = 0; i < this.m_count; i++) {\n      const flags = this.m_flagsBuffer.data[i];\n      if (flags & b2ParticleFlag.b2_zombieParticle) {\n        const destructionListener = this.m_world.m_destructionListener;\n        if ((flags & b2ParticleFlag.b2_destructionListenerParticle) && destructionListener) {\n          destructionListener.SayGoodbyeParticle(this, i);\n        }\n        // Destroy particle handle.\n        if (this.m_handleIndexBuffer.data) {\n          const handle = this.m_handleIndexBuffer.data[i];\n          if (handle) {\n            handle.SetIndex(b2_invalidParticleIndex);\n            this.m_handleIndexBuffer.data[i] = null;\n            ///m_handleAllocator.Free(handle);\n          }\n        }\n        newIndices[i] = b2_invalidParticleIndex;\n      } else {\n        newIndices[i] = newCount;\n        if (i !== newCount) {\n          // Update handle to reference new particle index.\n          if (this.m_handleIndexBuffer.data) {\n            const handle = this.m_handleIndexBuffer.data[i];\n            if (handle) { handle.SetIndex(newCount); }\n            this.m_handleIndexBuffer.data[newCount] = handle;\n          }\n          this.m_flagsBuffer.data[newCount] = this.m_flagsBuffer.data[i];\n          if (this.m_lastBodyContactStepBuffer.data) {\n            this.m_lastBodyContactStepBuffer.data[newCount] = this.m_lastBodyContactStepBuffer.data[i];\n          }\n          if (this.m_bodyContactCountBuffer.data) {\n            this.m_bodyContactCountBuffer.data[newCount] = this.m_bodyContactCountBuffer.data[i];\n          }\n          if (this.m_consecutiveContactStepsBuffer.data) {\n            this.m_consecutiveContactStepsBuffer.data[newCount] = this.m_consecutiveContactStepsBuffer.data[i];\n          }\n          this.m_positionBuffer.data[newCount].Copy(this.m_positionBuffer.data[i]);\n          this.m_velocityBuffer.data[newCount].Copy(this.m_velocityBuffer.data[i]);\n          this.m_groupBuffer[newCount] = this.m_groupBuffer[i];\n          if (this.m_hasForce) {\n            this.m_forceBuffer[newCount].Copy(this.m_forceBuffer[i]);\n          }\n          if (this.m_staticPressureBuffer) {\n            this.m_staticPressureBuffer[newCount] = this.m_staticPressureBuffer[i];\n          }\n          if (this.m_depthBuffer) {\n            this.m_depthBuffer[newCount] = this.m_depthBuffer[i];\n          }\n          if (this.m_colorBuffer.data) {\n            this.m_colorBuffer.data[newCount].Copy(this.m_colorBuffer.data[i]);\n          }\n          if (this.m_userDataBuffer.data) {\n            this.m_userDataBuffer.data[newCount] = this.m_userDataBuffer.data[i];\n          }\n          if (this.m_expirationTimeBuffer.data) {\n            this.m_expirationTimeBuffer.data[newCount] = this.m_expirationTimeBuffer.data[i];\n          }\n        }\n        newCount++;\n        allParticleFlags |= flags;\n      }\n    }\n\n    // predicate functions\n    const Test = {\n      ///static bool IsProxyInvalid(const Proxy& proxy)\n      IsProxyInvalid: (proxy: b2ParticleSystem_Proxy) => {\n        return proxy.index < 0;\n      },\n      ///static bool IsContactInvalid(const b2ParticleContact& contact)\n      IsContactInvalid: (contact: b2ParticleContact) => {\n        return contact.indexA < 0 || contact.indexB < 0;\n      },\n      ///static bool IsBodyContactInvalid(const b2ParticleBodyContact& contact)\n      IsBodyContactInvalid: (contact: b2ParticleBodyContact) => {\n        return contact.index < 0;\n      },\n      ///static bool IsPairInvalid(const b2ParticlePair& pair)\n      IsPairInvalid: (pair: b2ParticlePair) => {\n        return pair.indexA < 0 || pair.indexB < 0;\n      },\n      ///static bool IsTriadInvalid(const b2ParticleTriad& triad)\n      IsTriadInvalid: (triad: b2ParticleTriad) => {\n        return triad.indexA < 0 || triad.indexB < 0 || triad.indexC < 0;\n      },\n    };\n\n    // update proxies\n    for (let k = 0; k < this.m_proxyBuffer.count; k++) {\n      const proxy = this.m_proxyBuffer.data[k];\n      proxy.index = newIndices[proxy.index];\n    }\n    this.m_proxyBuffer.RemoveIf(Test.IsProxyInvalid);\n\n    // update contacts\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      contact.indexA = newIndices[contact.indexA];\n      contact.indexB = newIndices[contact.indexB];\n    }\n    this.m_contactBuffer.RemoveIf(Test.IsContactInvalid);\n\n    // update particle-body contacts\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      contact.index = newIndices[contact.index];\n    }\n    this.m_bodyContactBuffer.RemoveIf(Test.IsBodyContactInvalid);\n\n    // update pairs\n    for (let k = 0; k < this.m_pairBuffer.count; k++) {\n      const pair = this.m_pairBuffer.data[k];\n      pair.indexA = newIndices[pair.indexA];\n      pair.indexB = newIndices[pair.indexB];\n    }\n    this.m_pairBuffer.RemoveIf(Test.IsPairInvalid);\n\n    // update triads\n    for (let k = 0; k < this.m_triadBuffer.count; k++) {\n      const triad = this.m_triadBuffer.data[k];\n      triad.indexA = newIndices[triad.indexA];\n      triad.indexB = newIndices[triad.indexB];\n      triad.indexC = newIndices[triad.indexC];\n    }\n    this.m_triadBuffer.RemoveIf(Test.IsTriadInvalid);\n\n    // Update lifetime indices.\n    if (this.m_indexByExpirationTimeBuffer.data) {\n      let writeOffset = 0;\n      for (let readOffset = 0; readOffset < this.m_count; readOffset++) {\n        const newIndex = newIndices[this.m_indexByExpirationTimeBuffer.data[readOffset]];\n        if (newIndex !== b2_invalidParticleIndex) {\n          this.m_indexByExpirationTimeBuffer.data[writeOffset++] = newIndex;\n        }\n      }\n    }\n\n    // update groups\n    for (let group = this.m_groupList; group; group = group.GetNext()) {\n      let firstIndex = newCount;\n      let lastIndex = 0;\n      let modified = false;\n      for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\n        const j = newIndices[i];\n        if (j >= 0) {\n          firstIndex = b2Min(firstIndex, j);\n          lastIndex = b2Max(lastIndex, j + 1);\n        } else {\n          modified = true;\n        }\n      }\n      if (firstIndex < lastIndex) {\n        group.m_firstIndex = firstIndex;\n        group.m_lastIndex = lastIndex;\n        if (modified) {\n          if (group.m_groupFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\n            this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\n          }\n        }\n      } else {\n        group.m_firstIndex = 0;\n        group.m_lastIndex = 0;\n        if (!(group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupCanBeEmpty)) {\n          this.SetGroupFlags(group, group.m_groupFlags | b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);\n        }\n      }\n    }\n\n    // update particle count\n    this.m_count = newCount;\n    this.m_allParticleFlags = allParticleFlags;\n    this.m_needsUpdateAllParticleFlags = false;\n\n    // destroy bodies with no particles\n    for (let group = this.m_groupList; group; ) {\n      const next = group.GetNext();\n      if (group.m_groupFlags & b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed) {\n        this.DestroyParticleGroup(group);\n      }\n      group = next;\n    }\n  }\n\n  /**\n   * Destroy all particles which have outlived their lifetimes set\n   * by SetParticleLifetime().\n   */\n  public SolveLifetimes(step: b2TimeStep): void {\n    // Update the time elapsed.\n    this.m_timeElapsed = this.LifetimeToExpirationTime(step.dt);\n    // Get the floor (non-fractional component) of the elapsed time.\n    const quantizedTimeElapsed = this.GetQuantizedTimeElapsed();\n\n    const expirationTimes = this.m_expirationTimeBuffer.data;\n    const expirationTimeIndices = this.m_indexByExpirationTimeBuffer.data;\n    const particleCount = this.GetParticleCount();\n    // Sort the lifetime buffer if it's required.\n    if (this.m_expirationTimeBufferRequiresSorting) {\n      ///const ExpirationTimeComparator expirationTimeComparator(expirationTimes);\n      ///std::sort(expirationTimeIndices, expirationTimeIndices + particleCount, expirationTimeComparator);\n\n      /**\n       * Compare the lifetime of particleIndexA and particleIndexB\n       * returning true if the lifetime of A is greater than B for\n       * particles that will expire.  If either particle's lifetime is\n       * infinite (<= 0.0f) this function return true if the lifetime\n       * of A is lesser than B. When used with std::sort() this\n       * results in an array of particle indicies sorted in reverse\n       * order by particle lifetime.\n       *\n       * For example, the set of lifetimes\n       * (1.0, 0.7, 0.3, 0.0, -1.0, 2.0)\n       * would be sorted as\n       * (0.0, 1.0, -2.0, 1.0, 0.7, 0.3)\n       */\n      const ExpirationTimeComparator = (particleIndexA: number, particleIndexB: number): boolean => {\n        const expirationTimeA = expirationTimes[particleIndexA];\n        const expirationTimeB = expirationTimes[particleIndexB];\n        const infiniteExpirationTimeA = expirationTimeA <= 0.0;\n        const infiniteExpirationTimeB = expirationTimeB <= 0.0;\n        return infiniteExpirationTimeA === infiniteExpirationTimeB ?\n          expirationTimeA > expirationTimeB : infiniteExpirationTimeA;\n      };\n\n      std_sort(expirationTimeIndices, 0, particleCount, ExpirationTimeComparator);\n\n      this.m_expirationTimeBufferRequiresSorting = false;\n    }\n\n    // Destroy particles which have expired.\n    for (let i = particleCount - 1; i >= 0; --i) {\n      const particleIndex = expirationTimeIndices[i];\n      const expirationTime = expirationTimes[particleIndex];\n      // If no particles need to be destroyed, skip this.\n      if (quantizedTimeElapsed < expirationTime || expirationTime <= 0) {\n        break;\n      }\n      // Destroy this particle.\n      this.DestroyParticle(particleIndex);\n    }\n  }\n\n  public RotateBuffer(start: number, mid: number, end: number): void {\n    // move the particles assigned to the given group toward the end of array\n    if (start === mid || mid === end) {\n      return;\n    }\n    // DEBUG: b2Assert(mid >= start && mid <= end);\n\n    function newIndices(i: number): number {\n      if (i < start) {\n        return i;\n      } else if (i < mid) {\n        return i + end - mid;\n      } else if (i < end) {\n        return i + start - mid;\n      } else {\n        return i;\n      }\n    }\n\n    ///std::rotate(m_flagsBuffer.data + start, m_flagsBuffer.data + mid, m_flagsBuffer.data + end);\n    std_rotate(this.m_flagsBuffer.data, start, mid, end);\n    if (this.m_lastBodyContactStepBuffer.data) {\n      ///std::rotate(m_lastBodyContactStepBuffer.data + start, m_lastBodyContactStepBuffer.data + mid, m_lastBodyContactStepBuffer.data + end);\n      std_rotate(this.m_lastBodyContactStepBuffer.data, start, mid, end);\n    }\n    if (this.m_bodyContactCountBuffer.data) {\n      ///std::rotate(m_bodyContactCountBuffer.data + start, m_bodyContactCountBuffer.data + mid, m_bodyContactCountBuffer.data + end);\n      std_rotate(this.m_bodyContactCountBuffer.data, start, mid, end);\n    }\n    if (this.m_consecutiveContactStepsBuffer.data) {\n      ///std::rotate(m_consecutiveContactStepsBuffer.data + start, m_consecutiveContactStepsBuffer.data + mid, m_consecutiveContactStepsBuffer.data + end);\n      std_rotate(this.m_consecutiveContactStepsBuffer.data, start, mid, end);\n    }\n    ///std::rotate(m_positionBuffer.data + start, m_positionBuffer.data + mid, m_positionBuffer.data + end);\n    std_rotate(this.m_positionBuffer.data, start, mid, end);\n    ///std::rotate(m_velocityBuffer.data + start, m_velocityBuffer.data + mid, m_velocityBuffer.data + end);\n    std_rotate(this.m_velocityBuffer.data, start, mid, end);\n    ///std::rotate(m_groupBuffer + start, m_groupBuffer + mid, m_groupBuffer + end);\n    std_rotate(this.m_groupBuffer, start, mid, end);\n    if (this.m_hasForce) {\n      ///std::rotate(m_forceBuffer + start, m_forceBuffer + mid, m_forceBuffer + end);\n      std_rotate(this.m_forceBuffer, start, mid, end);\n    }\n    if (this.m_staticPressureBuffer) {\n      ///std::rotate(m_staticPressureBuffer + start, m_staticPressureBuffer + mid, m_staticPressureBuffer + end);\n      std_rotate(this.m_staticPressureBuffer, start, mid, end);\n    }\n    if (this.m_depthBuffer) {\n      ///std::rotate(m_depthBuffer + start, m_depthBuffer + mid, m_depthBuffer + end);\n      std_rotate(this.m_depthBuffer, start, mid, end);\n    }\n    if (this.m_colorBuffer.data) {\n      ///std::rotate(m_colorBuffer.data + start, m_colorBuffer.data + mid, m_colorBuffer.data + end);\n      std_rotate(this.m_colorBuffer.data, start, mid, end);\n    }\n    if (this.m_userDataBuffer.data) {\n      ///std::rotate(m_userDataBuffer.data + start, m_userDataBuffer.data + mid, m_userDataBuffer.data + end);\n      std_rotate(this.m_userDataBuffer.data, start, mid, end);\n    }\n\n    // Update handle indices.\n    if (this.m_handleIndexBuffer.data) {\n      ///std::rotate(m_handleIndexBuffer.data + start, m_handleIndexBuffer.data + mid, m_handleIndexBuffer.data + end);\n      std_rotate(this.m_handleIndexBuffer.data, start, mid, end);\n      for (let i = start; i < end; ++i) {\n        const handle = this.m_handleIndexBuffer.data[i];\n        if (handle) { handle.SetIndex(newIndices(handle.GetIndex())); }\n      }\n    }\n\n    if (this.m_expirationTimeBuffer.data) {\n      ///std::rotate(m_expirationTimeBuffer.data + start, m_expirationTimeBuffer.data + mid, m_expirationTimeBuffer.data + end);\n      std_rotate(this.m_expirationTimeBuffer.data, start, mid, end);\n      // Update expiration time buffer indices.\n      const particleCount = this.GetParticleCount();\n      const indexByExpirationTime = this.m_indexByExpirationTimeBuffer.data;\n      for (let i = 0; i < particleCount; ++i) {\n        indexByExpirationTime[i] = newIndices(indexByExpirationTime[i]);\n      }\n    }\n\n    // update proxies\n    for (let k = 0; k < this.m_proxyBuffer.count; k++) {\n      const proxy = this.m_proxyBuffer.data[k];\n      proxy.index = newIndices(proxy.index);\n    }\n\n    // update contacts\n    for (let k = 0; k < this.m_contactBuffer.count; k++) {\n      const contact = this.m_contactBuffer.data[k];\n      contact.indexA = newIndices(contact.indexA);\n      contact.indexB = newIndices(contact.indexB);\n    }\n\n    // update particle-body contacts\n    for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\n      const contact = this.m_bodyContactBuffer.data[k];\n      contact.index = newIndices(contact.index);\n    }\n\n    // update pairs\n    for (let k = 0; k < this.m_pairBuffer.count; k++) {\n      const pair = this.m_pairBuffer.data[k];\n      pair.indexA = newIndices(pair.indexA);\n      pair.indexB = newIndices(pair.indexB);\n    }\n\n    // update triads\n    for (let k = 0; k < this.m_triadBuffer.count; k++) {\n      const triad = this.m_triadBuffer.data[k];\n      triad.indexA = newIndices(triad.indexA);\n      triad.indexB = newIndices(triad.indexB);\n      triad.indexC = newIndices(triad.indexC);\n    }\n\n    // update groups\n    for (let group = this.m_groupList; group; group = group.GetNext()) {\n      group.m_firstIndex = newIndices(group.m_firstIndex);\n      group.m_lastIndex = newIndices(group.m_lastIndex - 1) + 1;\n    }\n  }\n\n  public GetCriticalVelocity(step: b2TimeStep): number {\n    return this.m_particleDiameter * step.inv_dt;\n  }\n\n  public GetCriticalVelocitySquared(step: b2TimeStep): number {\n    const velocity = this.GetCriticalVelocity(step);\n    return velocity * velocity;\n  }\n\n  public GetCriticalPressure(step: b2TimeStep): number {\n    return this.m_def.density * this.GetCriticalVelocitySquared(step);\n  }\n\n  public GetParticleStride(): number {\n    return b2_particleStride * this.m_particleDiameter;\n  }\n\n  public GetParticleMass(): number {\n    const stride = this.GetParticleStride();\n    return this.m_def.density * stride * stride;\n  }\n\n  public GetParticleInvMass(): number {\n    ///return 1.777777 * this.m_inverseDensity * this.m_inverseDiameter * this.m_inverseDiameter;\n    // mass = density * stride^2, so we take the inverse of this.\n    const inverseStride = this.m_inverseDiameter * (1.0 / b2_particleStride);\n    return this.m_inverseDensity * inverseStride * inverseStride;\n  }\n\n  /**\n   * Get the world's contact filter if any particles with the\n   * b2_contactFilterParticle flag are present in the system.\n   */\n  public GetFixtureContactFilter(): b2ContactFilter | null {\n    return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactFilterParticle) ?\n      this.m_world.m_contactManager.m_contactFilter : null;\n  }\n\n  /**\n   * Get the world's contact filter if any particles with the\n   * b2_particleContactFilterParticle flag are present in the\n   * system.\n   */\n  public GetParticleContactFilter(): b2ContactFilter | null {\n    return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactFilterParticle) ?\n      this.m_world.m_contactManager.m_contactFilter : null;\n  }\n\n  /**\n   * Get the world's contact listener if any particles with the\n   * b2_fixtureContactListenerParticle flag are present in the\n   * system.\n   */\n  public GetFixtureContactListener(): b2ContactListener | null {\n    return (this.m_allParticleFlags & b2ParticleFlag.b2_fixtureContactListenerParticle) ?\n      this.m_world.m_contactManager.m_contactListener : null;\n  }\n\n  /**\n   * Get the world's contact listener if any particles with the\n   * b2_particleContactListenerParticle flag are present in the\n   * system.\n   */\n  public GetParticleContactListener(): b2ContactListener | null {\n    return (this.m_allParticleFlags & b2ParticleFlag.b2_particleContactListenerParticle) ?\n      this.m_world.m_contactManager.m_contactListener : null;\n  }\n\n  public SetUserOverridableBuffer<T>(buffer: b2ParticleSystem_UserOverridableBuffer<T>, data: T[]): void {\n    buffer.data = data;\n    buffer.userSuppliedCapacity = data.length;\n  }\n\n  public SetGroupFlags(group: b2ParticleGroup, newFlags: b2ParticleGroupFlag): void {\n    const oldFlags = group.m_groupFlags;\n    if ((oldFlags ^ newFlags) & b2ParticleGroupFlag.b2_solidParticleGroup) {\n      // If the b2_solidParticleGroup flag changed schedule depth update.\n      newFlags |= b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth;\n    }\n    if (oldFlags & ~newFlags) {\n      // If any flags might be removed\n      this.m_needsUpdateAllGroupFlags = true;\n    }\n    if (~this.m_allGroupFlags & newFlags) {\n      // If any flags were added\n      if (newFlags & b2ParticleGroupFlag.b2_solidParticleGroup) {\n        this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\n      }\n      this.m_allGroupFlags |= newFlags;\n    }\n    group.m_groupFlags = newFlags;\n  }\n\n  public static BodyContactCompare(lhs: b2ParticleBodyContact, rhs: b2ParticleBodyContact): boolean {\n    if (lhs.index === rhs.index) {\n      // Subsort by weight, decreasing.\n      return lhs.weight > rhs.weight;\n    }\n    return lhs.index < rhs.index;\n  }\n\n  public RemoveSpuriousBodyContacts(): void {\n    // At this point we have a list of contact candidates based on AABB\n    // overlap.The AABB query that  generated this returns all collidable\n    // fixtures overlapping particle bounding boxes.  This breaks down around\n    // vertices where two shapes intersect, such as a \"ground\" surface made\n    // of multiple b2PolygonShapes; it potentially applies a lot of spurious\n    // impulses from normals that should not actually contribute.  See the\n    // Ramp example in Testbed.\n    //\n    // To correct for this, we apply this algorithm:\n    //   * sort contacts by particle and subsort by weight (nearest to farthest)\n    //   * for each contact per particle:\n    //      - project a point at the contact distance along the inverse of the\n    //        contact normal\n    //      - if this intersects the fixture that generated the contact, apply\n    //         it, otherwise discard as impossible\n    //      - repeat for up to n nearest contacts, currently we get good results\n    //        from n=3.\n    ///std::sort(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleSystem::BodyContactCompare);\n    std_sort(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, b2ParticleSystem.BodyContactCompare);\n\n    ///int32 discarded = 0;\n    ///std::remove_if(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleBodyContactRemovePredicate(this, &discarded));\n    ///\n    ///m_bodyContactBuffer.SetCount(m_bodyContactBuffer.GetCount() - discarded);\n\n    const s_n = b2ParticleSystem.RemoveSpuriousBodyContacts_s_n;\n    const s_pos = b2ParticleSystem.RemoveSpuriousBodyContacts_s_pos;\n    const s_normal = b2ParticleSystem.RemoveSpuriousBodyContacts_s_normal;\n\n    // Max number of contacts processed per particle, from nearest to farthest.\n    // This must be at least 2 for correctness with concave shapes; 3 was\n    // experimentally arrived at as looking reasonable.\n    const k_maxContactsPerPoint = 3;\n    const system = this;\n    // Index of last particle processed.\n    let lastIndex = -1;\n    // Number of contacts processed for the current particle.\n    let currentContacts = 0;\n    // Output the number of discarded contacts.\n    // let discarded = 0;\n    const b2ParticleBodyContactRemovePredicate = (contact: b2ParticleBodyContact): boolean => {\n      // This implements the selection criteria described in\n      // RemoveSpuriousBodyContacts().\n      // This functor is iterating through a list of Body contacts per\n      // Particle, ordered from near to far.  For up to the maximum number of\n      // contacts we allow per point per step, we verify that the contact\n      // normal of the Body that genenerated the contact makes physical sense\n      // by projecting a point back along that normal and seeing if it\n      // intersects the fixture generating the contact.\n\n      if (contact.index !== lastIndex) {\n        currentContacts = 0;\n        lastIndex = contact.index;\n      }\n\n      if (currentContacts++ > k_maxContactsPerPoint) {\n        // ++discarded;\n        return true;\n      }\n\n      // Project along inverse normal (as returned in the contact) to get the\n      // point to check.\n      ///b2Vec2 n = contact.normal;\n      const n = s_n.Copy(contact.normal);\n      // weight is 1-(inv(diameter) * distance)\n      ///n *= system.m_particleDiameter * (1 - contact.weight);\n      n.SelfMul(system.m_particleDiameter * (1 - contact.weight));\n      ///b2Vec2 pos = system.m_positionBuffer.data[contact.index] + n;\n      const pos = b2Vec2.AddVV(system.m_positionBuffer.data[contact.index], n, s_pos);\n\n      // pos is now a point projected back along the contact normal to the\n      // contact distance. If the surface makes sense for a contact, pos will\n      // now lie on or in the fixture generating\n      if (!contact.fixture.TestPoint(pos)) {\n        const childCount = contact.fixture.GetShape().GetChildCount();\n        for (let childIndex = 0; childIndex < childCount; childIndex++) {\n          const normal = s_normal;\n          const distance = contact.fixture.ComputeDistance(pos, normal, childIndex);\n          if (distance < b2_linearSlop) {\n            return false;\n          }\n        }\n        // ++discarded;\n        return true;\n      }\n\n      return false;\n    };\n    this.m_bodyContactBuffer.count = std_remove_if(this.m_bodyContactBuffer.data, b2ParticleBodyContactRemovePredicate, this.m_bodyContactBuffer.count);\n  }\n  private static RemoveSpuriousBodyContacts_s_n = new b2Vec2();\n  private static RemoveSpuriousBodyContacts_s_pos = new b2Vec2();\n  private static RemoveSpuriousBodyContacts_s_normal = new b2Vec2();\n\n  public DetectStuckParticle(particle: number): void {\n    // Detect stuck particles\n    //\n    // The basic algorithm is to allow the user to specify an optional\n    // threshold where we detect whenever a particle is contacting\n    // more than one fixture for more than threshold consecutive\n    // steps. This is considered to be \"stuck\", and these are put\n    // in a list the user can query per step, if enabled, to deal with\n    // such particles.\n\n    if (this.m_stuckThreshold <= 0) {\n      return;\n    }\n\n    // Get the state variables for this particle.\n    ///int32 * const consecutiveCount = &m_consecutiveContactStepsBuffer.data[particle];\n    ///int32 * const lastStep = &m_lastBodyContactStepBuffer.data[particle];\n    ///int32 * const bodyCount = &m_bodyContactCountBuffer.data[particle];\n\n    // This is only called when there is a body contact for this particle.\n    ///++(*bodyCount);\n    ++this.m_bodyContactCountBuffer.data[particle];\n\n    // We want to only trigger detection once per step, the first time we\n    // contact more than one fixture in a step for a given particle.\n    ///if (*bodyCount === 2)\n    if (this.m_bodyContactCountBuffer.data[particle] === 2) {\n      ///++(*consecutiveCount);\n      ++this.m_consecutiveContactStepsBuffer.data[particle];\n      ///if (*consecutiveCount > m_stuckThreshold)\n      if (this.m_consecutiveContactStepsBuffer.data[particle] > this.m_stuckThreshold) {\n        ///int32& newStuckParticle = m_stuckParticleBuffer.Append();\n        ///newStuckParticle = particle;\n        this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = particle;\n      }\n    }\n    ///*lastStep = m_timestamp;\n    this.m_lastBodyContactStepBuffer.data[particle] = this.m_timestamp;\n  }\n\n  /**\n   * Determine whether a particle index is valid.\n   */\n  public ValidateParticleIndex(index: number): boolean {\n    return index >= 0 && index < this.GetParticleCount() &&\n      index !== b2_invalidParticleIndex;\n  }\n\n  /**\n   * Get the time elapsed in\n   * b2ParticleSystemDef::lifetimeGranularity.\n   */\n  public GetQuantizedTimeElapsed(): number {\n    ///return (int32)(m_timeElapsed >> 32);\n    return Math.floor(this.m_timeElapsed / 0x100000000);\n  }\n\n  /**\n   * Convert a lifetime in seconds to an expiration time.\n   */\n  public LifetimeToExpirationTime(lifetime: number): number {\n    ///return m_timeElapsed + (int64)((lifetime / m_def.lifetimeGranularity) * (float32)(1LL << 32));\n    return this.m_timeElapsed + Math.floor(((lifetime / this.m_def.lifetimeGranularity) * 0x100000000));\n  }\n\n  public ForceCanBeApplied(flags: b2ParticleFlag): boolean {\n    return !(flags & b2ParticleFlag.b2_wallParticle);\n  }\n\n  public PrepareForceBuffer(): void {\n    if (!this.m_hasForce) {\n      ///memset(m_forceBuffer, 0, sizeof(*m_forceBuffer) * m_count);\n      for (let i = 0; i < this.m_count; i++) {\n        this.m_forceBuffer[i].SetZero();\n      }\n      this.m_hasForce = true;\n    }\n  }\n\n  public IsRigidGroup(group: b2ParticleGroup | null): boolean {\n    return (group !== null) && ((group.m_groupFlags & b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0);\n  }\n\n  public GetLinearVelocity(group: b2ParticleGroup | null, particleIndex: number, point: b2Vec2, out: b2Vec2): b2Vec2 {\n    if (group && this.IsRigidGroup(group)) {\n      return group.GetLinearVelocityFromWorldPoint(point, out);\n    } else {\n      ///return m_velocityBuffer.data[particleIndex];\n      return out.Copy(this.m_velocityBuffer.data[particleIndex]);\n    }\n  }\n\n  public InitDampingParameter(invMass: number[], invInertia: number[], tangentDistance: number[], mass: number, inertia: number, center: b2Vec2, point: b2Vec2, normal: b2Vec2): void {\n    ///*invMass = mass > 0 ? 1 / mass : 0;\n    invMass[0] = mass > 0 ? 1 / mass : 0;\n    ///*invInertia = inertia > 0 ? 1 / inertia : 0;\n    invInertia[0] = inertia > 0 ? 1 / inertia : 0;\n    ///*tangentDistance = b2Cross(point - center, normal);\n    tangentDistance[0] = b2Vec2.CrossVV(b2Vec2.SubVV(point, center, b2Vec2.s_t0), normal);\n  }\n\n  public InitDampingParameterWithRigidGroupOrParticle(invMass: number[], invInertia: number[], tangentDistance: number[], isRigidGroup: boolean, group: b2ParticleGroup | null, particleIndex: number, point: b2Vec2, normal: b2Vec2): void {\n    if (group && isRigidGroup) {\n      this.InitDampingParameter(invMass, invInertia, tangentDistance, group.GetMass(), group.GetInertia(), group.GetCenter(), point, normal);\n    } else {\n      const flags = this.m_flagsBuffer.data[particleIndex];\n      this.InitDampingParameter(invMass, invInertia, tangentDistance, flags & b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, point, point, normal);\n    }\n  }\n\n  public ComputeDampingImpulse(invMassA: number, invInertiaA: number, tangentDistanceA: number, invMassB: number, invInertiaB: number, tangentDistanceB: number, normalVelocity: number): number {\n    const invMass =\n      invMassA + invInertiaA * tangentDistanceA * tangentDistanceA +\n      invMassB + invInertiaB * tangentDistanceB * tangentDistanceB;\n    return invMass > 0 ? normalVelocity / invMass : 0;\n  }\n\n  public ApplyDamping(invMass: number, invInertia: number, tangentDistance: number, isRigidGroup: boolean, group: b2ParticleGroup | null, particleIndex: number, impulse: number, normal: b2Vec2): void {\n    if (group && isRigidGroup) {\n      ///group.m_linearVelocity += impulse * invMass * normal;\n      group.m_linearVelocity.SelfMulAdd(impulse * invMass, normal);\n      ///group.m_angularVelocity += impulse * tangentDistance * invInertia;\n      group.m_angularVelocity += impulse * tangentDistance * invInertia;\n    } else {\n      ///m_velocityBuffer.data[particleIndex] += impulse * invMass * normal;\n      this.m_velocityBuffer.data[particleIndex].SelfMulAdd(impulse * invMass, normal);\n    }\n  }\n}\n\nexport class b2ParticleSystem_UserOverridableBuffer<T> {\n  public _data: T[] | null = null;\n  public get data(): T[] { return this._data as T[]; } // HACK: may return null\n  public set data(value: T[]) { this._data = value; }\n  public userSuppliedCapacity: number = 0;\n}\n\nexport class b2ParticleSystem_Proxy {\n  public index: number = b2_invalidParticleIndex;\n  public tag: number = 0;\n  public static CompareProxyProxy(a: b2ParticleSystem_Proxy, b: b2ParticleSystem_Proxy): boolean {\n    return a.tag < b.tag;\n  }\n  public static CompareTagProxy(a: number, b: b2ParticleSystem_Proxy): boolean {\n    return a < b.tag;\n  }\n  public static CompareProxyTag(a: b2ParticleSystem_Proxy, b: number): boolean {\n    return a.tag < b;\n  }\n}\n\nexport class b2ParticleSystem_InsideBoundsEnumerator {\n  public m_system: b2ParticleSystem;\n  public m_xLower: number;\n  public m_xUpper: number;\n  public m_yLower: number;\n  public m_yUpper: number;\n  public m_first: number;\n  public m_last: number;\n  /**\n   * InsideBoundsEnumerator enumerates all particles inside the\n   * given bounds.\n   *\n   * Construct an enumerator with bounds of tags and a range of\n   * proxies.\n   */\n  constructor(system: b2ParticleSystem, lower: number, upper: number, first: number, last: number) {\n    this.m_system = system;\n    this.m_xLower = (lower & b2ParticleSystem.xMask) >>> 0;\n    this.m_xUpper = (upper & b2ParticleSystem.xMask) >>> 0;\n    this.m_yLower = (lower & b2ParticleSystem.yMask) >>> 0;\n    this.m_yUpper = (upper & b2ParticleSystem.yMask) >>> 0;\n    this.m_first = first;\n    this.m_last = last;\n    // DEBUG: b2Assert(this.m_first <= this.m_last);\n  }\n\n  /**\n   * Get index of the next particle. Returns\n   * b2_invalidParticleIndex if there are no more particles.\n   */\n  public GetNext(): number {\n    while (this.m_first < this.m_last) {\n      const xTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.xMask) >>> 0;\n      // #if B2_ASSERT_ENABLED\n      // DEBUG: const yTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem_yMask) >>> 0;\n      // DEBUG: b2Assert(yTag >= this.m_yLower);\n      // DEBUG: b2Assert(yTag <= this.m_yUpper);\n      // #endif\n      if (xTag >= this.m_xLower && xTag <= this.m_xUpper) {\n        return (this.m_system.m_proxyBuffer.data[this.m_first++]).index;\n      }\n      this.m_first++;\n    }\n    return b2_invalidParticleIndex;\n  }\n}\n\nexport class b2ParticleSystem_ParticleListNode {\n  /**\n   * The head of the list.\n   */\n  public list!: b2ParticleSystem_ParticleListNode;\n  /**\n   * The next node in the list.\n   */\n  public next: b2ParticleSystem_ParticleListNode | null = null;\n  /**\n   * Number of entries in the list. Valid only for the node at the\n   * head of the list.\n   */\n  public count: number = 0;\n  /**\n   * Particle index.\n   */\n  public index: number = 0;\n}\n\n/**\n * @constructor\n */\nexport class b2ParticleSystem_FixedSetAllocator<T> {\n  public Allocate(itemSize: number, count: number): number {\n    // TODO\n    return count;\n  }\n\n  public Clear(): void {\n    // TODO\n  }\n\n  public GetCount(): number {\n    // TODO\n    return 0;\n  }\n\n  public Invalidate(itemIndex: number): void {\n    // TODO\n  }\n\n  public GetValidBuffer(): boolean[] {\n    // TODO\n    return [];\n  }\n\n  public GetBuffer(): T[] {\n    // TODO\n    return [];\n  }\n\n  public SetCount(count: number): void {\n    // TODO\n  }\n}\n\nexport class b2ParticleSystem_FixtureParticle {\n  public first: b2Fixture;\n  public second: number = b2_invalidParticleIndex;\n  constructor(fixture: b2Fixture, particle: number) {\n    this.first = fixture;\n    this.second = particle;\n  }\n}\n\nexport class b2ParticleSystem_FixtureParticleSet extends b2ParticleSystem_FixedSetAllocator<b2ParticleSystem_FixtureParticle> {\n  public Initialize(bodyContactBuffer: b2GrowableBuffer<b2ParticleBodyContact>, flagsBuffer: b2ParticleSystem_UserOverridableBuffer<b2ParticleFlag>): void {\n    // TODO\n  }\n  public Find(pair: b2ParticleSystem_FixtureParticle): number {\n    // TODO\n    return b2_invalidParticleIndex;\n  }\n}\n\nexport class b2ParticleSystem_ParticlePair {\n  public first: number = b2_invalidParticleIndex;\n  public second: number = b2_invalidParticleIndex;\n  constructor(particleA: number, particleB: number) {\n    this.first = particleA;\n    this.second = particleB;\n  }\n}\n\nexport class b2ParticlePairSet extends b2ParticleSystem_FixedSetAllocator<b2ParticleSystem_ParticlePair> {\n  public Initialize(contactBuffer: b2GrowableBuffer<b2ParticleContact>, flagsBuffer: b2ParticleSystem_UserOverridableBuffer<b2ParticleFlag>): void {\n    // TODO\n  }\n\n  public Find(pair: b2ParticleSystem_ParticlePair): number {\n    // TODO\n    return b2_invalidParticleIndex;\n  }\n}\n\nexport class b2ParticleSystem_ConnectionFilter {\n  /**\n   * Is the particle necessary for connection?\n   * A pair or a triad should contain at least one 'necessary'\n   * particle.\n   */\n  public IsNecessary(index: number): boolean {\n    return true;\n  }\n\n  /**\n   * An additional condition for creating a pair.\n   */\n  public ShouldCreatePair(a: number, b: number): boolean {\n    return true;\n  }\n\n  /**\n   * An additional condition for creating a triad.\n   */\n  public ShouldCreateTriad(a: number, b: number, c: number): boolean {\n    return true;\n  }\n}\n\nexport class b2ParticleSystem_DestroyParticlesInShapeCallback extends b2QueryCallback {\n  public m_system: b2ParticleSystem;\n  public m_shape: b2Shape;\n  public m_xf: b2Transform;\n  public m_callDestructionListener: boolean = false;\n  public m_destroyed: number = 0;\n\n  constructor(system: b2ParticleSystem, shape: b2Shape, xf: b2Transform, callDestructionListener: boolean) {\n    super();\n    this.m_system = system;\n    this.m_shape = shape;\n    this.m_xf = xf;\n    this.m_callDestructionListener = callDestructionListener;\n    this.m_destroyed = 0;\n  }\n\n  public ReportFixture(fixture: b2Fixture): boolean {\n    return false;\n  }\n\n  public ReportParticle(particleSystem: b2ParticleSystem, index: number): boolean {\n    if (particleSystem !== this.m_system) {\n      return false;\n    }\n    // DEBUG: b2Assert(index >= 0 && index < this.m_system.m_count);\n    if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[index])) {\n      this.m_system.DestroyParticle(index, this.m_callDestructionListener);\n      this.m_destroyed++;\n    }\n    return true;\n  }\n\n  public Destroyed(): number {\n    return this.m_destroyed;\n  }\n}\n\nexport class b2ParticleSystem_JoinParticleGroupsFilter extends b2ParticleSystem_ConnectionFilter {\n  public m_threshold: number = 0;\n\n  constructor(threshold: number) {\n    super();\n    this.m_threshold = threshold;\n  }\n\n  /**\n   * An additional condition for creating a pair.\n   */\n  public ShouldCreatePair(a: number, b: number): boolean {\n    return (a < this.m_threshold && this.m_threshold <= b) ||\n      (b < this.m_threshold && this.m_threshold <= a);\n  }\n\n  /**\n   * An additional condition for creating a triad.\n   */\n  public ShouldCreateTriad(a: number, b: number, c: number): boolean {\n    return (a < this.m_threshold || b < this.m_threshold || c < this.m_threshold) &&\n      (this.m_threshold <= a || this.m_threshold <= b || this.m_threshold <= c);\n  }\n}\n\nexport class b2ParticleSystem_CompositeShape extends b2Shape {\n  constructor(shapes: b2Shape[], shapeCount: number = shapes.length) {\n    super(b2ShapeType.e_unknown, 0);\n    this.m_shapes = shapes;\n    this.m_shapeCount = shapeCount;\n  }\n\n  public m_shapes: b2Shape[];\n  public m_shapeCount: number = 0;\n\n  public Clone(): b2Shape {\n    // DEBUG: b2Assert(false);\n    throw new Error();\n  }\n\n  public GetChildCount(): number {\n    return 1;\n  }\n\n  /**\n   * @see b2Shape::TestPoint\n   */\n  public TestPoint(xf: b2Transform, p: XY): boolean {\n    for (let i = 0; i < this.m_shapeCount; i++) {\n      if (this.m_shapes[i].TestPoint(xf, p)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @see b2Shape::ComputeDistance\n   */\n  public ComputeDistance(xf: b2Transform, p: b2Vec2, normal: b2Vec2, childIndex: number): number {\n    // DEBUG: b2Assert(false);\n    return 0;\n  }\n\n  /**\n   * Implement b2Shape.\n   */\n  public RayCast(output: b2RayCastOutput, input: b2RayCastInput, xf: b2Transform, childIndex: number): boolean {\n    // DEBUG: b2Assert(false);\n    return false;\n  }\n\n  /**\n   * @see b2Shape::ComputeAABB\n   */\n  public ComputeAABB(aabb: b2AABB, xf: b2Transform, childIndex: number): void {\n    const s_subaabb = new b2AABB();\n    aabb.lowerBound.x = +b2_maxFloat;\n    aabb.lowerBound.y = +b2_maxFloat;\n    aabb.upperBound.x = -b2_maxFloat;\n    aabb.upperBound.y = -b2_maxFloat;\n    // DEBUG: b2Assert(childIndex === 0);\n    for (let i = 0; i < this.m_shapeCount; i++) {\n      const childCount = this.m_shapes[i].GetChildCount();\n      for (let j = 0; j < childCount; j++) {\n        const subaabb = s_subaabb;\n        this.m_shapes[i].ComputeAABB(subaabb, xf, j);\n        aabb.Combine1(subaabb);\n      }\n    }\n  }\n\n  /**\n   * @see b2Shape::ComputeMass\n   */\n  public ComputeMass(massData: b2MassData, density: number): void {\n    // DEBUG: b2Assert(false);\n  }\n\n  public SetupDistanceProxy(proxy: b2DistanceProxy, index: number): void {\n    // DEBUG: b2Assert(false);\n  }\n\n  public ComputeSubmergedArea(normal: b2Vec2, offset: number, xf: b2Transform, c: b2Vec2): number {\n    // DEBUG: b2Assert(false);\n    return 0;\n  }\n\n  public Dump(log: (format: string, ...args: any[]) => void): void {\n    // DEBUG: b2Assert(false);\n  }\n}\n\nexport class b2ParticleSystem_ReactiveFilter extends b2ParticleSystem_ConnectionFilter {\n  public m_flagsBuffer: b2ParticleSystem_UserOverridableBuffer<b2ParticleFlag>;\n  constructor(flagsBuffer: b2ParticleSystem_UserOverridableBuffer<b2ParticleFlag>) {\n    super();\n    this.m_flagsBuffer = flagsBuffer;\n  }\n  public IsNecessary(index: number): boolean {\n    return (this.m_flagsBuffer.data[index] & b2ParticleFlag.b2_reactiveParticle) !== 0;\n  }\n}\n\nexport class b2ParticleSystem_UpdateBodyContactsCallback extends b2FixtureParticleQueryCallback {\n  public m_contactFilter: b2ContactFilter | null = null;\n  constructor(system: b2ParticleSystem, contactFilter: b2ContactFilter | null = null) {\n    super(system); // base class constructor\n    this.m_contactFilter = contactFilter;\n  }\n\n  public ShouldCollideFixtureParticle(fixture: b2Fixture, particleSystem: b2ParticleSystem, particleIndex: number): boolean {\n    // Call the contact filter if it's set, to determine whether to\n    // filter this contact.  Returns true if contact calculations should\n    // be performed, false otherwise.\n    if (this.m_contactFilter) {\n      const flags = this.m_system.GetFlagsBuffer();\n      if (flags[particleIndex] & b2ParticleFlag.b2_fixtureContactFilterParticle) {\n        return this.m_contactFilter.ShouldCollideFixtureParticle(fixture, this.m_system, particleIndex);\n      }\n    }\n    return true;\n  }\n\n  public ReportFixtureAndParticle(fixture: b2Fixture, childIndex: number, a: number): void {\n    const s_n = b2ParticleSystem_UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n;\n    const s_rp = b2ParticleSystem_UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;\n    const ap = this.m_system.m_positionBuffer.data[a];\n    const n = s_n;\n    const d = fixture.ComputeDistance(ap, n, childIndex);\n    if (d < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(fixture, this.m_system, a)) {\n      const b = fixture.GetBody();\n      const bp = b.GetWorldCenter();\n      const bm = b.GetMass();\n      const bI = b.GetInertia() - bm * b.GetLocalCenter().LengthSquared();\n      const invBm = bm > 0 ? 1 / bm : 0;\n      const invBI = bI > 0 ? 1 / bI : 0;\n      const invAm =\n        this.m_system.m_flagsBuffer.data[a] &\n        b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass();\n      ///b2Vec2 rp = ap - bp;\n      const rp = b2Vec2.SubVV(ap, bp, s_rp);\n      const rpn = b2Vec2.CrossVV(rp, n);\n      const invM = invAm + invBm + invBI * rpn * rpn;\n\n      ///b2ParticleBodyContact& contact = m_system.m_bodyContactBuffer.Append();\n      const contact = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];\n      contact.index = a;\n      contact.body = b;\n      contact.fixture = fixture;\n      contact.weight = 1 - d * this.m_system.m_inverseDiameter;\n      ///contact.normal = -n;\n      contact.normal.Copy(n.SelfNeg());\n      contact.mass = invM > 0 ? 1 / invM : 0;\n      this.m_system.DetectStuckParticle(a);\n    }\n  }\n  public static readonly ReportFixtureAndParticle_s_n = new b2Vec2();\n  public static readonly ReportFixtureAndParticle_s_rp = new b2Vec2();\n}\n\nexport class b2ParticleSystem_SolveCollisionCallback extends b2FixtureParticleQueryCallback {\n  public m_step: b2TimeStep;\n  constructor(system: b2ParticleSystem, step: b2TimeStep) {\n    super(system); // base class constructor\n    this.m_step = step;\n  }\n\n  public ReportFixtureAndParticle(fixture: b2Fixture, childIndex: number, a: number): void {\n    const s_p1 = b2ParticleSystem_SolveCollisionCallback.ReportFixtureAndParticle_s_p1;\n    const s_output = b2ParticleSystem_SolveCollisionCallback.ReportFixtureAndParticle_s_output;\n    const s_input = b2ParticleSystem_SolveCollisionCallback.ReportFixtureAndParticle_s_input;\n    const s_p = b2ParticleSystem_SolveCollisionCallback.ReportFixtureAndParticle_s_p;\n    const s_v = b2ParticleSystem_SolveCollisionCallback.ReportFixtureAndParticle_s_v;\n    const s_f = b2ParticleSystem_SolveCollisionCallback.ReportFixtureAndParticle_s_f;\n\n    const body = fixture.GetBody();\n    const ap = this.m_system.m_positionBuffer.data[a];\n    const av = this.m_system.m_velocityBuffer.data[a];\n    const output = s_output;\n    const input = s_input;\n    if (this.m_system.m_iterationIndex === 0) {\n      // Put 'ap' in the local space of the previous frame\n      ///b2Vec2 p1 = b2MulT(body.m_xf0, ap);\n      const p1 = b2Transform.MulTXV(body.m_xf0, ap, s_p1);\n      if (fixture.GetShape().GetType() === b2ShapeType.e_circleShape) {\n        // Make relative to the center of the circle\n        ///p1 -= body.GetLocalCenter();\n        p1.SelfSub(body.GetLocalCenter());\n        // Re-apply rotation about the center of the circle\n        ///p1 = b2Mul(body.m_xf0.q, p1);\n        b2Rot.MulRV(body.m_xf0.q, p1, p1);\n        // Subtract rotation of the current frame\n        ///p1 = b2MulT(body.m_xf.q, p1);\n        b2Rot.MulTRV(body.m_xf.q, p1, p1);\n        // Return to local space\n        ///p1 += body.GetLocalCenter();\n        p1.SelfAdd(body.GetLocalCenter());\n      }\n      // Return to global space and apply rotation of current frame\n      ///input.p1 = b2Mul(body.m_xf, p1);\n      b2Transform.MulXV(body.m_xf, p1, input.p1);\n    } else {\n      ///input.p1 = ap;\n      input.p1.Copy(ap);\n    }\n    ///input.p2 = ap + m_step.dt * av;\n    b2Vec2.AddVMulSV(ap, this.m_step.dt, av, input.p2);\n    input.maxFraction = 1;\n    if (fixture.RayCast(output, input, childIndex)) {\n      const n = output.normal;\n      ///b2Vec2 p = (1 - output.fraction) * input.p1 + output.fraction * input.p2 + b2_linearSlop * n;\n      const p = s_p;\n      p.x = (1 - output.fraction) * input.p1.x + output.fraction * input.p2.x + b2_linearSlop * n.x;\n      p.y = (1 - output.fraction) * input.p1.y + output.fraction * input.p2.y + b2_linearSlop * n.y;\n      ///b2Vec2 v = m_step.inv_dt * (p - ap);\n      const v = s_v;\n      v.x = this.m_step.inv_dt * (p.x - ap.x);\n      v.y = this.m_step.inv_dt * (p.y - ap.y);\n      ///m_system.m_velocityBuffer.data[a] = v;\n      this.m_system.m_velocityBuffer.data[a].Copy(v);\n      ///b2Vec2 f = m_step.inv_dt * m_system.GetParticleMass() * (av - v);\n      const f = s_f;\n      f.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.x - v.x);\n      f.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.y - v.y);\n      this.m_system.ParticleApplyForce(a, f);\n    }\n  }\n  public static readonly ReportFixtureAndParticle_s_p1 = new b2Vec2();\n  public static readonly ReportFixtureAndParticle_s_output = new b2RayCastOutput();\n  public static readonly ReportFixtureAndParticle_s_input = new b2RayCastInput();\n  public static readonly ReportFixtureAndParticle_s_p = new b2Vec2();\n  public static readonly ReportFixtureAndParticle_s_v = new b2Vec2();\n  public static readonly ReportFixtureAndParticle_s_f = new b2Vec2();\n\n  public ReportParticle(system: b2ParticleSystem, index: number): boolean {\n    return false;\n  }\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\n\nexport class b2StackQueue<T> {\n  public readonly m_buffer: Array<T | null> = [];\n  public m_front: number = 0;\n  public m_back: number = 0;\n  public get m_capacity(): number { return this.m_buffer.length; }\n  constructor(capacity: number) {\n    this.m_buffer.fill(null, 0, capacity);\n  }\n  public Push(item: T): void {\n    if (this.m_back >= this.m_capacity) {\n      for (let i = this.m_front; i < this.m_back; i++) {\n        this.m_buffer[i - this.m_front] = this.m_buffer[i];\n      }\n      this.m_back -= this.m_front;\n      this.m_front = 0;\n    }\n    this.m_buffer[this.m_back] = item;\n    this.m_back++;\n  }\n  public Pop(): void {\n    // DEBUG: b2Assert(this.m_front < this.m_back);\n    this.m_buffer[this.m_front] = null;\n    this.m_front++;\n  }\n  public Empty(): boolean {\n    // DEBUG: b2Assert(this.m_front <= this.m_back);\n    return this.m_front === this.m_back;\n  }\n  public Front(): T {\n    const item = this.m_buffer[this.m_front];\n    if (!item) { throw new Error(); }\n    return item;\n  }\n}\n\n// #endif\n",
    "/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\n// DEBUG: import { b2Assert } from \"../common/b2_settings\";\nimport { b2_maxFloat, b2MakeArray } from \"../common/b2_settings\";\nimport { b2Vec2 } from \"../common/b2_math\";\nimport { b2StackQueue } from \"./b2_stack_queue\";\n\n/**\n * A field representing the nearest generator from each point.\n */\nexport class b2VoronoiDiagram {\n  public m_generatorBuffer: b2VoronoiDiagram_Generator[];\n  public m_generatorCapacity = 0;\n  public m_generatorCount = 0;\n  public m_countX = 0;\n  public m_countY = 0;\n  public m_diagram: b2VoronoiDiagram_Generator[] = [];\n\n  constructor(generatorCapacity: number) {\n    this.m_generatorBuffer = b2MakeArray(generatorCapacity, (index) => new b2VoronoiDiagram_Generator());\n    this.m_generatorCapacity = generatorCapacity;\n  }\n\n  /**\n   * Add a generator.\n   *\n   * @param center the position of the generator.\n   * @param tag a tag used to identify the generator in callback functions.\n   * @param necessary whether to callback for nodes associated with the generator.\n   */\n  public AddGenerator(center: b2Vec2, tag: number, necessary: boolean): void {\n    // DEBUG: b2Assert(this.m_generatorCount < this.m_generatorCapacity);\n    const g = this.m_generatorBuffer[this.m_generatorCount++];\n    g.center.Copy(center);\n    g.tag = tag;\n    g.necessary = necessary;\n  }\n\n  /**\n   * Generate the Voronoi diagram. It is rasterized with a given\n   * interval in the same range as the necessary generators exist.\n   *\n   * @param radius the interval of the diagram.\n   * @param margin margin for which the range of the diagram is extended.\n   */\n  public Generate(radius: number, margin: number): void {\n    const inverseRadius = 1 / radius;\n    const lower = new b2Vec2(+b2_maxFloat, +b2_maxFloat);\n    const upper = new b2Vec2(-b2_maxFloat, -b2_maxFloat);\n    let necessary_count = 0;\n    for (let k = 0; k < this.m_generatorCount; k++) {\n      const g = this.m_generatorBuffer[k];\n      if (g.necessary) {\n        b2Vec2.MinV(lower, g.center, lower);\n        b2Vec2.MaxV(upper, g.center, upper);\n        ++necessary_count;\n      }\n    }\n    if (necessary_count === 0) {\n      ///debugger;\n      this.m_countX = 0;\n      this.m_countY = 0;\n      return;\n    }\n    lower.x -= margin;\n    lower.y -= margin;\n    upper.x += margin;\n    upper.y += margin;\n    this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\n    this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\n    this.m_diagram = []; // b2MakeArray(this.m_countX * this.m_countY, (index) => null);\n\n    // (4 * m_countX * m_countY) is the queue capacity that is experimentally\n    // known to be necessary and sufficient for general particle distributions.\n    const queue = new b2StackQueue<b2VoronoiDiagram_Task>(4 * this.m_countX * this.m_countY);\n    for (let k = 0; k < this.m_generatorCount; k++) {\n      const g = this.m_generatorBuffer[k];\n      ///  g.center = inverseRadius * (g.center - lower);\n      g.center.SelfSub(lower).SelfMul(inverseRadius);\n      const x = Math.floor(g.center.x);\n      const y = Math.floor(g.center.y);\n      if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\n        queue.Push(new b2VoronoiDiagram_Task(x, y, x + y * this.m_countX, g));\n      }\n    }\n    while (!queue.Empty()) {\n      const task = queue.Front();\n      const x = task.m_x;\n      const y = task.m_y;\n      const i = task.m_i;\n      const g = task.m_generator;\n      queue.Pop();\n      if (!this.m_diagram[i]) {\n        this.m_diagram[i] = g;\n        if (x > 0) {\n          queue.Push(new b2VoronoiDiagram_Task(x - 1, y, i - 1, g));\n        }\n        if (y > 0) {\n          queue.Push(new b2VoronoiDiagram_Task(x, y - 1, i - this.m_countX, g));\n        }\n        if (x < this.m_countX - 1) {\n          queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, g));\n        }\n        if (y < this.m_countY - 1) {\n          queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, g));\n        }\n      }\n    }\n    for (let y = 0; y < this.m_countY; y++) {\n      for (let x = 0; x < this.m_countX - 1; x++) {\n        const i = x + y * this.m_countX;\n        const a = this.m_diagram[i];\n        const b = this.m_diagram[i + 1];\n        if (a !== b) {\n          queue.Push(new b2VoronoiDiagram_Task(x, y, i, b));\n          queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, a));\n        }\n      }\n    }\n    for (let y = 0; y < this.m_countY - 1; y++) {\n      for (let x = 0; x < this.m_countX; x++) {\n        const i = x + y * this.m_countX;\n        const a = this.m_diagram[i];\n        const b = this.m_diagram[i + this.m_countX];\n        if (a !== b) {\n          queue.Push(new b2VoronoiDiagram_Task(x, y, i, b));\n          queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, a));\n        }\n      }\n    }\n    while (!queue.Empty()) {\n      const task = queue.Front();\n      const x = task.m_x;\n      const y = task.m_y;\n      const i = task.m_i;\n      const k = task.m_generator;\n      queue.Pop();\n      const a = this.m_diagram[i];\n      const b = k;\n      if (a !== b) {\n        const ax = a.center.x - x;\n        const ay = a.center.y - y;\n        const bx = b.center.x - x;\n        const by = b.center.y - y;\n        const a2 = ax * ax + ay * ay;\n        const b2 = bx * bx + by * by;\n        if (a2 > b2) {\n          this.m_diagram[i] = b;\n          if (x > 0) {\n            queue.Push(new b2VoronoiDiagram_Task(x - 1, y, i - 1, b));\n          }\n          if (y > 0) {\n            queue.Push(new b2VoronoiDiagram_Task(x, y - 1, i - this.m_countX, b));\n          }\n          if (x < this.m_countX - 1) {\n            queue.Push(new b2VoronoiDiagram_Task(x + 1, y, i + 1, b));\n          }\n          if (y < this.m_countY - 1) {\n            queue.Push(new b2VoronoiDiagram_Task(x, y + 1, i + this.m_countX, b));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Enumerate all nodes that contain at least one necessary\n   * generator.\n   */\n  public GetNodes(callback: b2VoronoiDiagram_NodeCallback): void {\n    for (let y = 0; y < this.m_countY - 1; y++) {\n      for (let x = 0; x < this.m_countX - 1; x++) {\n        const i = x + y * this.m_countX;\n        const a = this.m_diagram[i];\n        const b = this.m_diagram[i + 1];\n        const c = this.m_diagram[i + this.m_countX];\n        const d = this.m_diagram[i + 1 + this.m_countX];\n        if (b !== c) {\n          if (a !== b && a !== c &&\n            (a.necessary || b.necessary || c.necessary)) {\n            callback(a.tag, b.tag, c.tag);\n          }\n          if (d !== b && d !== c &&\n            (a.necessary || b.necessary || c.necessary)) {\n            callback(b.tag, d.tag, c.tag);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Callback used by GetNodes().\n *\n * Receive tags for generators associated with a node.\n */\nexport type b2VoronoiDiagram_NodeCallback = (a: number, b: number, c: number) => void;\n\nexport class b2VoronoiDiagram_Generator {\n  public center: b2Vec2 = new b2Vec2();\n  public tag: number = 0;\n  public necessary: boolean = false;\n}\n\nexport class b2VoronoiDiagram_Task {\n  public m_x: number;\n  public m_y: number;\n  public m_i: number;\n  public m_generator: b2VoronoiDiagram_Generator;\n  constructor(x: number, y: number, i: number, g: b2VoronoiDiagram_Generator) {\n    this.m_x = x;\n    this.m_y = y;\n    this.m_i = i;\n    this.m_generator = g;\n  }\n}\n\n// #endif\n",
    "// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { b2Vec2, b2Atan2 } from \"../common/b2_math\";\nimport { b2Draw, b2Color } from \"../common/b2_draw\";\nimport { b2_pi } from \"../common/b2_common\";\n\nexport enum b2StretchingModel {\n  b2_pbdStretchingModel,\n  b2_xpbdStretchingModel,\n}\n\nexport enum b2BendingModel {\n  b2_springAngleBendingModel = 0,\n  b2_pbdAngleBendingModel,\n  b2_xpbdAngleBendingModel,\n  b2_pbdDistanceBendingModel,\n  b2_pbdHeightBendingModel,\n  b2_pbdTriangleBendingModel,\n}\n\n///\nexport class b2RopeTuning {\n  public stretchingModel: b2StretchingModel = b2StretchingModel.b2_pbdStretchingModel;\n  public bendingModel: b2BendingModel = b2BendingModel.b2_pbdAngleBendingModel;\n  public damping: number = 0.0;\n  public stretchStiffness: number = 1.0;\n  public stretchHertz: number = 0.0;\n  public stretchDamping: number = 0.0;\n  public bendStiffness: number = 0.5;\n  public bendHertz: number = 1.0;\n  public bendDamping: number = 0.0;\n  public isometric: boolean = false;\n  public fixedEffectiveMass: boolean = false;\n  public warmStart: boolean = false;\n\n  public Copy(other: Readonly<b2RopeTuning>): this {\n    this.stretchingModel = other.stretchingModel;\n    this.bendingModel = other.bendingModel;\n    this.damping = other.damping;\n    this.stretchStiffness = other.stretchStiffness;\n    this.stretchHertz = other.stretchHertz;\n    this.stretchDamping = other.stretchDamping;\n    this.bendStiffness = other.bendStiffness;\n    this.bendHertz = other.bendHertz;\n    this.bendDamping = other.bendDamping;\n    this.isometric = other.isometric;\n    this.fixedEffectiveMass = other.fixedEffectiveMass;\n    this.warmStart = other.warmStart;\n    return this;\n  }\n}\n\n///\nexport class b2RopeDef {\n  public readonly position: b2Vec2 = new b2Vec2();\n  // b2Vec2* vertices;\n  public readonly vertices: b2Vec2[] = [];\n  // int32 count;\n  public count: number = 0;\n  // float* masses;\n  public readonly masses: number[] = [];\n  // b2Vec2 gravity;\n  public readonly gravity: b2Vec2 = new b2Vec2();\n  // b2RopeTuning tuning;\n  public readonly tuning: b2RopeTuning = new b2RopeTuning();\n}\n\nclass b2RopeStretch {\n  public i1: number = 0;\n  public i2: number = 0;\n  public invMass1: number = 0.0;\n  public invMass2: number = 0.0;\n  public L: number = 0.0;\n  public lambda: number = 0.0;\n  public spring: number = 0.0;\n  public damper: number = 0.0;\n}\n\nclass b2RopeBend {\n  public i1: number = 0;\n  public i2: number = 0;\n  public i3: number = 0;\n  public invMass1: number = 0.0;\n  public invMass2: number = 0.0;\n  public invMass3: number = 0.0;\n  public invEffectiveMass: number = 0.0;\n  public lambda: number = 0.0;\n  public L1: number = 0.0;\n  public L2: number = 0.0;\n  public alpha1: number = 0.0;\n  public alpha2: number = 0.0;\n  public spring: number = 0.0;\n  public damper: number = 0.0;\n}\n\n///\nexport class b2Rope {\n  private readonly m_position: b2Vec2 = new b2Vec2();\n\n  private m_count: number = 0;\n  private m_stretchCount: number = 0;\n  private m_bendCount: number = 0;\n\n  // b2RopeStretch* m_stretchConstraints;\n  private readonly m_stretchConstraints: b2RopeStretch[] = [];\n  // b2RopeBend* m_bendConstraints;\n  private readonly m_bendConstraints: b2RopeBend[] = [];\n\n  // b2Vec2* m_bindPositions;\n  private readonly m_bindPositions: b2Vec2[] = [];\n  // b2Vec2* m_ps;\n  private readonly m_ps: b2Vec2[] = [];\n  // b2Vec2* m_p0s;\n  private readonly m_p0s: b2Vec2[] = [];\n  // b2Vec2* m_vs;\n  private readonly m_vs: b2Vec2[] = [];\n\n  // float* m_invMasses;\n  private readonly m_invMasses: number[] = [];\n  // b2Vec2 m_gravity;\n  private readonly m_gravity: b2Vec2 = new b2Vec2();\n\n  private readonly m_tuning: b2RopeTuning = new b2RopeTuning();\n\n  public Create(def: b2RopeDef): void {\n    // b2Assert(def.count >= 3);\n    this.m_position.Copy(def.position);\n    this.m_count = def.count;\n    function make_array<T>(array: T[], count: number, make: (index: number) => T): void {\n      for (let index = 0; index < count; ++index) {\n        array[index] = make(index);\n      }\n    }\n    // this.m_bindPositions = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\n    make_array(this.m_bindPositions, this.m_count, () => new b2Vec2());\n    // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\n    make_array(this.m_ps, this.m_count, () => new b2Vec2());\n    // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\n    make_array(this.m_p0s, this.m_count, () => new b2Vec2());\n    // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\n    make_array(this.m_vs, this.m_count, () => new b2Vec2());\n    // this.m_invMasses = (float*)b2Alloc(this.m_count * sizeof(float));\n    make_array(this.m_invMasses, this.m_count, () => 0.0);\n\n    for (let i = 0; i < this.m_count; ++i) {\n      this.m_bindPositions[i].Copy(def.vertices[i]);\n      // this.m_ps[i] = def.vertices[i] + this.m_position;\n      this.m_ps[i].Copy(def.vertices[i]).SelfAdd(this.m_position);\n      // this.m_p0s[i] = def.vertices[i] + this.m_position;\n      this.m_p0s[i].Copy(def.vertices[i]).SelfAdd(this.m_position);\n      this.m_vs[i].SetZero();\n\n      const m: number = def.masses[i];\n      if (m > 0.0) {\n        this.m_invMasses[i] = 1.0 / m;\n      } else {\n        this.m_invMasses[i] = 0.0;\n      }\n    }\n\n    this.m_stretchCount = this.m_count - 1;\n    this.m_bendCount = this.m_count - 2;\n\n    // this.m_stretchConstraints = (b2RopeStretch*)b2Alloc(this.m_stretchCount * sizeof(b2RopeStretch));\n    make_array(this.m_stretchConstraints, this.m_stretchCount, () => new b2RopeStretch());\n    // this.m_bendConstraints = (b2RopeBend*)b2Alloc(this.m_bendCount * sizeof(b2RopeBend));\n    make_array(this.m_bendConstraints, this.m_bendCount, () => new b2RopeBend());\n\n    for (let i = 0; i < this.m_stretchCount; ++i) {\n      const c: b2RopeStretch = this.m_stretchConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[i];\n      const p2: b2Vec2 = this.m_ps[i + 1];\n\n      c.i1 = i;\n      c.i2 = i + 1;\n      c.L = b2Vec2.DistanceVV(p1, p2);\n      c.invMass1 = this.m_invMasses[i];\n      c.invMass2 = this.m_invMasses[i + 1];\n      c.lambda = 0.0;\n      c.damper = 0.0;\n      c.spring = 0.0;\n    }\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[i];\n      const p2: b2Vec2 = this.m_ps[i + 1];\n      const p3: b2Vec2 = this.m_ps[i + 2];\n\n      c.i1 = i;\n      c.i2 = i + 1;\n      c.i3 = i + 2;\n      c.invMass1 = this.m_invMasses[i];\n      c.invMass2 = this.m_invMasses[i + 1];\n      c.invMass3 = this.m_invMasses[i + 2];\n      c.invEffectiveMass = 0.0;\n      c.L1 = b2Vec2.DistanceVV(p1, p2);\n      c.L2 = b2Vec2.DistanceVV(p2, p3);\n      c.lambda = 0.0;\n\n      // Pre-compute effective mass (TODO use flattened config)\n      const e1: b2Vec2 = b2Vec2.SubVV(p2, p1, new b2Vec2());\n      const e2: b2Vec2 = b2Vec2.SubVV(p3, p2, new b2Vec2());\n      const L1sqr: number = e1.LengthSquared();\n      const L2sqr: number = e2.LengthSquared();\n\n      if (L1sqr * L2sqr === 0.0) {\n        continue;\n      }\n\n      // b2Vec2 Jd1 = (-1.0 / L1sqr) * e1.Skew();\n      const Jd1: b2Vec2 = new b2Vec2().Copy(e1).SelfSkew().SelfMul(-1.0 / L1sqr);\n      // b2Vec2 Jd2 = (1.0 / L2sqr) * e2.Skew();\n      const Jd2: b2Vec2 = new b2Vec2().Copy(e2).SelfSkew().SelfMul(1.0 / L2sqr);\n\n      // b2Vec2 J1 = -Jd1;\n      const J1 = Jd1.Clone().SelfNeg();\n      // b2Vec2 J2 = Jd1 - Jd2;\n      const J2 = Jd1.Clone().SelfSub(Jd2);\n      // b2Vec2 J3 = Jd2;\n      const J3 = Jd2.Clone();\n\n      c.invEffectiveMass = c.invMass1 * b2Vec2.DotVV(J1, J1) + c.invMass2 * b2Vec2.DotVV(J2, J2) + c.invMass3 * b2Vec2.DotVV(J3, J3);\n\n      // b2Vec2 r = p3 - p1;\n      const r: b2Vec2 = b2Vec2.SubVV(p3, p1, new b2Vec2());\n\n      const rr: number = r.LengthSquared();\n      if (rr === 0.0) {\n        continue;\n      }\n\n      // a1 = h2 / (h1 + h2)\n      // a2 = h1 / (h1 + h2)\n      c.alpha1 = b2Vec2.DotVV(e2, r) / rr;\n      c.alpha2 = b2Vec2.DotVV(e1, r) / rr;\n    }\n\n    this.m_gravity.Copy(def.gravity);\n\n    this.SetTuning(def.tuning);\n  }\n\n  public SetTuning(tuning: b2RopeTuning): void {\n    this.m_tuning.Copy(tuning);\n\n    // Pre-compute spring and damper values based on tuning\n\n    const bendOmega: number = 2.0 * b2_pi * this.m_tuning.bendHertz;\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const L1sqr: number = c.L1 * c.L1;\n      const L2sqr: number = c.L2 * c.L2;\n\n      if (L1sqr * L2sqr === 0.0) {\n        c.spring = 0.0;\n        c.damper = 0.0;\n        continue;\n      }\n\n      // Flatten the triangle formed by the two edges\n      const J2: number = 1.0 / c.L1 + 1.0 / c.L2;\n      const sum: number = c.invMass1 / L1sqr + c.invMass2 * J2 * J2 + c.invMass3 / L2sqr;\n      if (sum === 0.0) {\n        c.spring = 0.0;\n        c.damper = 0.0;\n        continue;\n      }\n\n      const mass: number = 1.0 / sum;\n\n      c.spring = mass * bendOmega * bendOmega;\n      c.damper = 2.0 * mass * this.m_tuning.bendDamping * bendOmega;\n    }\n\n    const stretchOmega: number = 2.0 * b2_pi * this.m_tuning.stretchHertz;\n\n    for (let i = 0; i < this.m_stretchCount; ++i) {\n      const c: b2RopeStretch = this.m_stretchConstraints[i];\n\n      const sum: number = c.invMass1 + c.invMass2;\n      if (sum === 0.0) {\n        continue;\n      }\n\n      const mass: number = 1.0 / sum;\n\n      c.spring = mass * stretchOmega * stretchOmega;\n      c.damper = 2.0 * mass * this.m_tuning.stretchDamping * stretchOmega;\n    }\n  }\n\n  public Step(dt: number, iterations: number, position: Readonly<b2Vec2>): void {\n    if (dt === 0.0) {\n      return;\n    }\n\n    const inv_dt: number = 1.0 / dt;\n    const d: number = Math.exp(- dt * this.m_tuning.damping);\n\n    // Apply gravity and damping\n    for (let i = 0; i < this.m_count; ++i) {\n      if (this.m_invMasses[i] > 0.0) {\n        // this.m_vs[i] *= d;\n        this.m_vs[i].x *= d;\n        this.m_vs[i].y *= d;\n        // this.m_vs[i] += dt * this.m_gravity;\n        this.m_vs[i].x += dt * this.m_gravity.x;\n        this.m_vs[i].y += dt * this.m_gravity.y;\n      }\n      else {\n        // this.m_vs[i] = inv_dt * (this.m_bindPositions[i] + position - this.m_p0s[i]);\n        this.m_vs[i].x = inv_dt * (this.m_bindPositions[i].x + position.x - this.m_p0s[i].x);\n        this.m_vs[i].y = inv_dt * (this.m_bindPositions[i].y + position.y - this.m_p0s[i].y);\n      }\n    }\n\n    // Apply bending spring\n    if (this.m_tuning.bendingModel === b2BendingModel.b2_springAngleBendingModel) {\n      this.ApplyBendForces(dt);\n    }\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      this.m_bendConstraints[i].lambda = 0.0;\n    }\n\n    for (let i = 0; i < this.m_stretchCount; ++i) {\n      this.m_stretchConstraints[i].lambda = 0.0;\n    }\n\n    // Update position\n    for (let i = 0; i < this.m_count; ++i) {\n      // this.m_ps[i] += dt * this.m_vs[i];\n      this.m_ps[i].x += dt * this.m_vs[i].x;\n      this.m_ps[i].y += dt * this.m_vs[i].y;\n    }\n\n    // Solve constraints\n    for (let i = 0; i < iterations; ++i) {\n      if (this.m_tuning.bendingModel === b2BendingModel.b2_pbdAngleBendingModel) {\n        this.SolveBend_PBD_Angle();\n      }\n      else if (this.m_tuning.bendingModel === b2BendingModel.b2_xpbdAngleBendingModel) {\n        this.SolveBend_XPBD_Angle(dt);\n      }\n      else if (this.m_tuning.bendingModel === b2BendingModel.b2_pbdDistanceBendingModel) {\n        this.SolveBend_PBD_Distance();\n      }\n      else if (this.m_tuning.bendingModel === b2BendingModel.b2_pbdHeightBendingModel) {\n        this.SolveBend_PBD_Height();\n      }\n      else if (this.m_tuning.bendingModel === b2BendingModel.b2_pbdTriangleBendingModel) {\n        this.SolveBend_PBD_Triangle();\n      }\n\n      if (this.m_tuning.stretchingModel === b2StretchingModel.b2_pbdStretchingModel) {\n        this.SolveStretch_PBD();\n      }\n      else if (this.m_tuning.stretchingModel === b2StretchingModel.b2_xpbdStretchingModel) {\n        this.SolveStretch_XPBD(dt);\n      }\n    }\n\n    // Constrain velocity\n    for (let i = 0; i < this.m_count; ++i) {\n      // this.m_vs[i] = inv_dt * (this.m_ps[i] - this.m_p0s[i]);\n      this.m_vs[i].x = inv_dt * (this.m_ps[i].x - this.m_p0s[i].x);\n      this.m_vs[i].y = inv_dt * (this.m_ps[i].y - this.m_p0s[i].y);\n      this.m_p0s[i].Copy(this.m_ps[i]);\n    }\n  }\n\n  public Reset(position: Readonly<b2Vec2>): void {\n    this.m_position.Copy(position);\n\n    for (let i = 0; i < this.m_count; ++i) {\n      // this.m_ps[i] = this.m_bindPositions[i] + this.m_position;\n      this.m_ps[i].x = this.m_bindPositions[i].x + this.m_position.x;\n      this.m_ps[i].y = this.m_bindPositions[i].y + this.m_position.y;\n      // this.m_p0s[i] = this.m_bindPositions[i] + this.m_position;\n      this.m_p0s[i].x = this.m_bindPositions[i].x + this.m_position.x;\n      this.m_p0s[i].y = this.m_bindPositions[i].y + this.m_position.y;\n      this.m_vs[i].SetZero();\n    }\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      this.m_bendConstraints[i].lambda = 0.0;\n    }\n\n    for (let i = 0; i < this.m_stretchCount; ++i) {\n      this.m_stretchConstraints[i].lambda = 0.0;\n    }\n  }\n\n  public Draw(draw: b2Draw): void {\n    const c: b2Color = new b2Color(0.4, 0.5, 0.7);\n    const pg: b2Color = new b2Color(0.1, 0.8, 0.1);\n    const pd: b2Color = new b2Color(0.7, 0.2, 0.4);\n\n    for (let i = 0; i < this.m_count - 1; ++i) {\n      draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\n\n      const pc: Readonly<b2Color> = this.m_invMasses[i] > 0.0 ? pd : pg;\n      draw.DrawPoint(this.m_ps[i], 5.0, pc);\n    }\n\n    const pc: Readonly<b2Color> = this.m_invMasses[this.m_count - 1] > 0.0 ? pd : pg;\n    draw.DrawPoint(this.m_ps[this.m_count - 1], 5.0, pc);\n  }\n\n  private SolveStretch_PBD(): void {\n    const stiffness: number = this.m_tuning.stretchStiffness;\n\n    for (let i = 0; i < this.m_stretchCount; ++i) {\n      const c: b2RopeStretch = this.m_stretchConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[c.i1].Clone();\n      const p2: b2Vec2 = this.m_ps[c.i2].Clone();\n\n      // b2Vec2 d = p2 - p1;\n      const d: b2Vec2 = p2.Clone().SelfSub(p1);\n      const L: number = d.Normalize();\n\n      const sum: number = c.invMass1 + c.invMass2;\n      if (sum === 0.0) {\n        continue;\n      }\n\n      const s1: number = c.invMass1 / sum;\n      const s2: number = c.invMass2 / sum;\n\n      // p1 -= stiffness * s1 * (c.L - L) * d;\n      p1.x -= stiffness * s1 * (c.L - L) * d.x;\n      p1.y -= stiffness * s1 * (c.L - L) * d.y;\n      // p2 += stiffness * s2 * (c.L - L) * d;\n      p2.x += stiffness * s2 * (c.L - L) * d.x;\n      p2.y += stiffness * s2 * (c.L - L) * d.y;\n\n      this.m_ps[c.i1].Copy(p1);\n      this.m_ps[c.i2].Copy(p2);\n    }\n  }\n\n  private SolveStretch_XPBD(dt: number): void {\n    // \tb2Assert(dt > 0.0);\n\n    for (let i = 0; i < this.m_stretchCount; ++i) {\n      const c: b2RopeStretch = this.m_stretchConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[c.i1].Clone();\n      const p2: b2Vec2 = this.m_ps[c.i2].Clone();\n\n      const dp1: b2Vec2 = p1.Clone().SelfSub(this.m_p0s[c.i1]);\n      const dp2: b2Vec2 = p2.Clone().SelfSub(this.m_p0s[c.i2]);\n\n      // b2Vec2 u = p2 - p1;\n      const u: b2Vec2 = p2.Clone().SelfSub(p1);\n      const L: number = u.Normalize();\n\n      // b2Vec2 J1 = -u;\n      const J1: b2Vec2 = u.Clone().SelfNeg();\n      // b2Vec2 J2 = u;\n      const J2: b2Vec2 = u;\n\n      const sum: number = c.invMass1 + c.invMass2;\n      if (sum === 0.0) {\n        continue;\n      }\n\n      const alpha: number = 1.0 / (c.spring * dt * dt);\t// 1 / kg\n      const beta: number = dt * dt * c.damper;\t\t\t\t// kg * s\n      const sigma: number = alpha * beta / dt;\t\t\t\t// non-dimensional\n      const C: number = L - c.L;\n\n      // This is using the initial velocities\n      const Cdot: number = b2Vec2.DotVV(J1, dp1) + b2Vec2.DotVV(J2, dp2);\n\n      const B: number = C + alpha * c.lambda + sigma * Cdot;\n      const sum2: number = (1.0 + sigma) * sum + alpha;\n\n      const impulse: number = -B / sum2;\n\n      // p1 += (c.invMass1 * impulse) * J1;\n      p1.x += (c.invMass1 * impulse) * J1.x;\n      p1.y += (c.invMass1 * impulse) * J1.y;\n      // p2 += (c.invMass2 * impulse) * J2;\n      p2.x += (c.invMass2 * impulse) * J2.x;\n      p2.y += (c.invMass2 * impulse) * J2.y;\n\n      this.m_ps[c.i1].Copy(p1);\n      this.m_ps[c.i2].Copy(p2);\n      c.lambda += impulse;\n    }\n  }\n\n  private SolveBend_PBD_Angle(): void {\n    const stiffness: number = this.m_tuning.bendStiffness;\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[c.i1];\n      const p2: b2Vec2 = this.m_ps[c.i2];\n      const p3: b2Vec2 = this.m_ps[c.i3];\n\n      // b2Vec2 d1 = p2 - p1;\n      const d1 = p2.Clone().SelfSub(p1);\n      // b2Vec2 d2 = p3 - p2;\n      const d2 = p3.Clone().SelfSub(p2);\n      const a: number = b2Vec2.CrossVV(d1, d2);\n      const b: number = b2Vec2.DotVV(d1, d2);\n\n      const angle: number = b2Atan2(a, b);\n\n      let L1sqr: number = 0.0, L2sqr: number = 0.0;\n\n      if (this.m_tuning.isometric) {\n        L1sqr = c.L1 * c.L1;\n        L2sqr = c.L2 * c.L2;\n      }\n      else {\n        L1sqr = d1.LengthSquared();\n        L2sqr = d2.LengthSquared();\n      }\n\n      if (L1sqr * L2sqr === 0.0) {\n        continue;\n      }\n\n      // b2Vec2 Jd1 = (-1.0 / L1sqr) * d1.Skew();\n      const Jd1: b2Vec2 = new b2Vec2().Copy(d1).SelfSkew().SelfMul(-1.0 / L1sqr);\n      // b2Vec2 Jd2 = (1.0 / L2sqr) * d2.Skew();\n      const Jd2: b2Vec2 = new b2Vec2().Copy(d2).SelfSkew().SelfMul(1.0 / L2sqr);\n\n      // b2Vec2 J1 = -Jd1;\n      const J1 = Jd1.Clone().SelfNeg();\n      // b2Vec2 J2 = Jd1 - Jd2;\n      const J2 = Jd1.Clone().SelfSub(Jd2);\n      // b2Vec2 J3 = Jd2;\n      const J3 = Jd2;\n\n      let sum: number = 0.0;\n      if (this.m_tuning.fixedEffectiveMass) {\n        sum = c.invEffectiveMass;\n      }\n      else {\n        sum = c.invMass1 * b2Vec2.DotVV(J1, J1) + c.invMass2 * b2Vec2.DotVV(J2, J2) + c.invMass3 * b2Vec2.DotVV(J3, J3);\n      }\n\n      if (sum === 0.0) {\n        sum = c.invEffectiveMass;\n      }\n\n      const impulse: number = -stiffness * angle / sum;\n\n      // p1 += (c.invMass1 * impulse) * J1;\n      p1.x += (c.invMass1 * impulse) * J1.x;\n      p1.y += (c.invMass1 * impulse) * J1.y;\n      // p2 += (c.invMass2 * impulse) * J2;\n      p2.x += (c.invMass2 * impulse) * J2.x;\n      p2.y += (c.invMass2 * impulse) * J2.y;\n      // p3 += (c.invMass3 * impulse) * J3;\n      p3.x += (c.invMass3 * impulse) * J3.x;\n      p3.y += (c.invMass3 * impulse) * J3.y;\n\n      this.m_ps[c.i1].Copy(p1);\n      this.m_ps[c.i2].Copy(p2);\n      this.m_ps[c.i3].Copy(p3);\n    }\n  }\n\n  private SolveBend_XPBD_Angle(dt: number): void {\n    // b2Assert(dt > 0.0);\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[c.i1];\n      const p2: b2Vec2 = this.m_ps[c.i2];\n      const p3: b2Vec2 = this.m_ps[c.i3];\n\n      const dp1: b2Vec2 = p1.Clone().SelfSub(this.m_p0s[c.i1]);\n      const dp2: b2Vec2 = p2.Clone().SelfSub(this.m_p0s[c.i2]);\n      const dp3: b2Vec2 = p3.Clone().SelfSub(this.m_p0s[c.i3]);\n\n      // b2Vec2 d1 = p2 - p1;\n      const d1 = p2.Clone().SelfSub(p1);\n      // b2Vec2 d2 = p3 - p2;\n      const d2 = p3.Clone().SelfSub(p2);\n\n      let L1sqr: number, L2sqr: number;\n\n      if (this.m_tuning.isometric) {\n        L1sqr = c.L1 * c.L1;\n        L2sqr = c.L2 * c.L2;\n      }\n      else {\n        L1sqr = d1.LengthSquared();\n        L2sqr = d2.LengthSquared();\n      }\n\n      if (L1sqr * L2sqr === 0.0) {\n        continue;\n      }\n\n      const a: number = b2Vec2.CrossVV(d1, d2);\n      const b: number = b2Vec2.DotVV(d1, d2);\n\n      const angle: number = b2Atan2(a, b);\n\n      // b2Vec2 Jd1 = (-1.0 / L1sqr) * d1.Skew();\n      // b2Vec2 Jd2 = (1.0 / L2sqr) * d2.Skew();\n\n      // b2Vec2 J1 = -Jd1;\n      // b2Vec2 J2 = Jd1 - Jd2;\n      // b2Vec2 J3 = Jd2;\n\n      // b2Vec2 Jd1 = (-1.0 / L1sqr) * d1.Skew();\n      const Jd1: b2Vec2 = new b2Vec2().Copy(d1).SelfSkew().SelfMul(-1.0 / L1sqr);\n      // b2Vec2 Jd2 = (1.0 / L2sqr) * d2.Skew();\n      const Jd2: b2Vec2 = new b2Vec2().Copy(d2).SelfSkew().SelfMul(1.0 / L2sqr);\n\n      // b2Vec2 J1 = -Jd1;\n      const J1 = Jd1.Clone().SelfNeg();\n      // b2Vec2 J2 = Jd1 - Jd2;\n      const J2 = Jd1.Clone().SelfSub(Jd2);\n      // b2Vec2 J3 = Jd2;\n      const J3 = Jd2;\n\n      let sum: number;\n      if (this.m_tuning.fixedEffectiveMass) {\n        sum = c.invEffectiveMass;\n      }\n      else {\n        sum = c.invMass1 * b2Vec2.DotVV(J1, J1) + c.invMass2 * b2Vec2.DotVV(J2, J2) + c.invMass3 * b2Vec2.DotVV(J3, J3);\n      }\n\n      if (sum === 0.0) {\n        continue;\n      }\n\n      const alpha: number = 1.0 / (c.spring * dt * dt);\n      const beta: number = dt * dt * c.damper;\n      const sigma: number = alpha * beta / dt;\n      const C: number = angle;\n\n      // This is using the initial velocities\n      const Cdot: number = b2Vec2.DotVV(J1, dp1) + b2Vec2.DotVV(J2, dp2) + b2Vec2.DotVV(J3, dp3);\n\n      const B: number = C + alpha * c.lambda + sigma * Cdot;\n      const sum2: number = (1.0 + sigma) * sum + alpha;\n\n      const impulse: number = -B / sum2;\n\n      // p1 += (c.invMass1 * impulse) * J1;\n      p1.x += (c.invMass1 * impulse) * J1.x;\n      p1.y += (c.invMass1 * impulse) * J1.y;\n      // p2 += (c.invMass2 * impulse) * J2;\n      p2.x += (c.invMass2 * impulse) * J2.x;\n      p2.y += (c.invMass2 * impulse) * J2.y;\n      // p3 += (c.invMass3 * impulse) * J3;\n      p3.x += (c.invMass3 * impulse) * J3.x;\n      p3.y += (c.invMass3 * impulse) * J3.y;\n\n      this.m_ps[c.i1].Copy(p1);\n      this.m_ps[c.i2].Copy(p2);\n      this.m_ps[c.i3].Copy(p3);\n      c.lambda += impulse;\n    }\n  }\n\n  private SolveBend_PBD_Distance(): void {\n    const stiffness: number = this.m_tuning.bendStiffness;\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const i1: number = c.i1;\n      const i2: number = c.i3;\n\n      const p1: b2Vec2 = this.m_ps[i1].Clone();\n      const p2: b2Vec2 = this.m_ps[i2].Clone();\n\n      // b2Vec2 d = p2 - p1;\n      const d = p2.Clone().SelfSub(p1);\n      const L: number = d.Normalize();\n\n      const sum: number = c.invMass1 + c.invMass3;\n      if (sum === 0.0) {\n        continue;\n      }\n\n      const s1: number = c.invMass1 / sum;\n      const s2: number = c.invMass3 / sum;\n\n      // p1 -= stiffness * s1 * (c.L1 + c.L2 - L) * d;\n      p1.x -= stiffness * s1 * (c.L1 + c.L2 - L) * d.x;\n      p1.y -= stiffness * s1 * (c.L1 + c.L2 - L) * d.y;\n      // p2 += stiffness * s2 * (c.L1 + c.L2 - L) * d;\n      p2.x += stiffness * s2 * (c.L1 + c.L2 - L) * d.x;\n      p2.y += stiffness * s2 * (c.L1 + c.L2 - L) * d.y;\n\n      this.m_ps[i1].Copy(p1);\n      this.m_ps[i2].Copy(p2);\n    }\n  }\n\n  private SolveBend_PBD_Height(): void {\n    const stiffness: number = this.m_tuning.bendStiffness;\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[c.i1].Clone();\n      const p2: b2Vec2 = this.m_ps[c.i2].Clone();\n      const p3: b2Vec2 = this.m_ps[c.i3].Clone();\n\n      // Barycentric coordinates are held constant\n      const d = new b2Vec2();\n      // b2Vec2 d = c.alpha1 * p1 + c.alpha2 * p3 - p2;\n      d.x = c.alpha1 * p1.x + c.alpha2 * p3.x - p2.x;\n      d.y = c.alpha1 * p1.y + c.alpha2 * p3.y - p2.y;\n      const dLen: number = d.Length();\n\n      if (dLen === 0.0) {\n        continue;\n      }\n\n      // b2Vec2 dHat = (1.0 / dLen) * d;\n      const dHat = d.Clone().SelfMul(1.0 / dLen);\n\n      // b2Vec2 J1 = c.alpha1 * dHat;\n      const J1 = dHat.Clone().SelfMul(c.alpha1);\n      // b2Vec2 J2 = -dHat;\n      const J2 = dHat.Clone().SelfNeg();\n      // b2Vec2 J3 = c.alpha2 * dHat;\n      const J3 = dHat.Clone().SelfMul(c.alpha2);\n\n      const sum: number = c.invMass1 * c.alpha1 * c.alpha1 + c.invMass2 + c.invMass3 * c.alpha2 * c.alpha2;\n\n      if (sum === 0.0) {\n        continue;\n      }\n\n      const C: number = dLen;\n      const mass: number = 1.0 / sum;\n      const impulse: number = -stiffness * mass * C;\n\n      // p1 += (c.invMass1 * impulse) * J1;\n      p1.x += (c.invMass1 * impulse) * J1.x;\n      p1.y += (c.invMass1 * impulse) * J1.y;\n      // p2 += (c.invMass2 * impulse) * J2;\n      p2.x += (c.invMass2 * impulse) * J2.x;\n      p2.y += (c.invMass2 * impulse) * J2.y;\n      // p3 += (c.invMass3 * impulse) * J3;\n      p3.x += (c.invMass3 * impulse) * J3.x;\n      p3.y += (c.invMass3 * impulse) * J3.y;\n\n      this.m_ps[c.i1].Copy(p1);\n      this.m_ps[c.i2].Copy(p2);\n      this.m_ps[c.i3].Copy(p3);\n    }\n  }\n\n  // M. Kelager: A Triangle Bending Constraint Model for PBD\n  private SolveBend_PBD_Triangle(): void {\n    const stiffness = this.m_tuning.bendStiffness;\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const b0 = this.m_ps[c.i1].Clone();\n      const v = this.m_ps[c.i2].Clone();\n      const b1 = this.m_ps[c.i3].Clone();\n\n      const wb0 = c.invMass1;\n      const wv = c.invMass2;\n      const wb1 = c.invMass3;\n\n      const W = wb0 + wb1 + 2.0 * wv;\n      const invW = stiffness / W;\n\n      const d = new b2Vec2();\n      d.x = v.x - (1.0 / 3.0) * (b0.x + v.x + b1.x);\n      d.y = v.y - (1.0 / 3.0) * (b0.y + v.y + b1.y);\n\n      const db0 = new b2Vec2();\n      db0.x = 2.0 * wb0 * invW * d.x;\n      db0.y = 2.0 * wb0 * invW * d.y;\n      const dv = new b2Vec2();\n      dv.x = -4.0 * wv * invW * d.x;\n      dv.y = -4.0 * wv * invW * d.y;\n      const db1 = new b2Vec2();\n      db1.x = 2.0 * wb1 * invW * d.x;\n      db1.y = 2.0 * wb1 * invW * d.y;\n\n      b0.SelfAdd(db0);\n      v.SelfAdd(dv);\n      b1.SelfAdd(db1);\n\n      this.m_ps[c.i1].Copy(b0);\n      this.m_ps[c.i2].Copy(v);\n      this.m_ps[c.i3].Copy(b1);\n    }\n  }\n\n  private ApplyBendForces(dt: number): void {\n    // omega = 2 * pi * hz\n    const omega: number = 2.0 * b2_pi * this.m_tuning.bendHertz;\n\n    for (let i = 0; i < this.m_bendCount; ++i) {\n      const c: b2RopeBend = this.m_bendConstraints[i];\n\n      const p1: b2Vec2 = this.m_ps[c.i1].Clone();\n      const p2: b2Vec2 = this.m_ps[c.i2].Clone();\n      const p3: b2Vec2 = this.m_ps[c.i3].Clone();\n\n      const v1: b2Vec2 = this.m_vs[c.i1];\n      const v2: b2Vec2 = this.m_vs[c.i2];\n      const v3: b2Vec2 = this.m_vs[c.i3];\n\n      // b2Vec2 d1 = p2 - p1;\n      const d1 = p1.Clone().SelfSub(p1);\n      // b2Vec2 d2 = p3 - p2;\n      const d2 = p3.Clone().SelfSub(p2);\n\n      let L1sqr: number, L2sqr: number;\n\n      if (this.m_tuning.isometric) {\n        L1sqr = c.L1 * c.L1;\n        L2sqr = c.L2 * c.L2;\n      }\n      else {\n        L1sqr = d1.LengthSquared();\n        L2sqr = d2.LengthSquared();\n      }\n\n      if (L1sqr * L2sqr === 0.0) {\n        continue;\n      }\n\n      const a: number = b2Vec2.CrossVV(d1, d2);\n      const b: number = b2Vec2.DotVV(d1, d2);\n\n      const angle: number = b2Atan2(a, b);\n\n      // b2Vec2 Jd1 = (-1.0 / L1sqr) * d1.Skew();\n      // b2Vec2 Jd2 = (1.0 / L2sqr) * d2.Skew();\n\n      // b2Vec2 J1 = -Jd1;\n      // b2Vec2 J2 = Jd1 - Jd2;\n      // b2Vec2 J3 = Jd2;\n\n      // b2Vec2 Jd1 = (-1.0 / L1sqr) * d1.Skew();\n      const Jd1: b2Vec2 = new b2Vec2().Copy(d1).SelfSkew().SelfMul(-1.0 / L1sqr);\n      // b2Vec2 Jd2 = (1.0 / L2sqr) * d2.Skew();\n      const Jd2: b2Vec2 = new b2Vec2().Copy(d2).SelfSkew().SelfMul(1.0 / L2sqr);\n\n      // b2Vec2 J1 = -Jd1;\n      const J1 = Jd1.Clone().SelfNeg();\n      // b2Vec2 J2 = Jd1 - Jd2;\n      const J2 = Jd1.Clone().SelfSub(Jd2);\n      // b2Vec2 J3 = Jd2;\n      const J3 = Jd2;\n\n      let sum: number = 0.0;\n      if (this.m_tuning.fixedEffectiveMass) {\n        sum = c.invEffectiveMass;\n      }\n      else {\n        sum = c.invMass1 * b2Vec2.DotVV(J1, J1) + c.invMass2 * b2Vec2.DotVV(J2, J2) + c.invMass3 * b2Vec2.DotVV(J3, J3);\n      }\n\n      if (sum === 0.0) {\n        continue;\n      }\n\n      const mass: number = 1.0 / sum;\n\n      const spring: number = mass * omega * omega;\n      const damper: number = 2.0 * mass * this.m_tuning.bendDamping * omega;\n\n      const C: number = angle;\n      const Cdot: number = b2Vec2.DotVV(J1, v1) + b2Vec2.DotVV(J2, v2) + b2Vec2.DotVV(J3, v3);\n\n      const impulse: number = -dt * (spring * C + damper * Cdot);\n\n      // this.m_vs[c.i1] += (c.invMass1 * impulse) * J1;\n      this.m_vs[c.i1].x += (c.invMass1 * impulse) * J1.x;\n      this.m_vs[c.i1].y += (c.invMass1 * impulse) * J1.y;\n      // this.m_vs[c.i2] += (c.invMass2 * impulse) * J2;\n      this.m_vs[c.i2].x += (c.invMass2 * impulse) * J2.x;\n      this.m_vs[c.i2].y += (c.invMass2 * impulse) * J2.y;\n      // this.m_vs[c.i3] += (c.invMass3 * impulse) * J3;\n      this.m_vs[c.i3].x += (c.invMass3 * impulse) * J3.x;\n      this.m_vs[c.i3].y += (c.invMass3 * impulse) * J3.y;\n    }\n  }\n}\n",
    "import BinaryPacket from './binarypacket';\nimport ClientConnection from './client-connection';\nimport AbstractConnection from \"./abstract-connection\";\nimport {Class} from \"../utils/class\";\nimport SocketPortalClient from \"../server/socket/socket-portal-client\";\nimport {BinarySerializer, Constructor} from \"../serialization/binary/serializable\";\n\nabstract class AbstractClient {\n    public listeners = new Map<string | Constructor<any>, Array<Function>>();\n    public queue: BinaryPacket[] = [];\n    public connected: any;\n    public connection: AbstractConnection\n\n    protected constructor() {\n        this.connection = this.createConnection()\n    }\n\n    createConnection(): AbstractConnection {\n        return new ClientConnection(this)\n    }\n\n    on<T>(what: Constructor<T>, handler: ((packet: T) => void)): void\n    on(what: string, handler: ((...args: any[]) => void)): void\n    on(what: Constructor<any> | string, handler: Function): void {\n        if (this.listeners.has(what)) {\n            this.listeners.get(what).push(handler)\n        } else {\n            this.listeners.set(what, [handler])\n        }\n    }\n\n    emit(event: string | Constructor<any>, ...rest: any[]) {\n        let listeners = this.listeners.get(event)\n        let args = Array.prototype.slice.call(arguments, 1)\n\n        if (listeners) {\n            for (let listener of listeners) {\n                listener.apply(null, args)\n            }\n        }\n    }\n\n    /**\n     * @abstract\n     */\n    connectToServer() {\n\n    }\n\n    onOpen() {\n        this.connected = true\n\n        for (let packet of this.queue) this.writePacket(packet.getData())\n\n        this.queue = []\n\n        this.emit(\"open\")\n    }\n\n    onConnection() {\n        this.onOpen()\n    }\n\n    onData(buffer: ArrayBuffer) {\n        let decoder = BinaryPacket.binaryDecoder\n        decoder.reset()\n        decoder.readData(buffer)\n        let packet = BinarySerializer.deserialize(decoder, BinaryPacket)\n        if (packet) {\n            this.handlePacket(packet)\n        } else {\n            //decoder.reset()\n            //console.warn(\"Unknown packet type: \" + decoder.readUint16())\n        }\n    }\n\n    handlePacket(packet: BinaryPacket) {\n        for (let [clazz, listeners] of this.listeners) {\n            if (clazz instanceof Function && packet.constructor === clazz) {\n                for (let listener of listeners) {\n                    listener(packet)\n                }\n            }\n        }\n    }\n\n\n    onError(error?: any) {\n        this.emit(\"error\", error)\n        this.connected = false\n    }\n\n    onClose(code: number, reason?: string) {\n        this.emit(\"close\", code, reason)\n        this.connected = false\n    }\n\n    abstract isOpen(): boolean\n\n    abstract isConnecting(): boolean\n\n    sendPacket(packet: BinaryPacket) {\n        if (this.isOpen()) {\n            this.writePacket(packet.getData())\n        } else if (this.isConnecting()) {\n            this.queue.push(packet)\n        }\n    }\n\n    protected abstract writePacket(data: ArrayBuffer): void\n\n    abstract disconnect(): void\n}\n\nexport default AbstractClient;",
    "import BinaryPacket from \"./binarypacket\";\n\nabstract class AbstractConnection {\n    abstract isReady(): boolean\n\n    abstract send(bytes: BinaryPacket): void\n\n    abstract close(reason?: string): void\n}\n\nexport default AbstractConnection;",
    "\nimport BinarySerializable, {BinarySerializer, Constructor} from '../serialization/binary/serializable';\nimport BinaryEncoder from '../serialization/binary/binaryencoder';\nimport BinaryDecoder from '../serialization/binary/binarydecoder';\nimport AbstractConnection from \"./abstract-connection\";\n\n/**\n * This class is a binary data packet that can be transmitted over a\n * network with low redundancy. There is two packet types: standalone\n * and contextual. Standalone packets do not require any other data in\n * order to record and read information. Contextual packets only read\n * information when used by handlers.\n *\n * To create a standalone packet, inherit this class in the same way\n * as {@link BinarySerializable}. Then, in the\n * {@link BinaryPacket#fromBinary fromBinary} static function, you can\n * read data from the decoder and return an instance of your package.\n *\n * To create a contextual packet, you only need to overwrite the\n * {@link BinaryPacket#typeName typeName} static function.\n * {@link BinaryPacket} itself will take care of instantiating your package\n * and writing the decoder to the {@link BinaryPacket.decoder decoder}\n * field. Then you will be able to use the obtained data in any method\n * you create. In this way, you will only be able to read the data\n * when the handler accesses the package, with the possible\n * transmission of any contextual information. Please note that your\n * data will not be available after the packet is processed as the\n * decoder buffer is released for reuse.\n */\n\nclass BinaryPacket implements BinarySerializable<typeof BinaryPacket> {\n\n    /**\n     * Compiled binary data of the packet.\n     */\n\n\tpublic data: ArrayBuffer | null = null;\n\n    /**\n     * A decoder saved for the handlers.\n     * Valid until it is reused.\n     */\n\n\tpublic decoder: BinaryDecoder | null = null;\n\n    /*\n     Considering that the buffer will only be reused after the\n     data packet is processed, we can store it for handlers to\n     use. (Although it's always going to be\n     BinaryDecoder.shared... Uhh... Nevermind...)\n     */\n\n    static requireLargeIndices = false\n    static binaryEncoder = new BinaryEncoder({ writeIndexMode: true })\n    static binaryDecoder = new BinaryDecoder({ readIndexMode: true })\n\n    static groupName = 3\n    static typeName = 0\n\n    constructor() {\n    }\n\n    encode() {\n        let encoder = BinaryPacket.binaryEncoder\n        encoder.largeIndices = (this.constructor as typeof BinaryPacket).requireLargeIndices\n        encoder.reset()\n        BinarySerializer.serialize(this, encoder)\n\n        return encoder.compile()\n    }\n\n    /**\n     * When called once, packet get compiled and can no longer change\n     * its data\n     * @returns Packet data\n     */\n    getData(): ArrayBuffer {\n        if(this.data == null) {\n            this.data = this.encode()\n        }\n\n        return this.data\n    }\n\n    /**\n     * Sends the packet to {@link AbstractConnection}. When called once, packet\n     * get compiled and can no longer change its data\n     * @param connection The packet receiver.\n     */\n\n    sendTo(connection: AbstractConnection): void {\n        if(!this.shouldSend() || !connection.isReady()) {\n            return\n        }\n\n        connection.send(this)\n    }\n\n    shouldSend(): boolean {\n        return true\n    }\n\n    toBinary(encoder: BinaryEncoder): void {\n\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let packet = new this() as any as BinaryPacket\n        packet.decoder = decoder\n        return packet as any as T\n    }\n}\n\nexport default BinaryPacket;",
    "\nimport AbstractConnection from './abstract-connection';\nimport AbstractClient from \"./abstract-client\";\nimport BinaryPacket from \"./binarypacket\";\n\nclass ClientConnection extends AbstractConnection {\n\tpublic client: AbstractClient;\n\n    constructor(client: AbstractClient) {\n        super();\n        this.client = client\n    }\n\n    isReady() {\n        // We can send messages when client is opening\n        // because packets will be enqueued in this\n        // case.\n        return this.client.isOpen() || this.client.isConnecting();\n    }\n\n    send(packet: BinaryPacket) {\n        this.client.sendPacket(packet)\n    }\n\n    close(reason: string) {\n        this.client.disconnect()\n    }\n}\n\nexport default ClientConnection;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport BlockState from '../../../utils/map/blockstate/blockstate';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\n\nclass BlockUpdatePacket extends BinaryPacket {\n\tpublic x: any;\n\tpublic y: any;\n\tpublic block: any;\n\n    static typeName = 13\n\n    constructor(x: number, y: number, block: BlockState) {\n        super();\n\n        this.x = x\n        this.y = y\n        this.block = block\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint16(this.x)\n        encoder.writeUint16(this.y)\n        encoder.writeUint8(this.block.constructor.typeId)\n        this.block.constructor.BinaryOptions.convertOptions(encoder, this.block)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let x = decoder.readUint16()\n        let y = decoder.readUint16()\n        let id = decoder.readUint8()\n\n        let Block = BlockState.getBlockStateClass(id)\n        let block = new Block(Block.BinaryOptions.convertBinary(decoder))\n\n        return new BlockUpdatePacket(\n            x, y, block\n        ) as any as T\n    }\n}\n\nBinarySerializer.register(BlockUpdatePacket)\nexport default BlockUpdatePacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport EffectModel from 'src/effects/effect-model';\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\n\nclass EffectCreatePacket extends BinaryPacket {\n\tpublic effect: EffectModel;\n\n    static typeName = 14\n\n    constructor(effect: EffectModel) {\n        super()\n\n        this.effect = effect\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        BinarySerializer.serialize(this.effect, encoder)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        const effect = BinarySerializer.deserialize(decoder, EffectModel)\n\n        return new this(effect)\n    }\n}\n\nBinarySerializer.register(EffectCreatePacket)\nexport default EffectCreatePacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\n\nclass EffectRemovePacket extends BinaryPacket {\n\tpublic id: number;\n\n    static typeName = 19\n\n    constructor(id: number) {\n        super();\n        this.id = id\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeFloat64(this.id)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        return new this(decoder.readFloat64())\n    }\n}\n\nBinarySerializer.register(EffectRemovePacket)\nexport default EffectRemovePacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport EntityModel from '../../../entity/entitymodel';\nimport BinarySerializable, {BinarySerializer} from '../../../serialization/binary/serializable';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport AbstractEntity from \"../../../entity/abstractentity\";\n\nclass EntityCreatePacket extends BinaryPacket {\n\tpublic entities: any;\n\n    static typeName = 11\n\n    constructor(entities: undefined | AbstractEntity | Array<AbstractEntity>) {\n        super();\n\n        if(entities === undefined) {\n            this.entities = []\n        } else if(!Array.isArray(entities)) {\n            this.entities = [entities]\n        } else this.entities = entities\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint16(this.entities.length)\n\n        for(let entity of this.entities) {\n            BinarySerializer.serialize(entity.model, encoder)\n        }\n    }\n\n    createEntities(callback: (model: EntityModel) => void) {\n        let decoder = this.decoder\n        let count = decoder.readUint16()\n\n        for(let i = 0; i < count; i++) {\n            let model = BinarySerializer.deserialize(decoder, EntityModel)\n            if(model) callback(model)\n        }\n    }\n}\n\nBinarySerializer.register(EntityCreatePacket)\nexport default EntityCreatePacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport {BinaryDecodable, BinarySerializer} from \"../../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport AbstractEntity from \"../../../entity/abstractentity\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\n\nclass EntityListPacket extends BinaryPacket {\n\n    // protected static fieldCodingDeclarator = new Map([\n    //     [\"entities\", {\n    //         type: \"map\",\n    //         key: \"Uint32\",\n    //         value: {\n    //             read: (entity: AbstractEntity, encoder: BinaryEncoder) => entity.model.encodeDynamicData(encoder),\n    //             write: (entity: AbstractEntity, decoder: BinaryDecoder) => entity.model.decodeDynamicData(decoder)\n    //         }\n    //     }]\n    // ])\n\n\tpublic entities: Map<Number, AbstractEntity>;\n\tpublic entityCount: number;\n\n    static typeName = 10\n\n    constructor(entities: Map<Number, AbstractEntity>) {\n        super();\n        this.entities = entities\n        this.entityCount = 0\n\n        if(this.entities) this.entityCount = this.entities.size\n    }\n\n    shouldSend() {\n        return this.entityCount > 0\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n\n        encoder.writeUint16(this.entityCount)\n\n        for(let entity of this.entities.values()) {\n            encoder.writeUint32(entity.model.id)\n            entity.model.encodeDynamicData(encoder)\n        }\n    }\n\n    updateEntities(map: Map<Number, AbstractEntity>): void {\n        let i = this.decoder.readUint16()\n\n        while(i--) {\n            let key = this.decoder.readUint32()\n\n            if(map.has(key)) {\n                map.get(key).model.decodeDynamicData(this.decoder)\n            }\n        }\n    }\n}\n\nBinarySerializer.register(EntityListPacket)\nexport default EntityListPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport AbstractEntity from \"../../../entity/abstractentity\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\nclass EntityRemovePacket extends BinaryPacket {\n\tpublic entityId: number;\n\n    static typeName = 12\n\n    constructor(entity: AbstractEntity) {\n        super();\n\n        this.entityId = entity ? entity.model.id : 0\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint32(this.entityId)\n    }\n\n    updateEntities(map: Map<number, AbstractEntity>) {\n        this.entityId = this.decoder.readUint32()\n        map.delete(this.entityId)\n    }\n}\n\nBinarySerializer.register(EntityRemovePacket)\nexport default EntityRemovePacket;",
    "\n\nimport BinaryPacket from '../../binarypacket';\nimport Player from \"../../../utils/player\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\nclass TankLocationsPacket extends BinaryPacket {\n\tpublic players: Map<number, Player>;\n\n    static typeName = 4\n\n    /**\n     * Creates a packet that contains information about\n     * location and speed of each player in your map.\n     * @param players {Map<Number, Player>} Tank map to be encoded\n     */\n\n    constructor(players: Map<number, Player>) {\n        super();\n\n        this.players = players\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint16(this.players.size)\n\n        for (let [key, player] of this.players) {\n            encoder.writeUint32(key)\n            player.tank.encodeDynamicData(encoder)\n        }\n    }\n\n    /**\n     * Updates tank positions based on packet data.\n     * @param players Map containing each player\n     */\n    updateTankLocations(players: Map<number, Player>) {\n        if (!this.decoder) {\n            throw new Error(\"This packet is not valid anymore: The decoder buffer has been reused.\")\n        }\n\n        this.decoder.save()\n\n        let count = this.decoder.readUint16()\n        while (count--) {\n            let key = this.decoder.readUint32()\n\n            let player = players.get(key)\n            player.tank.decodeDynamicData(this.decoder)\n        }\n\n        this.decoder.restore()\n    }\n}\n\nBinarySerializer.register(TankLocationsPacket)\n\nexport default TankLocationsPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport GameMap from '../../../utils/map/gamemap';\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\n\nclass MapPacket extends BinaryPacket {\n\tpublic map: any;\n\n    static typeName = 1\n\n    static requireLargeIndices = true\n\n    constructor(map: GameMap) {\n        super();\n\n        this.map = map\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let map = GameMap.fromBinary(decoder)\n        map.update()\n        return new MapPacket(map) as any as T\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        this.map.toBinary(encoder, [\n            GameMap.BinaryOptions.SIZE_FLAG,\n            GameMap.BinaryOptions.DATA_FLAG\n        ])\n    }\n}\n\nBinarySerializer.register(MapPacket)\n\nexport default MapPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\n\nclass PlayerChatPacket extends BinaryPacket {\n\tpublic text: string;\n\n    static typeName = 8\n\n    constructor(text: string) {\n        super();\n        this.text = text\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeString(this.text)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        return new PlayerChatPacket(decoder.readString()) as any as T\n    }\n}\n\nBinarySerializer.register(PlayerChatPacket)\nexport default PlayerChatPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport TankModel from '../../../tanks/tankmodel';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport {Abs} from \"../../../library/box2d\";\nimport AbstractTank from \"../../../tanks/abstracttank\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\n\nclass PlayerConfigPacket extends BinaryPacket {\n\tpublic nick: string;\n\tpublic tank: typeof TankModel;\n\n    static typeName = 7\n\n    constructor(nick: string, tank: typeof TankModel) {\n        super();\n        this.nick = nick\n        this.tank = tank\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint8(this.tank.getId())\n        encoder.writeString(this.nick)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let tank = TankModel.Types.get(decoder.readUint8())\n        return new PlayerConfigPacket(decoder.readString(), tank) as any as T\n    }\n}\n\nBinarySerializer.register(PlayerConfigPacket)\nexport default PlayerConfigPacket;",
    "\nimport TankControls from '../../../tanks/controls/tankcontrols';\nimport BinaryPacket from '../../binarypacket';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\nclass PlayerControlsPacket extends BinaryPacket {\n\tpublic controls: TankControls;\n    static typeName = 6\n\n    constructor(controls: TankControls) {\n        super();\n        this.controls = controls\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        this.controls.toBinary(encoder)\n    }\n\n    /**\n     * Update specified tank controls\n     */\n    updateControls(controls: TankControls): void {\n        controls.updateState(this.decoder)\n    }\n}\n\nBinarySerializer.register(PlayerControlsPacket)\nexport default PlayerControlsPacket;",
    "\nimport TankModel from '../../../tanks/tankmodel';\nimport BinaryPacket from '../../binarypacket';\nimport Player from '../../../utils/player';\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\n\n/**\n * This packet is representing a player join interact.\n */\n\nclass PlayerJoinPacket extends BinaryPacket {\n\tpublic player: any;\n\tpublic tank: any;\n\n    static typeName = 2\n\n    constructor(player: Player, tank: TankModel) {\n        super();\n\n        this.player = player\n        this.tank = tank\n        this.decoder = null\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint16(this.player.id)\n        encoder.writeString(this.player.nick)\n\n        BinarySerializer.serialize(this.tank, encoder)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let player = new Player()\n        player.id = decoder.readUint16()\n        player.nick = decoder.readString()\n\n        let tank = BinarySerializer.deserialize(decoder, TankModel)\n\n        return new this(player, tank)\n    }\n\n}\n\nBinarySerializer.register(PlayerJoinPacket)\n\nexport default PlayerJoinPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport Player from \"../../../utils/player\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\n\nclass PlayerLeavePacket extends BinaryPacket {\n\tpublic playerId: number;\n\n    static typeName = 15\n\n    constructor(player?: Player) {\n        super();\n\n        this.playerId = player ? player.id : 0\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint32(this.playerId)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let packet = new PlayerLeavePacket()\n        packet.playerId = decoder.readUint32()\n        return packet as any as T\n    }\n}\n\nBinarySerializer.register(PlayerLeavePacket)\nexport default PlayerLeavePacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\n\nclass PlayerRespawnPacket extends BinaryPacket {\n    static typeName = 9\n\n    toBinary(encoder: BinaryEncoder) {}\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T { return new this() }\n}\n\nBinarySerializer.register(PlayerRespawnPacket)\n\nexport default PlayerRespawnPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\n\nclass PlayerRoomChangePacket extends BinaryPacket {\n\tpublic room: string;\n\tpublic error: string;\n\n    static typeName = 18\n\n    constructor(room: string, error?: string) {\n        super();\n\n        this.room = room\n        this.error = error\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint8(this.error ? 0 : 1)\n        encoder.writeString(this.room)\n        if(this.error) {\n            encoder.writeString(this.error)\n        }\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let isSuccess = decoder.readUint8()\n        let room = decoder.readString()\n        let error = isSuccess ? null : decoder.readString()\n\n        return new this(room, error)\n    }\n\n    static allow(room: string) {\n        return new this(room)\n    }\n\n    static deny(room: string, error: string) {\n        return new this(room, error)\n    }\n}\n\nBinarySerializer.register(PlayerRoomChangePacket)\nexport default PlayerRoomChangePacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\n\n/**\n * This packet is sent when player wants to join the room\n */\nclass PlayerRoomRequestPacket extends BinaryPacket {\n\tpublic room: any;\n\n    static typeName = 17\n\n    constructor(room: string) {\n        super();\n\n        this.room = room\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeString(this.room)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        return new PlayerRoomRequestPacket(decoder.readString()) as any as T\n    }\n}\n\nBinarySerializer.register(PlayerRoomRequestPacket)\nexport default PlayerRoomRequestPacket;",
    "\nimport PlayerJoinPacket from './playerjoinpacket';\nimport {BinarySerializer} from \"../../../serialization/binary/serializable\";\n\n/**\n * This packet represents player spawn interact.\n * The difference to the `PlayerSpawnPacket`\n * package is that this package is only sent\n * to the player who entered the screen.\n */\n\nclass PlayerSpawnPacket extends PlayerJoinPacket {\n    static typeName = 3\n}\n\nBinarySerializer.register(PlayerSpawnPacket)\n\nexport default PlayerSpawnPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\n\nexport interface ClientRoomInformation {\n    name: string,\n    currentOnline: number,\n    maxOnline: number\n}\n\nclass RoomListPacket extends BinaryPacket {\n\tpublic rooms: ClientRoomInformation[];\n\n    static typeName = 16\n\n    constructor(rooms: ClientRoomInformation[]) {\n        super();\n        this.rooms = rooms\n    }\n\n    toBinary(encoder: BinaryEncoder): void {\n        encoder.writeUint8(this.rooms.length)\n\n        for(let room of this.rooms) {\n            encoder.writeString(room.name)\n            encoder.writeUint16(room.currentOnline)\n            encoder.writeUint16(room.maxOnline)\n        }\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let rooms: ClientRoomInformation[] = []\n\n        let count = decoder.readUint8()\n        for(let i = 0; i < count; i++) {\n            let name = decoder.readString()\n            let online = decoder.readUint16()\n            let maxOnline = decoder.readUint16()\n\n            rooms.push({\n                name: name,\n                currentOnline: online,\n                maxOnline: maxOnline\n            })\n        }\n\n        return new RoomListPacket(rooms) as any as T\n    }\n}\n\nBinarySerializer.register(RoomListPacket)\nexport default RoomListPacket;",
    "\nimport BinaryPacket from '../../binarypacket';\nimport {BinarySerializer, Constructor} from \"../../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../serialization/binary/binarydecoder\";\n\nclass RoomListRequestPacket extends BinaryPacket {\n\tpublic request: boolean;\n\n    static typeName = 5\n\n    /**\n     * @param {boolean} request Indicates if room list update should be enabled.\n     */\n    constructor(request: boolean) {\n        super();\n        this.request = request\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint8(this.request as any as number)\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        return new RoomListRequestPacket(decoder.readUint8() as any as boolean) as any as T\n    }\n}\n\nBinarySerializer.register(RoomListRequestPacket)\nexport default RoomListRequestPacket;",
    "\nimport BinaryPool from './binarypool';\nimport {ByteArray, ByteArrayConstructor} from './buffer';\nimport {Constructor} from \"./serializable\";\nimport Buffer from \"./buffer\";\n\nexport interface BinaryDecoderConfig {\n    largeIndices?: boolean\n    readIndexMode?: boolean\n}\n\nclass BinaryDecoder extends BinaryPool {\n\tpublic largeIndices: boolean;\n\tpublic readIndexMode: boolean;\n\tpublic buffers = new Map<ByteArrayConstructor<ByteArray>, Buffer<ByteArray>>();\n\n    /**\n     * Shared instance of `BinaryDecoder`\n     */\n    static shared: BinaryDecoder = new BinaryDecoder()\n\n    constructor(options?: BinaryDecoderConfig) {\n        super();\n        options = options || {}\n\n        this.largeIndices = !!options.largeIndices\n        this.readIndexMode = !!options.readIndexMode\n\n        this.setupBuffers()\n    }\n\n    /**\n     * Reads binary data to buffers. Then\n     * it's possible to use read functions\n     * as `readString` or `readUint32`\n     * @param array Data buffer to read.\n     */\n    readData(array: ArrayBuffer) {\n        let compilerBytes = Uint16Array.BYTES_PER_ELEMENT\n        let bufferIndex = 0\n        let arrayPointer = 0\n        let offset = compilerBytes * BinaryPool.bufferTypes.size\n\n        if(this.readIndexMode) {\n            this.largeIndices = !!(new Uint8Array(array, 0, 1)[0]);\n            array = array.slice(1)\n        }\n\n        if(this.largeIndices) {\n            offset *= 2\n        }\n\n        for(let buffer of this.buffers.values()) {\n            let size\n\n            if(this.largeIndices) {\n                let words = new Uint16Array(array, compilerBytes * bufferIndex * 2, 2)\n                size = words[0] + (words[1] << 16)\n            } else {\n                size = new Uint16Array(array, compilerBytes * bufferIndex, 1)[0]\n            }\n\n            if(size === 0) {\n                bufferIndex++\n                continue\n            }\n\n            let bytes = buffer.clazz.BYTES_PER_ELEMENT\n            let alignment = Math.max(bytes, compilerBytes);\n\n            arrayPointer = Math.ceil(arrayPointer / alignment) * alignment\n\n            buffer.read(array, offset + arrayPointer, size)\n\n            arrayPointer += size * bytes\n            bufferIndex++\n        }\n    }\n\n    private setupBuffers() {\n        for(let [type, buffer] of BinaryPool.bufferTypes.entries()) {\n            let newBuffer = buffer.clone()\n            newBuffer.createBuffer()\n\n            this.buffers.set(type, newBuffer)\n        }\n    }\n\n    getTypedBuffer<T extends ByteArray>(type: ByteArrayConstructor<T>): Buffer<T> | null {\n        return this.buffers.get(type) as Buffer<T>\n    }\n\n    /**\n     * Reads and returns an signed 8-bit integer or `Int8Array` when `n > 1`.\n     */\n    readInt8(): number\n    readInt8(n: number): Int8Array\n    readInt8(n?: number): Int8Array | number {\n        return this.getTypedBuffer(Int8Array).next(n)\n    }\n\n    /**\n     * Reads and returns an unsigned 8-bit integer or `Uint8Array` when `n > 1`.\n     */\n    readUint8(): number\n    readUint8(n: number): Uint8Array\n    readUint8(n?: number): Uint8Array | number {\n        return this.getTypedBuffer(Uint8Array).next(n)\n    }\n\n    /**\n     * Reads and returns an signed 16-bit integer an `Int16Array` when `n > 1`.\n     */\n    readInt16(): number\n    readInt16(n: number): Int16Array\n    readInt16(n?: number): Int16Array | number {\n        return this.getTypedBuffer(Int16Array).next(n)\n    }\n\n    /**\n     * Reads and returns an unsigned 16-bit integer an `Uint16Array` when `n > 1`.\n     */\n    readUint16(): number\n    readUint16(n: number): Uint16Array\n    readUint16(n?: number): Uint16Array | number {\n        return this.getTypedBuffer(Uint16Array).next(n)\n    }\n\n    /**\n     * Reads and returns an signed 32-bit integer or `Int32Array` when `n > 1`.\n     */\n    readInt32(): number\n    readInt32(n: number): Int32Array\n    readInt32(n?: number): Int32Array | number {\n        return this.getTypedBuffer(Int32Array).next(n)\n    }\n\n    /**\n     * Reads and returns an unsigned 32-bit integer or `Uint32Array` when `n > 1`.\n     */\n    readUint32(): number\n    readUint32(n: number): Uint32Array\n    readUint32(n?: number): Uint32Array | number {\n        return this.getTypedBuffer(Uint32Array).next(n)\n    }\n\n    /**\n     * Reads and returns an single-precision float or `Float32Array` when `n > 1`.\n     */\n    readFloat32(): number\n    readFloat32(n: number): Float32Array\n    readFloat32(n?: number): Float32Array | number {\n        return this.getTypedBuffer(Float32Array).next(n)\n    }\n\n    /**\n     * Reads and returns an double-precision float or `Float64Array` when `n > 1`.\n     */\n    readFloat64(): number\n    readFloat64(n: number): Float64Array\n    readFloat64(n?: number): Float64Array | number {\n        return this.getTypedBuffer(Float64Array).next(n)\n    }\n\n    /**\n     * Reads and returns a string.\n     */\n    readString = () => {\n        let buffer = this.getTypedBuffer(Uint16Array)\n\n        let codes = [];\n        let code;\n\n        while((code = buffer.next()) !== 0) {\n            codes.push(code)\n        }\n\n        return String.fromCharCode.apply(null, codes)\n    }\n\n    // Operating buffer pointers\n\n    /**\n     * Resets pointer of each buffer\n     */\n    reset() {\n        for(let buffer of this.buffers.values()) {\n            buffer.reset()\n        }\n    }\n\n    /**\n     * Saves pointer state of each buffer.\n     * Return to the last saved state\n     * by calling `restore` method\n     */\n    save() {\n        for(let buffer of this.buffers.values()) {\n            buffer.save()\n        }\n    }\n\n    /**\n     * Restores last saved pointer state\n     * of each buffer. See also `save`\n     */\n    restore() {\n        for(let buffer of this.buffers.values()) {\n            buffer.save()\n        }\n    }\n}\n\nexport default BinaryDecoder;",
    "\nimport Buffer, {ByteArray, ByteArrayConstructor} from './buffer';\nimport BinaryPool from './binarypool';\n\nexport interface BinaryEncoderConfig {\n    largeIndices?: boolean\n    writeIndexMode?: boolean\n}\n\nclass BinaryEncoder extends BinaryPool {\n\tpublic buffers: Map<ByteArrayConstructor<ByteArray>, Buffer<ByteArray>>\n\tpublic largeIndices: boolean;\n\tpublic writeIndexMode: boolean\n    static shared = new BinaryEncoder()\n\n    compileBuffer = new Buffer({\n        clazz: Uint16Array,\n        capacity: 512\n    })\n\n    constructor(options?: BinaryEncoderConfig) {\n        super()\n        options = options || {}\n        this.buffers = new Map()\n        this.largeIndices = !!options.largeIndices\n        this.writeIndexMode = !!options.writeIndexMode\n\n        this.setupBuffers()\n    }\n\n    setupBuffers() {\n        for(let [type, buffer] of BinaryEncoder.bufferTypes.entries()) {\n            let newBuffer = buffer.clone()\n            newBuffer.createBuffer()\n\n            this.buffers.set(type, newBuffer)\n        }\n        this.compileBuffer.createBuffer()\n    }\n\n    reset() {\n        for(let buffer of this.buffers.values()) {\n            buffer.reset()\n        }\n    }\n\n    /**\n     * Writes signed byte to buffer\n     * @param int8 {number} value to write\n     */\n    writeInt8(int8: number) { this.buffers.get(Int8Array).push(int8) }\n\n    /**\n     * Writes unsigned byte to buffer\n     * @param uint8 {number} value to write\n     */\n    writeUint8(uint8: number) { this.buffers.get(Uint8Array).push(uint8) }\n\n    /**\n     * Writes signed 2-byte integer to buffer\n     * @param int16 {number} value to write\n     */\n    writeInt16(int16: number) { this.buffers.get(Int16Array).push(int16) }\n\n    /**\n     * Writes unsigned 2-byte integer to buffer\n     * @param uint16 {number} value to write\n     */\n    writeUint16(uint16: number) { this.buffers.get(Uint16Array).push(uint16) }\n\n    /**\n     * Writes signed 4-byte integer to buffer\n     * @param int32 {number} value to write\n     */\n    writeInt32(int32: number) { this.buffers.get(Int32Array).push(int32) }\n\n    /**\n     * Writes unsigned 4-byte integer to buffer\n     * @param uint32 {number} value to write\n     */\n    writeUint32(uint32: number) { this.buffers.get(Uint32Array).push(uint32) }\n\n    /**\n     * Writes medium-precision float to buffer\n     * @param float32 {number} value to write\n     */\n    writeFloat32(float32: number) { this.buffers.get(Float32Array).push(float32) }\n\n    /**\n     * Writes high-precision float to buffer\n     * @param float64 {number} value to write\n     */\n    writeFloat64(float64: number) { this.buffers.get(Float64Array).push(float64) }\n\n    /**\n     * Writes a null-terminated string to buffer\n     * @param string {string} value to write\n     */\n    writeString(string: string) {\n        let buffer = this.buffers.get(Uint16Array)\n\n        for(let i = 0, l = string.length; i < l; i++) {\n            let code = string.charCodeAt(i)\n            buffer.push(code)\n        }\n\n        buffer.push(0) // Adding string end character '\\0'\n    }\n\n    writeInt8Array    (int8Array:    Int8Array)    { this.buffers.get(Int8Array)   .appendArray(int8Array) }\n    writeUint8Array   (uint8Array:   Uint8Array)   { this.buffers.get(Uint8Array)  .appendArray(uint8Array) }\n    writeInt16Array   (int16Array:   Int16Array)   { this.buffers.get(Int16Array)  .appendArray(int16Array) }\n    writeUint16Array  (uint16Array:  Uint16Array)  { this.buffers.get(Uint16Array) .appendArray(uint16Array) }\n    writeInt32Array   (int32Array:   Int32Array)   { this.buffers.get(Int32Array)  .appendArray(int32Array) }\n    writeUint32Array  (uint32Array:  Uint32Array)  { this.buffers.get(Uint32Array) .appendArray(uint32Array) }\n    writeFloat32Array (float32Array: Float32Array) { this.buffers.get(Float32Array).appendArray(float32Array) }\n    writeFloat64Array (float64Array: Float64Array) { this.buffers.get(Float64Array).appendArray(float64Array) }\n\n    compile() {\n        this.compileBuffer.reset()\n\n        if(this.largeIndices) {\n            for(let buffer of this.buffers.values()) {\n                this.compileBuffer.push(buffer.pointer & 0xFFFF)\n                this.compileBuffer.push((buffer.pointer >> 16) & 0xFFFF)\n            }\n        } else {\n            for(let buffer of this.buffers.values()) {\n                this.compileBuffer.push(buffer.pointer)\n            }\n        }\n\n        for(let buffer of this.buffers.values()) {\n            this.compileBuffer.appendBuffer(buffer)\n        }\n\n        if(this.writeIndexMode) {\n            let result = new Uint8Array(this.compileBuffer.pointer * 2 + 1)\n            result[0] = Number(this.largeIndices)\n            result.set(new Uint8Array(this.compileBuffer.toArrayBuffer()), 1)\n            return result.buffer\n        } else {\n            return this.compileBuffer.toArrayBuffer()\n        }\n    }\n}\n\nexport default BinaryEncoder;",
    "\nimport Buffer, {ByteArray, ByteArrayConstructor} from './buffer';\nimport {Constructor} from \"./serializable\";\n\nclass BinaryPool {\n    static bufferTypes: Map<ByteArrayConstructor<ByteArray>, Buffer<ByteArray>> = new Map()\n}\n\nexport default BinaryPool;\n\nlet types: ByteArrayConstructor<ByteArray>[] = [\n    Int8Array,\n    Uint8Array,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array,\n]\n\nfor(let type of types) {\n    BinaryPool.bufferTypes.set(type, new Buffer<ByteArray>({\n        clazz: type,\n        capacity: 128\n    }))\n}\n",
    "import {Constructor} from \"./serializable\";\n\nexport type ByteArray =\n    | Uint8Array\n    | Uint8ClampedArray\n    | Uint16Array\n    | Uint32Array\n    | Int8Array\n    | Int16Array\n    | Int32Array\n    | Float32Array\n    | Float64Array;\n\nexport interface ByteArrayConstructor<T> extends Constructor<T> {\n    BYTES_PER_ELEMENT: number\n}\n\nexport interface BufferConfig<T> {\n    capacity?: number\n    clazz: ByteArrayConstructor<T>\n}\n\nclass Buffer<T extends ByteArray = Uint8Array> {\n\tpublic initialCapacity: any;\n\tpublic array: T;\n\tpublic stack: number[];\n    /**\n     * Buffer base capacity.\n     * If the `initialCapacity` equals to\n     * 128, then buffer actual capacity\n     * is multiply of 128.\n     */\n    capacity: number | null = null\n\n    /**\n     * Buffer internal class type.\n     */\n    clazz: ByteArrayConstructor<T> = null\n\n    /**\n     * Current entry pointer. Increased\n     * when reading or writing data.\n     */\n    pointer: number = 0\n\n    constructor(options: BufferConfig<T>) {\n        this.initialCapacity = options.capacity || 128\n        this.capacity = 0\n        this.clazz = options.clazz\n        this.pointer = 0\n        this.array = null\n        this.stack = []\n    }\n\n    /**\n     * Initializes the buffer. It's required to\n     * call this method if you want to\n     * use the dynamic buffer.\n     */\n\n    createBuffer() {\n        this.capacity = this.initialCapacity\n        this.array = new (this.clazz)(this.capacity)\n        return this\n    }\n\n    /**\n     * if `minimumCapacity` parameter is provided, extends the\n     * buffer to nearest greater multiple of `capacity`\n     * bytes. if not, extends the buffer by `capacity` bytes.\n     * If the required number of bytes if less then actual\n     * capacity, this method does nothing\n     * @param minimumCapacity {Number?} Minimum buffer capacity.\n     * @returns {boolean} `true`, if buffer has been reallocated, `false` otherwise\n     */\n\n    extend(minimumCapacity?: number) {\n        if (minimumCapacity === undefined) {\n            this.capacity += this.initialCapacity\n        } else {\n            if (minimumCapacity <= this.capacity)\n                return false\n            this.capacity = Math.ceil(minimumCapacity / this.initialCapacity) * this.initialCapacity\n        }\n\n        let oldBuffer = this.array\n        this.array = new (this.clazz)(this.capacity)\n        this.array.set(oldBuffer)\n\n        return true\n    }\n\n    /**\n     * Resets the pointer to zero, allowing\n     * to read buffer from start or reuse\n     * it by overwriting old content.\n     */\n\n    reset() {\n        this.pointer = 0\n    }\n\n    /**\n     * Converts this dynamic buffer into static `ArrayBuffer`\n     */\n\n    toArrayBuffer(): ArrayBuffer {\n        return this.array.buffer.slice(0, this.pointer * this.clazz.BYTES_PER_ELEMENT)\n    }\n\n    /**\n     * Appends single value to the end of this buffer.\n     * The value should bound to the buffer type,\n     * otherwise it will be clamped.\n     * @param value {Number}\n     */\n\n    push(value: number) {\n        if(this.pointer >= this.capacity) {\n            this.extend()\n        }\n        this.array[this.pointer++] = value\n    }\n\n    /**\n     * Appends `Array` to the end of this buffer.\n     * @param array Array to append.\n     */\n\n    appendArray(array: number[] | T) {\n        let newSize = this.pointer + array.length\n        if(newSize >= this.capacity) {\n            this.extend(newSize)\n        }\n\n        this.array.set(array, this.pointer)\n        this.pointer += array.length\n    }\n\n    /**\n     * Appends another buffer to the end of this buffer.\n     * Usable when compiling multiple buffers into one.\n     * @param buffer {Buffer} Buffer to append.\n     */\n\n    appendBuffer(buffer: Buffer<ByteArray>) {\n        if(buffer.pointer === 0) {\n            return\n        }\n\n        let bytes = buffer.array.BYTES_PER_ELEMENT\n        let selfBytes = this.array.BYTES_PER_ELEMENT\n\n        let size = Math.ceil( bytes / selfBytes * buffer.pointer)\n\n        let alignment = Math.max(bytes, selfBytes)\n\n        // Align pointer\n\n        this.pointer = Math.ceil(this.pointer * selfBytes / alignment) * alignment / selfBytes\n        let temp = new (this.clazz)(buffer.array.buffer, 0, size)\n\n        this.appendArray(temp)\n    }\n\n    /**\n     * Reads `TypedArray` to internal buffer. Then it's\n     * possible to use `next(n)` method.\n     * @param array An array to read data. Should be the same type as the buffer.\n     * @param pointer How many bytes to skip before start reading.\n     * @param size Number of overlay to read\n     */\n    read(array: ArrayBuffer, pointer: number, size: number) {\n        this.extend(size)\n        let buffer = new (this.clazz)(array, pointer, size)\n        this.array.set(buffer)\n\n        // Allow to read buffer from begin with `next` method\n\n        this.pointer = 0\n    }\n\n    next(): number\n    next(n: number): T\n    next(n?: number): number | T {\n        if(n === undefined || n <= 1) {\n            return this.array[this.pointer++]\n        } else if(typeof n == \"number\") {\n            let temp = this.array.slice(this.pointer, this.pointer + n) as T\n            this.pointer += n\n            return temp\n        }\n        return undefined\n    }\n\n    /**\n     * Makes a new buffer with the same options.\n     * Does not copy buffer content.\n     */\n\n    clone(): Buffer<T> {\n        return new Buffer<T>({\n            capacity: this.initialCapacity,\n            clazz: this.clazz\n        })\n    }\n\n    /**\n     * Saves current buffer pointer to stack.\n     * Return to last saved pointer\n     * by calling `restore` method.\n     */\n\n    save() {\n        this.stack.push(this.pointer)\n    }\n\n    /**\n     * Returns to last saved buffer pointer.\n     * See also `save` method.\n     */\n\n    restore() {\n        this.pointer = this.stack.pop()\n    }\n}\n\nexport default Buffer;\n",
    "\nimport BinarySerializationGroup from '../serializationgroup';\nimport BinaryDecoder from \"./binarydecoder\";\nimport BinaryEncoder from \"./binaryencoder\";\n\nexport type Constructor<T> = { new (...args: any[]): T }\n\nexport class BinarySerializer {\n\n    static BASE_GROUP_NAME = -1;\n    static groups: BinarySerializationGroup[] = [];\n\n    /**\n     * Returns newly created or cached group object for the provided key.\n     * @param key The key for group to be returned.\n     * @returns Returns group for this key.\n     */\n\n    static getGroup(key: number): BinarySerializationGroup {\n        let registry = this.groups[key];\n        if(!registry) {\n            registry = this.groups[key] = new BinarySerializationGroup();\n        }\n\n        return registry;\n    }\n\n    /**\n     * Uses {@link fromBinary} method to deserialize instance from\n     * binary data, returned by {@link serialize} function.\n     * @param decoder The object to be deserialized\n     * @param group The serialization group name. Can be either undefined, number or {@link BinarySerializable} subclass.\n     * @returns The deserialized object or `null` if base class was not found.\n     */\n\n    static deserialize<C extends BinarySerializableStatic<C>>(decoder: BinaryDecoder, group?: Number | C): InstanceType<C> {\n\n        let groupId: number;\n\n        if(typeof group == \"function\") {\n            groupId = (group as BinarySerializableStatic<any>).groupName;\n        } else {\n            groupId = BinarySerializer.BASE_GROUP_NAME\n        }\n\n        const type = decoder.readInt16()\n\n        const clazz = this.getGroup(groupId).get<C>(type)\n        if(!clazz) return null\n\n        return clazz.fromBinary(decoder) as any as InstanceType<C>\n    }\n\n    /**\n     * Uses {@link toBinary} method to serialize subclass instances to\n     * object. Suitable for network transporting. Call {@link deserialize} to get exact\n     * same object copy.\n     * @param encoder where object serialization will be stored.\n     * @param object to be serialized\n     */\n\n    static serialize<T extends BinarySerializableStatic<T>>(object: BinarySerializable<T>, encoder: BinaryEncoder): void {\n        encoder.writeInt16((object.constructor as BinarySerializableStatic<T>).typeName)\n        object.toBinary(encoder)\n    }\n\n    /**\n     * Writes {@link BinarySerializable} subclass to internal registry. This\n     * function should be used to deserialize your custom class with\n     * {@link deserialize} static function.\n     * @param clazz The class to register.\n     */\n\n    static register(clazz: BinarySerializableStatic<any>): void {\n        let group = clazz.groupName;\n        let registry = this.getGroup(group);\n        return registry.register(clazz);\n    }\n}\n\n// Oh gosh...\n\nexport interface BinarySerializableStatic<C extends BinarySerializableStatic<C>> extends BinaryCodableStatic<C> {\n\n    /**\n     * Used to separate different serialization groups.\n     * @example\n     * // If you are about to serialize both `Entity`\n     * // and `Particle` classes, you would separate them\n     * // in different groups. With that being done, you will be\n     * // able to use same hardcoded type names for your entities\n     * // and particles.\n     *\n     * class Entity extends BinarySerializable<typeof Entity> {\n     *     static groupName() { return 1 } // Using group named \"1\" for entities\n     * }\n     *\n     * class Projectile extends Entity {\n     *     static typeName() { return 1 }\n     * }\n     * BinarySerializable.register(Projectile) // Don't forget to register class\n     *\n     * class Animal extends Entity {\n     *     static typeName() { return 2 }\n     * }\n     * BinarySerializable.register(Animal)\n     *\n     *\n     * // Using separate group to serialize particles\n     *\n     * class Particle extends BinarySerializable<typeof Particle> {\n     *     static groupName() { return 2 } // Using group named \"2\" for particles\n     * }\n     *\n     * class FireParticle extends Particle {\n     *     static typeName() { return 1 }\n     * }\n     * BinarySerializable.register(FireParticle)\n     *\n     * class ExplodeParticle extends Particle {\n     *     static typeName() { return 2 }\n     * }\n     * BinarySerializable.register(ExplodeParticle)\n     *\n     */\n\n    readonly groupName: number\n\n    /**\n     * Type identifier for specific {@link BinarySerializable} subclass.\n     * should fit Int16 (-32,768 to +32,767)\n     */\n    readonly typeName: number\n}\n\nexport interface BinaryCodableStatic<C extends BinaryCodableStatic<C>> extends Constructor<BinaryCodable<C>> {\n    /**\n     * To serialize and deserialize the base class instances, use\n     * {@link serialize} and {@link deserialize} static functions.\n     * @param decoder The {@link BinaryDecoder} which contains source object data.\n     * @returns The deserialized object\n     */\n\n    fromBinary<T extends BinaryCodable<C>>(this: Constructor<T>, decoder: BinaryDecoder): T;\n}\n\n/**\n * This interface allows to serialize and deserialize any object\n * into binary data. Subclasses should implement {@link toBinary},\n * {@link fromBinary} methods and static {@link typeName} function.\n * Separation between serialization groups is done by overriding\n * static {@link groupName} method. This class should never\n * be constructed directly.\n * Refer to the documentation of the appropriate methods.\n */\n\nexport interface BinarySerializable<C extends BinarySerializableStatic<C>> extends BinaryCodable<C> {}\n\nexport interface BinaryEncodable {\n    /**\n     * To serialize and deserialize subclass instances, use\n     * {@link serialize} and {@link deserialize} static\n     * functions. This function should never be called on {@link BinarySerializable} class.\n     * @param encoder The encoder which will store object data\n     */\n\n    toBinary(encoder: BinaryEncoder): void\n}\n\nexport interface BinaryDecodable<T extends BinaryCodableStatic<T>> {}\nexport type BinaryCodable<T extends BinaryCodableStatic<T>> = BinaryEncodable & BinaryDecodable<T>\n\nexport default BinarySerializable;",
    "import BinarySerializable, {BinarySerializableStatic, Constructor} from \"./binary/serializable\";\n\nclass BinarySerializationGroup {\n    map = new Map<number, BinarySerializableStatic<any>>();\n\n    constructor() {\n\n    }\n\n    register(clazz: BinarySerializableStatic<any>): void {\n        if(this.map.has(clazz.typeName)) {\n            throw new Error(`Type name '${clazz.typeName}' is already registered in this group.`)\n        }\n\n        this.map.set(clazz.typeName, clazz);\n    }\n\n    get<C extends (Constructor<BinarySerializable<C>> & BinarySerializableStatic<C>)>(type: number): BinarySerializableStatic<C> | undefined {\n        return this.map.get(type);\n    }\n}\n\nexport default BinarySerializationGroup;",
    "\nimport AbstractEffect from 'src/effects/abstract-effect';\nimport EffectModel from \"../../effects/effect-model\";\n\nclass ServerEffect extends AbstractEffect {\n    static shouldSynchroniseRemoval = true\n\n    /**\n     * Finds server-side implementation of the effect model\n     */\n    static fromModel(model: EffectModel): ServerEffect {\n        let clazz = this.Types.get(model.constructor as typeof EffectModel)\n\n        if(clazz) return new clazz(model)\n        return null\n    }\n}\n\nexport default ServerEffect;",
    "\nimport ServerEffect from '../servereffect';\nimport TankEffectModel from 'src/effects/tank/tankeffectmodel';\nimport ServerTank from \"../../tanks/servertank\";\nimport EffectModel from \"../../../effects/effect-model\";\n\n/**\n * This class unites all the tank effect implementations on the server\n * side. If the effect is visual and should not have a separate logic\n * on the server side (does not scatter players, does not break\n * blocks, etc.), it is enough to set only its {@link EffectModel} and\n * not to use this class. You also should not initialize this class\n * directly, use {@link ServerTankEffect#fromModel fromModel} static method\n * instead\n */\nclass ServerTankEffect extends ServerEffect {\n\n    model: TankEffectModel\n    tank: ServerTank\n\n    /**\n     * @private\n     * Creates server-side tank effect class, linked to specific\n     * {@link TankEffectModel} and {@link ServerTank}. This\n     * constructor should not be called directly, use\n     * {@link ServerTankEffect#fromModel fromModel} static method\n     * instead\n     */\n    constructor(model: TankEffectModel, tank: ServerTank) {\n        super(model);\n        this.model = model\n        this.tank = tank\n    }\n\n    // noinspection JSCheckFunctionSignatures\n    /**\n     * Wraps the {@link TankEffectModel} in corresponding\n     * {@link ServerTankEffect} class. If this effect has any additional\n     * server-side logic, the instance of appropriate subclass will be\n     * returned. Otherwise, this method returns {@link ServerTankEffect}\n     * instance\n     * @param model Effect model to wrap\n     * @param tank Tank, on which this effect will be applied on\n     */\n    static fromModelAndTank(model: TankEffectModel, tank: ServerTank): ServerTankEffect {\n        let clazz = this.Types.get(model.constructor as typeof TankEffectModel) as typeof ServerTankEffect\n\n        if(clazz) return new clazz(model, tank)\n\n        // If this model has no server-side implementation, return\n        // default class\n\n        if(model instanceof TankEffectModel) {\n            return new ServerTankEffect(model, tank)\n        }\n\n        throw new TypeError(\"The 'model' argument should inherit TankEffectModel\")\n    }\n}\n\nexport default ServerTankEffect;\n",
    "\nimport ServerEffect from '../servereffect';\nimport WorldEffectModel from 'src/effects/world/world-effect-model';\nimport ServerGameWorld from \"../../servergameworld\";\n\n/**\n * This class unites all the world effect implementations on the server\n * side. If the effect is visual and should not have a separate logic\n * on the server side (does not scatter players, does not break\n * blocks, etc.), it is enough to set only its {@link WorldEffectModel} and\n * not to use this class. You also should not initialize this class\n * directly, use {@link ServerWorldEffect#fromModel fromModel} static method\n * instead\n */\nclass ServerWorldEffect extends ServerEffect {\n\n    model: WorldEffectModel\n    world: ServerGameWorld\n\n    /**\n     * @private\n     * Creates server-side world effect class, linked to specific\n     * {@link WorldEffectModel} and {@link ServerGameWorld}. This\n     * constructor should not be called directly, use\n     * {@link ServerWorldEffect#fromModel fromModel} static method\n     * instead\n     */\n    constructor(model: WorldEffectModel, world: ServerGameWorld) {\n        super(model);\n        this.model = model\n        this.world = world\n    }\n\n    /**\n     * Wraps the {@link WorldEffectModel} in corresponding\n     * {@link ServerWorldEffect} class. If this effect has any additional\n     * server-side logic, the instance of appropriate subclass will be\n     * returned. Otherwise, this method returns {@link ServerWorldEffect}\n     * instance\n     * @param model Effect model to wrap\n     * @param world A world where this effect will be created in\n     */\n    static fromModelAndWorld(model: WorldEffectModel, world: ServerGameWorld): ServerWorldEffect {\n        let clazz: typeof ServerWorldEffect = this.Types.get(model.constructor as typeof WorldEffectModel) as any as typeof ServerWorldEffect\n\n        if(clazz) return new clazz(model, world)\n\n        // If this model has no server-side implementation, return\n        // default class\n\n        if(model instanceof WorldEffectModel) {\n            return new ServerWorldEffect(model, world)\n        }\n\n        throw new TypeError(\"The 'model' argument should inherit WorldEffectModel\")\n    }\n}\n\nexport default ServerWorldEffect;\n",
    "\nimport WorldExplodeEffectModel from 'src/effects/world/explode/world-explode-effect-model';\nimport ServerWorldEffect from 'src/server/effects/world/serverworldeffect';\nimport ServerEntity from '../serverentity';\nimport Player from \"../../../utils/player\";\nimport ServerGameWorld from \"../../servergameworld\";\nimport BulletModel from \"../../../entity/bullet/bulletmodel\";\n\nclass ServerBullet extends ServerEntity {\n\tpublic wallDamage: number;\n\tpublic playerDamage: number;\n\tpublic explodePower: number;\n\tpublic mass: number;\n\tpublic startVelocity: number;\n    public shooter: Player = null\n\n    static Model: typeof BulletModel\n\n    constructor(model: BulletModel) {\n        super(model);\n\n        this.wallDamage = 0\n        this.playerDamage = 0\n        this.explodePower = 0\n        this.mass = 3\n        this.startVelocity = 20\n    }\n\n    tick(dt: number) {\n        let dx = this.model.dx * dt\n        let dy = this.model.dy * dt\n\n        if(dx !== 0 || dy !== 0) {\n            let collision = this.checkWallHit(this.model.x, this.model.y, dx, dy)\n            let world = this.shooter.world\n \n            if (collision) {\n                this.model.x = collision.point.x\n                this.model.y = collision.point.y\n                if(this.wallDamage) {\n                    if(world.map.getBlock(collision.block.x, collision.block.y)) {\n                        world.map.damageBlock(collision.block.x, collision.block.y, this.wallDamage)\n                    }\n                }\n                this.die()\n                return\n            }\n\n            let playerCollision = this.checkPlayerHit(this.model.x, this.model.y, dx, dy)\n\n            if(playerCollision) {\n                this.model.x += dx * playerCollision.distance\n                this.model.y += dy * playerCollision.distance\n                this.die()\n                return\n            }\n        }\n\n        super.tick(dt)\n    }\n\n    die() {\n        if(this.model.dead) return\n        this.model.dead = true\n        if(this.explodePower) {\n            let effect = new WorldExplodeEffectModel({\n                x: this.model.x,\n                y: this.model.y,\n                power: this.explodePower\n            })\n            this.shooter.world.addEffect(ServerWorldEffect.fromModelAndWorld(effect, this.shooter.world as ServerGameWorld))\n        }\n    }\n}\n\nexport default ServerBullet;",
    "\nimport AbstractEntity from '../../entity/abstractentity';\nimport Utils from '../../utils/utils';\nimport GameMap from '../../utils/map/gamemap';\nimport * as Box2D from '../../library/box2d';\nimport EntityModel from \"../../entity/entitymodel\";\nimport BlockState from \"../../utils/map/blockstate/blockstate\";\n\ninterface WallHitPoint {\n    point: Box2D.Vec2\n    block: Box2D.Vec2\n}\n\nclass ServerEntity extends AbstractEntity {\n\tpublic explodeResistance: any;\n\tpublic shooter: any;\n\tpublic types: any;\n    static types = new Map()\n    static globalId = 0\n\n    constructor(model: EntityModel) {\n        super(model);\n\n        this.explodeResistance = 0.2\n\n        model.id = ServerEntity.globalId++\n    }\n\n    die() {\n        this.model.dead = true\n    }\n\n    tick(dt: number) {\n        this.model.tick(dt)\n    }\n\n    checkPlayerHit(x: number, y: number, dx: number, dy: number) {\n        if(!this.shooter.tank) return null\n        const a = x, b = y;\n        const c = x + dx, d = y + dy;\n\n        let distance = null;\n        let victim = null;\n\n        for (let player of this.shooter.tank.world.players.values()) {\n            if (this.shooter === player) continue\n\n            const tank = player.tank;\n            const body = tank.model.body;\n\n            const position = body.GetPosition()\n            const playerX = position.x;\n            const playerY = position.y;\n            const sin = tank.model.matrix.sin;\n            const cos = tank.model.matrix.cos;\n\n            for (let v = body.GetFixtureList(); v; v = v.GetNext()) {\n                const shape = v.GetShape().GetVertices();\n\n                for (let i = shape.length - 1; i >= 0; i--) {\n                    const vertex = shape[i];\n                    let previousVertex\n                    if (i > 0) previousVertex = shape[i - 1]\n                    else previousVertex = shape[shape.length - 1]\n\n                    const x1 = vertex.x * cos - vertex.y * sin + playerX;\n                    const y1 = vertex.x * sin + vertex.y * cos + playerY;\n\n                    const x2 = previousVertex.x * cos - previousVertex.y * sin + playerX;\n                    const y2 = previousVertex.x * sin + previousVertex.y * cos + playerY;\n\n                    const intersection = Utils.checkLineIntersection(a, b, c, d, x1, y1, x2, y2);\n\n                    if (intersection.onLine1 && intersection.onLine2) {\n                        if (!distance || distance > intersection.k) {\n                            distance = intersection.k\n                            victim = player\n                        }\n                    }\n                }\n            }\n        }\n\n        if(victim) {\n            return {\n                distance: distance,\n                victim: victim\n            }\n        }\n        return null\n    }\n\n    // TODO: переписать на distToSegment\n\n    checkWallHit(x: number, y: number, dx: number, dy: number): WallHitPoint | null {\n        const steps = 10\n\n        dx /= steps;\n        dy /= steps;\n\n        for (let i = 0; i < steps; i++) {\n            x += dx\n            y += dy\n\n            const bx = Math.floor(x / GameMap.BLOCK_SIZE)\n            const by = Math.floor(y / GameMap.BLOCK_SIZE)\n\n            let block = this.game.map.getBlock(bx, by);\n\n            if(block !== null) {\n                if (!(block.constructor as typeof BlockState).isSolid) {\n                    continue\n                }\n            }\n\n            return {\n                point: new Box2D.Vec2(x - dx, y - dy),\n                block: new Box2D.Vec2(bx, by)\n            }\n        }\n\n        return null\n    }\n\n    static fromModel(model: EntityModel) {\n        let type = this.types.get(model.constructor)\n\n        if(type) {\n            return new type(model)\n        }\n        return null\n    }\n\n    static associate(modelClass: typeof EntityModel, serverClass: typeof ServerEntity): void {\n        this.types.set(modelClass, serverClass)\n    }\n}\n\nexport default ServerEntity;",
    "\nimport TankModel from './tankmodel';\nimport GameWorld from 'src/gameworld';\nimport Player from 'src/utils/player';\nimport AbstractEffect from 'src/effects/abstract-effect';\nimport BinaryEncoder from 'src/serialization/binary/binaryencoder';\nimport BinaryDecoder from 'src/serialization/binary/binarydecoder';\n\ninterface AbstractTankConfig {\n    world?: GameWorld\n}\n\n/**\n * Tank class, abstracted from code\n * execution side. Used both on server\n * and client side. Contains tank model\n * and side-specific data. (damage reason\n * array on server side, drawer on\n * client side)\n */\n\nabstract class AbstractTank {\n    static Types = new Map()\n\n    // Player that owns this tank\n    public player: Player = null\n    public model: TankModel = null\n    public world: GameWorld = null\n    public effects = new Map<number, AbstractEffect>()\n\n    protected constructor(options?: AbstractTankConfig) {\n        if (options) {\n            if (options.world) {\n                this.world = options.world\n            }\n        }\n    }\n\n    static getModel(): typeof TankModel {\n        return null\n    }\n\n    destroy(): void {\n        this.model.destroy()\n    }\n\n    encodeDynamicData(encoder: BinaryEncoder): void {}\n    decodeDynamicData(decoder: BinaryDecoder): void {}\n\n    abstract tick(dt: number): void\n}\n\nexport default AbstractTank;",
    "\nclass Axle {\n\tpublic sources: any;\n\tpublic ownValue: any;\n\tpublic value: any;\n\tpublic destinations: any;\n\tpublic update: any;\n\n    constructor() {\n        this.sources = new Set<Axle>()\n        this.ownValue = 0\n        this.value = 0\n        this.destinations = new Set<Axle>()\n        this.update = false\n    }\n\n    addSource(source: Axle) {\n        this.sources.add(source)\n        source.destinations.add(this)\n        this.setNeedsUpdate()\n        return this\n    }\n\n    removeSource(source: Axle) {\n        this.sources.delete(source)\n        source.destinations.delete(this)\n        this.setNeedsUpdate()\n        return this\n    }\n\n    disconnectAll() {\n        for(let destination of this.destinations.values()) {\n            destination.removeSource(this)\n        }\n    }\n\n    connect(destination: Axle) {\n        destination.addSource(this)\n    }\n\n    getValue() {\n        if (this.update) {\n            this.update = false\n            let result = this.ownValue\n            for (let source of this.sources.values()) result += source.getValue()\n            this.value = result\n            return result\n        } else {\n            return this.value\n        }\n    }\n\n    setValue(value: number) {\n        this.ownValue = value\n        this.setNeedsUpdate()\n    }\n\n    setNeedsUpdate() {\n        this.update = true\n        for(let destination of this.destinations.values())\n            destination.setNeedsUpdate()\n    }\n\n    needsUpdate() {\n        return this.update\n    }\n}\n\nexport default Axle;",
    "import BinarySerializable, {BinaryEncodable} from '../../serialization/binary/serializable';\nimport Axle from './axle';\nimport BinaryDecoder from \"../../serialization/binary/binarydecoder\";\nimport BinaryEncoder from 'src/serialization/binary/binaryencoder';\nimport RotationalMatrix from 'src/utils/rotationalmatrix';\nimport TankModel from \"../tankmodel\";\n\nclass TankControls implements BinaryEncodable {\n\tpublic tank: TankModel | undefined;\n\tpublic throttle = 0\n\tpublic steer = 0;\n\tpublic axles = new Map<string, Axle>();\n\tpublic primaryWeaponActive: boolean = false;\n\tpublic minerActive: boolean = false;\n\tpublic updated: boolean = false;\n\tpublic directional: boolean = true;\n\tpublic matrix: RotationalMatrix | null = null;\n\n    constructor(tank?: TankModel) {\n        this.tank = tank\n\n        this.axles.set(\"x\", new Axle())\n        this.axles.set(\"y\", new Axle())\n        this.axles.set(\"primary-weapon\", new Axle())\n        this.axles.set(\"miner\", new Axle())\n    }\n\n    shouldUpdate() {\n        if (this.updated) {\n            this.updated = false\n            return true\n        }\n\n        if (this.axles.get(\"primary-weapon\").needsUpdate()) return true\n        return !!this.axles.get(\"miner\").needsUpdate();\n    }\n\n    getThrottle() {\n        if (this.tank.health <= 0) {\n            return 0\n        }\n\n        if (this.axles.get(\"y\").needsUpdate()) {\n            this.updateAxises()\n        }\n        return this.throttle\n    }\n\n    getSteer() {\n        if (this.tank.health <= 0) {\n            return 0\n        }\n\n        if (this.axles.get(\"x\").needsUpdate()) {\n            this.updateAxises()\n        }\n        return this.steer\n    }\n\n    getPrimaryWeaponAxle() {\n        return this.axles.get(\"primary-weapon\")\n    }\n\n    getMinerWeaponAxle() {\n        return this.axles.get(\"miner\")\n    }\n\n    isPrimaryWeaponActive() {\n        if (this.tank.health <= 0) {\n            return false\n        }\n\n        let axle = this.getPrimaryWeaponAxle()\n\n        if (axle.needsUpdate()) {\n            this.primaryWeaponActive = axle.getValue() > 0.5\n        }\n\n        return this.primaryWeaponActive\n    }\n\n    isMinerActive() {\n        if (this.tank.health <= 0) {\n            return false\n        }\n\n        let axle = this.getMinerWeaponAxle()\n\n        if (axle.needsUpdate()) {\n            this.minerActive = axle.getValue() > 0.5\n        }\n\n        return this.minerActive\n    }\n\n    updateAxises() {\n        let x = this.axles.get(\"x\").getValue()\n        let y = this.axles.get(\"y\").getValue()\n\n        this.updated = true\n\n        if (this.matrix && this.directional) {\n            this.steer = this.matrix.turnHorizontalAxis(x, y)\n            this.throttle = this.matrix.turnVerticalAxis(x, y)\n        } else {\n            this.throttle = y\n            this.steer = x\n        }\n    }\n\n    updateState(decoder: BinaryDecoder): void {\n        this.axles.get(\"x\").setValue(Math.max(Math.min(decoder.readFloat32(), 1), -1))\n        this.axles.get(\"y\").setValue(Math.max(Math.min(decoder.readFloat32(), 1), -1))\n        let weapons = decoder.readUint8()\n\n        this.axles.get(\"primary-weapon\").setValue(weapons & 0b00000001)\n        this.axles.get(\"miner\").setValue(weapons & 0b00000010)\n\n        this.updateAxises()\n    }\n\n    toBinary(encoder: BinaryEncoder): void {\n        encoder.writeFloat32(this.axles.get(\"x\").getValue())\n        encoder.writeFloat32(this.axles.get(\"y\").getValue())\n\n        let weapons =\n            (this.isPrimaryWeaponActive() as unknown as number & 1) << 0 |\n            (this.isMinerActive() as unknown as number & 1) << 1\n\n        encoder.writeUint8(weapons)\n    }\n}\n\nexport default TankControls;",
    "\n// @ts-ignore\nimport Models from './models/*'\nimport {BinarySerializer} from \"../serialization/binary/serializable\";\nimport TankModel from \"./tankmodel\";\n\nfor(let Model of Models) {\n    BinarySerializer.register(Model)\n    TankModel.Types.set(Model.getId(), Model)\n}",
    "import TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport BasicTankBehaviour from '../physics/trucktankbehaviour';\nimport * as Box2D from '../../library/box2d';\nimport Cannon from '../../weapon/models/cannon';\n\nclass BigBoiTank extends TankModel {\n\n    public static typeName = 5\n    public behaviour: BasicTankBehaviour\n\n    constructor() {\n        super();\n\n        this.behaviour = new BasicTankBehaviour(this, {\n            lateralFriction: 150,\n            power: 40000,\n            angularDamping: 2,\n            angularFriction: 0.1,\n            truckSlipperness: 0\n        });\n    }\n\n    static getWeapon() {\n        return Cannon\n    }\n\n    static getMaximumHealth() {\n        return 20\n    }\n\n    initPhysics(world: Box2D.World) {\n        this.world = world\n\n        let size = 9\n\n        const segment = size / 2;\n\n        let bodyFixture = PhysicsUtils.squareFixture(\n            size,\n            size * 0.87,\n            null,{\n            density: 3.5\n        })\n        let trackFixtures = PhysicsUtils.horizontalSquareFixtures(\n            segment,\n            size,\n            new Box2D.Vec2(size, 0), {\n            density: 2\n        })\n\n        this.body = PhysicsUtils.dynamicBody(world, {\n            linearDamping: 0.5\n        });\n        this.body.CreateFixture(bodyFixture)\n        for(let fixture of trackFixtures)\n            this.body.CreateFixture(fixture)\n    }\n}\n\nexport default BigBoiTank;",
    "import TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport PhysicalTankModel from '../physics/trucktankbehaviour';\nimport * as Box2D from '../../library/box2d';\nimport WeaponBomber from '../../weapon/models/bomber';\n\nclass BomberTank extends TankModel {\n\n    public static typeName = 2\n    public behaviour: PhysicalTankModel\n\n    constructor() {\n        super()\n\n        this.behaviour = new PhysicalTankModel(this, {\n            lineardamping: 0.93,\n            angulardamping: 0.75\n        });\n    }\n\n    static getWeapon() {\n        return WeaponBomber\n    }\n\n    static getMaximumHealth() {\n        return 20\n    }\n\n    initPhysics(world: Box2D.World) {\n        this.world = world\n\n        let size = 9\n\n        let bodyFixture = PhysicsUtils.squareFixture(size / 2, size * 0.70, new Box2D.Vec2(0, -size * 0.25))\n        let trackFixtures = PhysicsUtils.horizontalSquareFixtures(size / 2, size * 0.75, new Box2D.Vec2(size, -0.066 * size))\n\n        this.body = PhysicsUtils.dynamicBody(world);\n\n        this.body.CreateFixture(bodyFixture)\n        for(let fixture of trackFixtures)\n            this.body.CreateFixture(fixture)\n    }\n}\n\nexport default BomberTank;",
    "import TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport WheeledTankBehaviour from '../physics/wheeledtankbehaviour';\nimport * as Box2D from '../../library/box2d';\nimport WeaponMachineGun from '../../weapon/models/machinegun';\n\nclass MonsterTankModel extends TankModel {\n\n    public static typeName = 3\n    public behaviour: WheeledTankBehaviour\n\n    constructor() {\n        super()\n\n        this.behaviour = new WheeledTankBehaviour(this, {\n            power: 30000\n        });\n    }\n\n    static getWeapon() {\n        return WeaponMachineGun\n    }\n\n    static getMaximumHealth() {\n        return 10\n    }\n\n    initPhysics(world: Box2D.World) {\n        this.world = world\n\n        let size = 9\n\n        let bodyFixture = PhysicsUtils.squareFixture(size * 0.6, size, new Box2D.Vec2(0, -size * 0.25))\n        let trackFixtures = PhysicsUtils.horizontalSquareFixtures(size * 0.18, size * 0.9, new Box2D.Vec2(-size * 0.78 , 0))\n\n        this.body = PhysicsUtils.dynamicBody(world, {\n            linearDamping: 0.3\n        });\n\n        this.body.CreateFixture(bodyFixture)\n        for(let fixture of trackFixtures)\n            this.body.CreateFixture(fixture)\n    }\n}\n\nexport default MonsterTankModel;\n",
    "import TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport BasicTankBehaviour from '../physics/trucktankbehaviour';\nimport * as Box2D from '../../library/box2d';\nimport WeaponMortar from '../../weapon/models/mortar';\n\nclass MortarTank extends TankModel {\n\n    public static typeName = 4\n    public behaviour: BasicTankBehaviour\n\n    constructor() {\n        super()\n\n        this.behaviour = new BasicTankBehaviour(this, {\n            power: 30000\n        });\n    }\n\n    static getWeapon() {\n        return WeaponMortar\n    }\n\n    initPhysics(world: Box2D.World) {\n\n        this.world = world\n\n        let size = 9\n        const segment = size / 4;\n\n        let bodyFixture = PhysicsUtils.squareFixture(size / 2, size * 0.8, new Box2D.Vec2(0, 0))\n        let trackFixtures = PhysicsUtils.horizontalSquareFixtures(segment, size, new Box2D.Vec2(-size / 2 - segment, 0))\n\n        this.body = PhysicsUtils.dynamicBody(world);\n\n        this.body.CreateFixture(bodyFixture)\n        for (let fixture of trackFixtures)\n            this.body.CreateFixture(fixture)\n\n        this.world = world\n    }\n\n    static getMaximumHealth() {\n        return 10\n    }\n}\n\nexport default MortarTank;",
    "\nimport TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport * as Box2D from '../../library/box2d';\nimport AirbagTankBehaviour from '../physics/airbagbehaviour';\nimport WeaponFlamethrower from '../../weapon/models/flamethrower';\n\nclass NastyTank extends TankModel {\n\n    public static typeName = 7\n    public behaviour: AirbagTankBehaviour\n\n    public static readonly vertices = [\n        [-1.00,  -1.10],\n        [-0.80,  -1.30],\n        [ 0.80,  -1.30],\n        [ 1.00,  -1.10],\n        [ 1.00,  -0.25],\n        [ 0.55,   0.90],\n        [-0.55,   0.90],\n        [-1.00,  -0.25],\n    ]\n\n    constructor() {\n        super()\n\n        this.behaviour = new AirbagTankBehaviour(this, {})\n    }\n\n    static getWeapon() {\n        return WeaponFlamethrower\n    }\n\n    static getMaximumHealth() {\n        return 15\n    }\n\n    initPhysics(world: Box2D.World) {\n        this.world = world\n\n        let size = 9\n\n        let vertexArray = NastyTank.vertices.map(v => new Box2D.Vec2(v[0] * size, v[1] * size));\n\n        let bodyFixture = PhysicsUtils.vertexFixture(vertexArray)\n\n        this.body = PhysicsUtils.dynamicBody(world, {\n            linearDamping: 0.8,\n            angularDamping: 0.7\n        });\n\n        this.body.CreateFixture(bodyFixture)\n\n        this.world = world\n    }\n}\n\nexport default NastyTank;",
    "\nimport TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport * as Box2D from '../../library/box2d';\nimport BasicTankBehaviour from '../physics/trucktankbehaviour';\nimport WeaponShotgun from '../../weapon/models/shotgun';\n\nclass ShotgunTank extends TankModel {\n\n    public static typeName = 0\n    public behaviour: BasicTankBehaviour\n\n    constructor() {\n        super();\n\n        this.behaviour = new BasicTankBehaviour(this, {\n            lateralFriction: 2,\n            power: 20000,\n            lineardamping: 0.93,\n        });\n    }\n\n    static getWeapon() {\n        return WeaponShotgun\n    }\n\n    initPhysics(world: Box2D.World) {\n\n        this.world = world\n\n        let size = 9\n        const segment = size / 4;\n\n        let bodyFixture = PhysicsUtils.squareFixture(size / 2, size * 0.45, new Box2D.Vec2(0, -size * 0.2))\n        let trackFixtures = PhysicsUtils.horizontalSquareFixtures(segment, size, new Box2D.Vec2(-size / 2 - segment, 0))\n\n        this.body = PhysicsUtils.dynamicBody(world);\n\n        this.body.CreateFixture(bodyFixture)\n        for (let fixture of trackFixtures)\n            this.body.CreateFixture(fixture)\n\n        this.world = world\n    }\n\n    static getMaximumHealth() {\n        return 10\n    }\n}\n\nexport default ShotgunTank;",
    "import TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport BasicTankBehaviour from '../physics/trucktankbehaviour';\nimport * as Box2D from '../../library/box2d';\nimport Weapon42mm from '../../weapon/models/42mm';\n\nclass SniperTank extends TankModel {\n\n    public static typeName = 1\n    public behaviour: BasicTankBehaviour\n\n    constructor() {\n        super();\n\n        this.behaviour = new BasicTankBehaviour(this, {\n            power: 20000\n        });\n    }\n\n    static getWeapon() {\n        return Weapon42mm\n    }\n\n    initPhysics(world: Box2D.World) {\n\n        this.world = world\n\n        let size = 9\n        const segment = size / 4;\n\n        let bodyFixture = PhysicsUtils.squareFixture(size / 2, size * 0.45, new Box2D.Vec2(0, 0))\n        let trackFixtures = PhysicsUtils.horizontalSquareFixtures(segment, size, new Box2D.Vec2(-size / 2 - segment, size * 0.2))\n\n        this.body = PhysicsUtils.dynamicBody(world);\n\n        this.body.CreateFixture(bodyFixture)\n        for (let fixture of trackFixtures)\n            this.body.CreateFixture(fixture)\n\n        this.world = world\n    }\n\n    static getMaximumHealth() {\n        return 10\n    }\n}\n\nexport default SniperTank;",
    "import TankModel from '../tankmodel';\nimport PhysicsUtils from '../../utils/physicsutils';\nimport * as Box2D from '../../library/box2d';\nimport BasicTankBehaviour from '../physics/trucktankbehaviour';\nimport WeaponStungun from '../../weapon/models/stungun';\n\nclass TeslaTank extends TankModel {\n\n    public static typeName = 6\n    public behaviour: BasicTankBehaviour\n\n    constructor() {\n        super()\n\n        new BasicTankBehaviour(this, {\n            lineardamping: 0.93,\n            angulardamping: 0.75,\n            power: 20000\n        })\n    }\n\n    static getWeapon() {\n        return WeaponStungun\n    }\n\n    static getMaximumHealth() {\n        return 20\n    }\n\n    initPhysics(world: Box2D.World) {\n        this.world = world\n        \n        let size = 9\n        \n        const segment = size / 4\n\n        const bodyFixture = PhysicsUtils.squareFixture(size / 2, size * 0.8)\n        const trackFixtures = PhysicsUtils.horizontalSquareFixtures(segment, size, new Box2D.Vec2(size / 2 + segment, 0))\n\n        this.body = PhysicsUtils.dynamicBody(world)\n        this.body.CreateFixture(bodyFixture)\n        for (let fixture of trackFixtures)\n            this.body.CreateFixture(fixture)\n\n        this.world = world\n    }\n}\n\nexport default TeslaTank;",
    "import * as Box2D from '../../library/box2d';\nimport TankBehaviour, {TankBehaviourConfig, TankBehaviourDetails} from './tankbehaviour';\nimport TankModel from \"../tankmodel\";\n\ninterface AirbagBehaviourDetails extends TankBehaviourDetails {\n    propellerDist: number,\n}\n\ninterface AirbagBehaviourConfig extends TankBehaviourConfig {\n    torque?: number\n    friction?: number\n    propellerSpeed?: number\n}\n\nclass AirbagTankModel extends TankBehaviour {\n\tpublic torque: any;\n\tpublic friction: any;\n\tpublic propellerSpeed: any;\n\n\tpublic details: AirbagBehaviourDetails = {\n        transmissionSpeed: 0,\n        propellerDist: 0,\n        clutch: 0\n    }\n\n    private preallocatedVector = new Box2D.Vec2()\n    private preallocatedPoint = new Box2D.Vec2()\n\n    constructor(tank: TankModel, config: AirbagBehaviourConfig) {\n        super(tank, config)\n\n        this.power = config.power || 50000\n        this.torque = config.torque || 120000\n        this.friction = config.friction || 0.1\n        this.propellerSpeed = config.propellerSpeed || 40\n    }\n\n    tick(dt: number) {\n        const body = this.tank.body;\n\n        const velocity = body.m_linearVelocity;\n\n        const x = velocity.x;\n        const y = velocity.y;\n\n        const initialSpeed = Math.sqrt(x ** 2 + y ** 2);\n        let newSpeed = initialSpeed;\n\n        newSpeed -= this.friction * dt\n\n        if(newSpeed < 0) newSpeed = 0\n\n        let coefficient;\n\n        if(initialSpeed > 0) coefficient = newSpeed / initialSpeed\n        else coefficient = 1\n\n        velocity.x = x * coefficient\n        velocity.y = y * coefficient\n\n        const throttle = this.power * this.tank.controls.getThrottle();\n        const rotation = this.torque * this.tank.controls.getSteer() * this.tank.controls.getThrottle();\n\n        body.GetWorldVector(new Box2D.Vec2(0, throttle), this.preallocatedVector)\n        body.GetWorldPoint(new Box2D.Vec2(0, 0), this.preallocatedPoint)\n\n        body.ApplyForce(this.preallocatedVector, this.preallocatedPoint)\n        body.ApplyTorque(rotation)\n    }\n\n    countDetails(dt: number) {\n        const tank = this.tank\n        const speed = (Math.abs(tank.controls.getThrottle()) + 0.5) * this.propellerSpeed;\n\n        if(tank.health > 0) {\n            this.details.propellerDist += speed * dt\n            this.details.transmissionSpeed = (speed * dt) / 2 + 0.3\n        } else {\n            this.details.transmissionSpeed = 0\n        }\n\n        this.details.clutch = Math.abs(tank.controls.getThrottle())\n    }\n}\n\nexport default AirbagTankModel;",
    "\nimport TankModel from '../tankmodel';\n\nexport interface TankBehaviourConfig {\n    power?: number\n    lateralFriction?: number\n    frontalfriction?: number\n    angularFriction?: number\n}\n\nexport interface TankBehaviourDetails {\n    transmissionSpeed: number\n    clutch: number\n}\n\n/**\n * Class which defines the physical behaviour of each specific type of tank (tracked, wheeled, etc.)\n */\nclass TankBehaviour {\n\tpublic power: number;\n\tpublic lateralFriction: number;\n\tpublic frontalfriction: number;\n\tpublic angularFriction: number;\n\tpublic tank: TankModel;\n    /**\n     * Physical model details. Used mostly for\n     * rendering on client side.\n     */\n    details: TankBehaviourDetails = {\n        transmissionSpeed: 0,\n        clutch: 0\n    };\n\n    constructor(tank: TankModel, config: TankBehaviourConfig) {\n\n        this.power = config.power || 10000\n        this.lateralFriction = config.lateralFriction || 150\n        this.frontalfriction = config.frontalfriction || 20\n        this.angularFriction = config.angularFriction || 0.8\n\n        this.tank = tank\n    }\n\n    tick(dt: number): void {\n        const tank = this.tank\n        const body = tank.body\n        const velocity = body.m_linearVelocity;\n\n        const vx = velocity.x;\n        const vy = velocity.y;\n\n        let x2 = tank.matrix.cos * vx + tank.matrix.sin * vy;\n        let y2 = -tank.matrix.sin * vx + tank.matrix.cos * vy;\n\n        if(x2 > 0) {\n            x2 -= this.lateralFriction * dt\n            if(x2 < 0) x2 = 0\n        } else if(x2 < 0) {\n            x2 += this.lateralFriction * dt\n            if(x2 > 0) x2 = 0\n        }\n\n        if(y2 > 0) {\n            y2 -= this.frontalfriction * dt\n            if(y2 < 0) y2 = 0\n        } else if(y2 < 0) {\n            y2 += this.frontalfriction * dt\n            if(y2 > 0) y2 = 0\n        }\n\n        let angularVelocity = body.GetAngularVelocity()\n\n        if(angularVelocity > 0) {\n            angularVelocity -= this.angularFriction * dt\n            if(angularVelocity < 0) angularVelocity = 0\n        } else if(angularVelocity < 0) {\n            angularVelocity += this.angularFriction * dt\n            if(angularVelocity > 0) angularVelocity = 0\n        }\n\n        body.SetAngularVelocity(angularVelocity)\n\n        velocity.x = tank.matrix.cos * x2 - tank.matrix.sin * y2\n        velocity.y = tank.matrix.sin * x2 + tank.matrix.cos * y2\n\n        body.SetLinearVelocity(velocity)\n    }\n\n    countDetails(dt: number) {}\n}\n\nexport default TankBehaviour;",
    "import * as Box2D from '../../library/box2d';\nimport TankBehaviour, {TankBehaviourConfig, TankBehaviourDetails} from './tankbehaviour';\nimport TankModel from \"../tankmodel\";\n\nexport interface TruckTankBehaviourConfig extends TankBehaviourConfig {\n    truckbase?: number\n    truckSlipperness?: number\n    truckSlipperySpeed?: number\n    [others: string]: any;\n}\n\nexport interface TruckTankDetails extends TankBehaviourDetails {\n    leftTrackSpeed: number\n    rightTrackSpeed: number\n    leftTrackDist: number\n    rightTrackDist: number\n}\n\nclass TruckTankBehaviour extends TankBehaviour {\n\tpublic truckbase: any;\n\tpublic truckSlipperness: any;\n\tpublic truckSlipperySpeed: any;\n\n\tpublic details: TruckTankDetails = {\n        leftTrackSpeed: 0,\n        rightTrackSpeed: 0,\n        leftTrackDist: 0,\n        rightTrackDist: 0,\n        clutch: 0,\n        transmissionSpeed: 0\n    }\n\n    private preallocatedVector = new Box2D.Vec2()\n    private preallocatedPoint = new Box2D.Vec2()\n\n    constructor(tank: TankModel, config: TruckTankBehaviourConfig) {\n        super(tank, config)\n\n        this.truckbase = config.truckbase || 30\n        this.truckSlipperness = config.truckSlipperness || 15\n        this.truckSlipperySpeed = config.truckSlipperySpeed || 30\n    }\n\n    tick(dt: number) {\n        super.tick(dt)\n        const tank = this.tank\n        const body = this.tank.body;\n\n        let x = tank.controls.getSteer()\n        let y = tank.controls.getThrottle()\n\n        let leftTrackSpeed = Math.max(Math.min(y - x, 1), -1)\n        let rightTrackSpeed = Math.max(Math.min(y + x, 1), -1)\n\n\n        const ls = leftTrackSpeed * this.power;\n        const rs = rightTrackSpeed * this.power;\n\n        body.GetWorldVector(new Box2D.Vec2(0, ls), this.preallocatedVector)\n        body.GetWorldPoint(new Box2D.Vec2(-this.truckbase, 0), this.preallocatedPoint)\n\n        body.ApplyForce(this.preallocatedVector, this.preallocatedPoint)\n\n        body.GetWorldVector(new Box2D.Vec2(0, rs), this.preallocatedVector)\n        body.GetWorldPoint(new Box2D.Vec2(this.truckbase, 0), this.preallocatedPoint)\n\n        body.ApplyForce(this.preallocatedVector, this.preallocatedPoint)\n    }\n\n    countDetails(dt: number) {\n        const tank = this.tank\n        const body = tank.body;\n\n        const steerX = tank.controls.getSteer()\n        const steerY = tank.controls.getThrottle()\n\n        const velocity = body.GetLinearVelocity()\n        const sx = velocity.x;\n        const sy = velocity.y;\n\n        const y2 = -tank.matrix.sin * sx + tank.matrix.cos * sy;\n\n        const angularVelocity = body.GetAngularVelocity()\n        let left = -y2 - angularVelocity * this.truckbase;\n        let right = -y2 + angularVelocity * this.truckbase;\n\n        const ls = Math.max(Math.min(steerY + steerX, 1), -1) * this.truckSlipperySpeed;\n        const rs = Math.max(Math.min(steerY - steerX, 1), -1) * this.truckSlipperySpeed;\n\n        if(this.truckSlipperness > Math.abs(left) && ls !== 0) {\n            if(ls < 0) {\n                left = Math.min(this.truckSlipperness, -ls)\n            } else {\n                left = -Math.min(this.truckSlipperness, ls)\n            }\n        }\n\n        if(this.truckSlipperness > Math.abs(right) && rs !== 0) {\n            if(rs < 0) {\n                right = Math.min(this.truckSlipperness, -rs)\n            } else {\n                right = -Math.min(this.truckSlipperness, rs)\n            }\n        }\n\n        this.details.leftTrackSpeed = left\n        this.details.rightTrackSpeed = right\n        this.details.leftTrackDist += left * dt\n        this.details.rightTrackDist += right * dt\n\n        this.details.clutch = Math.min(1, Math.abs(steerX) + Math.abs(steerY))\n        this.details.transmissionSpeed = Math.max(Math.abs(this.details.leftTrackSpeed), Math.abs(this.details.rightTrackSpeed))\n    }\n}\n\nexport default TruckTankBehaviour;",
    "\nimport * as Box2D from '../../library/box2d';\nimport TankBehaviour, {TankBehaviourConfig, TankBehaviourDetails} from './tankbehaviour';\nimport TankModel from \"../tankmodel\";\n\ninterface WheeledTankDetails extends TankBehaviourDetails {\n    leftWheelsAngle: number\n    rightWheelsAngle: number\n    leftWheelsSpeed: number\n    rightWheelsSpeed: number\n    leftWheelsDist: number\n    rightWheelsDist: number\n}\n\nclass WheeledTankModel extends TankBehaviour {\n\tpublic turnRate: any;\n\tpublic axleDistance: any;\n\tpublic axleWidth: any;\n\tpublic wheelSpeed: any;\n\n\tprivate preallocatedVector = new Box2D.Vec2()\n    private preallocatedPoint = new Box2D.Vec2()\n\n    public details: WheeledTankDetails = {\n\t    clutch: 0,\n\t    transmissionSpeed: 0,\n        leftWheelsAngle: 0,\n        rightWheelsAngle: 0,\n        leftWheelsSpeed: 0,\n        rightWheelsSpeed: 0,\n        leftWheelsDist: 0,\n        rightWheelsDist: 0\n    }\n\n    constructor(tank: TankModel, config: TankBehaviourConfig) {\n        super(tank, config)\n\n        this.turnRate = 2\n        this.axleDistance = 0.6\n        this.axleWidth = 0.8\n        this.wheelSpeed = 9.8\n    }\n\n    tick(dt: number) {\n        super.tick(dt)\n        const tank = this.tank\n        const body = tank.body\n\n        let steerX, steerY;\n\n        steerX = tank.controls.getSteer()\n        steerY = tank.controls.getThrottle()\n\n        const throttle = this.power *  steerY\n        const k = 20000\n\n        const velocity = body.GetLinearVelocity();\n        const angular = body.GetAngularVelocity();\n\n        const vx = velocity.x;\n        const vy = velocity.y;\n\n        const y2 = -tank.matrix.sin * vx + tank.matrix.cos * vy;\n        const turnRate = (y2 * steerX * this.turnRate - angular) * k / (Math.abs(y2) / 15 + 1)\n\n        body.GetWorldVector(new Box2D.Vec2(0, throttle), this.preallocatedVector)\n        body.GetWorldPoint(new Box2D.Vec2(0, 0), this.preallocatedPoint)\n\n        body.ApplyForce(this.preallocatedVector, this.preallocatedPoint)\n        body.ApplyTorque(turnRate)\n    }\n\n    countDetails(dt: number) {\n        let tank = this.tank\n        let body = tank.body\n        let steer = tank.controls.getSteer()\n\n        if (steer === 0) {\n            this.details.leftWheelsAngle = 0\n            this.details.rightWheelsAngle = 0\n        } else {\n            let radius = 1 / steer * 2\n\n            this.details.leftWheelsAngle = Math.atan2(this.axleDistance, radius + this.axleWidth / 2)\n            this.details.rightWheelsAngle = Math.atan2(this.axleDistance, radius - this.axleWidth / 2)\n\n            if (steer < 0) {\n                this.details.rightWheelsAngle += Math.PI\n                this.details.leftWheelsAngle += Math.PI\n            }\n        }\n\n        let speed = tank.body.GetLinearVelocity()\n\n        let y2 = -tank.matrix.sin * speed.x + tank.matrix.cos * speed.y\n        let angularVelocity = body.GetAngularVelocity()\n\n        let left = (y2 + angularVelocity * this.axleWidth / 2) * this.wheelSpeed\n        let right = (y2 - angularVelocity * this.axleWidth / 2) * this.wheelSpeed\n\n        this.details.leftWheelsSpeed = left * dt\n        this.details.rightWheelsSpeed = right * dt\n        this.details.leftWheelsDist -= left * dt\n        this.details.rightWheelsDist -= right * dt\n    }\n}\n\nexport default WheeledTankModel;",
    "\nimport TankBehaviour from '../tanks/physics/tankbehaviour';\nimport TankControls from './controls/tankcontrols';\nimport RotationalMatrix from '../utils/rotationalmatrix';\nimport BinarySerializable, {Constructor} from '../serialization/binary/serializable';\nimport * as Box2D from '../library/box2d';\nimport GameWorld from \"../gameworld\";\nimport BinaryEncoder from \"../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../serialization/binary/binarydecoder\";\nimport Weapon from \"../weapon/weapon\";\n\n/**\n * Tank model. Сombines the physical model\n * of the tank, its behavior and controls.\n * This class used both on client and server\n * side. Can be updated dynamically through\n * binary serialization.\n */\n\nclass TankModel implements BinarySerializable<typeof TankModel> {\n    static Types = new Map();\n\n    // Physical behaviour of this tank\n    behaviour: TankBehaviour = null\n\n    // Box2D World, containing this tank.\n    world: Box2D.World = null\n\n    // Box2D body of this tank.\n    body: Box2D.Body = null\n\n    controls: TankControls = null\n    health = 0\n    matrix: RotationalMatrix = null\n\n    targetPosition: Box2D.Vec2\n\n    constructor() {\n        this.behaviour = null\n        this.world = null\n        this.body = null\n        this.controls = new TankControls(this)\n        this.health = (<typeof TankModel>this.constructor).getMaximumHealth()\n        this.matrix = new RotationalMatrix()\n        this.targetPosition = null\n    }\n\n    initPhysics(world: Box2D.World) {\n        throw new Error(\"Abstract class instancing is invalid.\")\n    }\n\n    destroy() {\n        this.world.DestroyBody(this.body)\n    }\n\n    get x() { return this.body.m_xf.p.x }\n    get y() { return this.body.m_xf.p.y }\n    set x(x: number) { this.body.m_xf.p.x = x }\n    set y(y: number) { this.body.m_xf.p.y = y }\n    get rotation() { return this.body.m_sweep.a }\n    set rotation(rotation) { this.body.m_sweep.a = rotation; this.matrix.setAngle(rotation) }\n\n    static getWeapon(): typeof Weapon {\n        throw new Error(\"Abstract class instancing is illegal\")\n    }\n\n    static canPlaceMines(): boolean {\n        return true\n    }\n\n    static getMaximumHealth(): number {\n        return 10\n    }\n\n    static getId(): number {\n        return this.typeName\n    }\n\n    // Serialization stuff\n\n    toBinary(encoder: BinaryEncoder) {}\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T { return new this }\n\n    static typeName = 0\n    static groupName = 4\n}\n\nexport default TankModel;\n",
    "/**\n * More reliable for serializing long-lasting or\n * large and scalable data structures.\n */\nimport BinaryEncoder from \"../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../serialization/binary/binarydecoder\";\n\ntype Packer = ((encoder: BinaryEncoder, options: any) => void)\ntype Unpacker = ((decoder: BinaryDecoder, options: any) => void)\ntype Decision = ((object: any) => boolean)\n\nexport class FlagHandler {\n\n    id: number;\n    unpacker: Unpacker;\n    packer: Packer;\n    decision: Decision;\n\n    constructor(id: number) {\n        this.id = id\n        this.unpacker = null\n        this.packer = null\n        this.decision = null\n    }\n\n    setUnpacker(unpacker: Unpacker): FlagHandler {\n        this.unpacker = unpacker\n        return this\n    }\n\n    setPacker(packer: Packer): FlagHandler {\n        this.packer = packer\n        return this\n    }\n\n    packDecision(decision: Decision): FlagHandler {\n        this.decision = decision\n        return this\n    }\n\n}\n\nclass BinaryOptions {\n\n    /**\n     * Flag handler map\n     */\n    public flags = new Map<number, FlagHandler>()\n    public trimFlagIdentifier = false\n\n    constructor() {\n    }\n\n    addFlagHandler(handler: FlagHandler) {\n        this.flags.set(handler.id, handler)\n    }\n\n    convertBinary(decoder: BinaryDecoder, options?: any) {\n        let flags: number\n\n        if (this.trimFlagIdentifier) flags = decoder.readUint8()\n        else flags = decoder.readUint16()\n\n        options = options || {}\n\n        while (flags--) {\n            let flag\n            if (this.trimFlagIdentifier) flag = decoder.readUint8()\n            else flag = decoder.readUint16()\n\n            if (this.flags.has(flag)) {\n                let handler = this.flags.get(flag)\n                handler.unpacker(decoder, options)\n            }\n        }\n\n        return options\n    }\n\n    convertOptions(encoder: BinaryEncoder, options: any, flags?: number[]) {\n\n        if (!options) options = {}\n\n        let count = 0\n\n        for (let [flag, handler] of this.flags.entries()) {\n            if (flags && flags.indexOf(flag) === -1) continue\n            if (handler.decision && !handler.decision(options)) continue\n\n            count++\n        }\n\n        if (this.trimFlagIdentifier) encoder.writeUint8(count)\n        else encoder.writeUint16(count)\n\n        for (let [flag, handler] of this.flags.entries()) {\n            if (flags && flags.indexOf(flag) === -1) continue\n            if (handler.decision && !handler.decision(options)) continue\n\n            if (this.trimFlagIdentifier) encoder.writeUint8(flag)\n            else encoder.writeUint16(flag)\n\n            handler.packer(encoder, options)\n        }\n\n        return options\n    }\n}\n\nexport default BinaryOptions;",
    "class Color {\n\tprivate r: number;\n\tprivate g: number;\n\tprivate b: number;\n\tprivate alpha: number;\n\tprivate string: string | null;\n\n    constructor(red: number, green: number, blue: number, alpha: number = 1.0) {\n        this.r = red\n        this.g = green\n        this.b = blue\n        this.alpha = alpha\n    }\n\n    setRed(r: number) {\n        this.r = r\n        this.string = null\n    }\n\n    setGreen(g: number) {\n        this.g = g\n        this.string = null\n    }\n\n    setBlue(b: number) {\n        this.b = b\n        this.string = null\n    }\n\n    setAlpha(a: number) {\n        this.alpha = a\n        this.string = null\n    }\n\n    /**\n     * Returns chat color code with specified RGB values\n     */\n\n    static chatColor(r: number, g: number, b: number, bold= false): string {\n        let color: string\n        if (\n            (r & 0xF) === ((r >> 4) & 0xF) &&\n            (g & 0xF) === ((g >> 4) & 0xF) &&\n            (b & 0xF) === ((b >> 4) & 0xF)\n        ) {\n            color = r.toString(16) + g.toString(16) + b.toString(16)\n        } else {\n            color = r.toString(16).padStart(2, \"0\") + g.toString(16).padStart(2, \"0\") + b.toString(16).padStart(2, \"0\")\n        }\n\n        if(bold) {\n            return \"§!\" + color + \";\"\n        } else {\n            return \"§\" + color + \";\"\n        }\n    }\n\n    static replace(text: string, replace: (color: string, bold: boolean, text: string) => string) {\n        return text.replace(/(§!?[0-9A-F]{0,6};)?[^§\\n]*/gi, function(a) {\n            let prefix = \"\"\n\n            let index = a.indexOf(\";\")\n            let color = a.substr(1, index - 1)\n            let text = a.substr(index + 1)\n            let bold = color.startsWith(\"!\")\n            if(bold) color = color.substr(1)\n            return prefix + replace(color, bold, text)\n        })\n    }\n\n    toChatColor(bold: boolean) {\n        return Color.chatColor(this.r, this.g, this.b, bold)\n    }\n\n    code(): string {\n\n        if (this.string) return this.string\n\n        if (this.alpha === 1) {\n            let r, g, b;\n\n            r = Math.round(this.r).toString(16);\n            g = Math.round(this.g).toString(16);\n            b = Math.round(this.b).toString(16);\n\n            (r.length === 1) && (r = \"0\" + r);\n            (g.length === 1) && (g = \"0\" + g);\n            (b.length === 1) && (b = \"0\" + b);\n\n            this.string = \"#\" + r + g + b\n        } else {\n            this.string = \"rgba(\" + Math.round(this.r) + \",\" + Math.round(this.g) + \",\" + Math.round(this.b) + \",\" + (Math.round(this.alpha * 100) / 100) + \")\"\n        }\n\n        return this.string\n    }\n\n    static saturateChannel(c: number, saturation: number) {\n        return Math.round((c - 127) * saturation + 127)\n    }\n\n    applyingSaturation(saturation: number): Color {\n        return new Color(\n            Color.saturateChannel(this.r, saturation),\n            Color.saturateChannel(this.g, saturation),\n            Color.saturateChannel(this.b, saturation),\n            this.alpha\n        )\n    }\n\n    withAlpha(alpha: number): Color {\n        return new Color(this.r, this.g, this.b, alpha)\n    }\n\n    static red(): Color {\n        return new Color(255, 0, 0)\n    }\n\n    static green(): Color {\n        return new Color(0, 255, 0)\n    }\n\n    static blue(): Color {\n        return new Color(0, 0, 255)\n    }\n\n    static gray(): Color {\n        return new Color(127, 127, 127)\n    }\n\n    getRed() {\n        return this.r\n    }\n\n    getGreen() {\n        return this.g\n    }\n\n    getBlue() {\n        return this.b\n    }\n\n    getAlpha() {\n        return this.alpha\n    }\n}\n\nexport default Color;",
    "\nexport default class EventEmitter {\n\n    private handlers: Map<number, Map<string, Array<(...params: any[]) => any>>>\n\n    public static PRIORITY_LOW = 3\n    public static PRIORITY_MONITOR = 2\n    public static PRIORITY_NORMAL = 1\n    public static PRIORITY_HIGH = 0\n\n    constructor() {\n        this.handlers = new Map()\n    }\n\n    addListener(type: string, listener: () => void, priority: number)\n    {\n        let priorityBlock = this.handlers.get(priority)\n\n        if(!priorityBlock) {\n            priorityBlock = new Map()\n            this.handlers.set(priority, priorityBlock)\n        }\n\n        let handlers = priorityBlock.get(type)\n        if(handlers) {\n            handlers.push(listener)\n        } else {\n            priorityBlock.set(type, [listener])\n        }\n\n        this._emit('newListener', [type, listener]);\n    }\n\n    on(type: string, listener: (...params: any[]) => any, priority: number = EventEmitter.PRIORITY_NORMAL){\n        return this.addListener(type, listener, priority);\n    }\n\n    removeListener(type: string, listener: (...params: any[]) => any) {\n\n        for(let [_, priorityBlock] of this.handlers.entries()) {\n            let handlers = priorityBlock.get(type)\n            if(!handlers) continue\n            let index = handlers.indexOf(listener)\n            if(index !== -1) {\n                handlers.splice(index, 1)\n            }\n        }\n    }\n\n    off(type: string, listener: (...params: any[]) => any) {\n        return this.removeListener(type, listener)\n    }\n\n    removeAllListeners(): void\n    removeAllListeners(type?: string): void {\n        if(type) {\n            for (let [_, priorityBlock] of this.handlers.entries()) {\n                if (type) {\n                    priorityBlock.delete(type)\n                }\n            }\n        } else {\n            this.handlers.clear()\n        }\n    }\n\n\n    once(type: string, listener: (...params: any[]) => any) {\n        function on() {\n            this.removeListener(type, on);\n            return listener.apply(this, arguments);\n        }\n        on.listener = listener;\n        return this.on(type, on);\n    }\n\n    _emit(type: string, args?: any[]) {\n        let result = true;\n\n        for(let [_, priorityBlock] of this.handlers.entries()) {\n            let handlers = priorityBlock.get(type)\n            if(!handlers) continue\n            for(let handler of handlers) {\n                if (handler.apply(this, args) === false) {\n                    result = false;\n                }\n            }\n        }\n\n        return result\n    }\n\n    emit(type: string, ...values: any[]) {\n        let args = Array.prototype.slice.call(arguments, 1)\n        let params = Array.prototype.slice.call(arguments)\n\n        this._emit('event', params);\n\n        return this._emit(type, args) !== false;\n    }\n}\n",
    "\nexport default function(text: string) {\n    return text\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n};",
    "\nimport ScheduledTask from './scheduledtask';\n\nclass Loop {\n\tpublic schedule = new Map<number, ScheduledTask>();\n\tpublic schedules: any;\n\tpublic ticks: any;\n\tpublic loopTimestamp: any;\n\tpublic maximumTimestep: any;\n\tpublic timeMultiplier: any;\n\tpublic run: any;\n\tpublic running: any;\n\n    constructor() {\n        this.schedule = new Map()\n        this.schedules = 0;\n        this.ticks = 0\n        this.loopTimestamp = 0\n        this.maximumTimestep = 0.1\n        this.timeMultiplier = 1\n        this.run = null\n    }\n\n    start() {\n        this.running = true\n    }\n\n    stop() {\n        this.running = false\n    }\n\n    cycle(dt: number) {}\n\n    runScheduledTasks(dt: number) {\n        ScheduledTask.lockInitialTimers = true\n        for(let [key, task] of this.schedule.entries()) {\n            if(task.tick(dt)) {\n                this.schedule.delete(key)\n            }\n        }\n        ScheduledTask.lockInitialTimers = false\n    }\n\n    perform(timestamp?: number) {\n        if(timestamp === undefined) {\n            timestamp = Date.now()\n        }\n        this.ticks++\n        if(this.running) {\n            let dt\n\n            if (this.loopTimestamp) {\n                dt = (timestamp - this.loopTimestamp) * this.timeMultiplier\n                if (dt > this.maximumTimestep) dt = this.maximumTimestep\n            } else {\n                dt = 0;\n            }\n\n            this.loopTimestamp = timestamp\n\n            this.runScheduledTasks(dt)\n\n            if(this.run) {\n                this.run(dt)\n            }\n\n            this.cycle(dt)\n        } else {\n            this.loopTimestamp = undefined\n        }\n    }\n\n    scheduleTask(func: () => void, time: number) {\n        time = time || 0\n        let index = this.schedules ++\n\n        this.schedule.set(index, new ScheduledTask(func, time))\n\n        return index\n    }\n}\n\nexport default Loop;",
    "\nimport Loop from './loop';\n\nclass RenderLoop extends Loop {\n\n    constructor() {\n        super();\n        this.timeMultiplier = 0.001\n    }\n\n    start() {\n        super.start();\n        this.perform(0)\n    }\n\n    cycle(dt: number) {\n        requestAnimationFrame((time) => {\n            this.perform(time)\n        });\n    }\n}\n\nexport default RenderLoop;",
    "\nclass ScheduledTask {\n\tpublic func: any;\n\tpublic time: any;\n\tpublic lock: any;\n    static lockInitialTimers = false\n\n    constructor(func: () => void, time: number) {\n        this.func = func\n        this.time = time\n        this.lock = ScheduledTask.lockInitialTimers\n    }\n\n    tick(dt: number) {\n        if(this.lock) {\n            this.lock = false\n            return false\n        }\n        if((this.time -= dt) <= 0) {\n            this.func.apply(null)\n            return true\n        }\n        return false\n    }\n}\n\nexport default ScheduledTask;",
    "\nimport BlockStateBinaryOptions from './blockstatebinaryoptions';\nimport GameMap from \"../gamemap\";\n\ninterface BlockStateConfig {\n    damage?: number\n    solid?: boolean\n}\n\nclass BlockState {\n    public variant: number\n\tpublic damage: number;\n\tpublic solid: boolean;\n\tpublic facing: number;\n    static BinaryOptions = BlockStateBinaryOptions.shared\n\n    static Types = new Map<number, typeof BlockState>()\n\n    static health = 16000\n    static isSolid = true\n    static typeName = \"unspecified\"\n    static typeId = 0\n\n    constructor(options?: BlockStateConfig) {\n        options = options || {}\n        this.damage = options.damage || 0\n        this.solid = options.solid || (this.constructor as typeof BlockState).isSolid\n        this.facing = 0\n    }\n\n    clone() {\n        return new (this.constructor as typeof BlockState)(this)\n    }\n\n    update(map: GameMap, x: number, y: number) {\n        if(this.facing !== -1) {\n            this.updateNeighbourFacing(map, x, y)\n        }\n    }\n\n    getNeighbourId(map: GameMap, x: number, y: number): number {\n        let block = map.getBlock(x, y);\n        if(block) return (block.constructor as typeof BlockState).typeId\n        return 0\n    }\n\n    updateNeighbourFacing(map: GameMap, x: number, y: number) {\n        const id = (this.constructor as typeof BlockState).typeId\n\n        this.facing = 0\n\n        let sides = 0\n\n        sides |= (this.getNeighbourId(map, x - 1, y - 1) === id) as any as number << 7\n        sides |= (this.getNeighbourId(map, x,y - 1) === id) as any as number << 6\n        sides |= (this.getNeighbourId(map, x + 1, y - 1) === id) as any as number << 5\n        sides |= (this.getNeighbourId(map, x + 1, y) === id) as any as number << 4\n        sides |= (this.getNeighbourId(map, x + 1, y + 1) === id) as any as number << 3\n        sides |= (this.getNeighbourId(map, x, y + 1) === id) as any as number << 2\n        sides |= (this.getNeighbourId(map, x - 1, y + 1) === id) as any as number << 1\n        sides |= (this.getNeighbourId(map, x - 1, y) === id) as any as number << 0\n\n        sides |= sides << 8\n\n        for (let i = 0; i < 4; i++) {\n            let t = sides\n            let corner = 4\n\n            if(i === 0) {\n                t &= 0b00000111\n            } else if(i === 1) {\n                t &= 0b00011100\n                t >>= 2\n            } else if(i === 2) {\n                t &= 0b01110000\n                t >>= 4\n            } else {\n                t &= 0b11000001\n                t = (t >> 6) | ((t & 1) << 2)\n            }\n\n            if(t === 0b001) corner = 1\n            if(t === 0b101) corner = 3\n            if(t === 0b111) corner = 4\n            if(t === 0b011) corner = 1\n            if(t === 0b000) corner = 0\n            if(t === 0b100) corner = 2\n            if(t === 0b110) corner = 2\n            if(t === 0b010) corner = 0\n\n            if(i % 2 === 1) {\n                if(corner === 1) corner = 2\n                else if(corner === 2) corner = 1\n            }\n\n            this.facing <<= 3\n            this.facing |= corner\n        }\n    }\n\n    getHealth() {\n        return (this.constructor as typeof BlockState).health * (1 - this.damage)\n    }\n\n    setHealth(health: number) {\n        this.damage = 1 - health / (this.constructor as typeof BlockState).health\n    }\n\n    static registerBlockStateClass(clazz: typeof BlockState) {\n        this.Types.set(clazz.typeId, clazz)\n    }\n\n    static getBlockStateClass(id: number): typeof BlockState {\n        return this.Types.get(id) || BlockState\n    }\n}\n\nexport default BlockState;",
    "\nimport BinaryOptions, {FlagHandler} from '../../binaryoptions';\n\nclass BlockStateBinaryOptions extends BinaryOptions {\n\n    static DAMAGE_FLAG = 0x0001;\n    static shared = new BlockStateBinaryOptions()\n\n    constructor() {\n        super();\n\n        this.trimFlagIdentifier = true\n\n        this.addFlagHandler(new FlagHandler(BlockStateBinaryOptions.DAMAGE_FLAG)\n            .setUnpacker((decoder, object) => {\n                object.damage = decoder.readUint16() / 0xFFFF\n            })\n            .setPacker((encoder, object) => {\n                encoder.writeUint16(object.damage * 0xFFFF)\n            })\n            .packDecision((object) => {\n                return Number.isFinite(object.damage) && object.damage > 0\n            })\n        )\n    }\n}\n\nexport default BlockStateBinaryOptions;",
    "\n//@ts-ignore\nimport Types from './types/*'\nimport BlockState from \"./blockstate\";\n\nfor(let Type of Types) {\n    BlockState.registerBlockStateClass(Type)\n}",
    "\nimport BlockState from '../blockstate';\nimport BinaryOptions from '../../../binaryoptions';\nimport BinaryEncoder from \"../../../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../../../serialization/binary/binarydecoder\";\nimport GameMap from \"../../gamemap\";\n\nclass AirBinaryOptions extends BinaryOptions {\n    convertOptions(encoder: BinaryEncoder, options: any, flags: number[]) {}\n    convertBinary(decoder: BinaryDecoder, options?: any) {}\n}\n\nclass AirBlockState extends BlockState {\n\n    // Empty options\n    static BinaryOptions = new AirBinaryOptions()\n    static isSolid = false;\n    static typeName = \"air\";\n    static typeId = 0;\n\n    update(map: GameMap, x: number, y: number) { }\n}\n\nexport default AirBlockState;",
    "\nimport BlockState from '../blockstate';\n\nclass BrickBlockState extends BlockState {\n    static health = 3000\n    static typeName = \"brick\";\n    static typeId = 1;\n}\n\nexport default BrickBlockState;",
    "import BlockState from '../blockstate';\n\nclass ConcreteBlockState extends BlockState {\n    static health = 6000\n    static typeName = \"concrete\";\n    static typeId = 2;\n}\n\nexport default ConcreteBlockState;",
    "\nimport BlockState from '../blockstate';\n\nclass StoneBlockState extends BlockState {\n    static health = 7500\n    static typeName = \"stone\";\n    static typeId = 5;\n}\n\nexport default StoneBlockState;",
    "import BlockState from '../blockstate';\n\nclass TrophephngoldBlockState extends BlockState {\n    static health = Infinity\n    static typeName = \"trophephngold\";\n    static typeId = 4;\n}\n\nexport default TrophephngoldBlockState;",
    "import BlockState from '../blockstate';\n\nclass WoodBlockState extends BlockState {\n\tpublic variant: any;\n    static health = 1500\n    static typeName = \"wood\";\n    static typeId = 3;\n\n    constructor() {\n        super();\n\n        this.variant = Math.floor(Math.random() * 18)\n    }\n}\n\nexport default WoodBlockState;",
    "import EventEmitter from 'src/utils/eventemitter';\nimport MapBinaryOptions from './mapbinaryoptions';\nimport BlockState from './blockstate/blockstate';\nimport AirBlockState from './blockstate/types/airblockstate';\nimport SpawnZone from \"./spawnzone\";\nimport BinaryDecoder from \"../../serialization/binary/binarydecoder\";\nimport {Constructor} from \"../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../serialization/binary/binaryencoder\";\n\nexport interface GameMapConfig {\n\tspawnZones?: SpawnZone[]\n\twidth?: number\n\theight?: number\n\tdata: BlockState[]\n}\n\nclass GameMap extends EventEmitter {\n\tpublic needsUpdate: boolean;\n\n\tstatic BinaryOptions: MapBinaryOptions = MapBinaryOptions.shared\n\tstatic BLOCK_SIZE = 20;\n\n\tdata: BlockState[] = []\n\twidth: number = 0\n\theight: number = 0\n\tspawnZones: SpawnZone[] = []\n\n\tconstructor(config: GameMapConfig) {\n\t\tsuper()\n\n\t\tthis.spawnZones = config.spawnZones || []\n\t\tthis.width = config.width || MapBinaryOptions.shared.DEFAULT_WIDTH\n\t\tthis.height = config.height || MapBinaryOptions.shared.DEFAULT_HEIGHT\n\t\tthis.data = config.data\n\t\tthis.needsUpdate = true\n\t}\n\n\tgetBlock(x: number, y: number): BlockState {\n\t\tif(x < 0 || y < 0 || x >= this.width || y >= this.height) return null\n\t\treturn this.data[x + this.width * y]\n\t}\n\n\tsetBlock(x: number, y: number, block: BlockState) {\n\t\tlet index = x + y * this.width;\n\n\t\tthis.data[index] = block\n\n\t\tconst lowX = Math.max(0, x - 1)\n\t\tconst lowY = Math.max(0, y - 1)\n\t\tconst highX = Math.min(this.width - 1, x + 1)\n\t\tconst highY = Math.min(this.height - 1, y + 1)\n\n\t\tlet base = lowX + lowY * this.width;\n\t\tindex = base;\n\n\t\tfor (let by = lowY; by <= highY; by++) {\n\t\t\tfor (let bx = lowX; bx <= highX; bx++) {\n\t\t\t\tthis.data[index++].update(this, bx, by)\n\t\t\t}\n\t\t\tindex = (base += this.width)\n\t\t}\n\n\t\tthis.emit(\"block-update\", x, y)\n\t}\n\n\tspawnPointForTeam(id: number) {\n\t\tconst zone = this.spawnZones[id];\n\n\t\tif(!zone) {\n\t\t\treturn {\n\t\t\t\tx: Math.random() * this.width * GameMap.BLOCK_SIZE,\n\t\t\t\ty: Math.random() * this.height * GameMap.BLOCK_SIZE\n\t\t\t}\n\t\t}\n\n\t\tconst x = (Math.random() * (zone.x2 - zone.x1) + zone.x1) * GameMap.BLOCK_SIZE;\n\t\tconst y = (Math.random() * (zone.y2 - zone.y1) + zone.y1) * GameMap.BLOCK_SIZE;\n\n\t\treturn {x: x, y: y}\n\t}\n\n\tdamageBlock(x: number, y: number, d: number) {\n\t\tx = Math.floor(x)\n\t\ty = Math.floor(y)\n\n\t\tlet b = this.getBlock(x, y);\n\n\t\tif(!b || b instanceof AirBlockState) return\n\n\t\tlet health = b.getHealth()\n\n\t\tif(health - d < 0) {\n\t\t\tthis.setBlock(x, y, new AirBlockState())\n\t\t} else {\n\t\t\tb.setHealth(health - d)\n\t\t\tb.update(this, x, y)\n\t\t}\n\n\t\tthis.emit(\"block-update\", x, y)\n\t}\n\n\tupdate() {\n\t\tthis.needsUpdate = false\n\t\tlet x = 0, y = 0;\n\t\tfor(let block of this.data) {\n\t\t\tblock.update(this, x, y);\n\n\t\t\tx++;\n\t\t\tif(x >= this.width) {\n\t\t\t\tx -= this.width\n\t\t\t\ty++\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n\t\tlet options = GameMap.BinaryOptions.convertBinary(decoder)\n\n\t\treturn new this(options)\n\t}\n\n\ttoBinary(encoder: BinaryEncoder, flags: number[]) {\n\t\t(this.constructor as typeof GameMap).BinaryOptions.convertOptions(encoder, this, flags)\n\t}\n}\n\nexport default GameMap;",
    "\nimport BinaryOptions, {FlagHandler} from '../binaryoptions';\nimport BlockState from '../../utils/map/blockstate/blockstate';\nimport SpawnZone from './spawnzone';\nimport BinaryEncoder from \"../../serialization/binary/binaryencoder\";\nimport BinaryDecoder from \"../../serialization/binary/binarydecoder\";\n\nclass MapBinaryOptions extends BinaryOptions {\n\n    DATA_FLAG = 0x0000;\n    SIZE_FLAG = 0x0001;\n    SPAWN_ZONES_FLAG = 0x0002;\n\n    DEFAULT_WIDTH = 50;\n    DEFAULT_HEIGHT = 50;\n\n    static shared = new MapBinaryOptions()\n\n    constructor() {\n        super();\n\n        this.addFlagHandler(new FlagHandler(this.SIZE_FLAG)\n            .setPacker((encoder: BinaryEncoder, options: any) => {\n                encoder.writeUint32(options.width === undefined ? this.DEFAULT_WIDTH : options.width)\n                encoder.writeUint32(options.height === undefined ? this.DEFAULT_WIDTH : options.height)\n            })\n            .setUnpacker((decoder: BinaryDecoder, options: any) => {\n                options.width = decoder.readUint32()\n                options.height = decoder.readUint32()\n            })\n        )\n\n        this.addFlagHandler(new FlagHandler(this.DATA_FLAG)\n            .setPacker((encoder: BinaryEncoder, options: any) => {\n                for(let block of options.data) {\n                    const Block = block.constructor\n                    encoder.writeUint8(Block.typeId)\n                    const BinaryOptions = Block.BinaryOptions\n                    BinaryOptions.convertOptions(encoder, block)\n                }\n            })\n            .setUnpacker((decoder, options) => {\n                if(options.width === undefined) options.width = this.DEFAULT_WIDTH\n                if(options.height === undefined) options.height = this.DEFAULT_HEIGHT\n                const size = options.width * options.height\n\n                let blockOptions\n                options.data = new Array(size)\n\n                for(let i = 0; i < size; i++) {\n                    blockOptions = {}\n                    const id = decoder.readUint8()\n                    const Block = BlockState.getBlockStateClass(id)\n\n                    const BinaryOptions = Block.BinaryOptions\n                    BinaryOptions.convertBinary(decoder, blockOptions)\n                    options.data[i] = new Block({})\n                }\n            })\n        )\n\n        this.addFlagHandler(new FlagHandler(this.SPAWN_ZONES_FLAG)\n            .setPacker((encoder, options) => {\n                encoder.writeUint16(options.spawnZones.length)\n\n                for(let zone of options.spawnZones) {\n                    zone.toBinary(encoder)\n                }\n            })\n            .setUnpacker((decoder, options) => {\n                let count = decoder.readUint16()\n\n                options.spawnZones = []\n\n                while(count--) {\n                    options.spawnZones.push(SpawnZone.fromBinary(decoder))\n                }\n            })\n        )\n    }\n}\n\nexport default MapBinaryOptions;",
    "\nimport Rectangle from '../../utils/rectangle';\nimport BinaryDecoder from \"../../serialization/binary/binarydecoder\";\nimport {Constructor} from \"../../serialization/binary/serializable\";\nimport BinaryEncoder from \"../../serialization/binary/binaryencoder\";\n\nclass SpawnZone extends Rectangle {\n\tpublic id: number;\n\n    constructor(id: number) {\n        super()\n        this.id = id\n    }\n\n    static fromBinary<T>(this: Constructor<T>, decoder: BinaryDecoder): T {\n        let id = decoder.readUint8()\n        let x1 = decoder.readUint32()\n        let y1 = decoder.readUint32()\n        let x2 = decoder.readUint32()\n        let y2 = decoder.readUint32()\n\n        let zone = new this(id) as any as SpawnZone\n        zone.setFrom(x1, y1)\n        zone.setTo(x2, y2)\n        return zone as any as T\n    }\n\n    toBinary(encoder: BinaryEncoder) {\n        encoder.writeUint8(this.id)\n        encoder.writeUint32(this.x1)\n        encoder.writeUint32(this.y1)\n        encoder.writeUint32(this.x2)\n        encoder.writeUint32(this.y2)\n    }\n}\n\nexport default SpawnZone;",
    "import * as Box2D from '../library/box2d';\n\nclass PhysicsUtils {\n    static createFixture(shape: Box2D.Shape, fixture?: Partial<Box2D.IFixtureDef>): Box2D.IFixtureDef {\n        if(!fixture) fixture = {}\n\n        fixture.friction = fixture.friction || 0.3\n        fixture.density = fixture.density || 1\n        fixture.restitution = fixture.restitution || 0;\n        fixture.shape = shape\n\n        return fixture as Box2D.IFixtureDef\n    }\n\n    static dynamicBody(world: Box2D.World, options?: Partial<Box2D.IBodyDef>) {\n        options = options || {}\n        options.type = options.type || Box2D.dynamicBody;\n\n        return world.CreateBody(options);\n    }\n\n    static squareFixture(width: number, height: number, offset?: Box2D.XY, options?: Partial<Box2D.IFixtureDef>): Box2D.IFixtureDef {\n        if(!offset) offset = { x: 0, y: 0 }\n\n        const shape = new Box2D.PolygonShape()\n        shape.SetAsBox(width, height, offset, 0)\n\n        return this.createFixture(shape, options)\n    }\n\n    static horizontalSquareFixtures(width: number, height: number, offset: Box2D.XY, options?: Partial<Box2D.IFixtureDef>) {\n        return [\n            this.squareFixture(width, height, new Box2D.Vec2(-offset.x, offset.y), options),\n            this.squareFixture(width, height, new Box2D.Vec2(offset.x, offset.y), options)\n        ]\n    }\n\n    static vertexFixture(vertexArray: Box2D.XY[], options?: Partial<Box2D.IFixtureDef>) {\n        const shape = new Box2D.PolygonShape();\n        shape.Set(vertexArray)\n\n        return this.createFixture(shape, options)\n    }\n}\n\nexport default PhysicsUtils;",
    "\nimport PhysicsUtils from './physicsutils';\nimport * as Box2D from '../library/box2d';\nimport GameWorld from \"../gameworld\";\nimport AbstractTank from \"../tanks/abstracttank\";\nimport Team from \"../server/team\";\nimport Effect from \"../server/bonuses/effect\";\nimport BonusModel from \"../server/bonuses/bonus\";\n\nexport interface PlayerConfig {\n    nick?: string\n    id?: number\n    world?: GameWorld\n    team?: Team\n}\n\nclass Player {\n\tpublic nick: any;\n\tpublic id: any;\n\tpublic team: any;\n\tpublic blockMap: any;\n\tpublic bonuses: BonusModel[]\n\n    tank: AbstractTank\n    world: GameWorld\n\n    constructor(config?: PlayerConfig) {\n        config = config || {}\n        this.nick = config.nick\n        this.id = config.id\n        this.world = config.world\n        this.tank = null\n        this.team = config.team\n        this.blockMap = []\n    }\n\n    setTank(tank: AbstractTank) {\n        this.tank = tank\n        tank.player = this\n    }\n\n    setupPhysics() {\n        const wallFixture = PhysicsUtils.squareFixture(10, 10, null, {\n            density: 1.0,\n            friction: 0.1,\n            restitution: 0.5,\n        })\n\n        for (let i = 0; i < 25; i++) {\n            if (i === 12) {\n                this.blockMap.push(null)\n                continue\n            }\n\n            const bodyDef = new Box2D.BodyDef();\n            bodyDef.type = Box2D.staticBody;\n            bodyDef.position.x = 0\n            bodyDef.position.y = 0\n\n            this.blockMap.push(this.world.world.CreateBody(bodyDef).CreateFixture(wallFixture).GetBody())\n        }\n    }\n\n    destroy() {\n        this.tank.destroy()\n\n        let blocks = this.blockMap\n\n        for (let i = blocks.length - 1; i >= 0; i--) {\n            let b = blocks[i]\n            if (b) this.world.world.DestroyBody(b)\n        }\n        this.blockMap = []\n    }\n}\n\nexport default Player;",
    "\nclass Rectangle {\n\n    x1: number = null\n    y1: number = null\n    x2: number = null\n    y2: number = null\n    minX: number = null\n    maxX: number = null\n    minY: number = null\n    maxY: number = null\n\n    constructor(x1?: number, y1?: number, x2?: number, y2?: number) {\n        if (arguments.length === 4) {\n            this.x1 = x1\n            this.x2 = x2\n            this.y1 = y1\n            this.y2 = y2\n            this.refreshBounds()\n        }\n    }\n\n    isValid() {\n        return Number.isFinite(this.x1) && Number.isFinite(this.x2) && Number.isFinite(this.y1) && Number.isFinite(this.y2)\n    }\n\n    contains(x: number, y: number) {\n        return x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY\n    }\n\n    centerX() {\n        return (this.x1 + this.x2) / 2\n    }\n\n    centerY() {\n        return (this.y1 + this.y2) / 2\n    }\n\n    width() {\n        return this.maxX - this.minX\n    }\n\n    height() {\n        return this.maxY - this.minY\n    }\n\n    invalidate() {\n        this.x1 = null\n        this.x2 = null\n        this.y1 = null\n        this.y2 = null\n        this.minX = null\n        this.maxX = null\n        this.minY = null\n        this.maxY = null\n    }\n\n    refreshBounds() {\n        this.minX = Math.min(this.x1, this.x2)\n        this.maxX = Math.max(this.x1, this.x2)\n        this.minY = Math.min(this.y1, this.y2)\n        this.maxY = Math.max(this.y1, this.y2)\n    }\n\n    translate(dx: number, dy: number) {\n        this.x1 += dx\n        this.x2 += dx\n        this.y1 += dy\n        this.y2 += dy\n\n        this.refreshBounds()\n    }\n\n    setFrom(x: number, y: number) {\n        this.x1 = x\n        this.y1 = y\n\n        this.refreshBounds()\n    }\n\n    setTo(x: number, y: number) {\n        this.x2 = x\n        this.y2 = y\n\n        this.refreshBounds()\n    }\n\n    equals(rect: Rectangle) {\n        return rect.x1 === this.x1 && rect.x2 === this.x2 && rect.y1 === this.y1 && rect.y2 === this.y2\n    }\n\n    clone() {\n        return new Rectangle(this.x1, this.y1, this.x2, this.y2)\n    }\n\n    bounding(x1: number, y1: number, x2: number, y2: number) {\n        if(this.x1 > x1) x1 = this.x1\n        if(this.x2 < x2) x2 = this.x2\n        if(this.y1 > y1) y1 = this.y1\n        if(this.y2 < y2) y2 = this.y2\n\n        return new Rectangle(x1, y1, x2, y2)\n    }\n}\n\nexport default Rectangle;",
    "\nclass RotationalMatrix {\n\n    /**\n     * Rotation angle\n     */\n    angle: number\n\n    /**\n     * Sine of the rotation angle\n     */\n    sin: number;\n\n    /**\n     * Cosine of the rotation angle\n     */\n    cos: number;\n\n    constructor(angle: number = 0) {\n\n        this.sin = Math.sin(angle)\n        this.cos = Math.cos(angle)\n        this.angle = angle\n    }\n\n    setAngle(angle: number) {\n        if(angle !== this.angle) {\n            this.sin = Math.sin(angle)\n            this.cos = Math.cos(angle)\n            this.angle = angle\n        }\n    }\n\n    turnHorizontalAxis(x: number, y: number) {\n        return x * this.cos - y * this.sin\n    }\n\n    turnVerticalAxis(x: number, y: number) {\n        return x * this.sin + y * this.cos\n    }\n}\n\nexport default RotationalMatrix;",
    "\nclass Utils {\n    static checkLineIntersection(line1StartX: number, line1StartY: number, line1EndX: number, line1EndY: number, line2StartX: number, line2StartY: number, line2EndX: number, line2EndY: number) {\n\n        let denominator, a, b, numerator1, numerator2;\n        const result: { k?: number, onLine1: boolean, onLine2: boolean } = {\n            k: null,\n            onLine1: false,\n            onLine2: false\n        };\n        denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n        if (denominator === 0) {\n            return result;\n        }\n        a = line1StartY - line2StartY;\n        b = line1StartX - line2StartX;\n        numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n        numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n        a = numerator1 / denominator;\n        b = numerator2 / denominator;\n\n        result.k = a\n\n        if (a > 0 && a < 1) {\n            result.onLine1 = true;\n        }\n        if (b > 0 && b < 1) {\n            result.onLine2 = true;\n        }\n\n        return result;\n    }\n\n    static trimFileExtension(name: string) {\n        let parts = name.split(\".\")\n        if(parts.length > 1) parts.pop()\n        return parts.join(\".\")\n    }\n\n    static dist2(vx: number, vy: number, wx: number, wy: number) {\n        return (vx - wx) ** 2 + (vy - wy) ** 2\n    }\n\n    static distToSegmentSquared(px: number, py: number, vx: number, vy: number, wx: number, wy: number) {\n        const l2 = this.dist2(vx, vy, wx, wy);\n        if (l2 === 0) return this.dist2(px, py, vx, vy);\n        let t = ((px - vx) * (wx - vx) + (py - vy) * (wy - vy)) / l2;\n        t = Math.max(0, Math.min(1, t));\n        return this.dist2(px, py, vx + t * (wx - vx), vy + t * (wy - vy));\n    }\n\n    static distToSegment(px: number, py: number, vx: number, vy: number, wx: number, wy: number) {\n        return Math.sqrt(this.distToSegmentSquared(px, py, vx, vy, wx, wy));\n    }\n\n    static random(min: number, max: number) {\n        return Math.random() * (max - min) + min\n    }\n}\n\nexport default Utils;",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport BulletModel42mm from '../../entity/bullet/models/42mm';\n\nclass Weapon42mm extends Weapon {\n\tconstructor(config: WeaponConfig) {\n\t\tconfig = Object.assign({\n\t\t\tmaxAmmo: 5,\n\t\t\tshootRate: 1000,\n\t\t\treloadTime: 5000,\n\t\t\tbulletType: BulletModel42mm\n\t\t}, config)\n\n\t\tsuper(config);\n\t}\n}\n\nexport default Weapon42mm;",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport BulletModelBomb from '../../entity/bullet/models/bomb';\n\nclass WeaponBomber extends Weapon {\n\tconstructor(config: WeaponConfig) {\n\t\tconfig = Object.assign({\n\t\t\tmaxAmmo: 5,\n\t\t\tshootRate: 1000,\n\t\t\treloadTime: 5000,\n\t\t\tbulletType: BulletModelBomb,\n\t\t}, config)\n\n\t\tsuper(config);\n\n\t\tthis.id = 1\n\t}\n}\n\nexport default WeaponBomber;",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport CannonBall from '../../entity/bullet/models/cannonball';\n\nclass WeaponCannon extends Weapon {\n\tconstructor(config: WeaponConfig) {\n\t\tconfig = Object.assign({\n\t\t\tmaxAmmo: 5,\n\t\t\tshootRate: 2000,\n\t\t\treloadTime: 7000,\n\t\t\tbulletType: CannonBall\n\t\t}, config)\n\n\t\tsuper(config);\n\n\t\tthis.id = 2\n\t}\n}\n\nexport default WeaponCannon;",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport TankFireEffectModel from 'src/effects/tank/tank-fire-effect-model';\nimport ServerTankEffect from 'src/server/effects/tank/servertankeffect';\n\nexport interface FlamethrowerConfig extends WeaponConfig {\n\tdamage?: number\n\tradius?: number\n\tangle?: number\n}\n\nclass Flamethrower extends Weapon {\n\tpublic damage: any;\n\tpublic radius: any;\n\tpublic angle: any;\n\tpublic squareRadius: any;\n\tpublic fireEffect: any;\n\tpublic serverEffect: any;\n\n\tconstructor(config: FlamethrowerConfig) {\n\t\tconfig = Object.assign({\n\t\t\tdamage: 10,\n\t\t\tradius: 90,\n\t\t\tangle: Math.PI / 3,\n\t\t}, config)\n\t\tsuper(config)\n\n\t\tthis.damage = config.damage\n\t\tthis.radius = config.radius\n\t\tthis.angle = config.angle\n\t\tthis.squareRadius = this.radius ** 2\n\n\t\tthis.fireEffect = new TankFireEffectModel()\n\t\tthis.serverEffect = ServerTankEffect.fromModelAndTank(this.fireEffect, this.tank)\n\t}\n\n\tready() {\n\t\treturn true\n\t}\n\n\tshoot() {\n\t\tconst tank = this.tank\n\t\t// const player = tank.player\n\t\tconst pAngle = (tank.model.rotation + Math.PI) % (Math.PI * 2) - Math.PI;\n\n\t\tfor (let p of tank.world.players.values()) {\n\n\t\t\tif(!p || p.tank === tank) continue\n\n\t\t\tconst anotherTank = p.tank;\n\t\t\tconst x = anotherTank.model.x - tank.model.x;\n\t\t\tconst y = anotherTank.model.y - tank.model.y;\n\n\t\t\tconst dist = x ** 2 + y ** 2;\n\n\t\t\tif(dist > this.squareRadius) continue\n\n\t\t\tlet angle = Math.atan2(x, y) + pAngle;\n\n\t\t\tif(angle > Math.PI) angle -= Math.PI * 2\n\t\t\tif(angle < -Math.PI) angle += Math.PI * 2\n\n\t\t\t if(Math.abs(angle) >= this.angle / 2) continue\n\n\t\t\t//const damage = (Math.sqrt(1 - dist / this.squareRadius)) * this.damage * tank.world.room.spt\n\n\t\t\t//p.tank.damage(damage, player.id)\n\t\t}\n\t}\n\n\tonEngage() {\n\t\tsuper.onEngage();\n\t\tthis.tank.addEffect(this.serverEffect)\n\t}\n\n\tonDisengage() {\n\t\tsuper.onDisengage();\n\t\tthis.tank.removeEffect(this.serverEffect)\n\t}\n}\n\nexport default Flamethrower;",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport Bullet16mm from '../../entity/bullet/models/16mm';\n\nclass WeaponMachineGun extends Weapon {\n\tpublic state: any;\n\n\tconstructor(config: WeaponConfig) {\n\t\tconfig = Object.assign({\n\t\t\tmaxAmmo: 50,\n\t\t\tshootRate: 100,\n\t\t\treloadTime: 5000,\n\t\t\tbulletType: Bullet16mm,\n\t\t}, config)\n\t\tsuper(config)\n\n\t\tthis.state = 0\n\t\tthis.id = 4\n\t}\n\n\tshoot() {\n\t\tlet tank = this.tank\n\t\tlet position = tank.model.body.GetPosition()\n\n\t\tconst shift = (this.state === 0) ? -1.4 : 1.4;\n\n\t\tthis.launchBullet(tank,\n\t\t\tposition.x + tank.model.matrix.cos * shift - tank.model.matrix.sin * shift,\n\t\t\tposition.y + tank.model.matrix.sin * shift + tank.model.matrix.cos * shift\n\t\t)\n\n\t\tthis.state = 1 - this.state\n\n\t\tthis.popBullet()\n\t}\n}\n\nexport default WeaponMachineGun;\n",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport MortarBall from '../../entity/bullet/models/mortarball';\n\nclass WeaponMortar extends Weapon {\n\tconstructor(config: WeaponConfig) {\n\t\tconfig = Object.assign({\n\t\t\tmaxAmmo: 5,\n\t\t\tshootRate: 1000,\n\t\t\treloadTime: 5000,\n\t\t\tbulletType: MortarBall,\n\t\t}, config)\n\n\t\tsuper(config);\n\n\t\tthis.id = 6\n\t}\n}\n\nexport default WeaponMortar;\n",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport * as Box2D from '../../library/box2d';\nimport ServerTank from \"../../server/tanks/servertank\";\n\nexport interface ShotgunConfig extends WeaponConfig {\n    damage?: number\n    radius?: number\n    angle?: number\n}\n\nclass Shotgun extends Weapon {\n\tpublic name: any;\n\tpublic damage: any;\n\tpublic radius: any;\n\tpublic squareRadius: any;\n\tpublic angle: any;\n\n    constructor(config: ShotgunConfig) {\n\n        config = Object.assign(config, {\n            damage: 6,\n            radius: 60,\n            shootRate: 800,\n            reloadTime: 4000,\n            maxAmmo: 3,\n            angle: Math.PI / 2\n        })\n\n        super(config);\n        this.squareRadius = this.radius ** 2\n        this.shootRate = config.shootRate\n        this.reloadTime = config.reloadTime\n        this.maxAmmo = config.maxAmmo\n        this.angle = config.angle\n        this.id = 7\n    }\n\n    clone() {\n        return new Shotgun(this)\n    }\n\n    shoot() {\n        // TODO\n        // const player = tank.player\n        // const bx = -tank.model.matrix.sin * 7000;\n        // const by = tank.model.matrix.cos * 7000;\n        // const screen = player.screen\n        //\n        // const position = tank.model.body.GetPosition()\n        //\n        // tank.model.body.ApplyImpulse(new Box2D.b2Vec2(-bx, -by), position)\n        //\n        // const pAngle = (tank.model.rotation + Math.PI) % (Math.PI * 2) - Math.PI;\n        //\n        // for (let client of screen.clients.values()) {\n        //     const p = client.data.player;\n        //\n        //     if (!p || p.id === player.id) continue\n        //\n        //     const otherTank = p.tank\n        //     const otherPosition = otherTank.model.body.GetPosition()\n        //\n        //     const x = otherPosition.x - position.x;\n        //     const y = otherPosition.y - position.y;\n        //\n        //     const dist = x ** 2 + y ** 2;\n        //\n        //     if (dist > this.squareRadius) continue\n        //\n        //     let setAngle = Math.atan2(x, y) + pAngle;\n        //\n        //     if (setAngle > Math.PI) setAngle -= Math.PI * 2\n        //     if (setAngle < -Math.PI) setAngle += Math.PI * 2\n        //\n        //     if (Math.abs(setAngle) >= this.setAngle / 2) continue\n        //\n        //     const lengthCoef = (Math.sqrt(1 - dist / this.squareRadius\n        //     ));\n        //     const damage = lengthCoef * this.damage;\n        //\n        //     p.tank.damage(damage, player.id)\n        //\n        //     tank.model.body.ApplyImpulse(new b2Vec2(lengthCoef * bx, lengthCoef * by), position)\n        // }\n        //\n        // this.popBullet()\n        //\n        // const msg = JSON.stringify({\n        //     cmd: \"ent\",\n        //     p: [{\n        //         i: screen.entityID++,\n        //         s: player.id,\n        //         w: this.name,\n        //     }]\n        // });\n        //\n        // screen.broadcast(msg)\n    }\n}\n\nexport default Shotgun;",
    "import Weapon, {WeaponConfig} from '../weapon';\nimport Game from \"../../server/room/game\";\nimport Player from \"../../utils/player\";\n\nexport interface WeaponStungunConfig extends WeaponConfig {\n    damage: number\n    radius: number\n}\n\nclass WeaponStungun extends Weapon {\n\tpublic damage: number;\n\tpublic radius: number;\n\tpublic squareRadius: number;\n\tpublic points: number[][];\n\n    constructor(config: WeaponStungunConfig) {\n        super(config)\n        this.damage = config.damage || 1.4 // Для каждой точки (то есть если точки две, то суммарный урон в два раза больше)\n        this.radius = config.radius || 50\n        this.squareRadius = this.radius ** 2\n        this.points = [[-7.5, 2], [7.5, 2]]\n        this.id = 8\n    }\n\n    ready() {\n        return true\n    }\n\n    shoot() {\n        let tank = this.tank\n        let player = tank.player\n        let game = player.game\n        const position = tank.model.body.GetPosition()\n        const matrix = tank.model.matrix\n\n        for (let i = this.points.length - 1; i >= 0; i--)\n        {\n            const point = this.points[i];\n\n            const px = point[0];\n            const py = point[1];\n\n            const absX = position.x + (px * matrix.cos + py * matrix.sin);\n            const absY = position.y + (-px * matrix.sin + py * matrix.cos);\n\n            for(let each of near(absX, absY, player, game, this.squareRadius)) {\n                each.tank.damage(this.damage / game.tps, player.id)\n            }\n        }\n    }\n}\n\nconst near = function (x: number, y: number, tplayer: Player, game: Game, distance: number) {\n    const result = [];\n    for (let client of game.clients.values()) {\n        const player = client.data.player;\n\n        if (!player) continue\n        const tank = player.tank;\n        if (!tank) continue\n\n        if (player.id === tplayer.id) continue\n\n        const pos = tank.model.body.GetPosition();\n        const dx = pos.x - x;\n        const dy = pos.y - y;\n\n        const dist = dx * dx + dy * dy;\n\n        if (dist < distance) {\n            result.push(player)\n        }\n    }\n    return result\n};\n\nexport default WeaponStungun;",
    "import * as Box2D from '../library/box2d';\nimport Bullet42mmModel from '../entity/bullet/models/42mm';\nimport ServerBullet from '../server/entity/bullet/serverbullet';\nimport Axle from \"../tanks/controls/axle\";\nimport ServerTank from \"../server/tanks/servertank\";\nimport BulletModel from \"../entity/bullet/bulletmodel\";\n\nexport interface WeaponConfig {\n    maxAmmo?: number\n    shootRate?: number\n    reloadTime?: number\n    bulletType?: typeof BulletModel\n    tank?: ServerTank\n    triggerAxle?: Axle\n}\n\nclass Weapon {\n\tpublic config: WeaponConfig;\n\tpublic maxAmmo: number;\n\tpublic shootRate: number;\n\tpublic reloadTime: number;\n\tpublic bulletType: typeof BulletModel;\n\tpublic ammo: number;\n\tpublic isReloading: boolean;\n\tpublic shootingTime: number;\n\tpublic id: number\n\n    /**\n     * Indicates whether weapon is currently shooting\n     */\n    engaged: boolean = false\n\n    /**\n     * Trigger axle. Weapon will shoot if its value is above 0.5\n     */\n    triggerAxle: Axle | null = null\n\n    /**\n     * Tanks that equipped with this weapon\n     */\n    tank: ServerTank = null\n\n    constructor(config: WeaponConfig) {\n        config = config || {}\n        this.config = config\n        this.maxAmmo = config.maxAmmo ?? Infinity\n        this.shootRate = config.shootRate ?? 2000\n        this.reloadTime = config.reloadTime ?? 4000\n        this.bulletType = config.bulletType ?? Bullet42mmModel\n        this.tank = config.tank\n        this.triggerAxle = config.triggerAxle\n        this.ammo = this.maxAmmo\n        this.isReloading = false\n        this.shootingTime = null\n        this.engaged = false\n    }\n\n    reload(): void {\n        if (this.isReloading) return\n        this.isReloading = true\n        this.shootingTime = Date.now()\n    }\n\n    launchBullet(tank: ServerTank, x: number, y: number, rotation?: number): void {\n        let sin, cos\n\n        if(rotation === undefined) {\n            sin = tank.model.matrix.sin\n            cos = tank.model.matrix.cos\n            rotation = tank.model.body.GetAngle()\n        } else {\n            sin = Math.sin(rotation)\n            cos = Math.cos(rotation)\n        }\n\n        const bullet = new (this.bulletType)(tank.world);\n        const entity = ServerBullet.fromModel(bullet)\n\n        entity.shooter = tank.player\n\n        bullet.rotation = rotation\n        bullet.x = x\n        bullet.y = y\n        bullet.dx = -sin * entity.startVelocity\n        bullet.dy = cos * entity.startVelocity\n\n        tank.world.createEntity(entity)\n\n        tank.model.body.ApplyLinearImpulse(\n            new Box2D.Vec2(\n                -bullet.dx * entity.mass,\n                -bullet.dy * entity.mass\n            ),\n            new Box2D.Vec2(\n                x, y\n            )\n        )\n    }\n\n    tick() {\n        if(!this.triggerAxle) return\n        if (this.tank.model.health <= 0) {\n            if(this.engaged) {\n                this.engaged = false\n                this.onDisengage()\n            }\n        } else if(this.triggerAxle.needsUpdate()) {\n            let engaged = this.triggerAxle.getValue() > 0.5\n\n            if (engaged !== this.engaged) {\n                this.engaged = engaged\n                if (engaged) {\n                    this.onEngage()\n                } else {\n                    this.onDisengage()\n                }\n            }\n        }\n\n        if(this.engaged && this.ready()) {\n            this.shoot()\n        }\n    }\n\n    onEngage() {\n\n    }\n\n    onDisengage() {\n\n    }\n\n    shoot() {\n        let position = this.tank.model.body.GetPosition()\n        this.launchBullet(this.tank, position.x, position.y)\n\n        this.popBullet()\n    }\n\n    popBullet() {\n        this.ammo--\n        if (this.ammo === 0) {\n            this.reload()\n        } else {\n            this.shootingTime = Date.now()\n        }\n    }\n\n    ready() {\n\n        if (!this.shootingTime) return true\n        const time = Date.now() - this.shootingTime;\n\n        if (this.isReloading) {\n            if (time >= this.reloadTime) {\n                this.shootingTime = null\n                this.isReloading = false\n                this.ammo = this.maxAmmo\n                return true\n            } else return false\n        } else {\n            return time >= this.shootRate\n        }\n    }\n\n    getId() {\n        return this.id\n    }\n}\n\nexport default Weapon;\n"
  ]
}